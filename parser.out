Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    COMILLAD
    COMILLAS
    FLECHA
    FUNCIONARR
    RETURN

Grammar

Rule 0     S' -> final
Rule 1     final -> asignacion PUNTOYCOMA
Rule 2     final -> asignacion PUNTOYCOMA final
Rule 3     final -> expresionInt PUNTOYCOMA
Rule 4     final -> expresionInt PUNTOYCOMA final
Rule 5     final -> expresionDouble PUNTOYCOMA
Rule 6     final -> expresionDouble PUNTOYCOMA final
Rule 7     final -> expresionString PUNTOYCOMA
Rule 8     final -> expresionString PUNTOYCOMA final
Rule 9     final -> expresionBool PUNTOYCOMA
Rule 10    final -> expresionBool PUNTOYCOMA final
Rule 11    final -> expresionBoolFor PUNTOYCOMA
Rule 12    final -> expresionBoolFor PUNTOYCOMA final
Rule 13    final -> sentenciaWhile
Rule 14    final -> sentenciaWhile final
Rule 15    final -> sentenciaWhile PUNTOYCOMA
Rule 16    final -> sentenciaWhile PUNTOYCOMA final
Rule 17    final -> sentenciaDoWhile PUNTOYCOMA
Rule 18    final -> sentenciaDoWhile PUNTOYCOMA final
Rule 19    final -> sentenciaIf PUNTOYCOMA
Rule 20    final -> sentenciaIf PUNTOYCOMA final
Rule 21    final -> sentenciaIf
Rule 22    final -> sentenciaIf final
Rule 23    final -> sentenciaElse PUNTOYCOMA
Rule 24    final -> sentenciaElse PUNTOYCOMA final
Rule 25    final -> sentenciaElse
Rule 26    final -> sentenciaElse final
Rule 27    final -> imprimir PUNTOYCOMA
Rule 28    final -> imprimir PUNTOYCOMA final
Rule 29    final -> funcionStdin PUNTOYCOMA
Rule 30    final -> funcionStdin PUNTOYCOMA final
Rule 31    final -> funcionStdout PUNTOYCOMA
Rule 32    final -> funcionStdout PUNTOYCOMA final
Rule 33    final -> negacionBool PUNTOYCOMA
Rule 34    final -> negacionBool PUNTOYCOMA final
Rule 35    final -> comparacionBool PUNTOYCOMA final
Rule 36    final -> comparacionBool PUNTOYCOMA
Rule 37    final -> sentenciaElseIf PUNTOYCOMA final
Rule 38    final -> sentenciaElseIf final
Rule 39    final -> sentenciaElseIf PUNTOYCOMA
Rule 40    final -> sentenciaElseIf
Rule 41    final -> sentenciaFor PUNTOYCOMA final
Rule 42    final -> sentenciaFor PUNTOYCOMA
Rule 43    final -> sentenciaFor final
Rule 44    final -> sentenciaFor
Rule 45    final -> sentenciaSubstring PUNTOYCOMA final
Rule 46    final -> sentenciaSubstring PUNTOYCOMA
Rule 47    final -> VARIABLE DSUMA PUNTOYCOMA final
Rule 48    final -> VARIABLE DSUMA PUNTOYCOMA
Rule 49    final -> VARIABLE DRESTA PUNTOYCOMA final
Rule 50    final -> VARIABLE DRESTA PUNTOYCOMA
Rule 51    final -> expresionLista PUNTOYCOMA
Rule 52    final -> expresionLista PUNTOYCOMA final
Rule 53    final -> expresionNewList PUNTOYCOMA
Rule 54    final -> expresionNewList PUNTOYCOMA final
Rule 55    final -> expresionSet PUNTOYCOMA
Rule 56    final -> expresionSet PUNTOYCOMA final
Rule 57    final -> expresionMap PUNTOYCOMA
Rule 58    final -> expresionMap PUNTOYCOMA final
Rule 59    final -> expresionSwitch PUNTOYCOMA
Rule 60    final -> expresionSwitch PUNTOYCOMA final
Rule 61    final -> declaracionSimple PUNTOYCOMA
Rule 62    final -> declaracionSimple PUNTOYCOMA final
Rule 63    expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
Rule 64    cases -> caseString
Rule 65    cases -> caseInt
Rule 66    cases -> caseBool
Rule 67    caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA
Rule 68    caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString
Rule 69    caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA
Rule 70    caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt
Rule 71    caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA
Rule 72    caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool
Rule 73    expresionMap -> MAP VARIABLE
Rule 74    expresionMap -> MAP VARIABLE IGUAL LIZQ LDER
Rule 75    expresionMap -> LIZQ LDER
Rule 76    expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER
Rule 77    expresionMap -> LIZQ expMap LDER
Rule 78    expMap -> claveValor DOSPUNTOS claveValor
Rule 79    expMap -> claveValor DOSPUNTOS claveValor COMA expMap
Rule 80    claveValor -> VARIABLE
Rule 81    claveValor -> STRING
Rule 82    claveValor -> ENTERO
Rule 83    claveValor -> DOUBLE
Rule 84    claveValor -> BOOL
Rule 85    claveValor -> CIZQ expListDynamic CDER
Rule 86    claveValor -> CIZQ expListSet CDER
Rule 87    claveValor -> expresionNewList
Rule 88    claveValor -> SETFROM PIZQ CIZQ CDER PDER
Rule 89    claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 90    claveValor -> LIZQ LDER
Rule 91    claveValor -> LIZQ expMap LDER
Rule 92    expresionSet -> SET VARIABLE
Rule 93    expresionSet -> SETFROM PIZQ CIZQ CDER PDER
Rule 94    expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
Rule 95    expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 96    expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 97    expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
Rule 98    expresionNewList -> NEWLIST PIZQ PDER
Rule 99    expresionNewList -> NEWLIST PIZQ ENTERO PDER
Rule 100   expresionNewList -> CIZQ CDER
Rule 101   expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE
Rule 102   expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
Rule 103   expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
Rule 104   expresionLista -> CIZQ expListString CDER
Rule 105   expresionLista -> LIST MENOR INT MAYOR VARIABLE
Rule 106   expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
Rule 107   expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
Rule 108   expresionLista -> CIZQ expListInt CDER
Rule 109   expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE
Rule 110   expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
Rule 111   expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
Rule 112   expresionLista -> CIZQ expListNum CDER
Rule 113   expresionLista -> LIST MENOR NUM MAYOR VARIABLE
Rule 114   expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
Rule 115   expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
Rule 116   expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE
Rule 117   expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
Rule 118   expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
Rule 119   expresionLista -> CIZQ expListBool CDER
Rule 120   expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE
Rule 121   expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
Rule 122   expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
Rule 123   expresionLista -> CIZQ expListDynamic CDER
Rule 124   expresionLista -> LIST MENOR SET MAYOR VARIABLE
Rule 125   expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
Rule 126   expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
Rule 127   expresionLista -> CIZQ expListSet CDER
Rule 128   expresionLista -> LIST MENOR MAP MAYOR VARIABLE
Rule 129   expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
Rule 130   expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
Rule 131   expresionLista -> CIZQ expListMap CDER
Rule 132   expresionLista -> VARIABLE CIZQ ENTERO CDER
Rule 133   expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
Rule 134   expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
Rule 135   expListString -> STRING
Rule 136   expListString -> STRING COMA expListString
Rule 137   expListString -> VARIABLE
Rule 138   expListString -> VARIABLE COMA expListString
Rule 139   expListInt -> ENTERO
Rule 140   expListInt -> ENTERO COMA expListInt
Rule 141   expListInt -> VARIABLE
Rule 142   expListInt -> VARIABLE COMA expListInt
Rule 143   expListNum -> ENTERO
Rule 144   expListNum -> DOUBLE
Rule 145   expListNum -> ENTERO COMA expListNum
Rule 146   expListNum -> DOUBLE COMA expListNum
Rule 147   expListNum -> VARIABLE
Rule 148   expListNum -> VARIABLE COMA expListNum
Rule 149   expListBool -> BOOL
Rule 150   expListBool -> BOOL COMA expListBool
Rule 151   expListBool -> VARIABLE
Rule 152   expListBool -> VARIABLE COMA expListBool
Rule 153   expListDynamic -> STRING
Rule 154   expListDynamic -> ENTERO
Rule 155   expListDynamic -> DOUBLE
Rule 156   expListDynamic -> BOOL
Rule 157   expListDynamic -> STRING COMA expListDynamic
Rule 158   expListDynamic -> ENTERO COMA expListDynamic
Rule 159   expListDynamic -> DOUBLE COMA expListDynamic
Rule 160   expListDynamic -> BOOL COMA expListDynamic
Rule 161   expListDynamic -> VARIABLE
Rule 162   expListDynamic -> VARIABLE COMA expListDynamic
Rule 163   expListSet -> SETFROM PIZQ CIZQ CDER PDER
Rule 164   expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 165   expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet
Rule 166   expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
Rule 167   expListSet -> VARIABLE
Rule 168   expListSet -> VARIABLE COMA expListSet
Rule 169   expListMap -> LIZQ LDER
Rule 170   expListMap -> LIZQ expMap LDER
Rule 171   expListMap -> LIZQ LDER COMA expListMap
Rule 172   expListMap -> LIZQ expMap LDER COMA expListMap
Rule 173   expListMap -> VARIABLE
Rule 174   expListMap -> VARIABLE COMA expListMap
Rule 175   asignacion -> INT VARIABLE IGUAL expresionInt
Rule 176   asignacion -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 177   asignacion -> NUM VARIABLE IGUAL expresionDouble
Rule 178   asignacion -> STRINGR VARIABLE IGUAL expresionString
Rule 179   asignacion -> BOOLR VARIABLE IGUAL expresionBool
Rule 180   asignacion -> DYNAMIC VARIABLE IGUAL expresion
Rule 181   asignacion -> VAR VARIABLE IGUAL expresion
Rule 182   asignacion -> asignacionSimple
Rule 183   asignacionSimple -> VARIABLE IGUAL expresion
Rule 184   declaracionSimple -> STRINGR VARIABLE
Rule 185   declaracionSimple -> INT VARIABLE
Rule 186   declaracionSimple -> DOUBLER VARIABLE
Rule 187   declaracionSimple -> NUM VARIABLE
Rule 188   declaracionSimple -> VAR VARIABLE
Rule 189   declaracionSimple -> DYNAMIC VARIABLE
Rule 190   declaracionSimple -> BOOL VARIABLE
Rule 191   imprimir -> PRINT PIZQ expresion PDER
Rule 192   imprimir -> PRINT PIZQ asignacionSimple PDER
Rule 193   funcionStdin -> FUNCIONSTDIN
Rule 194   funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER
Rule 195   funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER
Rule 196   sentenciaIf -> IF PIZQ expresionBool PDER final
Rule 197   sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER
Rule 198   sentenciaElse -> ELSE final
Rule 199   sentenciaElse -> ELSE LIZQ final LDER
Rule 200   sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final
Rule 201   sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER
Rule 202   valor -> ENTERO
Rule 203   valor -> VARIABLE
Rule 204   valor -> DOUBLE
Rule 205   valor -> STRING
Rule 206   expresion -> valor operadorMat expresion
Rule 207   expresion -> valor
Rule 208   expresion -> expresionString
Rule 209   expresion -> expresionInt
Rule 210   expresion -> expresionDouble
Rule 211   expresion -> expresionBool
Rule 212   asignacionFor -> INT VARIABLE IGUAL expresionInt
Rule 213   asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 214   asignacionFor -> NUM VARIABLE IGUAL expresionDouble
Rule 215   asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt
Rule 216   asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble
Rule 217   asignacionFor -> VAR VARIABLE IGUAL expresionInt
Rule 218   asignacionFor -> VAR VARIABLE IGUAL expresionDouble
Rule 219   asignacionFor -> VARIABLE IGUAL expresionInt
Rule 220   asignacionFor -> VARIABLE IGUAL expresionDouble
Rule 221   expresionBoolFor -> valorDouble comparadorMat expresionDouble
Rule 222   expresionBoolFor -> VARIABLE comparadorMat expresionDouble
Rule 223   expresionBoolFor -> VARIABLE comparadorMat VARIABLE
Rule 224   expresionBoolFor -> valorDouble comparadorMat VARIABLE
Rule 225   expresionBoolFor -> valorBool
Rule 226   expresionBoolFor -> negacionBool
Rule 227   expresionBoolFor -> comparacionBool
Rule 228   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
Rule 229   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
Rule 230   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
Rule 231   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
Rule 232   sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER
Rule 233   sentenciaWhile -> WHILE PIZQ expresionBool PDER final
Rule 234   sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER
Rule 235   valorBool -> BOOL
Rule 236   valorBool -> VARIABLE
Rule 237   expresionBool -> valorDouble comparadorMat expresionDouble
Rule 238   expresionBool -> VARIABLE comparadorMat expresionDouble
Rule 239   expresionBool -> VARIABLE comparadorMat VARIABLE
Rule 240   expresionBool -> valorDouble comparadorMat VARIABLE
Rule 241   expresionBool -> valorBool
Rule 242   expresionBool -> negacionBool
Rule 243   expresionBool -> comparacionBool
Rule 244   expresionBool -> valor IS objeto
Rule 245   expresionBool -> valor ISNEGADO objeto
Rule 246   negacionBool -> NOT PIZQ expresionBool PDER
Rule 247   comparacionBool -> expresionBool operadorLogico expresionBool
Rule 248   comparacionBool -> expresionBool operadorLogico comparacionBool
Rule 249   valorString -> STRING
Rule 250   valorString -> VARIABLE
Rule 251   valorString -> FUNCIONSTDIN
Rule 252   valorString -> expresionIndexString
Rule 253   valorString -> sentenciaSubstring
Rule 254   valorString -> STRING CIZQ ENTERO CDER
Rule 255   expresionString -> valorString SUMA expresionString
Rule 256   expresionString -> valorString
Rule 257   expresionIndexString -> valorString CIZQ ENTERO CDER
Rule 258   sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
Rule 259   sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
Rule 260   valorInt -> ENTERO
Rule 261   valorInt -> VARIABLE
Rule 262   expresionInt -> valorInt operadorMat expresionInt
Rule 263   expresionInt -> valorInt
Rule 264   valorDouble -> DOUBLE
Rule 265   valorDouble -> valorInt
Rule 266   expresionDouble -> valorDouble operadorMat expresionDouble
Rule 267   expresionDouble -> valorDouble
Rule 268   operadorMat -> SUMA
Rule 269   operadorMat -> RESTA
Rule 270   operadorMat -> MULTI
Rule 271   operadorMat -> DIV
Rule 272   operadorMat -> DIVENTERO
Rule 273   operadorMat -> MOD
Rule 274   comparadorMat -> DIGUAL
Rule 275   comparadorMat -> NOIGUAL
Rule 276   comparadorMat -> MAYOR
Rule 277   comparadorMat -> MENOR
Rule 278   comparadorMat -> MAYIGUAL
Rule 279   comparadorMat -> MENIGUAL
Rule 280   operadorLogico -> AND
Rule 281   operadorLogico -> OR
Rule 282   objeto -> STRINGR
Rule 283   objeto -> INT
Rule 284   objeto -> DOUBLER
Rule 285   objeto -> NUM
Rule 286   objeto -> VAR
Rule 287   objeto -> DYNAMIC
Rule 288   objeto -> LIST
Rule 289   objeto -> BOOLR
Rule 290   objeto -> MAP
Rule 291   objeto -> SET

Terminals, with rules where they appear

AND                  : 280
AS                   : 
BOOL                 : 71 72 84 149 150 156 160 190 235
BOOLR                : 116 117 118 179 289
BREAK                : 67 68 69 70 71 72
CASE                 : 67 68 69 70 71 72
CDER                 : 85 86 88 89 93 94 95 96 100 102 104 106 108 110 112 114 117 119 121 123 125 127 129 131 132 163 164 165 166 254 257
CIZQ                 : 85 86 88 89 93 94 95 96 100 102 104 106 108 110 112 114 117 119 121 123 125 127 129 131 132 163 164 165 166 254 257
COMA                 : 79 134 136 138 140 142 145 146 148 150 152 157 158 159 160 162 165 166 168 171 172 174 259
COMILLAD             : 
COMILLAS             : 
DIGUAL               : 274
DIV                  : 271
DIVENTERO            : 272
DO                   : 234
DOSPUNTOS            : 67 68 69 70 71 72 78 79
DOUBLE               : 83 144 146 155 159 204 264
DOUBLER              : 109 110 111 176 186 213 284
DRESTA               : 49 50 230 231
DSUMA                : 47 48 228 229
DYNAMIC              : 120 121 122 180 189 215 216 287
ELSE                 : 198 199
ELSEIF               : 200 201
ENTERO               : 69 70 82 97 99 132 133 134 134 139 140 143 145 154 158 202 254 257 258 259 259 260
FLECHA               : 
FOR                  : 228 229 230 231
FUNCIONARR           : 
FUNCIONRANGE         : 134
FUNCIONSTDIN         : 193 251
FUNCIONSTDOUT        : 194 195
FUNCIONSUBSTRING     : 258 259
FUNCIONTAKE          : 97 133
IF                   : 196 197
IGUAL                : 74 76 94 96 102 103 106 107 110 111 114 115 117 118 121 122 125 126 129 130 175 176 177 178 179 180 181 183 212 213 214 215 216 217 218 219 220
INT                  : 105 106 107 175 185 212 283
IS                   : 244
ISNEGADO             : 245
LDER                 : 63 74 75 76 77 90 91 169 170 171 172 197 199 201 228 230 232 234
LIST                 : 101 102 103 105 106 107 109 110 111 113 114 115 116 117 118 120 121 122 124 125 126 128 129 130 288
LIZQ                 : 63 74 75 76 77 90 91 169 170 171 172 197 199 201 228 230 232 234
MAP                  : 73 74 76 128 129 130 290
MAYIGUAL             : 278
MAYOR                : 101 102 103 105 106 107 109 110 111 113 114 115 116 117 118 120 121 122 124 125 126 128 129 130 276
MENIGUAL             : 279
MENOR                : 101 102 103 105 106 107 109 110 111 113 114 115 116 117 118 120 121 122 124 125 126 128 129 130 277
MOD                  : 273
MULTI                : 270
NEWLIST              : 98 99
NOIGUAL              : 275
NOT                  : 246
NUM                  : 113 114 115 177 187 214 285
OR                   : 281
PDER                 : 63 88 89 93 94 95 96 97 98 99 133 134 163 164 165 166 191 192 194 195 196 197 200 201 228 229 230 231 232 233 234 246 258 259
PIZQ                 : 63 88 89 93 94 95 96 97 98 99 133 134 163 164 165 166 191 192 194 195 196 197 200 201 228 229 230 231 232 233 234 246 258 259
PRINT                : 191 192
PUNTOYCOMA           : 1 2 3 4 5 6 7 8 9 10 11 12 15 16 17 18 19 20 23 24 27 28 29 30 31 32 33 34 35 36 37 39 41 42 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 67 68 69 70 71 72 228 228 229 229 230 230 231 231
RESTA                : 269
RETURN               : 
SET                  : 92 94 96 124 125 126 291
SETFROM              : 88 89 93 94 95 96 163 164 165 166
STRING               : 67 68 81 135 136 153 157 205 249 254
STRINGR              : 101 102 103 178 184 282
SUMA                 : 255 268
SWITCH               : 63
VAR                  : 181 188 217 218 286
VARIABLE             : 47 48 49 50 63 73 74 76 80 92 94 96 97 101 102 103 105 106 107 109 110 111 113 114 115 116 117 118 120 121 122 124 125 126 128 129 130 132 133 134 137 138 141 142 147 148 151 152 161 162 167 168 173 174 175 176 177 178 179 180 181 183 184 185 186 187 188 189 190 203 212 213 214 215 216 217 218 219 220 222 223 223 224 228 229 230 231 236 238 239 239 240 250 258 259 261
WHILE                : 232 233 234
error                : 

Nonterminals, with rules where they appear

asignacion           : 1 2
asignacionFor        : 228 229 230 231
asignacionSimple     : 182 192 195
caseBool             : 66 72
caseInt              : 65 70
caseString           : 64 68
cases                : 63
claveValor           : 78 78 79 79
comparacionBool      : 35 36 227 243 248
comparadorMat        : 221 222 223 224 237 238 239 240
declaracionSimple    : 61 62
expListBool          : 117 119 150 152
expListDynamic       : 85 89 95 96 121 123 157 158 159 160 162 164 166
expListInt           : 106 108 140 142
expListMap           : 129 131 171 172 174
expListNum           : 110 112 114 145 146 148
expListSet           : 86 125 127 165 166 168
expListString        : 102 104 136 138
expMap               : 76 77 79 91 170 172
expresion            : 180 181 183 191 194 206
expresionBool        : 9 10 179 196 197 200 201 211 232 233 234 246 247 247 248
expresionBoolFor     : 11 12 228 229 230 231
expresionDouble      : 5 6 176 177 210 213 214 216 218 220 221 222 237 238 266
expresionIndexString : 252
expresionInt         : 3 4 175 209 212 215 217 219 262
expresionLista       : 51 52
expresionMap         : 57 58
expresionNewList     : 53 54 87 103 107 111 115 118 122 126 130
expresionSet         : 55 56
expresionString      : 7 8 178 208 255
expresionSwitch      : 59 60
final                : 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 35 37 38 41 43 45 47 49 52 54 56 58 60 62 67 68 69 70 71 72 196 197 198 199 200 201 228 229 230 231 232 233 234 0
funcionStdin         : 29 30
funcionStdout        : 31 32
imprimir             : 27 28
negacionBool         : 33 34 226 242
objeto               : 244 245
operadorLogico       : 247 248
operadorMat          : 206 262 266
sentenciaDoWhile     : 17 18
sentenciaElse        : 23 24 25 26
sentenciaElseIf      : 37 38 39 40
sentenciaFor         : 41 42 43 44
sentenciaIf          : 19 20 21 22
sentenciaSubstring   : 45 46 253
sentenciaWhile       : 13 14 15 16
valor                : 206 207 244 245
valorBool            : 225 241
valorDouble          : 221 224 237 240 266 267
valorInt             : 262 263 265
valorString          : 255 256 257

Parsing method: LALR

state 0

    (0) S' -> . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

    final                          shift and go to state 1
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 1

    (0) S' -> final .



state 2

    (1) final -> asignacion . PUNTOYCOMA
    (2) final -> asignacion . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 63


state 3

    (3) final -> expresionInt . PUNTOYCOMA
    (4) final -> expresionInt . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 64


state 4

    (5) final -> expresionDouble . PUNTOYCOMA
    (6) final -> expresionDouble . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 65


state 5

    (7) final -> expresionString . PUNTOYCOMA
    (8) final -> expresionString . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 66


state 6

    (9) final -> expresionBool . PUNTOYCOMA
    (10) final -> expresionBool . PUNTOYCOMA final
    (247) comparacionBool -> expresionBool . operadorLogico expresionBool
    (248) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (280) operadorLogico -> . AND
    (281) operadorLogico -> . OR

    PUNTOYCOMA      shift and go to state 67
    AND             shift and go to state 69
    OR              shift and go to state 70

    operadorLogico                 shift and go to state 68

state 7

    (11) final -> expresionBoolFor . PUNTOYCOMA
    (12) final -> expresionBoolFor . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 71


state 8

    (13) final -> sentenciaWhile .
    (14) final -> sentenciaWhile . final
    (15) final -> sentenciaWhile . PUNTOYCOMA
    (16) final -> sentenciaWhile . PUNTOYCOMA final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 13 (final -> sentenciaWhile .)
    LDER            reduce using rule 13 (final -> sentenciaWhile .)
    BREAK           reduce using rule 13 (final -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 73
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! PUNTOYCOMA      [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! VARIABLE        [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! INT             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DOUBLER         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NUM             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! STRINGR         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! BOOLR           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DYNAMIC         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! VAR             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! WHILE           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DO              [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! IF              [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ELSE            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! PRINT           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDIN    [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NOT             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ELSEIF          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FOR             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! LIST            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! CIZQ            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NEWLIST         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! SET             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! SETFROM         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! MAP             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! LIZQ            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! SWITCH          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! BOOL            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ENTERO          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DOUBLE          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! STRING          [ reduce using rule 13 (final -> sentenciaWhile .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 72
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 9

    (17) final -> sentenciaDoWhile . PUNTOYCOMA
    (18) final -> sentenciaDoWhile . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 74


state 10

    (19) final -> sentenciaIf . PUNTOYCOMA
    (20) final -> sentenciaIf . PUNTOYCOMA final
    (21) final -> sentenciaIf .
    (22) final -> sentenciaIf . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    PUNTOYCOMA      shift and go to state 75
    $end            reduce using rule 21 (final -> sentenciaIf .)
    LDER            reduce using rule 21 (final -> sentenciaIf .)
    BREAK           reduce using rule 21 (final -> sentenciaIf .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! PUNTOYCOMA      [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! VARIABLE        [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! INT             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DOUBLER         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NUM             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! STRINGR         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! BOOLR           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DYNAMIC         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! VAR             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! WHILE           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DO              [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! IF              [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ELSE            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! PRINT           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NOT             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ELSEIF          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FOR             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! LIST            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! CIZQ            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NEWLIST         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! SET             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! SETFROM         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! MAP             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! LIZQ            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! SWITCH          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! BOOL            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ENTERO          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DOUBLE          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! STRING          [ reduce using rule 21 (final -> sentenciaIf .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 76
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 11

    (23) final -> sentenciaElse . PUNTOYCOMA
    (24) final -> sentenciaElse . PUNTOYCOMA final
    (25) final -> sentenciaElse .
    (26) final -> sentenciaElse . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    PUNTOYCOMA      shift and go to state 77
    $end            reduce using rule 25 (final -> sentenciaElse .)
    LDER            reduce using rule 25 (final -> sentenciaElse .)
    BREAK           reduce using rule 25 (final -> sentenciaElse .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! PUNTOYCOMA      [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! VARIABLE        [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! INT             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DOUBLER         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NUM             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! STRINGR         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! BOOLR           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DYNAMIC         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! VAR             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! WHILE           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DO              [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! IF              [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ELSE            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! PRINT           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FUNCIONSTDIN    [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NOT             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ELSEIF          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FOR             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! LIST            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! CIZQ            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NEWLIST         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! SET             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! SETFROM         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! MAP             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! LIZQ            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! SWITCH          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! BOOL            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ENTERO          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DOUBLE          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! STRING          [ reduce using rule 25 (final -> sentenciaElse .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 78
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 12

    (27) final -> imprimir . PUNTOYCOMA
    (28) final -> imprimir . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 79


state 13

    (29) final -> funcionStdin . PUNTOYCOMA
    (30) final -> funcionStdin . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 80


state 14

    (31) final -> funcionStdout . PUNTOYCOMA
    (32) final -> funcionStdout . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 81


state 15

    (33) final -> negacionBool . PUNTOYCOMA
    (34) final -> negacionBool . PUNTOYCOMA final
    (242) expresionBool -> negacionBool .
    (226) expresionBoolFor -> negacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 82
    AND             reduce using rule 242 (expresionBool -> negacionBool .)
    OR              reduce using rule 242 (expresionBool -> negacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 242 (expresionBool -> negacionBool .) ]
  ! PUNTOYCOMA      [ reduce using rule 226 (expresionBoolFor -> negacionBool .) ]


state 16

    (35) final -> comparacionBool . PUNTOYCOMA final
    (36) final -> comparacionBool . PUNTOYCOMA
    (243) expresionBool -> comparacionBool .
    (227) expresionBoolFor -> comparacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 83
    AND             reduce using rule 243 (expresionBool -> comparacionBool .)
    OR              reduce using rule 243 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 243 (expresionBool -> comparacionBool .) ]
  ! PUNTOYCOMA      [ reduce using rule 227 (expresionBoolFor -> comparacionBool .) ]


state 17

    (37) final -> sentenciaElseIf . PUNTOYCOMA final
    (38) final -> sentenciaElseIf . final
    (39) final -> sentenciaElseIf . PUNTOYCOMA
    (40) final -> sentenciaElseIf .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    PUNTOYCOMA      shift and go to state 84
    $end            reduce using rule 40 (final -> sentenciaElseIf .)
    LDER            reduce using rule 40 (final -> sentenciaElseIf .)
    BREAK           reduce using rule 40 (final -> sentenciaElseIf .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! PUNTOYCOMA      [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! VARIABLE        [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! INT             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DOUBLER         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NUM             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! STRINGR         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! BOOLR           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DYNAMIC         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! VAR             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! WHILE           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DO              [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! IF              [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ELSE            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! PRINT           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NOT             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ELSEIF          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FOR             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! LIST            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! CIZQ            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NEWLIST         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! SET             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! SETFROM         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! MAP             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! LIZQ            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! SWITCH          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! BOOL            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ENTERO          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DOUBLE          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! STRING          [ reduce using rule 40 (final -> sentenciaElseIf .) ]

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 85
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 18

    (41) final -> sentenciaFor . PUNTOYCOMA final
    (42) final -> sentenciaFor . PUNTOYCOMA
    (43) final -> sentenciaFor . final
    (44) final -> sentenciaFor .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    PUNTOYCOMA      shift and go to state 86
    $end            reduce using rule 44 (final -> sentenciaFor .)
    LDER            reduce using rule 44 (final -> sentenciaFor .)
    BREAK           reduce using rule 44 (final -> sentenciaFor .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! PUNTOYCOMA      [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! VARIABLE        [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! INT             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DOUBLER         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NUM             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! STRINGR         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! BOOLR           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DYNAMIC         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! VAR             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! WHILE           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DO              [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! IF              [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ELSE            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! PRINT           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FUNCIONSTDIN    [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NOT             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ELSEIF          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FOR             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! LIST            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! CIZQ            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NEWLIST         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! SET             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! SETFROM         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! MAP             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! LIZQ            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! SWITCH          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! BOOL            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ENTERO          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DOUBLE          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! STRING          [ reduce using rule 44 (final -> sentenciaFor .) ]

    sentenciaFor                   shift and go to state 18
    final                          shift and go to state 87
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 19

    (45) final -> sentenciaSubstring . PUNTOYCOMA final
    (46) final -> sentenciaSubstring . PUNTOYCOMA
    (253) valorString -> sentenciaSubstring .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 88
    SUMA            reduce using rule 253 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 253 (valorString -> sentenciaSubstring .)

  ! PUNTOYCOMA      [ reduce using rule 253 (valorString -> sentenciaSubstring .) ]


state 20

    (47) final -> VARIABLE . DSUMA PUNTOYCOMA final
    (48) final -> VARIABLE . DSUMA PUNTOYCOMA
    (49) final -> VARIABLE . DRESTA PUNTOYCOMA final
    (50) final -> VARIABLE . DRESTA PUNTOYCOMA
    (238) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (239) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (222) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (223) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (258) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (132) expresionLista -> VARIABLE . CIZQ ENTERO CDER
    (133) expresionLista -> VARIABLE . FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> VARIABLE . FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (97) expresionSet -> VARIABLE . FUNCIONTAKE PIZQ ENTERO PDER
    (183) asignacionSimple -> VARIABLE . IGUAL expresion
    (261) valorInt -> VARIABLE .
    (250) valorString -> VARIABLE .
    (236) valorBool -> VARIABLE .
    (203) valor -> VARIABLE .
    (274) comparadorMat -> . DIGUAL
    (275) comparadorMat -> . NOIGUAL
    (276) comparadorMat -> . MAYOR
    (277) comparadorMat -> . MENOR
    (278) comparadorMat -> . MAYIGUAL
    (279) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 250 (valorString -> VARIABLE .)
  ! shift/reduce conflict for CIZQ resolved as shift
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 250 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 236 (valorBool -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    DSUMA           shift and go to state 89
    DRESTA          shift and go to state 90
    FUNCIONSUBSTRING shift and go to state 92
    CIZQ            shift and go to state 93
    FUNCIONTAKE     shift and go to state 94
    FUNCIONRANGE    shift and go to state 95
    IGUAL           shift and go to state 96
    RESTA           reduce using rule 261 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 261 (valorInt -> VARIABLE .)
    DIV             reduce using rule 261 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 261 (valorInt -> VARIABLE .)
    MOD             reduce using rule 261 (valorInt -> VARIABLE .)
    SUMA            reduce using rule 250 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 236 (valorBool -> VARIABLE .)
    AND             reduce using rule 236 (valorBool -> VARIABLE .)
    OR              reduce using rule 236 (valorBool -> VARIABLE .)
    IS              reduce using rule 203 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 203 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 97
    NOIGUAL         shift and go to state 98
    MAYOR           shift and go to state 99
    MENOR           shift and go to state 100
    MAYIGUAL        shift and go to state 101
    MENIGUAL        shift and go to state 102

  ! SUMA            [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! CIZQ            [ reduce using rule 250 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 250 (valorString -> VARIABLE .) ]

    comparadorMat                  shift and go to state 91

state 21

    (51) final -> expresionLista . PUNTOYCOMA
    (52) final -> expresionLista . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 103


state 22

    (53) final -> expresionNewList . PUNTOYCOMA
    (54) final -> expresionNewList . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 104


state 23

    (55) final -> expresionSet . PUNTOYCOMA
    (56) final -> expresionSet . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 105


state 24

    (57) final -> expresionMap . PUNTOYCOMA
    (58) final -> expresionMap . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 106


state 25

    (59) final -> expresionSwitch . PUNTOYCOMA
    (60) final -> expresionSwitch . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 107


state 26

    (61) final -> declaracionSimple . PUNTOYCOMA
    (62) final -> declaracionSimple . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 108


state 27

    (175) asignacion -> INT . VARIABLE IGUAL expresionInt
    (185) declaracionSimple -> INT . VARIABLE

    VARIABLE        shift and go to state 109


state 28

    (176) asignacion -> DOUBLER . VARIABLE IGUAL expresionDouble
    (186) declaracionSimple -> DOUBLER . VARIABLE

    VARIABLE        shift and go to state 110


state 29

    (177) asignacion -> NUM . VARIABLE IGUAL expresionDouble
    (187) declaracionSimple -> NUM . VARIABLE

    VARIABLE        shift and go to state 111


state 30

    (178) asignacion -> STRINGR . VARIABLE IGUAL expresionString
    (184) declaracionSimple -> STRINGR . VARIABLE

    VARIABLE        shift and go to state 112


state 31

    (179) asignacion -> BOOLR . VARIABLE IGUAL expresionBool

    VARIABLE        shift and go to state 113


state 32

    (180) asignacion -> DYNAMIC . VARIABLE IGUAL expresion
    (189) declaracionSimple -> DYNAMIC . VARIABLE

    VARIABLE        shift and go to state 114


state 33

    (181) asignacion -> VAR . VARIABLE IGUAL expresion
    (188) declaracionSimple -> VAR . VARIABLE

    VARIABLE        shift and go to state 115


state 34

    (182) asignacion -> asignacionSimple .

    PUNTOYCOMA      reduce using rule 182 (asignacion -> asignacionSimple .)


state 35

    (262) expresionInt -> valorInt . operadorMat expresionInt
    (263) expresionInt -> valorInt .
    (265) valorDouble -> valorInt .
    (268) operadorMat -> . SUMA
    (269) operadorMat -> . RESTA
    (270) operadorMat -> . MULTI
    (271) operadorMat -> . DIV
    (272) operadorMat -> . DIVENTERO
    (273) operadorMat -> . MOD

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 263 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PDER resolved using rule 263 (expresionInt -> valorInt .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DIVENTERO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PUNTOYCOMA      reduce using rule 263 (expresionInt -> valorInt .)
    PDER            reduce using rule 263 (expresionInt -> valorInt .)
    DIGUAL          reduce using rule 265 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 265 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 265 (valorDouble -> valorInt .)
    MENOR           reduce using rule 265 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 265 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 265 (valorDouble -> valorInt .)
    SUMA            shift and go to state 117
    RESTA           shift and go to state 118
    MULTI           shift and go to state 119
    DIV             shift and go to state 120
    DIVENTERO       shift and go to state 121
    MOD             shift and go to state 122

  ! SUMA            [ reduce using rule 265 (valorDouble -> valorInt .) ]
  ! RESTA           [ reduce using rule 265 (valorDouble -> valorInt .) ]
  ! MULTI           [ reduce using rule 265 (valorDouble -> valorInt .) ]
  ! DIV             [ reduce using rule 265 (valorDouble -> valorInt .) ]
  ! DIVENTERO       [ reduce using rule 265 (valorDouble -> valorInt .) ]
  ! MOD             [ reduce using rule 265 (valorDouble -> valorInt .) ]
  ! PUNTOYCOMA      [ reduce using rule 265 (valorDouble -> valorInt .) ]
  ! PDER            [ reduce using rule 265 (valorDouble -> valorInt .) ]

    operadorMat                    shift and go to state 116

state 36

    (266) expresionDouble -> valorDouble . operadorMat expresionDouble
    (267) expresionDouble -> valorDouble .
    (237) expresionBool -> valorDouble . comparadorMat expresionDouble
    (240) expresionBool -> valorDouble . comparadorMat VARIABLE
    (221) expresionBoolFor -> valorDouble . comparadorMat expresionDouble
    (224) expresionBoolFor -> valorDouble . comparadorMat VARIABLE
    (268) operadorMat -> . SUMA
    (269) operadorMat -> . RESTA
    (270) operadorMat -> . MULTI
    (271) operadorMat -> . DIV
    (272) operadorMat -> . DIVENTERO
    (273) operadorMat -> . MOD
    (274) comparadorMat -> . DIGUAL
    (275) comparadorMat -> . NOIGUAL
    (276) comparadorMat -> . MAYOR
    (277) comparadorMat -> . MENOR
    (278) comparadorMat -> . MAYIGUAL
    (279) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 267 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 117
    RESTA           shift and go to state 118
    MULTI           shift and go to state 119
    DIV             shift and go to state 120
    DIVENTERO       shift and go to state 121
    MOD             shift and go to state 122
    DIGUAL          shift and go to state 97
    NOIGUAL         shift and go to state 98
    MAYOR           shift and go to state 99
    MENOR           shift and go to state 100
    MAYIGUAL        shift and go to state 101
    MENIGUAL        shift and go to state 102

    operadorMat                    shift and go to state 123
    comparadorMat                  shift and go to state 124

state 37

    (255) expresionString -> valorString . SUMA expresionString
    (256) expresionString -> valorString .
    (257) expresionIndexString -> valorString . CIZQ ENTERO CDER

    SUMA            shift and go to state 125
    PUNTOYCOMA      reduce using rule 256 (expresionString -> valorString .)
    PDER            reduce using rule 256 (expresionString -> valorString .)
    CIZQ            shift and go to state 126


state 38

    (241) expresionBool -> valorBool .
    (225) expresionBoolFor -> valorBool .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 225 (expresionBoolFor -> valorBool .)
    AND             reduce using rule 241 (expresionBool -> valorBool .)
    OR              reduce using rule 241 (expresionBool -> valorBool .)
    PUNTOYCOMA      reduce using rule 225 (expresionBoolFor -> valorBool .)

  ! PUNTOYCOMA      [ reduce using rule 241 (expresionBool -> valorBool .) ]


state 39

    (244) expresionBool -> valor . IS objeto
    (245) expresionBool -> valor . ISNEGADO objeto

    IS              shift and go to state 127
    ISNEGADO        shift and go to state 128


state 40

    (232) sentenciaWhile -> WHILE . PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> WHILE . PIZQ expresionBool PDER final

    PIZQ            shift and go to state 129


state 41

    (75) expresionMap -> LIZQ . LDER
    (77) expresionMap -> LIZQ . expMap LDER
    (78) expMap -> . claveValor DOSPUNTOS claveValor
    (79) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (80) claveValor -> . VARIABLE
    (81) claveValor -> . STRING
    (82) claveValor -> . ENTERO
    (83) claveValor -> . DOUBLE
    (84) claveValor -> . BOOL
    (85) claveValor -> . CIZQ expListDynamic CDER
    (86) claveValor -> . CIZQ expListSet CDER
    (87) claveValor -> . expresionNewList
    (88) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (89) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) claveValor -> . LIZQ LDER
    (91) claveValor -> . LIZQ expMap LDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 131
    VARIABLE        shift and go to state 134
    STRING          shift and go to state 135
    ENTERO          shift and go to state 136
    DOUBLE          shift and go to state 137
    BOOL            shift and go to state 138
    CIZQ            shift and go to state 139
    SETFROM         shift and go to state 141
    LIZQ            shift and go to state 130
    NEWLIST         shift and go to state 56

    expMap                         shift and go to state 132
    claveValor                     shift and go to state 133
    expresionNewList               shift and go to state 140

state 42

    (234) sentenciaDoWhile -> DO . LIZQ final LDER WHILE PIZQ expresionBool PDER

    LIZQ            shift and go to state 142


state 43

    (196) sentenciaIf -> IF . PIZQ expresionBool PDER final
    (197) sentenciaIf -> IF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 143


state 44

    (198) sentenciaElse -> ELSE . final
    (199) sentenciaElse -> ELSE . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 145
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

    final                          shift and go to state 144
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 45

    (191) imprimir -> PRINT . PIZQ expresion PDER
    (192) imprimir -> PRINT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 146


state 46

    (193) funcionStdin -> FUNCIONSTDIN .
    (251) valorString -> FUNCIONSTDIN .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 193 (funcionStdin -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 193 (funcionStdin -> FUNCIONSTDIN .)
    SUMA            reduce using rule 251 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 251 (valorString -> FUNCIONSTDIN .)

  ! PUNTOYCOMA      [ reduce using rule 251 (valorString -> FUNCIONSTDIN .) ]


state 47

    (194) funcionStdout -> FUNCIONSTDOUT . PIZQ expresion PDER
    (195) funcionStdout -> FUNCIONSTDOUT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 147


state 48

    (246) negacionBool -> NOT . PIZQ expresionBool PDER

    PIZQ            shift and go to state 148


state 49

    (200) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 149


state 50

    (228) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final

    PIZQ            shift and go to state 150


state 51

    (260) valorInt -> ENTERO .
    (202) valor -> ENTERO .

    SUMA            reduce using rule 260 (valorInt -> ENTERO .)
    RESTA           reduce using rule 260 (valorInt -> ENTERO .)
    MULTI           reduce using rule 260 (valorInt -> ENTERO .)
    DIV             reduce using rule 260 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 260 (valorInt -> ENTERO .)
    MOD             reduce using rule 260 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 260 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 260 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 260 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 260 (valorInt -> ENTERO .)
    MENOR           reduce using rule 260 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 260 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 260 (valorInt -> ENTERO .)
    IS              reduce using rule 202 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 202 (valor -> ENTERO .)


state 52

    (101) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> LIST . MENOR INT MAYOR VARIABLE
    (106) expresionLista -> LIST . MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> LIST . MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (113) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> LIST . MENOR SET MAYOR VARIABLE
    (125) expresionLista -> LIST . MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> LIST . MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (128) expresionLista -> LIST . MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> LIST . MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> LIST . MENOR MAP MAYOR VARIABLE IGUAL expresionNewList

    MENOR           shift and go to state 151


state 53

    (104) expresionLista -> CIZQ . expListString CDER
    (108) expresionLista -> CIZQ . expListInt CDER
    (112) expresionLista -> CIZQ . expListNum CDER
    (119) expresionLista -> CIZQ . expListBool CDER
    (123) expresionLista -> CIZQ . expListDynamic CDER
    (127) expresionLista -> CIZQ . expListSet CDER
    (131) expresionLista -> CIZQ . expListMap CDER
    (100) expresionNewList -> CIZQ . CDER
    (135) expListString -> . STRING
    (136) expListString -> . STRING COMA expListString
    (137) expListString -> . VARIABLE
    (138) expListString -> . VARIABLE COMA expListString
    (139) expListInt -> . ENTERO
    (140) expListInt -> . ENTERO COMA expListInt
    (141) expListInt -> . VARIABLE
    (142) expListInt -> . VARIABLE COMA expListInt
    (143) expListNum -> . ENTERO
    (144) expListNum -> . DOUBLE
    (145) expListNum -> . ENTERO COMA expListNum
    (146) expListNum -> . DOUBLE COMA expListNum
    (147) expListNum -> . VARIABLE
    (148) expListNum -> . VARIABLE COMA expListNum
    (149) expListBool -> . BOOL
    (150) expListBool -> . BOOL COMA expListBool
    (151) expListBool -> . VARIABLE
    (152) expListBool -> . VARIABLE COMA expListBool
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic
    (163) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (164) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (165) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (166) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (167) expListSet -> . VARIABLE
    (168) expListSet -> . VARIABLE COMA expListSet
    (169) expListMap -> . LIZQ LDER
    (170) expListMap -> . LIZQ expMap LDER
    (171) expListMap -> . LIZQ LDER COMA expListMap
    (172) expListMap -> . LIZQ expMap LDER COMA expListMap
    (173) expListMap -> . VARIABLE
    (174) expListMap -> . VARIABLE COMA expListMap

    CDER            shift and go to state 153
    STRING          shift and go to state 160
    VARIABLE        shift and go to state 161
    ENTERO          shift and go to state 162
    DOUBLE          shift and go to state 163
    BOOL            shift and go to state 164
    SETFROM         shift and go to state 165
    LIZQ            shift and go to state 166

    expListString                  shift and go to state 152
    expListInt                     shift and go to state 154
    expListNum                     shift and go to state 155
    expListBool                    shift and go to state 156
    expListDynamic                 shift and go to state 157
    expListSet                     shift and go to state 158
    expListMap                     shift and go to state 159

state 54

    (92) expresionSet -> SET . VARIABLE
    (94) expresionSet -> SET . VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (96) expresionSet -> SET . VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER

    VARIABLE        shift and go to state 167


state 55

    (73) expresionMap -> MAP . VARIABLE
    (74) expresionMap -> MAP . VARIABLE IGUAL LIZQ LDER
    (76) expresionMap -> MAP . VARIABLE IGUAL LIZQ expMap LDER

    VARIABLE        shift and go to state 168


state 56

    (98) expresionNewList -> NEWLIST . PIZQ PDER
    (99) expresionNewList -> NEWLIST . PIZQ ENTERO PDER

    PIZQ            shift and go to state 169


state 57

    (93) expresionSet -> SETFROM . PIZQ CIZQ CDER PDER
    (95) expresionSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 170


state 58

    (63) expresionSwitch -> SWITCH . PIZQ VARIABLE PDER LIZQ cases LDER

    PIZQ            shift and go to state 171


state 59

    (190) declaracionSimple -> BOOL . VARIABLE
    (235) valorBool -> BOOL .

    VARIABLE        shift and go to state 172
    PUNTOYCOMA      reduce using rule 235 (valorBool -> BOOL .)
    AND             reduce using rule 235 (valorBool -> BOOL .)
    OR              reduce using rule 235 (valorBool -> BOOL .)


state 60

    (264) valorDouble -> DOUBLE .
    (204) valor -> DOUBLE .

    SUMA            reduce using rule 264 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 264 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 264 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 264 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 264 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 264 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 264 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 264 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 264 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 264 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 264 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 264 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 264 (valorDouble -> DOUBLE .)
    IS              reduce using rule 204 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 204 (valor -> DOUBLE .)


state 61

    (249) valorString -> STRING .
    (254) valorString -> STRING . CIZQ ENTERO CDER
    (205) valor -> STRING .

  ! shift/reduce conflict for CIZQ resolved as shift
    SUMA            reduce using rule 249 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 249 (valorString -> STRING .)
    CIZQ            shift and go to state 173
    IS              reduce using rule 205 (valor -> STRING .)
    ISNEGADO        reduce using rule 205 (valor -> STRING .)

  ! CIZQ            [ reduce using rule 249 (valorString -> STRING .) ]


state 62

    (252) valorString -> expresionIndexString .

    SUMA            reduce using rule 252 (valorString -> expresionIndexString .)
    CIZQ            reduce using rule 252 (valorString -> expresionIndexString .)
    PUNTOYCOMA      reduce using rule 252 (valorString -> expresionIndexString .)
    PDER            reduce using rule 252 (valorString -> expresionIndexString .)


state 63

    (1) final -> asignacion PUNTOYCOMA .
    (2) final -> asignacion PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    LDER            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    BREAK           reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]

    asignacion                     shift and go to state 2
    final                          shift and go to state 174
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 64

    (3) final -> expresionInt PUNTOYCOMA .
    (4) final -> expresionInt PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    LDER            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    BREAK           reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]

    expresionInt                   shift and go to state 3
    final                          shift and go to state 175
    asignacion                     shift and go to state 2
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 65

    (5) final -> expresionDouble PUNTOYCOMA .
    (6) final -> expresionDouble PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    LDER            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    BREAK           reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]

    expresionDouble                shift and go to state 4
    final                          shift and go to state 176
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 66

    (7) final -> expresionString PUNTOYCOMA .
    (8) final -> expresionString PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    LDER            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    BREAK           reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]

    expresionString                shift and go to state 5
    final                          shift and go to state 177
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 67

    (9) final -> expresionBool PUNTOYCOMA .
    (10) final -> expresionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    LDER            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    BREAK           reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]

    expresionBool                  shift and go to state 6
    final                          shift and go to state 178
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 68

    (247) comparacionBool -> expresionBool operadorLogico . expresionBool
    (248) comparacionBool -> expresionBool operadorLogico . comparacionBool
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 182
    DOUBLE          shift and go to state 60
    BOOL            shift and go to state 186
    NOT             shift and go to state 48
    ENTERO          shift and go to state 187
    STRING          shift and go to state 188

    expresionBool                  shift and go to state 179
    comparacionBool                shift and go to state 180
    valorDouble                    shift and go to state 181
    valorBool                      shift and go to state 183
    negacionBool                   shift and go to state 184
    valor                          shift and go to state 39
    valorInt                       shift and go to state 185

state 69

    (280) operadorLogico -> AND .

    VARIABLE        reduce using rule 280 (operadorLogico -> AND .)
    DOUBLE          reduce using rule 280 (operadorLogico -> AND .)
    BOOL            reduce using rule 280 (operadorLogico -> AND .)
    NOT             reduce using rule 280 (operadorLogico -> AND .)
    ENTERO          reduce using rule 280 (operadorLogico -> AND .)
    STRING          reduce using rule 280 (operadorLogico -> AND .)


state 70

    (281) operadorLogico -> OR .

    VARIABLE        reduce using rule 281 (operadorLogico -> OR .)
    DOUBLE          reduce using rule 281 (operadorLogico -> OR .)
    BOOL            reduce using rule 281 (operadorLogico -> OR .)
    NOT             reduce using rule 281 (operadorLogico -> OR .)
    ENTERO          reduce using rule 281 (operadorLogico -> OR .)
    STRING          reduce using rule 281 (operadorLogico -> OR .)


state 71

    (11) final -> expresionBoolFor PUNTOYCOMA .
    (12) final -> expresionBoolFor PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    LDER            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    BREAK           reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 189
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 72

    (14) final -> sentenciaWhile final .

    $end            reduce using rule 14 (final -> sentenciaWhile final .)
    PUNTOYCOMA      reduce using rule 14 (final -> sentenciaWhile final .)
    VARIABLE        reduce using rule 14 (final -> sentenciaWhile final .)
    INT             reduce using rule 14 (final -> sentenciaWhile final .)
    DOUBLER         reduce using rule 14 (final -> sentenciaWhile final .)
    NUM             reduce using rule 14 (final -> sentenciaWhile final .)
    STRINGR         reduce using rule 14 (final -> sentenciaWhile final .)
    BOOLR           reduce using rule 14 (final -> sentenciaWhile final .)
    DYNAMIC         reduce using rule 14 (final -> sentenciaWhile final .)
    VAR             reduce using rule 14 (final -> sentenciaWhile final .)
    WHILE           reduce using rule 14 (final -> sentenciaWhile final .)
    DO              reduce using rule 14 (final -> sentenciaWhile final .)
    IF              reduce using rule 14 (final -> sentenciaWhile final .)
    ELSE            reduce using rule 14 (final -> sentenciaWhile final .)
    PRINT           reduce using rule 14 (final -> sentenciaWhile final .)
    FUNCIONSTDIN    reduce using rule 14 (final -> sentenciaWhile final .)
    FUNCIONSTDOUT   reduce using rule 14 (final -> sentenciaWhile final .)
    NOT             reduce using rule 14 (final -> sentenciaWhile final .)
    ELSEIF          reduce using rule 14 (final -> sentenciaWhile final .)
    FOR             reduce using rule 14 (final -> sentenciaWhile final .)
    LIST            reduce using rule 14 (final -> sentenciaWhile final .)
    CIZQ            reduce using rule 14 (final -> sentenciaWhile final .)
    NEWLIST         reduce using rule 14 (final -> sentenciaWhile final .)
    SET             reduce using rule 14 (final -> sentenciaWhile final .)
    SETFROM         reduce using rule 14 (final -> sentenciaWhile final .)
    MAP             reduce using rule 14 (final -> sentenciaWhile final .)
    LIZQ            reduce using rule 14 (final -> sentenciaWhile final .)
    SWITCH          reduce using rule 14 (final -> sentenciaWhile final .)
    BOOL            reduce using rule 14 (final -> sentenciaWhile final .)
    ENTERO          reduce using rule 14 (final -> sentenciaWhile final .)
    DOUBLE          reduce using rule 14 (final -> sentenciaWhile final .)
    STRING          reduce using rule 14 (final -> sentenciaWhile final .)
    LDER            reduce using rule 14 (final -> sentenciaWhile final .)
    BREAK           reduce using rule 14 (final -> sentenciaWhile final .)


state 73

    (15) final -> sentenciaWhile PUNTOYCOMA .
    (16) final -> sentenciaWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    LDER            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    BREAK           reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 190
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 74

    (17) final -> sentenciaDoWhile PUNTOYCOMA .
    (18) final -> sentenciaDoWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    LDER            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    BREAK           reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]

    sentenciaDoWhile               shift and go to state 9
    final                          shift and go to state 191
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 75

    (19) final -> sentenciaIf PUNTOYCOMA .
    (20) final -> sentenciaIf PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    LDER            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    BREAK           reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 192
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 76

    (22) final -> sentenciaIf final .

    $end            reduce using rule 22 (final -> sentenciaIf final .)
    PUNTOYCOMA      reduce using rule 22 (final -> sentenciaIf final .)
    VARIABLE        reduce using rule 22 (final -> sentenciaIf final .)
    INT             reduce using rule 22 (final -> sentenciaIf final .)
    DOUBLER         reduce using rule 22 (final -> sentenciaIf final .)
    NUM             reduce using rule 22 (final -> sentenciaIf final .)
    STRINGR         reduce using rule 22 (final -> sentenciaIf final .)
    BOOLR           reduce using rule 22 (final -> sentenciaIf final .)
    DYNAMIC         reduce using rule 22 (final -> sentenciaIf final .)
    VAR             reduce using rule 22 (final -> sentenciaIf final .)
    WHILE           reduce using rule 22 (final -> sentenciaIf final .)
    DO              reduce using rule 22 (final -> sentenciaIf final .)
    IF              reduce using rule 22 (final -> sentenciaIf final .)
    ELSE            reduce using rule 22 (final -> sentenciaIf final .)
    PRINT           reduce using rule 22 (final -> sentenciaIf final .)
    FUNCIONSTDIN    reduce using rule 22 (final -> sentenciaIf final .)
    FUNCIONSTDOUT   reduce using rule 22 (final -> sentenciaIf final .)
    NOT             reduce using rule 22 (final -> sentenciaIf final .)
    ELSEIF          reduce using rule 22 (final -> sentenciaIf final .)
    FOR             reduce using rule 22 (final -> sentenciaIf final .)
    LIST            reduce using rule 22 (final -> sentenciaIf final .)
    CIZQ            reduce using rule 22 (final -> sentenciaIf final .)
    NEWLIST         reduce using rule 22 (final -> sentenciaIf final .)
    SET             reduce using rule 22 (final -> sentenciaIf final .)
    SETFROM         reduce using rule 22 (final -> sentenciaIf final .)
    MAP             reduce using rule 22 (final -> sentenciaIf final .)
    LIZQ            reduce using rule 22 (final -> sentenciaIf final .)
    SWITCH          reduce using rule 22 (final -> sentenciaIf final .)
    BOOL            reduce using rule 22 (final -> sentenciaIf final .)
    ENTERO          reduce using rule 22 (final -> sentenciaIf final .)
    DOUBLE          reduce using rule 22 (final -> sentenciaIf final .)
    STRING          reduce using rule 22 (final -> sentenciaIf final .)
    LDER            reduce using rule 22 (final -> sentenciaIf final .)
    BREAK           reduce using rule 22 (final -> sentenciaIf final .)


state 77

    (23) final -> sentenciaElse PUNTOYCOMA .
    (24) final -> sentenciaElse PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    LDER            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    BREAK           reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 193
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 78

    (26) final -> sentenciaElse final .

    $end            reduce using rule 26 (final -> sentenciaElse final .)
    PUNTOYCOMA      reduce using rule 26 (final -> sentenciaElse final .)
    VARIABLE        reduce using rule 26 (final -> sentenciaElse final .)
    INT             reduce using rule 26 (final -> sentenciaElse final .)
    DOUBLER         reduce using rule 26 (final -> sentenciaElse final .)
    NUM             reduce using rule 26 (final -> sentenciaElse final .)
    STRINGR         reduce using rule 26 (final -> sentenciaElse final .)
    BOOLR           reduce using rule 26 (final -> sentenciaElse final .)
    DYNAMIC         reduce using rule 26 (final -> sentenciaElse final .)
    VAR             reduce using rule 26 (final -> sentenciaElse final .)
    WHILE           reduce using rule 26 (final -> sentenciaElse final .)
    DO              reduce using rule 26 (final -> sentenciaElse final .)
    IF              reduce using rule 26 (final -> sentenciaElse final .)
    ELSE            reduce using rule 26 (final -> sentenciaElse final .)
    PRINT           reduce using rule 26 (final -> sentenciaElse final .)
    FUNCIONSTDIN    reduce using rule 26 (final -> sentenciaElse final .)
    FUNCIONSTDOUT   reduce using rule 26 (final -> sentenciaElse final .)
    NOT             reduce using rule 26 (final -> sentenciaElse final .)
    ELSEIF          reduce using rule 26 (final -> sentenciaElse final .)
    FOR             reduce using rule 26 (final -> sentenciaElse final .)
    LIST            reduce using rule 26 (final -> sentenciaElse final .)
    CIZQ            reduce using rule 26 (final -> sentenciaElse final .)
    NEWLIST         reduce using rule 26 (final -> sentenciaElse final .)
    SET             reduce using rule 26 (final -> sentenciaElse final .)
    SETFROM         reduce using rule 26 (final -> sentenciaElse final .)
    MAP             reduce using rule 26 (final -> sentenciaElse final .)
    LIZQ            reduce using rule 26 (final -> sentenciaElse final .)
    SWITCH          reduce using rule 26 (final -> sentenciaElse final .)
    BOOL            reduce using rule 26 (final -> sentenciaElse final .)
    ENTERO          reduce using rule 26 (final -> sentenciaElse final .)
    DOUBLE          reduce using rule 26 (final -> sentenciaElse final .)
    STRING          reduce using rule 26 (final -> sentenciaElse final .)
    LDER            reduce using rule 26 (final -> sentenciaElse final .)
    BREAK           reduce using rule 26 (final -> sentenciaElse final .)


state 79

    (27) final -> imprimir PUNTOYCOMA .
    (28) final -> imprimir PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    LDER            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    BREAK           reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]

    imprimir                       shift and go to state 12
    final                          shift and go to state 194
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 80

    (29) final -> funcionStdin PUNTOYCOMA .
    (30) final -> funcionStdin PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    LDER            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    BREAK           reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]

    funcionStdin                   shift and go to state 13
    final                          shift and go to state 195
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 81

    (31) final -> funcionStdout PUNTOYCOMA .
    (32) final -> funcionStdout PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    LDER            reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    BREAK           reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]

    funcionStdout                  shift and go to state 14
    final                          shift and go to state 196
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 82

    (33) final -> negacionBool PUNTOYCOMA .
    (34) final -> negacionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    LDER            reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    BREAK           reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]

    negacionBool                   shift and go to state 15
    final                          shift and go to state 197
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 83

    (35) final -> comparacionBool PUNTOYCOMA . final
    (36) final -> comparacionBool PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    LDER            reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    BREAK           reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]

    comparacionBool                shift and go to state 16
    final                          shift and go to state 198
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 84

    (37) final -> sentenciaElseIf PUNTOYCOMA . final
    (39) final -> sentenciaElseIf PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    LDER            reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    BREAK           reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 199
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 85

    (38) final -> sentenciaElseIf final .

    $end            reduce using rule 38 (final -> sentenciaElseIf final .)
    PUNTOYCOMA      reduce using rule 38 (final -> sentenciaElseIf final .)
    VARIABLE        reduce using rule 38 (final -> sentenciaElseIf final .)
    INT             reduce using rule 38 (final -> sentenciaElseIf final .)
    DOUBLER         reduce using rule 38 (final -> sentenciaElseIf final .)
    NUM             reduce using rule 38 (final -> sentenciaElseIf final .)
    STRINGR         reduce using rule 38 (final -> sentenciaElseIf final .)
    BOOLR           reduce using rule 38 (final -> sentenciaElseIf final .)
    DYNAMIC         reduce using rule 38 (final -> sentenciaElseIf final .)
    VAR             reduce using rule 38 (final -> sentenciaElseIf final .)
    WHILE           reduce using rule 38 (final -> sentenciaElseIf final .)
    DO              reduce using rule 38 (final -> sentenciaElseIf final .)
    IF              reduce using rule 38 (final -> sentenciaElseIf final .)
    ELSE            reduce using rule 38 (final -> sentenciaElseIf final .)
    PRINT           reduce using rule 38 (final -> sentenciaElseIf final .)
    FUNCIONSTDIN    reduce using rule 38 (final -> sentenciaElseIf final .)
    FUNCIONSTDOUT   reduce using rule 38 (final -> sentenciaElseIf final .)
    NOT             reduce using rule 38 (final -> sentenciaElseIf final .)
    ELSEIF          reduce using rule 38 (final -> sentenciaElseIf final .)
    FOR             reduce using rule 38 (final -> sentenciaElseIf final .)
    LIST            reduce using rule 38 (final -> sentenciaElseIf final .)
    CIZQ            reduce using rule 38 (final -> sentenciaElseIf final .)
    NEWLIST         reduce using rule 38 (final -> sentenciaElseIf final .)
    SET             reduce using rule 38 (final -> sentenciaElseIf final .)
    SETFROM         reduce using rule 38 (final -> sentenciaElseIf final .)
    MAP             reduce using rule 38 (final -> sentenciaElseIf final .)
    LIZQ            reduce using rule 38 (final -> sentenciaElseIf final .)
    SWITCH          reduce using rule 38 (final -> sentenciaElseIf final .)
    BOOL            reduce using rule 38 (final -> sentenciaElseIf final .)
    ENTERO          reduce using rule 38 (final -> sentenciaElseIf final .)
    DOUBLE          reduce using rule 38 (final -> sentenciaElseIf final .)
    STRING          reduce using rule 38 (final -> sentenciaElseIf final .)
    LDER            reduce using rule 38 (final -> sentenciaElseIf final .)
    BREAK           reduce using rule 38 (final -> sentenciaElseIf final .)


state 86

    (41) final -> sentenciaFor PUNTOYCOMA . final
    (42) final -> sentenciaFor PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    LDER            reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    BREAK           reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]

    sentenciaFor                   shift and go to state 18
    final                          shift and go to state 200
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 87

    (43) final -> sentenciaFor final .

    $end            reduce using rule 43 (final -> sentenciaFor final .)
    PUNTOYCOMA      reduce using rule 43 (final -> sentenciaFor final .)
    VARIABLE        reduce using rule 43 (final -> sentenciaFor final .)
    INT             reduce using rule 43 (final -> sentenciaFor final .)
    DOUBLER         reduce using rule 43 (final -> sentenciaFor final .)
    NUM             reduce using rule 43 (final -> sentenciaFor final .)
    STRINGR         reduce using rule 43 (final -> sentenciaFor final .)
    BOOLR           reduce using rule 43 (final -> sentenciaFor final .)
    DYNAMIC         reduce using rule 43 (final -> sentenciaFor final .)
    VAR             reduce using rule 43 (final -> sentenciaFor final .)
    WHILE           reduce using rule 43 (final -> sentenciaFor final .)
    DO              reduce using rule 43 (final -> sentenciaFor final .)
    IF              reduce using rule 43 (final -> sentenciaFor final .)
    ELSE            reduce using rule 43 (final -> sentenciaFor final .)
    PRINT           reduce using rule 43 (final -> sentenciaFor final .)
    FUNCIONSTDIN    reduce using rule 43 (final -> sentenciaFor final .)
    FUNCIONSTDOUT   reduce using rule 43 (final -> sentenciaFor final .)
    NOT             reduce using rule 43 (final -> sentenciaFor final .)
    ELSEIF          reduce using rule 43 (final -> sentenciaFor final .)
    FOR             reduce using rule 43 (final -> sentenciaFor final .)
    LIST            reduce using rule 43 (final -> sentenciaFor final .)
    CIZQ            reduce using rule 43 (final -> sentenciaFor final .)
    NEWLIST         reduce using rule 43 (final -> sentenciaFor final .)
    SET             reduce using rule 43 (final -> sentenciaFor final .)
    SETFROM         reduce using rule 43 (final -> sentenciaFor final .)
    MAP             reduce using rule 43 (final -> sentenciaFor final .)
    LIZQ            reduce using rule 43 (final -> sentenciaFor final .)
    SWITCH          reduce using rule 43 (final -> sentenciaFor final .)
    BOOL            reduce using rule 43 (final -> sentenciaFor final .)
    ENTERO          reduce using rule 43 (final -> sentenciaFor final .)
    DOUBLE          reduce using rule 43 (final -> sentenciaFor final .)
    STRING          reduce using rule 43 (final -> sentenciaFor final .)
    LDER            reduce using rule 43 (final -> sentenciaFor final .)
    BREAK           reduce using rule 43 (final -> sentenciaFor final .)


state 88

    (45) final -> sentenciaSubstring PUNTOYCOMA . final
    (46) final -> sentenciaSubstring PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    LDER            reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    BREAK           reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]

    sentenciaSubstring             shift and go to state 19
    final                          shift and go to state 201
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 89

    (47) final -> VARIABLE DSUMA . PUNTOYCOMA final
    (48) final -> VARIABLE DSUMA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 202


state 90

    (49) final -> VARIABLE DRESTA . PUNTOYCOMA final
    (50) final -> VARIABLE DRESTA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 203


state 91

    (238) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (239) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (222) expresionBoolFor -> VARIABLE comparadorMat . expresionDouble
    (223) expresionBoolFor -> VARIABLE comparadorMat . VARIABLE
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 204
    DOUBLE          shift and go to state 207
    ENTERO          shift and go to state 208

    expresionDouble                shift and go to state 205
    valorDouble                    shift and go to state 206
    valorInt                       shift and go to state 185

state 92

    (258) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO PDER
    (259) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO COMA ENTERO PDER

    PIZQ            shift and go to state 209


state 93

    (132) expresionLista -> VARIABLE CIZQ . ENTERO CDER

    ENTERO          shift and go to state 210


state 94

    (133) expresionLista -> VARIABLE FUNCIONTAKE . PIZQ ENTERO PDER
    (97) expresionSet -> VARIABLE FUNCIONTAKE . PIZQ ENTERO PDER

    PIZQ            shift and go to state 211


state 95

    (134) expresionLista -> VARIABLE FUNCIONRANGE . PIZQ ENTERO COMA ENTERO PDER

    PIZQ            shift and go to state 212


state 96

    (183) asignacionSimple -> VARIABLE IGUAL . expresion
    (206) expresion -> . valor operadorMat expresion
    (207) expresion -> . valor
    (208) expresion -> . expresionString
    (209) expresion -> . expresionInt
    (210) expresion -> . expresionDouble
    (211) expresion -> . expresionBool
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 187
    VARIABLE        shift and go to state 213
    DOUBLE          shift and go to state 220
    STRING          shift and go to state 221
    FUNCIONSTDIN    shift and go to state 224
    BOOL            shift and go to state 186
    NOT             shift and go to state 48

    expresion                      shift and go to state 214
    valor                          shift and go to state 215
    expresionString                shift and go to state 216
    expresionInt                   shift and go to state 217
    expresionDouble                shift and go to state 218
    expresionBool                  shift and go to state 219
    valorString                    shift and go to state 37
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 222
    valorBool                      shift and go to state 183
    negacionBool                   shift and go to state 184
    comparacionBool                shift and go to state 223
    expresionIndexString           shift and go to state 62
    sentenciaSubstring             shift and go to state 225

state 97

    (274) comparadorMat -> DIGUAL .

    VARIABLE        reduce using rule 274 (comparadorMat -> DIGUAL .)
    DOUBLE          reduce using rule 274 (comparadorMat -> DIGUAL .)
    ENTERO          reduce using rule 274 (comparadorMat -> DIGUAL .)


state 98

    (275) comparadorMat -> NOIGUAL .

    VARIABLE        reduce using rule 275 (comparadorMat -> NOIGUAL .)
    DOUBLE          reduce using rule 275 (comparadorMat -> NOIGUAL .)
    ENTERO          reduce using rule 275 (comparadorMat -> NOIGUAL .)


state 99

    (276) comparadorMat -> MAYOR .

    VARIABLE        reduce using rule 276 (comparadorMat -> MAYOR .)
    DOUBLE          reduce using rule 276 (comparadorMat -> MAYOR .)
    ENTERO          reduce using rule 276 (comparadorMat -> MAYOR .)


state 100

    (277) comparadorMat -> MENOR .

    VARIABLE        reduce using rule 277 (comparadorMat -> MENOR .)
    DOUBLE          reduce using rule 277 (comparadorMat -> MENOR .)
    ENTERO          reduce using rule 277 (comparadorMat -> MENOR .)


state 101

    (278) comparadorMat -> MAYIGUAL .

    VARIABLE        reduce using rule 278 (comparadorMat -> MAYIGUAL .)
    DOUBLE          reduce using rule 278 (comparadorMat -> MAYIGUAL .)
    ENTERO          reduce using rule 278 (comparadorMat -> MAYIGUAL .)


state 102

    (279) comparadorMat -> MENIGUAL .

    VARIABLE        reduce using rule 279 (comparadorMat -> MENIGUAL .)
    DOUBLE          reduce using rule 279 (comparadorMat -> MENIGUAL .)
    ENTERO          reduce using rule 279 (comparadorMat -> MENIGUAL .)


state 103

    (51) final -> expresionLista PUNTOYCOMA .
    (52) final -> expresionLista PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    LDER            reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    BREAK           reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]

    expresionLista                 shift and go to state 21
    final                          shift and go to state 226
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 104

    (53) final -> expresionNewList PUNTOYCOMA .
    (54) final -> expresionNewList PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    LDER            reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    BREAK           reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]

    expresionNewList               shift and go to state 22
    final                          shift and go to state 227
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 105

    (55) final -> expresionSet PUNTOYCOMA .
    (56) final -> expresionSet PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    LDER            reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    BREAK           reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]

    expresionSet                   shift and go to state 23
    final                          shift and go to state 228
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 106

    (57) final -> expresionMap PUNTOYCOMA .
    (58) final -> expresionMap PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 57 (final -> expresionMap PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 57 (final -> expresionMap PUNTOYCOMA .)
    LDER            reduce using rule 57 (final -> expresionMap PUNTOYCOMA .)
    BREAK           reduce using rule 57 (final -> expresionMap PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]

    expresionMap                   shift and go to state 24
    final                          shift and go to state 229
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 107

    (59) final -> expresionSwitch PUNTOYCOMA .
    (60) final -> expresionSwitch PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .)
    LDER            reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .)
    BREAK           reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 59 (final -> expresionSwitch PUNTOYCOMA .) ]

    expresionSwitch                shift and go to state 25
    final                          shift and go to state 230
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 108

    (61) final -> declaracionSimple PUNTOYCOMA .
    (62) final -> declaracionSimple PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .)
    LDER            reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .)
    BREAK           reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 61 (final -> declaracionSimple PUNTOYCOMA .) ]

    declaracionSimple              shift and go to state 26
    final                          shift and go to state 231
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 109

    (175) asignacion -> INT VARIABLE . IGUAL expresionInt
    (185) declaracionSimple -> INT VARIABLE .

    IGUAL           shift and go to state 232
    PUNTOYCOMA      reduce using rule 185 (declaracionSimple -> INT VARIABLE .)


state 110

    (176) asignacion -> DOUBLER VARIABLE . IGUAL expresionDouble
    (186) declaracionSimple -> DOUBLER VARIABLE .

    IGUAL           shift and go to state 233
    PUNTOYCOMA      reduce using rule 186 (declaracionSimple -> DOUBLER VARIABLE .)


state 111

    (177) asignacion -> NUM VARIABLE . IGUAL expresionDouble
    (187) declaracionSimple -> NUM VARIABLE .

    IGUAL           shift and go to state 234
    PUNTOYCOMA      reduce using rule 187 (declaracionSimple -> NUM VARIABLE .)


state 112

    (178) asignacion -> STRINGR VARIABLE . IGUAL expresionString
    (184) declaracionSimple -> STRINGR VARIABLE .

    IGUAL           shift and go to state 235
    PUNTOYCOMA      reduce using rule 184 (declaracionSimple -> STRINGR VARIABLE .)


state 113

    (179) asignacion -> BOOLR VARIABLE . IGUAL expresionBool

    IGUAL           shift and go to state 236


state 114

    (180) asignacion -> DYNAMIC VARIABLE . IGUAL expresion
    (189) declaracionSimple -> DYNAMIC VARIABLE .

    IGUAL           shift and go to state 237
    PUNTOYCOMA      reduce using rule 189 (declaracionSimple -> DYNAMIC VARIABLE .)


state 115

    (181) asignacion -> VAR VARIABLE . IGUAL expresion
    (188) declaracionSimple -> VAR VARIABLE .

    IGUAL           shift and go to state 238
    PUNTOYCOMA      reduce using rule 188 (declaracionSimple -> VAR VARIABLE .)


state 116

    (262) expresionInt -> valorInt operadorMat . expresionInt
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE

    ENTERO          shift and go to state 208
    VARIABLE        shift and go to state 241

    valorInt                       shift and go to state 239
    expresionInt                   shift and go to state 240

state 117

    (268) operadorMat -> SUMA .

    ENTERO          reduce using rule 268 (operadorMat -> SUMA .)
    VARIABLE        reduce using rule 268 (operadorMat -> SUMA .)
    DOUBLE          reduce using rule 268 (operadorMat -> SUMA .)
    STRING          reduce using rule 268 (operadorMat -> SUMA .)
    FUNCIONSTDIN    reduce using rule 268 (operadorMat -> SUMA .)
    BOOL            reduce using rule 268 (operadorMat -> SUMA .)
    NOT             reduce using rule 268 (operadorMat -> SUMA .)


state 118

    (269) operadorMat -> RESTA .

    ENTERO          reduce using rule 269 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 269 (operadorMat -> RESTA .)
    DOUBLE          reduce using rule 269 (operadorMat -> RESTA .)
    STRING          reduce using rule 269 (operadorMat -> RESTA .)
    FUNCIONSTDIN    reduce using rule 269 (operadorMat -> RESTA .)
    BOOL            reduce using rule 269 (operadorMat -> RESTA .)
    NOT             reduce using rule 269 (operadorMat -> RESTA .)


state 119

    (270) operadorMat -> MULTI .

    ENTERO          reduce using rule 270 (operadorMat -> MULTI .)
    VARIABLE        reduce using rule 270 (operadorMat -> MULTI .)
    DOUBLE          reduce using rule 270 (operadorMat -> MULTI .)
    STRING          reduce using rule 270 (operadorMat -> MULTI .)
    FUNCIONSTDIN    reduce using rule 270 (operadorMat -> MULTI .)
    BOOL            reduce using rule 270 (operadorMat -> MULTI .)
    NOT             reduce using rule 270 (operadorMat -> MULTI .)


state 120

    (271) operadorMat -> DIV .

    ENTERO          reduce using rule 271 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 271 (operadorMat -> DIV .)
    DOUBLE          reduce using rule 271 (operadorMat -> DIV .)
    STRING          reduce using rule 271 (operadorMat -> DIV .)
    FUNCIONSTDIN    reduce using rule 271 (operadorMat -> DIV .)
    BOOL            reduce using rule 271 (operadorMat -> DIV .)
    NOT             reduce using rule 271 (operadorMat -> DIV .)


state 121

    (272) operadorMat -> DIVENTERO .

    ENTERO          reduce using rule 272 (operadorMat -> DIVENTERO .)
    VARIABLE        reduce using rule 272 (operadorMat -> DIVENTERO .)
    DOUBLE          reduce using rule 272 (operadorMat -> DIVENTERO .)
    STRING          reduce using rule 272 (operadorMat -> DIVENTERO .)
    FUNCIONSTDIN    reduce using rule 272 (operadorMat -> DIVENTERO .)
    BOOL            reduce using rule 272 (operadorMat -> DIVENTERO .)
    NOT             reduce using rule 272 (operadorMat -> DIVENTERO .)


state 122

    (273) operadorMat -> MOD .

    ENTERO          reduce using rule 273 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 273 (operadorMat -> MOD .)
    DOUBLE          reduce using rule 273 (operadorMat -> MOD .)
    STRING          reduce using rule 273 (operadorMat -> MOD .)
    FUNCIONSTDIN    reduce using rule 273 (operadorMat -> MOD .)
    BOOL            reduce using rule 273 (operadorMat -> MOD .)
    NOT             reduce using rule 273 (operadorMat -> MOD .)


state 123

    (266) expresionDouble -> valorDouble operadorMat . expresionDouble
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 207
    ENTERO          shift and go to state 208
    VARIABLE        shift and go to state 241

    valorDouble                    shift and go to state 206
    expresionDouble                shift and go to state 242
    valorInt                       shift and go to state 185

state 124

    (237) expresionBool -> valorDouble comparadorMat . expresionDouble
    (240) expresionBool -> valorDouble comparadorMat . VARIABLE
    (221) expresionBoolFor -> valorDouble comparadorMat . expresionDouble
    (224) expresionBoolFor -> valorDouble comparadorMat . VARIABLE
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 244
    DOUBLE          shift and go to state 207
    ENTERO          shift and go to state 208

    valorDouble                    shift and go to state 206
    expresionDouble                shift and go to state 243
    valorInt                       shift and go to state 185

state 125

    (255) expresionString -> valorString SUMA . expresionString
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 246
    VARIABLE        shift and go to state 247
    FUNCIONSTDIN    shift and go to state 224

    valorString                    shift and go to state 37
    expresionString                shift and go to state 245
    expresionIndexString           shift and go to state 62
    sentenciaSubstring             shift and go to state 225

state 126

    (257) expresionIndexString -> valorString CIZQ . ENTERO CDER

    ENTERO          shift and go to state 248


state 127

    (244) expresionBool -> valor IS . objeto
    (282) objeto -> . STRINGR
    (283) objeto -> . INT
    (284) objeto -> . DOUBLER
    (285) objeto -> . NUM
    (286) objeto -> . VAR
    (287) objeto -> . DYNAMIC
    (288) objeto -> . LIST
    (289) objeto -> . BOOLR
    (290) objeto -> . MAP
    (291) objeto -> . SET

    STRINGR         shift and go to state 250
    INT             shift and go to state 251
    DOUBLER         shift and go to state 252
    NUM             shift and go to state 253
    VAR             shift and go to state 254
    DYNAMIC         shift and go to state 255
    LIST            shift and go to state 256
    BOOLR           shift and go to state 257
    MAP             shift and go to state 258
    SET             shift and go to state 259

    objeto                         shift and go to state 249

state 128

    (245) expresionBool -> valor ISNEGADO . objeto
    (282) objeto -> . STRINGR
    (283) objeto -> . INT
    (284) objeto -> . DOUBLER
    (285) objeto -> . NUM
    (286) objeto -> . VAR
    (287) objeto -> . DYNAMIC
    (288) objeto -> . LIST
    (289) objeto -> . BOOLR
    (290) objeto -> . MAP
    (291) objeto -> . SET

    STRINGR         shift and go to state 250
    INT             shift and go to state 251
    DOUBLER         shift and go to state 252
    NUM             shift and go to state 253
    VAR             shift and go to state 254
    DYNAMIC         shift and go to state 255
    LIST            shift and go to state 256
    BOOLR           shift and go to state 257
    MAP             shift and go to state 258
    SET             shift and go to state 259

    objeto                         shift and go to state 260

state 129

    (232) sentenciaWhile -> WHILE PIZQ . expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> WHILE PIZQ . expresionBool PDER final
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 182
    DOUBLE          shift and go to state 60
    BOOL            shift and go to state 186
    NOT             shift and go to state 48
    ENTERO          shift and go to state 187
    STRING          shift and go to state 188

    expresionBool                  shift and go to state 261
    valorDouble                    shift and go to state 181
    valorBool                      shift and go to state 183
    negacionBool                   shift and go to state 184
    comparacionBool                shift and go to state 223
    valor                          shift and go to state 39
    valorInt                       shift and go to state 185

state 130

    (90) claveValor -> LIZQ . LDER
    (91) claveValor -> LIZQ . expMap LDER
    (78) expMap -> . claveValor DOSPUNTOS claveValor
    (79) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (80) claveValor -> . VARIABLE
    (81) claveValor -> . STRING
    (82) claveValor -> . ENTERO
    (83) claveValor -> . DOUBLE
    (84) claveValor -> . BOOL
    (85) claveValor -> . CIZQ expListDynamic CDER
    (86) claveValor -> . CIZQ expListSet CDER
    (87) claveValor -> . expresionNewList
    (88) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (89) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) claveValor -> . LIZQ LDER
    (91) claveValor -> . LIZQ expMap LDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 262
    VARIABLE        shift and go to state 134
    STRING          shift and go to state 135
    ENTERO          shift and go to state 136
    DOUBLE          shift and go to state 137
    BOOL            shift and go to state 138
    CIZQ            shift and go to state 139
    SETFROM         shift and go to state 141
    LIZQ            shift and go to state 130
    NEWLIST         shift and go to state 56

    expMap                         shift and go to state 263
    claveValor                     shift and go to state 133
    expresionNewList               shift and go to state 140

state 131

    (75) expresionMap -> LIZQ LDER .

    PUNTOYCOMA      reduce using rule 75 (expresionMap -> LIZQ LDER .)


state 132

    (77) expresionMap -> LIZQ expMap . LDER

    LDER            shift and go to state 264


state 133

    (78) expMap -> claveValor . DOSPUNTOS claveValor
    (79) expMap -> claveValor . DOSPUNTOS claveValor COMA expMap

    DOSPUNTOS       shift and go to state 265


state 134

    (80) claveValor -> VARIABLE .

    DOSPUNTOS       reduce using rule 80 (claveValor -> VARIABLE .)
    COMA            reduce using rule 80 (claveValor -> VARIABLE .)
    LDER            reduce using rule 80 (claveValor -> VARIABLE .)


state 135

    (81) claveValor -> STRING .

    DOSPUNTOS       reduce using rule 81 (claveValor -> STRING .)
    COMA            reduce using rule 81 (claveValor -> STRING .)
    LDER            reduce using rule 81 (claveValor -> STRING .)


state 136

    (82) claveValor -> ENTERO .

    DOSPUNTOS       reduce using rule 82 (claveValor -> ENTERO .)
    COMA            reduce using rule 82 (claveValor -> ENTERO .)
    LDER            reduce using rule 82 (claveValor -> ENTERO .)


state 137

    (83) claveValor -> DOUBLE .

    DOSPUNTOS       reduce using rule 83 (claveValor -> DOUBLE .)
    COMA            reduce using rule 83 (claveValor -> DOUBLE .)
    LDER            reduce using rule 83 (claveValor -> DOUBLE .)


state 138

    (84) claveValor -> BOOL .

    DOSPUNTOS       reduce using rule 84 (claveValor -> BOOL .)
    COMA            reduce using rule 84 (claveValor -> BOOL .)
    LDER            reduce using rule 84 (claveValor -> BOOL .)


state 139

    (85) claveValor -> CIZQ . expListDynamic CDER
    (86) claveValor -> CIZQ . expListSet CDER
    (100) expresionNewList -> CIZQ . CDER
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic
    (163) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (164) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (165) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (166) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (167) expListSet -> . VARIABLE
    (168) expListSet -> . VARIABLE COMA expListSet

    CDER            shift and go to state 153
    STRING          shift and go to state 268
    ENTERO          shift and go to state 269
    DOUBLE          shift and go to state 270
    BOOL            shift and go to state 271
    VARIABLE        shift and go to state 272
    SETFROM         shift and go to state 165

    expListDynamic                 shift and go to state 266
    expListSet                     shift and go to state 267

state 140

    (87) claveValor -> expresionNewList .

    DOSPUNTOS       reduce using rule 87 (claveValor -> expresionNewList .)
    COMA            reduce using rule 87 (claveValor -> expresionNewList .)
    LDER            reduce using rule 87 (claveValor -> expresionNewList .)


state 141

    (88) claveValor -> SETFROM . PIZQ CIZQ CDER PDER
    (89) claveValor -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 273


state 142

    (234) sentenciaDoWhile -> DO LIZQ . final LDER WHILE PIZQ expresionBool PDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

    final                          shift and go to state 274
    expresionBool                  shift and go to state 6
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 143

    (196) sentenciaIf -> IF PIZQ . expresionBool PDER final
    (197) sentenciaIf -> IF PIZQ . expresionBool PDER LIZQ final LDER
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 182
    DOUBLE          shift and go to state 60
    BOOL            shift and go to state 186
    NOT             shift and go to state 48
    ENTERO          shift and go to state 187
    STRING          shift and go to state 188

    expresionBool                  shift and go to state 275
    valorDouble                    shift and go to state 181
    valorBool                      shift and go to state 183
    negacionBool                   shift and go to state 184
    comparacionBool                shift and go to state 223
    valor                          shift and go to state 39
    valorInt                       shift and go to state 185

state 144

    (198) sentenciaElse -> ELSE final .

    PUNTOYCOMA      reduce using rule 198 (sentenciaElse -> ELSE final .)
    VARIABLE        reduce using rule 198 (sentenciaElse -> ELSE final .)
    INT             reduce using rule 198 (sentenciaElse -> ELSE final .)
    DOUBLER         reduce using rule 198 (sentenciaElse -> ELSE final .)
    NUM             reduce using rule 198 (sentenciaElse -> ELSE final .)
    STRINGR         reduce using rule 198 (sentenciaElse -> ELSE final .)
    BOOLR           reduce using rule 198 (sentenciaElse -> ELSE final .)
    DYNAMIC         reduce using rule 198 (sentenciaElse -> ELSE final .)
    VAR             reduce using rule 198 (sentenciaElse -> ELSE final .)
    WHILE           reduce using rule 198 (sentenciaElse -> ELSE final .)
    DO              reduce using rule 198 (sentenciaElse -> ELSE final .)
    IF              reduce using rule 198 (sentenciaElse -> ELSE final .)
    ELSE            reduce using rule 198 (sentenciaElse -> ELSE final .)
    PRINT           reduce using rule 198 (sentenciaElse -> ELSE final .)
    FUNCIONSTDIN    reduce using rule 198 (sentenciaElse -> ELSE final .)
    FUNCIONSTDOUT   reduce using rule 198 (sentenciaElse -> ELSE final .)
    NOT             reduce using rule 198 (sentenciaElse -> ELSE final .)
    ELSEIF          reduce using rule 198 (sentenciaElse -> ELSE final .)
    FOR             reduce using rule 198 (sentenciaElse -> ELSE final .)
    LIST            reduce using rule 198 (sentenciaElse -> ELSE final .)
    CIZQ            reduce using rule 198 (sentenciaElse -> ELSE final .)
    NEWLIST         reduce using rule 198 (sentenciaElse -> ELSE final .)
    SET             reduce using rule 198 (sentenciaElse -> ELSE final .)
    SETFROM         reduce using rule 198 (sentenciaElse -> ELSE final .)
    MAP             reduce using rule 198 (sentenciaElse -> ELSE final .)
    LIZQ            reduce using rule 198 (sentenciaElse -> ELSE final .)
    SWITCH          reduce using rule 198 (sentenciaElse -> ELSE final .)
    BOOL            reduce using rule 198 (sentenciaElse -> ELSE final .)
    ENTERO          reduce using rule 198 (sentenciaElse -> ELSE final .)
    DOUBLE          reduce using rule 198 (sentenciaElse -> ELSE final .)
    STRING          reduce using rule 198 (sentenciaElse -> ELSE final .)
    $end            reduce using rule 198 (sentenciaElse -> ELSE final .)
    LDER            reduce using rule 198 (sentenciaElse -> ELSE final .)
    BREAK           reduce using rule 198 (sentenciaElse -> ELSE final .)


state 145

    (199) sentenciaElse -> ELSE LIZQ . final LDER
    (75) expresionMap -> LIZQ . LDER
    (77) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (78) expMap -> . claveValor DOSPUNTOS claveValor
    (79) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (80) claveValor -> . VARIABLE
    (81) claveValor -> . STRING
    (82) claveValor -> . ENTERO
    (83) claveValor -> . DOUBLE
    (84) claveValor -> . BOOL
    (85) claveValor -> . CIZQ expListDynamic CDER
    (86) claveValor -> . CIZQ expListSet CDER
    (87) claveValor -> . expresionNewList
    (88) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (89) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) claveValor -> . LIZQ LDER
    (91) claveValor -> . LIZQ expMap LDER
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 131
    VARIABLE        shift and go to state 278
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 281
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 282
    MAP             shift and go to state 55
    LIZQ            shift and go to state 276
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 283
    STRING          shift and go to state 284
    ENTERO          shift and go to state 280
    DOUBLE          shift and go to state 285

    final                          shift and go to state 277
    expMap                         shift and go to state 132
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 279
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    claveValor                     shift and go to state 133
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 146

    (191) imprimir -> PRINT PIZQ . expresion PDER
    (192) imprimir -> PRINT PIZQ . asignacionSimple PDER
    (206) expresion -> . valor operadorMat expresion
    (207) expresion -> . valor
    (208) expresion -> . expresionString
    (209) expresion -> . expresionInt
    (210) expresion -> . expresionDouble
    (211) expresion -> . expresionBool
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 288
    ENTERO          shift and go to state 187
    DOUBLE          shift and go to state 220
    STRING          shift and go to state 221
    FUNCIONSTDIN    shift and go to state 224
    BOOL            shift and go to state 186
    NOT             shift and go to state 48

    expresion                      shift and go to state 286
    asignacionSimple               shift and go to state 287
    valor                          shift and go to state 215
    expresionString                shift and go to state 216
    expresionInt                   shift and go to state 217
    expresionDouble                shift and go to state 218
    expresionBool                  shift and go to state 219
    valorString                    shift and go to state 37
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 222
    valorBool                      shift and go to state 183
    negacionBool                   shift and go to state 184
    comparacionBool                shift and go to state 223
    expresionIndexString           shift and go to state 62
    sentenciaSubstring             shift and go to state 225

state 147

    (194) funcionStdout -> FUNCIONSTDOUT PIZQ . expresion PDER
    (195) funcionStdout -> FUNCIONSTDOUT PIZQ . asignacionSimple PDER
    (206) expresion -> . valor operadorMat expresion
    (207) expresion -> . valor
    (208) expresion -> . expresionString
    (209) expresion -> . expresionInt
    (210) expresion -> . expresionDouble
    (211) expresion -> . expresionBool
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 288
    ENTERO          shift and go to state 187
    DOUBLE          shift and go to state 220
    STRING          shift and go to state 221
    FUNCIONSTDIN    shift and go to state 224
    BOOL            shift and go to state 186
    NOT             shift and go to state 48

    expresion                      shift and go to state 289
    asignacionSimple               shift and go to state 290
    valor                          shift and go to state 215
    expresionString                shift and go to state 216
    expresionInt                   shift and go to state 217
    expresionDouble                shift and go to state 218
    expresionBool                  shift and go to state 219
    valorString                    shift and go to state 37
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 222
    valorBool                      shift and go to state 183
    negacionBool                   shift and go to state 184
    comparacionBool                shift and go to state 223
    expresionIndexString           shift and go to state 62
    sentenciaSubstring             shift and go to state 225

state 148

    (246) negacionBool -> NOT PIZQ . expresionBool PDER
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 182
    DOUBLE          shift and go to state 60
    BOOL            shift and go to state 186
    NOT             shift and go to state 48
    ENTERO          shift and go to state 187
    STRING          shift and go to state 188

    expresionBool                  shift and go to state 291
    valorDouble                    shift and go to state 181
    valorBool                      shift and go to state 183
    negacionBool                   shift and go to state 184
    comparacionBool                shift and go to state 223
    valor                          shift and go to state 39
    valorInt                       shift and go to state 185

state 149

    (200) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER final
    (201) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER LIZQ final LDER
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 182
    DOUBLE          shift and go to state 60
    BOOL            shift and go to state 186
    NOT             shift and go to state 48
    ENTERO          shift and go to state 187
    STRING          shift and go to state 188

    expresionBool                  shift and go to state 292
    valorDouble                    shift and go to state 181
    valorBool                      shift and go to state 183
    negacionBool                   shift and go to state 184
    comparacionBool                shift and go to state 223
    valor                          shift and go to state 39
    valorInt                       shift and go to state 185

state 150

    (228) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (212) asignacionFor -> . INT VARIABLE IGUAL expresionInt
    (213) asignacionFor -> . DOUBLER VARIABLE IGUAL expresionDouble
    (214) asignacionFor -> . NUM VARIABLE IGUAL expresionDouble
    (215) asignacionFor -> . DYNAMIC VARIABLE IGUAL expresionInt
    (216) asignacionFor -> . DYNAMIC VARIABLE IGUAL expresionDouble
    (217) asignacionFor -> . VAR VARIABLE IGUAL expresionInt
    (218) asignacionFor -> . VAR VARIABLE IGUAL expresionDouble
    (219) asignacionFor -> . VARIABLE IGUAL expresionInt
    (220) asignacionFor -> . VARIABLE IGUAL expresionDouble

    INT             shift and go to state 295
    DOUBLER         shift and go to state 296
    NUM             shift and go to state 297
    DYNAMIC         shift and go to state 298
    VAR             shift and go to state 299
    VARIABLE        shift and go to state 294

    asignacionFor                  shift and go to state 293

state 151

    (101) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE
    (102) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (105) expresionLista -> LIST MENOR . INT MAYOR VARIABLE
    (106) expresionLista -> LIST MENOR . INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> LIST MENOR . INT MAYOR VARIABLE IGUAL expresionNewList
    (109) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE
    (110) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (113) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE
    (114) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE
    (117) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (120) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (124) expresionLista -> LIST MENOR . SET MAYOR VARIABLE
    (125) expresionLista -> LIST MENOR . SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> LIST MENOR . SET MAYOR VARIABLE IGUAL expresionNewList
    (128) expresionLista -> LIST MENOR . MAP MAYOR VARIABLE
    (129) expresionLista -> LIST MENOR . MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> LIST MENOR . MAP MAYOR VARIABLE IGUAL expresionNewList

    STRINGR         shift and go to state 300
    INT             shift and go to state 301
    DOUBLER         shift and go to state 302
    NUM             shift and go to state 303
    BOOLR           shift and go to state 304
    DYNAMIC         shift and go to state 305
    SET             shift and go to state 306
    MAP             shift and go to state 307


state 152

    (104) expresionLista -> CIZQ expListString . CDER

    CDER            shift and go to state 308


state 153

    (100) expresionNewList -> CIZQ CDER .

    PUNTOYCOMA      reduce using rule 100 (expresionNewList -> CIZQ CDER .)
    DOSPUNTOS       reduce using rule 100 (expresionNewList -> CIZQ CDER .)
    COMA            reduce using rule 100 (expresionNewList -> CIZQ CDER .)
    LDER            reduce using rule 100 (expresionNewList -> CIZQ CDER .)


state 154

    (108) expresionLista -> CIZQ expListInt . CDER

    CDER            shift and go to state 309


state 155

    (112) expresionLista -> CIZQ expListNum . CDER

    CDER            shift and go to state 310


state 156

    (119) expresionLista -> CIZQ expListBool . CDER

    CDER            shift and go to state 311


state 157

    (123) expresionLista -> CIZQ expListDynamic . CDER

    CDER            shift and go to state 312


state 158

    (127) expresionLista -> CIZQ expListSet . CDER

    CDER            shift and go to state 313


state 159

    (131) expresionLista -> CIZQ expListMap . CDER

    CDER            shift and go to state 314


state 160

    (135) expListString -> STRING .
    (136) expListString -> STRING . COMA expListString
    (153) expListDynamic -> STRING .
    (157) expListDynamic -> STRING . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 135 (expListString -> STRING .)
    CDER            reduce using rule 135 (expListString -> STRING .)
    COMA            shift and go to state 315

  ! CDER            [ reduce using rule 153 (expListDynamic -> STRING .) ]


state 161

    (137) expListString -> VARIABLE .
    (138) expListString -> VARIABLE . COMA expListString
    (141) expListInt -> VARIABLE .
    (142) expListInt -> VARIABLE . COMA expListInt
    (147) expListNum -> VARIABLE .
    (148) expListNum -> VARIABLE . COMA expListNum
    (151) expListBool -> VARIABLE .
    (152) expListBool -> VARIABLE . COMA expListBool
    (161) expListDynamic -> VARIABLE .
    (162) expListDynamic -> VARIABLE . COMA expListDynamic
    (167) expListSet -> VARIABLE .
    (168) expListSet -> VARIABLE . COMA expListSet
    (173) expListMap -> VARIABLE .
    (174) expListMap -> VARIABLE . COMA expListMap

  ! reduce/reduce conflict for CDER resolved using rule 137 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 137 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 137 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 137 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 137 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 137 (expListString -> VARIABLE .)
    CDER            reduce using rule 137 (expListString -> VARIABLE .)
    COMA            shift and go to state 316

  ! CDER            [ reduce using rule 141 (expListInt -> VARIABLE .) ]
  ! CDER            [ reduce using rule 147 (expListNum -> VARIABLE .) ]
  ! CDER            [ reduce using rule 151 (expListBool -> VARIABLE .) ]
  ! CDER            [ reduce using rule 161 (expListDynamic -> VARIABLE .) ]
  ! CDER            [ reduce using rule 167 (expListSet -> VARIABLE .) ]
  ! CDER            [ reduce using rule 173 (expListMap -> VARIABLE .) ]


state 162

    (139) expListInt -> ENTERO .
    (140) expListInt -> ENTERO . COMA expListInt
    (143) expListNum -> ENTERO .
    (145) expListNum -> ENTERO . COMA expListNum
    (154) expListDynamic -> ENTERO .
    (158) expListDynamic -> ENTERO . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 139 (expListInt -> ENTERO .)
  ! reduce/reduce conflict for CDER resolved using rule 139 (expListInt -> ENTERO .)
    CDER            reduce using rule 139 (expListInt -> ENTERO .)
    COMA            shift and go to state 317

  ! CDER            [ reduce using rule 143 (expListNum -> ENTERO .) ]
  ! CDER            [ reduce using rule 154 (expListDynamic -> ENTERO .) ]


state 163

    (144) expListNum -> DOUBLE .
    (146) expListNum -> DOUBLE . COMA expListNum
    (155) expListDynamic -> DOUBLE .
    (159) expListDynamic -> DOUBLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 144 (expListNum -> DOUBLE .)
    CDER            reduce using rule 144 (expListNum -> DOUBLE .)
    COMA            shift and go to state 318

  ! CDER            [ reduce using rule 155 (expListDynamic -> DOUBLE .) ]


state 164

    (149) expListBool -> BOOL .
    (150) expListBool -> BOOL . COMA expListBool
    (156) expListDynamic -> BOOL .
    (160) expListDynamic -> BOOL . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 149 (expListBool -> BOOL .)
    CDER            reduce using rule 149 (expListBool -> BOOL .)
    COMA            shift and go to state 319

  ! CDER            [ reduce using rule 156 (expListDynamic -> BOOL .) ]


state 165

    (163) expListSet -> SETFROM . PIZQ CIZQ CDER PDER
    (164) expListSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER
    (165) expListSet -> SETFROM . PIZQ CIZQ CDER PDER COMA expListSet
    (166) expListSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER COMA expListSet

    PIZQ            shift and go to state 320


state 166

    (169) expListMap -> LIZQ . LDER
    (170) expListMap -> LIZQ . expMap LDER
    (171) expListMap -> LIZQ . LDER COMA expListMap
    (172) expListMap -> LIZQ . expMap LDER COMA expListMap
    (78) expMap -> . claveValor DOSPUNTOS claveValor
    (79) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (80) claveValor -> . VARIABLE
    (81) claveValor -> . STRING
    (82) claveValor -> . ENTERO
    (83) claveValor -> . DOUBLE
    (84) claveValor -> . BOOL
    (85) claveValor -> . CIZQ expListDynamic CDER
    (86) claveValor -> . CIZQ expListSet CDER
    (87) claveValor -> . expresionNewList
    (88) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (89) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) claveValor -> . LIZQ LDER
    (91) claveValor -> . LIZQ expMap LDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 321
    VARIABLE        shift and go to state 134
    STRING          shift and go to state 135
    ENTERO          shift and go to state 136
    DOUBLE          shift and go to state 137
    BOOL            shift and go to state 138
    CIZQ            shift and go to state 139
    SETFROM         shift and go to state 141
    LIZQ            shift and go to state 130
    NEWLIST         shift and go to state 56

    expMap                         shift and go to state 322
    claveValor                     shift and go to state 133
    expresionNewList               shift and go to state 140

state 167

    (92) expresionSet -> SET VARIABLE .
    (94) expresionSet -> SET VARIABLE . IGUAL SETFROM PIZQ CIZQ CDER PDER
    (96) expresionSet -> SET VARIABLE . IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER

    PUNTOYCOMA      reduce using rule 92 (expresionSet -> SET VARIABLE .)
    IGUAL           shift and go to state 323


state 168

    (73) expresionMap -> MAP VARIABLE .
    (74) expresionMap -> MAP VARIABLE . IGUAL LIZQ LDER
    (76) expresionMap -> MAP VARIABLE . IGUAL LIZQ expMap LDER

    PUNTOYCOMA      reduce using rule 73 (expresionMap -> MAP VARIABLE .)
    IGUAL           shift and go to state 324


state 169

    (98) expresionNewList -> NEWLIST PIZQ . PDER
    (99) expresionNewList -> NEWLIST PIZQ . ENTERO PDER

    PDER            shift and go to state 325
    ENTERO          shift and go to state 326


state 170

    (93) expresionSet -> SETFROM PIZQ . CIZQ CDER PDER
    (95) expresionSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 327


state 171

    (63) expresionSwitch -> SWITCH PIZQ . VARIABLE PDER LIZQ cases LDER

    VARIABLE        shift and go to state 328


state 172

    (190) declaracionSimple -> BOOL VARIABLE .

    PUNTOYCOMA      reduce using rule 190 (declaracionSimple -> BOOL VARIABLE .)


state 173

    (254) valorString -> STRING CIZQ . ENTERO CDER

    ENTERO          shift and go to state 329


state 174

    (2) final -> asignacion PUNTOYCOMA final .

    $end            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VARIABLE        reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    INT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLER         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NUM             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRINGR         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOLR           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VAR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    WHILE           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DO              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    IF              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSE            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PRINT           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NOT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSEIF          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FOR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LIST            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    CIZQ            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NEWLIST         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    SET             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    SETFROM         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    MAP             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LIZQ            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    SWITCH          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOL            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ENTERO          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLE          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRING          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LDER            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BREAK           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)


state 175

    (4) final -> expresionInt PUNTOYCOMA final .

    $end            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VARIABLE        reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    INT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLER         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NUM             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRINGR         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOLR           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VAR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    WHILE           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DO              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    IF              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSE            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PRINT           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NOT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSEIF          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FOR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LIST            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    CIZQ            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NEWLIST         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    SET             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    SETFROM         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    MAP             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LIZQ            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    SWITCH          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOL            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ENTERO          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLE          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRING          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LDER            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BREAK           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)


state 176

    (6) final -> expresionDouble PUNTOYCOMA final .

    $end            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VARIABLE        reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    INT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLER         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NUM             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRINGR         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOLR           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VAR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    WHILE           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DO              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    IF              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSE            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PRINT           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NOT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSEIF          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FOR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LIST            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    CIZQ            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NEWLIST         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    SET             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    SETFROM         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    MAP             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LIZQ            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    SWITCH          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOL            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ENTERO          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLE          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRING          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LDER            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BREAK           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)


state 177

    (8) final -> expresionString PUNTOYCOMA final .

    $end            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VARIABLE        reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    INT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLER         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NUM             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRINGR         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOLR           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VAR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    WHILE           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DO              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    IF              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSE            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PRINT           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NOT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSEIF          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FOR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LIST            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    CIZQ            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NEWLIST         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    SET             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    SETFROM         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    MAP             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LIZQ            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    SWITCH          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOL            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ENTERO          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLE          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRING          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LDER            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BREAK           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)


state 178

    (10) final -> expresionBool PUNTOYCOMA final .

    $end            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    INT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NUM             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VAR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DO              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    IF              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NOT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FOR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LIST            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    SET             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    MAP             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LIZQ            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    SWITCH          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRING          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LDER            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BREAK           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)


state 179

    (247) comparacionBool -> expresionBool operadorLogico expresionBool .
    (247) comparacionBool -> expresionBool . operadorLogico expresionBool
    (248) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (280) operadorLogico -> . AND
    (281) operadorLogico -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNTOYCOMA      reduce using rule 247 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    PDER            reduce using rule 247 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    AND             shift and go to state 69
    OR              shift and go to state 70

  ! AND             [ reduce using rule 247 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]
  ! OR              [ reduce using rule 247 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]

    operadorLogico                 shift and go to state 68

state 180

    (248) comparacionBool -> expresionBool operadorLogico comparacionBool .
    (243) expresionBool -> comparacionBool .

  ! reduce/reduce conflict for AND resolved using rule 243 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for OR resolved using rule 243 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 243 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PDER resolved using rule 243 (expresionBool -> comparacionBool .)
    AND             reduce using rule 243 (expresionBool -> comparacionBool .)
    OR              reduce using rule 243 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 243 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 243 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 248 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! AND             [ reduce using rule 248 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! OR              [ reduce using rule 248 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! PDER            [ reduce using rule 248 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]


state 181

    (237) expresionBool -> valorDouble . comparadorMat expresionDouble
    (240) expresionBool -> valorDouble . comparadorMat VARIABLE
    (274) comparadorMat -> . DIGUAL
    (275) comparadorMat -> . NOIGUAL
    (276) comparadorMat -> . MAYOR
    (277) comparadorMat -> . MENOR
    (278) comparadorMat -> . MAYIGUAL
    (279) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 97
    NOIGUAL         shift and go to state 98
    MAYOR           shift and go to state 99
    MENOR           shift and go to state 100
    MAYIGUAL        shift and go to state 101
    MENIGUAL        shift and go to state 102

    comparadorMat                  shift and go to state 330

state 182

    (238) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (239) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (236) valorBool -> VARIABLE .
    (203) valor -> VARIABLE .
    (261) valorInt -> VARIABLE .
    (274) comparadorMat -> . DIGUAL
    (275) comparadorMat -> . NOIGUAL
    (276) comparadorMat -> . MAYOR
    (277) comparadorMat -> . MENOR
    (278) comparadorMat -> . MAYIGUAL
    (279) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    AND             reduce using rule 236 (valorBool -> VARIABLE .)
    OR              reduce using rule 236 (valorBool -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 236 (valorBool -> VARIABLE .)
    PDER            reduce using rule 236 (valorBool -> VARIABLE .)
    IS              reduce using rule 203 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 203 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 97
    NOIGUAL         shift and go to state 98
    MAYOR           shift and go to state 99
    MENOR           shift and go to state 100
    MAYIGUAL        shift and go to state 101
    MENIGUAL        shift and go to state 102

  ! DIGUAL          [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 261 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 331

state 183

    (241) expresionBool -> valorBool .

    AND             reduce using rule 241 (expresionBool -> valorBool .)
    OR              reduce using rule 241 (expresionBool -> valorBool .)
    PUNTOYCOMA      reduce using rule 241 (expresionBool -> valorBool .)
    PDER            reduce using rule 241 (expresionBool -> valorBool .)


state 184

    (242) expresionBool -> negacionBool .

    AND             reduce using rule 242 (expresionBool -> negacionBool .)
    OR              reduce using rule 242 (expresionBool -> negacionBool .)
    PUNTOYCOMA      reduce using rule 242 (expresionBool -> negacionBool .)
    PDER            reduce using rule 242 (expresionBool -> negacionBool .)


state 185

    (265) valorDouble -> valorInt .

    DIGUAL          reduce using rule 265 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 265 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 265 (valorDouble -> valorInt .)
    MENOR           reduce using rule 265 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 265 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 265 (valorDouble -> valorInt .)
    SUMA            reduce using rule 265 (valorDouble -> valorInt .)
    RESTA           reduce using rule 265 (valorDouble -> valorInt .)
    MULTI           reduce using rule 265 (valorDouble -> valorInt .)
    DIV             reduce using rule 265 (valorDouble -> valorInt .)
    DIVENTERO       reduce using rule 265 (valorDouble -> valorInt .)
    MOD             reduce using rule 265 (valorDouble -> valorInt .)
    PUNTOYCOMA      reduce using rule 265 (valorDouble -> valorInt .)
    AND             reduce using rule 265 (valorDouble -> valorInt .)
    OR              reduce using rule 265 (valorDouble -> valorInt .)
    PDER            reduce using rule 265 (valorDouble -> valorInt .)


state 186

    (235) valorBool -> BOOL .

    AND             reduce using rule 235 (valorBool -> BOOL .)
    OR              reduce using rule 235 (valorBool -> BOOL .)
    PUNTOYCOMA      reduce using rule 235 (valorBool -> BOOL .)
    PDER            reduce using rule 235 (valorBool -> BOOL .)


state 187

    (202) valor -> ENTERO .
    (260) valorInt -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 202 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 202 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 202 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 202 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 202 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 202 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 202 (valor -> ENTERO .)
  ! reduce/reduce conflict for PDER resolved using rule 202 (valor -> ENTERO .)
    IS              reduce using rule 202 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 202 (valor -> ENTERO .)
    SUMA            reduce using rule 202 (valor -> ENTERO .)
    RESTA           reduce using rule 202 (valor -> ENTERO .)
    MULTI           reduce using rule 202 (valor -> ENTERO .)
    DIV             reduce using rule 202 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 202 (valor -> ENTERO .)
    MOD             reduce using rule 202 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 202 (valor -> ENTERO .)
    PDER            reduce using rule 202 (valor -> ENTERO .)
    DIGUAL          reduce using rule 260 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 260 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 260 (valorInt -> ENTERO .)
    MENOR           reduce using rule 260 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 260 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 260 (valorInt -> ENTERO .)

  ! SUMA            [ reduce using rule 260 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 260 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 260 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 260 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 260 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 260 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 260 (valorInt -> ENTERO .) ]
  ! PDER            [ reduce using rule 260 (valorInt -> ENTERO .) ]


state 188

    (205) valor -> STRING .

    IS              reduce using rule 205 (valor -> STRING .)
    ISNEGADO        reduce using rule 205 (valor -> STRING .)


state 189

    (12) final -> expresionBoolFor PUNTOYCOMA final .

    $end            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    VARIABLE        reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    INT             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DOUBLER         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NUM             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    STRINGR         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BOOLR           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    VAR             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    WHILE           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DO              reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    IF              reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ELSE            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    PRINT           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NOT             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ELSEIF          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FOR             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LIST            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    CIZQ            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NEWLIST         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    SET             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    SETFROM         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    MAP             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LIZQ            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    SWITCH          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BOOL            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ENTERO          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DOUBLE          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    STRING          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LDER            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BREAK           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)


state 190

    (16) final -> sentenciaWhile PUNTOYCOMA final .

    $end            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    INT             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NUM             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    VAR             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DO              reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    IF              reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NOT             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FOR             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LIST            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    CIZQ            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NEWLIST         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    SET             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    SETFROM         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    MAP             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LIZQ            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    SWITCH          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRING          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LDER            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BREAK           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)


state 191

    (18) final -> sentenciaDoWhile PUNTOYCOMA final .

    $end            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    INT             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NUM             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VAR             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DO              reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    IF              reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NOT             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FOR             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LIST            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    CIZQ            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NEWLIST         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    SET             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    SETFROM         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    MAP             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LIZQ            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    SWITCH          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRING          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LDER            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BREAK           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)


state 192

    (20) final -> sentenciaIf PUNTOYCOMA final .

    $end            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    INT             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NUM             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    VAR             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    WHILE           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DO              reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    IF              reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSE            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    PRINT           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NOT             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FOR             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LIST            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    CIZQ            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NEWLIST         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    SET             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    SETFROM         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    MAP             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LIZQ            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    SWITCH          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOL            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    STRING          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LDER            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BREAK           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)


state 193

    (24) final -> sentenciaElse PUNTOYCOMA final .

    $end            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    VARIABLE        reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    INT             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DOUBLER         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NUM             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    STRINGR         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    BOOLR           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    VAR             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    WHILE           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DO              reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    IF              reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ELSE            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    PRINT           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NOT             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ELSEIF          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FOR             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LIST            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    CIZQ            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NEWLIST         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    SET             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    SETFROM         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    MAP             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LIZQ            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    SWITCH          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    BOOL            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ENTERO          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DOUBLE          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    STRING          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LDER            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    BREAK           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)


state 194

    (28) final -> imprimir PUNTOYCOMA final .

    $end            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    VARIABLE        reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    INT             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DOUBLER         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NUM             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    STRINGR         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    BOOLR           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    VAR             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    WHILE           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DO              reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    IF              reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ELSE            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    PRINT           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NOT             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ELSEIF          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FOR             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LIST            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    CIZQ            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NEWLIST         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    SET             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    SETFROM         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    MAP             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LIZQ            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    SWITCH          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    BOOL            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ENTERO          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DOUBLE          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    STRING          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LDER            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    BREAK           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)


state 195

    (30) final -> funcionStdin PUNTOYCOMA final .

    $end            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    VARIABLE        reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    INT             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLER         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NUM             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    STRINGR         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    BOOLR           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    VAR             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    WHILE           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DO              reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    IF              reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ELSE            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    PRINT           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NOT             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ELSEIF          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FOR             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LIST            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    CIZQ            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NEWLIST         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    SET             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    SETFROM         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    MAP             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LIZQ            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    SWITCH          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    BOOL            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ENTERO          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLE          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    STRING          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LDER            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    BREAK           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)


state 196

    (32) final -> funcionStdout PUNTOYCOMA final .

    $end            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    VARIABLE        reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    INT             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLER         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NUM             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    STRINGR         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    BOOLR           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    VAR             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    WHILE           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DO              reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    IF              reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ELSE            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    PRINT           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NOT             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ELSEIF          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FOR             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LIST            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    CIZQ            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NEWLIST         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    SET             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    SETFROM         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    MAP             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LIZQ            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    SWITCH          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    BOOL            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ENTERO          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLE          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    STRING          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LDER            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    BREAK           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)


state 197

    (34) final -> negacionBool PUNTOYCOMA final .

    $end            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    INT             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DO              reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    IF              reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FOR             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LIST            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    SET             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    MAP             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LIZQ            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    SWITCH          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    BREAK           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)


state 198

    (35) final -> comparacionBool PUNTOYCOMA final .

    $end            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    INT             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DO              reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    IF              reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FOR             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LIST            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    SET             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    MAP             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LIZQ            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    SWITCH          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    BREAK           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)


state 199

    (37) final -> sentenciaElseIf PUNTOYCOMA final .

    $end            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    INT             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NUM             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    VAR             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    WHILE           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DO              reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    IF              reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ELSE            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    PRINT           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NOT             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FOR             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LIST            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    CIZQ            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NEWLIST         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    SET             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    SETFROM         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    MAP             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LIZQ            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    SWITCH          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BOOL            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    STRING          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LDER            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BREAK           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)


state 200

    (41) final -> sentenciaFor PUNTOYCOMA final .

    $end            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    VARIABLE        reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    INT             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DOUBLER         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NUM             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    STRINGR         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    BOOLR           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    VAR             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    WHILE           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DO              reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    IF              reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ELSE            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    PRINT           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NOT             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ELSEIF          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FOR             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LIST            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    CIZQ            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NEWLIST         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    SET             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    SETFROM         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    MAP             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LIZQ            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    SWITCH          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    BOOL            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ENTERO          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DOUBLE          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    STRING          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LDER            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    BREAK           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)


state 201

    (45) final -> sentenciaSubstring PUNTOYCOMA final .

    $end            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VARIABLE        reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    INT             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLER         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NUM             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRINGR         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOLR           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VAR             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    WHILE           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DO              reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    IF              reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSE            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PRINT           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NOT             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSEIF          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FOR             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LIST            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    CIZQ            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NEWLIST         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    SET             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    SETFROM         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    MAP             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LIZQ            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    SWITCH          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOL            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ENTERO          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLE          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRING          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LDER            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BREAK           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)


state 202

    (47) final -> VARIABLE DSUMA PUNTOYCOMA . final
    (48) final -> VARIABLE DSUMA PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    LDER            reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    BREAK           reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]

    final                          shift and go to state 332
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 203

    (49) final -> VARIABLE DRESTA PUNTOYCOMA . final
    (50) final -> VARIABLE DRESTA PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    $end            reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    LDER            reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    BREAK           reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

  ! VARIABLE        [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]

    final                          shift and go to state 333
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 204

    (239) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (223) expresionBoolFor -> VARIABLE comparadorMat VARIABLE .
    (261) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 223 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 223 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 239 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 239 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 239 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 239 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 223 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 261 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 261 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 261 (valorInt -> VARIABLE .)
    DIV             reduce using rule 261 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 261 (valorInt -> VARIABLE .)
    MOD             reduce using rule 261 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 239 (expresionBool -> VARIABLE comparadorMat VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 261 (valorInt -> VARIABLE .) ]


state 205

    (238) expresionBool -> VARIABLE comparadorMat expresionDouble .
    (222) expresionBoolFor -> VARIABLE comparadorMat expresionDouble .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 222 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 238 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 238 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 222 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 238 (expresionBool -> VARIABLE comparadorMat expresionDouble .) ]


state 206

    (266) expresionDouble -> valorDouble . operadorMat expresionDouble
    (267) expresionDouble -> valorDouble .
    (268) operadorMat -> . SUMA
    (269) operadorMat -> . RESTA
    (270) operadorMat -> . MULTI
    (271) operadorMat -> . DIV
    (272) operadorMat -> . DIVENTERO
    (273) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 267 (expresionDouble -> valorDouble .)
    AND             reduce using rule 267 (expresionDouble -> valorDouble .)
    OR              reduce using rule 267 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 267 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 117
    RESTA           shift and go to state 118
    MULTI           shift and go to state 119
    DIV             shift and go to state 120
    DIVENTERO       shift and go to state 121
    MOD             shift and go to state 122

    operadorMat                    shift and go to state 123

state 207

    (264) valorDouble -> DOUBLE .

    SUMA            reduce using rule 264 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 264 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 264 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 264 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 264 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 264 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 264 (valorDouble -> DOUBLE .)
    AND             reduce using rule 264 (valorDouble -> DOUBLE .)
    OR              reduce using rule 264 (valorDouble -> DOUBLE .)
    PDER            reduce using rule 264 (valorDouble -> DOUBLE .)


state 208

    (260) valorInt -> ENTERO .

    SUMA            reduce using rule 260 (valorInt -> ENTERO .)
    RESTA           reduce using rule 260 (valorInt -> ENTERO .)
    MULTI           reduce using rule 260 (valorInt -> ENTERO .)
    DIV             reduce using rule 260 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 260 (valorInt -> ENTERO .)
    MOD             reduce using rule 260 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 260 (valorInt -> ENTERO .)
    AND             reduce using rule 260 (valorInt -> ENTERO .)
    OR              reduce using rule 260 (valorInt -> ENTERO .)
    PDER            reduce using rule 260 (valorInt -> ENTERO .)


state 209

    (258) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO PDER
    (259) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 334


state 210

    (132) expresionLista -> VARIABLE CIZQ ENTERO . CDER

    CDER            shift and go to state 335


state 211

    (133) expresionLista -> VARIABLE FUNCIONTAKE PIZQ . ENTERO PDER
    (97) expresionSet -> VARIABLE FUNCIONTAKE PIZQ . ENTERO PDER

    ENTERO          shift and go to state 336


state 212

    (134) expresionLista -> VARIABLE FUNCIONRANGE PIZQ . ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 337


state 213

    (203) valor -> VARIABLE .
    (238) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (239) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (250) valorString -> VARIABLE .
    (261) valorInt -> VARIABLE .
    (236) valorBool -> VARIABLE .
    (258) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (274) comparadorMat -> . DIGUAL
    (275) comparadorMat -> . NOIGUAL
    (276) comparadorMat -> . MAYOR
    (277) comparadorMat -> . MENOR
    (278) comparadorMat -> . MAYIGUAL
    (279) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 203 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 203 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 203 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 203 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 203 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 203 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 203 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 203 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 203 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 203 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 203 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 203 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 203 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IS              reduce using rule 203 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 203 (valor -> VARIABLE .)
    SUMA            reduce using rule 203 (valor -> VARIABLE .)
    RESTA           reduce using rule 203 (valor -> VARIABLE .)
    MULTI           reduce using rule 203 (valor -> VARIABLE .)
    DIV             reduce using rule 203 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 203 (valor -> VARIABLE .)
    MOD             reduce using rule 203 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 203 (valor -> VARIABLE .)
    PDER            reduce using rule 203 (valor -> VARIABLE .)
    CIZQ            reduce using rule 250 (valorString -> VARIABLE .)
    AND             reduce using rule 236 (valorBool -> VARIABLE .)
    OR              reduce using rule 236 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 92
    DIGUAL          shift and go to state 97
    NOIGUAL         shift and go to state 98
    MAYOR           shift and go to state 99
    MENOR           shift and go to state 100
    MAYIGUAL        shift and go to state 101
    MENIGUAL        shift and go to state 102

  ! SUMA            [ reduce using rule 250 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 250 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 250 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 236 (valorBool -> VARIABLE .) ]
  ! PDER            [ reduce using rule 236 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 331

state 214

    (183) asignacionSimple -> VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 183 (asignacionSimple -> VARIABLE IGUAL expresion .)
    PDER            reduce using rule 183 (asignacionSimple -> VARIABLE IGUAL expresion .)


state 215

    (206) expresion -> valor . operadorMat expresion
    (207) expresion -> valor .
    (244) expresionBool -> valor . IS objeto
    (245) expresionBool -> valor . ISNEGADO objeto
    (268) operadorMat -> . SUMA
    (269) operadorMat -> . RESTA
    (270) operadorMat -> . MULTI
    (271) operadorMat -> . DIV
    (272) operadorMat -> . DIVENTERO
    (273) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 207 (expresion -> valor .)
    PDER            reduce using rule 207 (expresion -> valor .)
    IS              shift and go to state 127
    ISNEGADO        shift and go to state 128
    SUMA            shift and go to state 117
    RESTA           shift and go to state 118
    MULTI           shift and go to state 119
    DIV             shift and go to state 120
    DIVENTERO       shift and go to state 121
    MOD             shift and go to state 122

    operadorMat                    shift and go to state 338

state 216

    (208) expresion -> expresionString .

    PUNTOYCOMA      reduce using rule 208 (expresion -> expresionString .)
    PDER            reduce using rule 208 (expresion -> expresionString .)


state 217

    (209) expresion -> expresionInt .

    PUNTOYCOMA      reduce using rule 209 (expresion -> expresionInt .)
    PDER            reduce using rule 209 (expresion -> expresionInt .)


state 218

    (210) expresion -> expresionDouble .

    PUNTOYCOMA      reduce using rule 210 (expresion -> expresionDouble .)
    PDER            reduce using rule 210 (expresion -> expresionDouble .)


state 219

    (211) expresion -> expresionBool .
    (247) comparacionBool -> expresionBool . operadorLogico expresionBool
    (248) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (280) operadorLogico -> . AND
    (281) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 211 (expresion -> expresionBool .)
    PDER            reduce using rule 211 (expresion -> expresionBool .)
    AND             shift and go to state 69
    OR              shift and go to state 70

    operadorLogico                 shift and go to state 68

state 220

    (204) valor -> DOUBLE .
    (264) valorDouble -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 204 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 204 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 204 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 204 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 204 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 204 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 204 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PDER resolved using rule 204 (valor -> DOUBLE .)
    IS              reduce using rule 204 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 204 (valor -> DOUBLE .)
    SUMA            reduce using rule 204 (valor -> DOUBLE .)
    RESTA           reduce using rule 204 (valor -> DOUBLE .)
    MULTI           reduce using rule 204 (valor -> DOUBLE .)
    DIV             reduce using rule 204 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 204 (valor -> DOUBLE .)
    MOD             reduce using rule 204 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 204 (valor -> DOUBLE .)
    PDER            reduce using rule 204 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 264 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 264 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 264 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 264 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 264 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 264 (valorDouble -> DOUBLE .)

  ! SUMA            [ reduce using rule 264 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 264 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 264 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 264 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 264 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 264 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 264 (valorDouble -> DOUBLE .) ]
  ! PDER            [ reduce using rule 264 (valorDouble -> DOUBLE .) ]


state 221

    (205) valor -> STRING .
    (249) valorString -> STRING .
    (254) valorString -> STRING . CIZQ ENTERO CDER

  ! reduce/reduce conflict for SUMA resolved using rule 205 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 205 (valor -> STRING .)
  ! reduce/reduce conflict for PDER resolved using rule 205 (valor -> STRING .)
  ! shift/reduce conflict for CIZQ resolved as shift
    IS              reduce using rule 205 (valor -> STRING .)
    ISNEGADO        reduce using rule 205 (valor -> STRING .)
    SUMA            reduce using rule 205 (valor -> STRING .)
    RESTA           reduce using rule 205 (valor -> STRING .)
    MULTI           reduce using rule 205 (valor -> STRING .)
    DIV             reduce using rule 205 (valor -> STRING .)
    DIVENTERO       reduce using rule 205 (valor -> STRING .)
    MOD             reduce using rule 205 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 205 (valor -> STRING .)
    PDER            reduce using rule 205 (valor -> STRING .)
    CIZQ            shift and go to state 173

  ! SUMA            [ reduce using rule 249 (valorString -> STRING .) ]
  ! CIZQ            [ reduce using rule 249 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 249 (valorString -> STRING .) ]
  ! PDER            [ reduce using rule 249 (valorString -> STRING .) ]


state 222

    (266) expresionDouble -> valorDouble . operadorMat expresionDouble
    (267) expresionDouble -> valorDouble .
    (237) expresionBool -> valorDouble . comparadorMat expresionDouble
    (240) expresionBool -> valorDouble . comparadorMat VARIABLE
    (268) operadorMat -> . SUMA
    (269) operadorMat -> . RESTA
    (270) operadorMat -> . MULTI
    (271) operadorMat -> . DIV
    (272) operadorMat -> . DIVENTERO
    (273) operadorMat -> . MOD
    (274) comparadorMat -> . DIGUAL
    (275) comparadorMat -> . NOIGUAL
    (276) comparadorMat -> . MAYOR
    (277) comparadorMat -> . MENOR
    (278) comparadorMat -> . MAYIGUAL
    (279) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 267 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 267 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 117
    RESTA           shift and go to state 118
    MULTI           shift and go to state 119
    DIV             shift and go to state 120
    DIVENTERO       shift and go to state 121
    MOD             shift and go to state 122
    DIGUAL          shift and go to state 97
    NOIGUAL         shift and go to state 98
    MAYOR           shift and go to state 99
    MENOR           shift and go to state 100
    MAYIGUAL        shift and go to state 101
    MENIGUAL        shift and go to state 102

    operadorMat                    shift and go to state 123
    comparadorMat                  shift and go to state 330

state 223

    (243) expresionBool -> comparacionBool .

    AND             reduce using rule 243 (expresionBool -> comparacionBool .)
    OR              reduce using rule 243 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 243 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 243 (expresionBool -> comparacionBool .)


state 224

    (251) valorString -> FUNCIONSTDIN .

    SUMA            reduce using rule 251 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 251 (valorString -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 251 (valorString -> FUNCIONSTDIN .)
    PDER            reduce using rule 251 (valorString -> FUNCIONSTDIN .)


state 225

    (253) valorString -> sentenciaSubstring .

    SUMA            reduce using rule 253 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 253 (valorString -> sentenciaSubstring .)
    PUNTOYCOMA      reduce using rule 253 (valorString -> sentenciaSubstring .)
    PDER            reduce using rule 253 (valorString -> sentenciaSubstring .)


state 226

    (52) final -> expresionLista PUNTOYCOMA final .

    $end            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    VARIABLE        reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    INT             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DOUBLER         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NUM             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    STRINGR         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    BOOLR           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    VAR             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    WHILE           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DO              reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    IF              reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ELSE            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    PRINT           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NOT             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ELSEIF          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FOR             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LIST            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    CIZQ            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NEWLIST         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    SET             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    SETFROM         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    MAP             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LIZQ            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    SWITCH          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    BOOL            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ENTERO          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DOUBLE          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    STRING          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LDER            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    BREAK           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)


state 227

    (54) final -> expresionNewList PUNTOYCOMA final .

    $end            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    VARIABLE        reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    INT             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DOUBLER         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NUM             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    STRINGR         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    BOOLR           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    VAR             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    WHILE           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DO              reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    IF              reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ELSE            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    PRINT           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NOT             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ELSEIF          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FOR             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LIST            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    CIZQ            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NEWLIST         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    SET             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    SETFROM         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    MAP             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LIZQ            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    SWITCH          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    BOOL            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ENTERO          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DOUBLE          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    STRING          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LDER            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    BREAK           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)


state 228

    (56) final -> expresionSet PUNTOYCOMA final .

    $end            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    VARIABLE        reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    INT             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DOUBLER         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    NUM             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    STRINGR         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    BOOLR           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    VAR             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    WHILE           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DO              reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    IF              reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    ELSE            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    PRINT           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    NOT             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    ELSEIF          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    FOR             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    LIST            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    CIZQ            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    NEWLIST         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    SET             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    SETFROM         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    MAP             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    LIZQ            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    SWITCH          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    BOOL            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    ENTERO          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DOUBLE          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    STRING          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    LDER            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    BREAK           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)


state 229

    (58) final -> expresionMap PUNTOYCOMA final .

    $end            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    VARIABLE        reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    INT             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    DOUBLER         reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    NUM             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    STRINGR         reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    BOOLR           reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    VAR             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    WHILE           reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    DO              reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    IF              reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    ELSE            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    PRINT           reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    NOT             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    ELSEIF          reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    FOR             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    LIST            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    CIZQ            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    NEWLIST         reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    SET             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    SETFROM         reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    MAP             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    LIZQ            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    SWITCH          reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    BOOL            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    ENTERO          reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    DOUBLE          reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    STRING          reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    LDER            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    BREAK           reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)


state 230

    (60) final -> expresionSwitch PUNTOYCOMA final .

    $end            reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    VARIABLE        reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    INT             reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    DOUBLER         reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    NUM             reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    STRINGR         reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    BOOLR           reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    VAR             reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    WHILE           reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    DO              reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    IF              reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    ELSE            reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    PRINT           reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    NOT             reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    ELSEIF          reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    FOR             reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    LIST            reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    CIZQ            reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    NEWLIST         reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    SET             reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    SETFROM         reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    MAP             reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    LIZQ            reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    SWITCH          reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    BOOL            reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    ENTERO          reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    DOUBLE          reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    STRING          reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    LDER            reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)
    BREAK           reduce using rule 60 (final -> expresionSwitch PUNTOYCOMA final .)


state 231

    (62) final -> declaracionSimple PUNTOYCOMA final .

    $end            reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    VARIABLE        reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    INT             reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    DOUBLER         reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    NUM             reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    STRINGR         reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    BOOLR           reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    VAR             reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    WHILE           reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    DO              reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    IF              reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    ELSE            reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    PRINT           reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    NOT             reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    ELSEIF          reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    FOR             reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    LIST            reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    CIZQ            reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    NEWLIST         reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    SET             reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    SETFROM         reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    MAP             reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    LIZQ            reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    SWITCH          reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    BOOL            reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    ENTERO          reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    DOUBLE          reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    STRING          reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    LDER            reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)
    BREAK           reduce using rule 62 (final -> declaracionSimple PUNTOYCOMA final .)


state 232

    (175) asignacion -> INT VARIABLE IGUAL . expresionInt
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE

    ENTERO          shift and go to state 208
    VARIABLE        shift and go to state 241

    expresionInt                   shift and go to state 339
    valorInt                       shift and go to state 239

state 233

    (176) asignacion -> DOUBLER VARIABLE IGUAL . expresionDouble
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 207
    ENTERO          shift and go to state 208
    VARIABLE        shift and go to state 241

    expresionDouble                shift and go to state 340
    valorDouble                    shift and go to state 206
    valorInt                       shift and go to state 185

state 234

    (177) asignacion -> NUM VARIABLE IGUAL . expresionDouble
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 207
    ENTERO          shift and go to state 208
    VARIABLE        shift and go to state 241

    expresionDouble                shift and go to state 341
    valorDouble                    shift and go to state 206
    valorInt                       shift and go to state 185

state 235

    (178) asignacion -> STRINGR VARIABLE IGUAL . expresionString
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 246
    VARIABLE        shift and go to state 247
    FUNCIONSTDIN    shift and go to state 224

    expresionString                shift and go to state 342
    valorString                    shift and go to state 37
    expresionIndexString           shift and go to state 62
    sentenciaSubstring             shift and go to state 225

state 236

    (179) asignacion -> BOOLR VARIABLE IGUAL . expresionBool
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 182
    DOUBLE          shift and go to state 60
    BOOL            shift and go to state 186
    NOT             shift and go to state 48
    ENTERO          shift and go to state 187
    STRING          shift and go to state 188

    expresionBool                  shift and go to state 343
    valorDouble                    shift and go to state 181
    valorBool                      shift and go to state 183
    negacionBool                   shift and go to state 184
    comparacionBool                shift and go to state 223
    valor                          shift and go to state 39
    valorInt                       shift and go to state 185

state 237

    (180) asignacion -> DYNAMIC VARIABLE IGUAL . expresion
    (206) expresion -> . valor operadorMat expresion
    (207) expresion -> . valor
    (208) expresion -> . expresionString
    (209) expresion -> . expresionInt
    (210) expresion -> . expresionDouble
    (211) expresion -> . expresionBool
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 187
    VARIABLE        shift and go to state 213
    DOUBLE          shift and go to state 220
    STRING          shift and go to state 221
    FUNCIONSTDIN    shift and go to state 224
    BOOL            shift and go to state 186
    NOT             shift and go to state 48

    expresion                      shift and go to state 344
    valor                          shift and go to state 215
    expresionString                shift and go to state 216
    expresionInt                   shift and go to state 217
    expresionDouble                shift and go to state 218
    expresionBool                  shift and go to state 219
    valorString                    shift and go to state 37
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 222
    valorBool                      shift and go to state 183
    negacionBool                   shift and go to state 184
    comparacionBool                shift and go to state 223
    expresionIndexString           shift and go to state 62
    sentenciaSubstring             shift and go to state 225

state 238

    (181) asignacion -> VAR VARIABLE IGUAL . expresion
    (206) expresion -> . valor operadorMat expresion
    (207) expresion -> . valor
    (208) expresion -> . expresionString
    (209) expresion -> . expresionInt
    (210) expresion -> . expresionDouble
    (211) expresion -> . expresionBool
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 187
    VARIABLE        shift and go to state 213
    DOUBLE          shift and go to state 220
    STRING          shift and go to state 221
    FUNCIONSTDIN    shift and go to state 224
    BOOL            shift and go to state 186
    NOT             shift and go to state 48

    expresion                      shift and go to state 345
    valor                          shift and go to state 215
    expresionString                shift and go to state 216
    expresionInt                   shift and go to state 217
    expresionDouble                shift and go to state 218
    expresionBool                  shift and go to state 219
    valorString                    shift and go to state 37
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 222
    valorBool                      shift and go to state 183
    negacionBool                   shift and go to state 184
    comparacionBool                shift and go to state 223
    expresionIndexString           shift and go to state 62
    sentenciaSubstring             shift and go to state 225

state 239

    (262) expresionInt -> valorInt . operadorMat expresionInt
    (263) expresionInt -> valorInt .
    (268) operadorMat -> . SUMA
    (269) operadorMat -> . RESTA
    (270) operadorMat -> . MULTI
    (271) operadorMat -> . DIV
    (272) operadorMat -> . DIVENTERO
    (273) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 263 (expresionInt -> valorInt .)
    PDER            reduce using rule 263 (expresionInt -> valorInt .)
    SUMA            shift and go to state 117
    RESTA           shift and go to state 118
    MULTI           shift and go to state 119
    DIV             shift and go to state 120
    DIVENTERO       shift and go to state 121
    MOD             shift and go to state 122

    operadorMat                    shift and go to state 116

state 240

    (262) expresionInt -> valorInt operadorMat expresionInt .

    PUNTOYCOMA      reduce using rule 262 (expresionInt -> valorInt operadorMat expresionInt .)
    PDER            reduce using rule 262 (expresionInt -> valorInt operadorMat expresionInt .)


state 241

    (261) valorInt -> VARIABLE .

    SUMA            reduce using rule 261 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 261 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 261 (valorInt -> VARIABLE .)
    DIV             reduce using rule 261 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 261 (valorInt -> VARIABLE .)
    MOD             reduce using rule 261 (valorInt -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 261 (valorInt -> VARIABLE .)
    PDER            reduce using rule 261 (valorInt -> VARIABLE .)
    AND             reduce using rule 261 (valorInt -> VARIABLE .)
    OR              reduce using rule 261 (valorInt -> VARIABLE .)


state 242

    (266) expresionDouble -> valorDouble operadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 266 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    AND             reduce using rule 266 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    OR              reduce using rule 266 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PDER            reduce using rule 266 (expresionDouble -> valorDouble operadorMat expresionDouble .)


state 243

    (237) expresionBool -> valorDouble comparadorMat expresionDouble .
    (221) expresionBoolFor -> valorDouble comparadorMat expresionDouble .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 221 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 237 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 237 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 221 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 237 (expresionBool -> valorDouble comparadorMat expresionDouble .) ]


state 244

    (240) expresionBool -> valorDouble comparadorMat VARIABLE .
    (224) expresionBoolFor -> valorDouble comparadorMat VARIABLE .
    (261) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 224 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 224 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 240 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 240 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 240 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 240 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 224 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 261 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 261 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 261 (valorInt -> VARIABLE .)
    DIV             reduce using rule 261 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 261 (valorInt -> VARIABLE .)
    MOD             reduce using rule 261 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 240 (expresionBool -> valorDouble comparadorMat VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 261 (valorInt -> VARIABLE .) ]


state 245

    (255) expresionString -> valorString SUMA expresionString .

    PUNTOYCOMA      reduce using rule 255 (expresionString -> valorString SUMA expresionString .)
    PDER            reduce using rule 255 (expresionString -> valorString SUMA expresionString .)


state 246

    (249) valorString -> STRING .
    (254) valorString -> STRING . CIZQ ENTERO CDER

  ! shift/reduce conflict for CIZQ resolved as shift
    SUMA            reduce using rule 249 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 249 (valorString -> STRING .)
    PDER            reduce using rule 249 (valorString -> STRING .)
    CIZQ            shift and go to state 173

  ! CIZQ            [ reduce using rule 249 (valorString -> STRING .) ]


state 247

    (250) valorString -> VARIABLE .
    (258) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    SUMA            reduce using rule 250 (valorString -> VARIABLE .)
    CIZQ            reduce using rule 250 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 250 (valorString -> VARIABLE .)
    PDER            reduce using rule 250 (valorString -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 92


state 248

    (257) expresionIndexString -> valorString CIZQ ENTERO . CDER

    CDER            shift and go to state 346


state 249

    (244) expresionBool -> valor IS objeto .

    PUNTOYCOMA      reduce using rule 244 (expresionBool -> valor IS objeto .)
    AND             reduce using rule 244 (expresionBool -> valor IS objeto .)
    OR              reduce using rule 244 (expresionBool -> valor IS objeto .)
    PDER            reduce using rule 244 (expresionBool -> valor IS objeto .)


state 250

    (282) objeto -> STRINGR .

    PUNTOYCOMA      reduce using rule 282 (objeto -> STRINGR .)
    AND             reduce using rule 282 (objeto -> STRINGR .)
    OR              reduce using rule 282 (objeto -> STRINGR .)
    PDER            reduce using rule 282 (objeto -> STRINGR .)


state 251

    (283) objeto -> INT .

    PUNTOYCOMA      reduce using rule 283 (objeto -> INT .)
    AND             reduce using rule 283 (objeto -> INT .)
    OR              reduce using rule 283 (objeto -> INT .)
    PDER            reduce using rule 283 (objeto -> INT .)


state 252

    (284) objeto -> DOUBLER .

    PUNTOYCOMA      reduce using rule 284 (objeto -> DOUBLER .)
    AND             reduce using rule 284 (objeto -> DOUBLER .)
    OR              reduce using rule 284 (objeto -> DOUBLER .)
    PDER            reduce using rule 284 (objeto -> DOUBLER .)


state 253

    (285) objeto -> NUM .

    PUNTOYCOMA      reduce using rule 285 (objeto -> NUM .)
    AND             reduce using rule 285 (objeto -> NUM .)
    OR              reduce using rule 285 (objeto -> NUM .)
    PDER            reduce using rule 285 (objeto -> NUM .)


state 254

    (286) objeto -> VAR .

    PUNTOYCOMA      reduce using rule 286 (objeto -> VAR .)
    AND             reduce using rule 286 (objeto -> VAR .)
    OR              reduce using rule 286 (objeto -> VAR .)
    PDER            reduce using rule 286 (objeto -> VAR .)


state 255

    (287) objeto -> DYNAMIC .

    PUNTOYCOMA      reduce using rule 287 (objeto -> DYNAMIC .)
    AND             reduce using rule 287 (objeto -> DYNAMIC .)
    OR              reduce using rule 287 (objeto -> DYNAMIC .)
    PDER            reduce using rule 287 (objeto -> DYNAMIC .)


state 256

    (288) objeto -> LIST .

    PUNTOYCOMA      reduce using rule 288 (objeto -> LIST .)
    AND             reduce using rule 288 (objeto -> LIST .)
    OR              reduce using rule 288 (objeto -> LIST .)
    PDER            reduce using rule 288 (objeto -> LIST .)


state 257

    (289) objeto -> BOOLR .

    PUNTOYCOMA      reduce using rule 289 (objeto -> BOOLR .)
    AND             reduce using rule 289 (objeto -> BOOLR .)
    OR              reduce using rule 289 (objeto -> BOOLR .)
    PDER            reduce using rule 289 (objeto -> BOOLR .)


state 258

    (290) objeto -> MAP .

    PUNTOYCOMA      reduce using rule 290 (objeto -> MAP .)
    AND             reduce using rule 290 (objeto -> MAP .)
    OR              reduce using rule 290 (objeto -> MAP .)
    PDER            reduce using rule 290 (objeto -> MAP .)


state 259

    (291) objeto -> SET .

    PUNTOYCOMA      reduce using rule 291 (objeto -> SET .)
    AND             reduce using rule 291 (objeto -> SET .)
    OR              reduce using rule 291 (objeto -> SET .)
    PDER            reduce using rule 291 (objeto -> SET .)


state 260

    (245) expresionBool -> valor ISNEGADO objeto .

    PUNTOYCOMA      reduce using rule 245 (expresionBool -> valor ISNEGADO objeto .)
    AND             reduce using rule 245 (expresionBool -> valor ISNEGADO objeto .)
    OR              reduce using rule 245 (expresionBool -> valor ISNEGADO objeto .)
    PDER            reduce using rule 245 (expresionBool -> valor ISNEGADO objeto .)


state 261

    (232) sentenciaWhile -> WHILE PIZQ expresionBool . PDER LIZQ final LDER
    (233) sentenciaWhile -> WHILE PIZQ expresionBool . PDER final
    (247) comparacionBool -> expresionBool . operadorLogico expresionBool
    (248) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (280) operadorLogico -> . AND
    (281) operadorLogico -> . OR

    PDER            shift and go to state 347
    AND             shift and go to state 69
    OR              shift and go to state 70

    operadorLogico                 shift and go to state 68

state 262

    (90) claveValor -> LIZQ LDER .

    DOSPUNTOS       reduce using rule 90 (claveValor -> LIZQ LDER .)
    COMA            reduce using rule 90 (claveValor -> LIZQ LDER .)
    LDER            reduce using rule 90 (claveValor -> LIZQ LDER .)


state 263

    (91) claveValor -> LIZQ expMap . LDER

    LDER            shift and go to state 348


state 264

    (77) expresionMap -> LIZQ expMap LDER .

    PUNTOYCOMA      reduce using rule 77 (expresionMap -> LIZQ expMap LDER .)


state 265

    (78) expMap -> claveValor DOSPUNTOS . claveValor
    (79) expMap -> claveValor DOSPUNTOS . claveValor COMA expMap
    (80) claveValor -> . VARIABLE
    (81) claveValor -> . STRING
    (82) claveValor -> . ENTERO
    (83) claveValor -> . DOUBLE
    (84) claveValor -> . BOOL
    (85) claveValor -> . CIZQ expListDynamic CDER
    (86) claveValor -> . CIZQ expListSet CDER
    (87) claveValor -> . expresionNewList
    (88) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (89) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) claveValor -> . LIZQ LDER
    (91) claveValor -> . LIZQ expMap LDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER

    VARIABLE        shift and go to state 134
    STRING          shift and go to state 135
    ENTERO          shift and go to state 136
    DOUBLE          shift and go to state 137
    BOOL            shift and go to state 138
    CIZQ            shift and go to state 139
    SETFROM         shift and go to state 141
    LIZQ            shift and go to state 130
    NEWLIST         shift and go to state 56

    claveValor                     shift and go to state 349
    expresionNewList               shift and go to state 140

state 266

    (85) claveValor -> CIZQ expListDynamic . CDER

    CDER            shift and go to state 350


state 267

    (86) claveValor -> CIZQ expListSet . CDER

    CDER            shift and go to state 351


state 268

    (153) expListDynamic -> STRING .
    (157) expListDynamic -> STRING . COMA expListDynamic

    CDER            reduce using rule 153 (expListDynamic -> STRING .)
    COMA            shift and go to state 352


state 269

    (154) expListDynamic -> ENTERO .
    (158) expListDynamic -> ENTERO . COMA expListDynamic

    CDER            reduce using rule 154 (expListDynamic -> ENTERO .)
    COMA            shift and go to state 353


state 270

    (155) expListDynamic -> DOUBLE .
    (159) expListDynamic -> DOUBLE . COMA expListDynamic

    CDER            reduce using rule 155 (expListDynamic -> DOUBLE .)
    COMA            shift and go to state 354


state 271

    (156) expListDynamic -> BOOL .
    (160) expListDynamic -> BOOL . COMA expListDynamic

    CDER            reduce using rule 156 (expListDynamic -> BOOL .)
    COMA            shift and go to state 355


state 272

    (161) expListDynamic -> VARIABLE .
    (162) expListDynamic -> VARIABLE . COMA expListDynamic
    (167) expListSet -> VARIABLE .
    (168) expListSet -> VARIABLE . COMA expListSet

  ! reduce/reduce conflict for CDER resolved using rule 161 (expListDynamic -> VARIABLE .)
    CDER            reduce using rule 161 (expListDynamic -> VARIABLE .)
    COMA            shift and go to state 356

  ! CDER            [ reduce using rule 167 (expListSet -> VARIABLE .) ]


state 273

    (88) claveValor -> SETFROM PIZQ . CIZQ CDER PDER
    (89) claveValor -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 357


state 274

    (234) sentenciaDoWhile -> DO LIZQ final . LDER WHILE PIZQ expresionBool PDER

    LDER            shift and go to state 358


state 275

    (196) sentenciaIf -> IF PIZQ expresionBool . PDER final
    (197) sentenciaIf -> IF PIZQ expresionBool . PDER LIZQ final LDER
    (247) comparacionBool -> expresionBool . operadorLogico expresionBool
    (248) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (280) operadorLogico -> . AND
    (281) operadorLogico -> . OR

    PDER            shift and go to state 359
    AND             shift and go to state 69
    OR              shift and go to state 70

    operadorLogico                 shift and go to state 68

state 276

    (75) expresionMap -> LIZQ . LDER
    (77) expresionMap -> LIZQ . expMap LDER
    (90) claveValor -> LIZQ . LDER
    (91) claveValor -> LIZQ . expMap LDER
    (78) expMap -> . claveValor DOSPUNTOS claveValor
    (79) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (80) claveValor -> . VARIABLE
    (81) claveValor -> . STRING
    (82) claveValor -> . ENTERO
    (83) claveValor -> . DOUBLE
    (84) claveValor -> . BOOL
    (85) claveValor -> . CIZQ expListDynamic CDER
    (86) claveValor -> . CIZQ expListSet CDER
    (87) claveValor -> . expresionNewList
    (88) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (89) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) claveValor -> . LIZQ LDER
    (91) claveValor -> . LIZQ expMap LDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 360
    VARIABLE        shift and go to state 134
    STRING          shift and go to state 135
    ENTERO          shift and go to state 136
    DOUBLE          shift and go to state 137
    BOOL            shift and go to state 138
    CIZQ            shift and go to state 139
    SETFROM         shift and go to state 141
    LIZQ            shift and go to state 130
    NEWLIST         shift and go to state 56

    expMap                         shift and go to state 361
    claveValor                     shift and go to state 133
    expresionNewList               shift and go to state 140

state 277

    (199) sentenciaElse -> ELSE LIZQ final . LDER

    LDER            shift and go to state 362


state 278

    (47) final -> VARIABLE . DSUMA PUNTOYCOMA final
    (48) final -> VARIABLE . DSUMA PUNTOYCOMA
    (49) final -> VARIABLE . DRESTA PUNTOYCOMA final
    (50) final -> VARIABLE . DRESTA PUNTOYCOMA
    (238) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (239) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (222) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (223) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (258) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (132) expresionLista -> VARIABLE . CIZQ ENTERO CDER
    (133) expresionLista -> VARIABLE . FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> VARIABLE . FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (97) expresionSet -> VARIABLE . FUNCIONTAKE PIZQ ENTERO PDER
    (80) claveValor -> VARIABLE .
    (183) asignacionSimple -> VARIABLE . IGUAL expresion
    (261) valorInt -> VARIABLE .
    (250) valorString -> VARIABLE .
    (236) valorBool -> VARIABLE .
    (203) valor -> VARIABLE .
    (274) comparadorMat -> . DIGUAL
    (275) comparadorMat -> . NOIGUAL
    (276) comparadorMat -> . MAYOR
    (277) comparadorMat -> . MENOR
    (278) comparadorMat -> . MAYIGUAL
    (279) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 250 (valorString -> VARIABLE .)
  ! shift/reduce conflict for CIZQ resolved as shift
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 250 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 236 (valorBool -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    DSUMA           shift and go to state 89
    DRESTA          shift and go to state 90
    FUNCIONSUBSTRING shift and go to state 92
    CIZQ            shift and go to state 93
    FUNCIONTAKE     shift and go to state 94
    FUNCIONRANGE    shift and go to state 95
    DOSPUNTOS       reduce using rule 80 (claveValor -> VARIABLE .)
    IGUAL           shift and go to state 96
    RESTA           reduce using rule 261 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 261 (valorInt -> VARIABLE .)
    DIV             reduce using rule 261 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 261 (valorInt -> VARIABLE .)
    MOD             reduce using rule 261 (valorInt -> VARIABLE .)
    SUMA            reduce using rule 250 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 236 (valorBool -> VARIABLE .)
    AND             reduce using rule 236 (valorBool -> VARIABLE .)
    OR              reduce using rule 236 (valorBool -> VARIABLE .)
    IS              reduce using rule 203 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 203 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 97
    NOIGUAL         shift and go to state 98
    MAYOR           shift and go to state 99
    MENOR           shift and go to state 100
    MAYIGUAL        shift and go to state 101
    MENIGUAL        shift and go to state 102

  ! SUMA            [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! CIZQ            [ reduce using rule 250 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 250 (valorString -> VARIABLE .) ]

    comparadorMat                  shift and go to state 91

state 279

    (53) final -> expresionNewList . PUNTOYCOMA
    (54) final -> expresionNewList . PUNTOYCOMA final
    (87) claveValor -> expresionNewList .

    PUNTOYCOMA      shift and go to state 104
    DOSPUNTOS       reduce using rule 87 (claveValor -> expresionNewList .)


state 280

    (82) claveValor -> ENTERO .
    (260) valorInt -> ENTERO .
    (202) valor -> ENTERO .

    DOSPUNTOS       reduce using rule 82 (claveValor -> ENTERO .)
    SUMA            reduce using rule 260 (valorInt -> ENTERO .)
    RESTA           reduce using rule 260 (valorInt -> ENTERO .)
    MULTI           reduce using rule 260 (valorInt -> ENTERO .)
    DIV             reduce using rule 260 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 260 (valorInt -> ENTERO .)
    MOD             reduce using rule 260 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 260 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 260 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 260 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 260 (valorInt -> ENTERO .)
    MENOR           reduce using rule 260 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 260 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 260 (valorInt -> ENTERO .)
    IS              reduce using rule 202 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 202 (valor -> ENTERO .)


state 281

    (104) expresionLista -> CIZQ . expListString CDER
    (108) expresionLista -> CIZQ . expListInt CDER
    (112) expresionLista -> CIZQ . expListNum CDER
    (119) expresionLista -> CIZQ . expListBool CDER
    (123) expresionLista -> CIZQ . expListDynamic CDER
    (127) expresionLista -> CIZQ . expListSet CDER
    (131) expresionLista -> CIZQ . expListMap CDER
    (100) expresionNewList -> CIZQ . CDER
    (85) claveValor -> CIZQ . expListDynamic CDER
    (86) claveValor -> CIZQ . expListSet CDER
    (135) expListString -> . STRING
    (136) expListString -> . STRING COMA expListString
    (137) expListString -> . VARIABLE
    (138) expListString -> . VARIABLE COMA expListString
    (139) expListInt -> . ENTERO
    (140) expListInt -> . ENTERO COMA expListInt
    (141) expListInt -> . VARIABLE
    (142) expListInt -> . VARIABLE COMA expListInt
    (143) expListNum -> . ENTERO
    (144) expListNum -> . DOUBLE
    (145) expListNum -> . ENTERO COMA expListNum
    (146) expListNum -> . DOUBLE COMA expListNum
    (147) expListNum -> . VARIABLE
    (148) expListNum -> . VARIABLE COMA expListNum
    (149) expListBool -> . BOOL
    (150) expListBool -> . BOOL COMA expListBool
    (151) expListBool -> . VARIABLE
    (152) expListBool -> . VARIABLE COMA expListBool
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic
    (163) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (164) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (165) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (166) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (167) expListSet -> . VARIABLE
    (168) expListSet -> . VARIABLE COMA expListSet
    (169) expListMap -> . LIZQ LDER
    (170) expListMap -> . LIZQ expMap LDER
    (171) expListMap -> . LIZQ LDER COMA expListMap
    (172) expListMap -> . LIZQ expMap LDER COMA expListMap
    (173) expListMap -> . VARIABLE
    (174) expListMap -> . VARIABLE COMA expListMap

    CDER            shift and go to state 153
    STRING          shift and go to state 160
    VARIABLE        shift and go to state 161
    ENTERO          shift and go to state 162
    DOUBLE          shift and go to state 163
    BOOL            shift and go to state 164
    SETFROM         shift and go to state 165
    LIZQ            shift and go to state 166

    expListString                  shift and go to state 152
    expListInt                     shift and go to state 154
    expListNum                     shift and go to state 155
    expListBool                    shift and go to state 156
    expListDynamic                 shift and go to state 363
    expListSet                     shift and go to state 364
    expListMap                     shift and go to state 159

state 282

    (93) expresionSet -> SETFROM . PIZQ CIZQ CDER PDER
    (95) expresionSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER
    (88) claveValor -> SETFROM . PIZQ CIZQ CDER PDER
    (89) claveValor -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 365


state 283

    (190) declaracionSimple -> BOOL . VARIABLE
    (84) claveValor -> BOOL .
    (235) valorBool -> BOOL .

    VARIABLE        shift and go to state 172
    DOSPUNTOS       reduce using rule 84 (claveValor -> BOOL .)
    PUNTOYCOMA      reduce using rule 235 (valorBool -> BOOL .)
    AND             reduce using rule 235 (valorBool -> BOOL .)
    OR              reduce using rule 235 (valorBool -> BOOL .)


state 284

    (81) claveValor -> STRING .
    (249) valorString -> STRING .
    (254) valorString -> STRING . CIZQ ENTERO CDER
    (205) valor -> STRING .

  ! shift/reduce conflict for CIZQ resolved as shift
    DOSPUNTOS       reduce using rule 81 (claveValor -> STRING .)
    SUMA            reduce using rule 249 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 249 (valorString -> STRING .)
    CIZQ            shift and go to state 173
    IS              reduce using rule 205 (valor -> STRING .)
    ISNEGADO        reduce using rule 205 (valor -> STRING .)

  ! CIZQ            [ reduce using rule 249 (valorString -> STRING .) ]


state 285

    (83) claveValor -> DOUBLE .
    (264) valorDouble -> DOUBLE .
    (204) valor -> DOUBLE .

    DOSPUNTOS       reduce using rule 83 (claveValor -> DOUBLE .)
    SUMA            reduce using rule 264 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 264 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 264 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 264 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 264 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 264 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 264 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 264 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 264 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 264 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 264 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 264 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 264 (valorDouble -> DOUBLE .)
    IS              reduce using rule 204 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 204 (valor -> DOUBLE .)


state 286

    (191) imprimir -> PRINT PIZQ expresion . PDER

    PDER            shift and go to state 366


state 287

    (192) imprimir -> PRINT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 367


state 288

    (183) asignacionSimple -> VARIABLE . IGUAL expresion
    (203) valor -> VARIABLE .
    (238) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (239) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (250) valorString -> VARIABLE .
    (261) valorInt -> VARIABLE .
    (236) valorBool -> VARIABLE .
    (258) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (274) comparadorMat -> . DIGUAL
    (275) comparadorMat -> . NOIGUAL
    (276) comparadorMat -> . MAYOR
    (277) comparadorMat -> . MENOR
    (278) comparadorMat -> . MAYIGUAL
    (279) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 203 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 203 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 203 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 203 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 203 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 203 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 203 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 203 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 203 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 203 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 96
    IS              reduce using rule 203 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 203 (valor -> VARIABLE .)
    SUMA            reduce using rule 203 (valor -> VARIABLE .)
    RESTA           reduce using rule 203 (valor -> VARIABLE .)
    MULTI           reduce using rule 203 (valor -> VARIABLE .)
    DIV             reduce using rule 203 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 203 (valor -> VARIABLE .)
    MOD             reduce using rule 203 (valor -> VARIABLE .)
    PDER            reduce using rule 203 (valor -> VARIABLE .)
    CIZQ            reduce using rule 250 (valorString -> VARIABLE .)
    AND             reduce using rule 236 (valorBool -> VARIABLE .)
    OR              reduce using rule 236 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 92
    DIGUAL          shift and go to state 97
    NOIGUAL         shift and go to state 98
    MAYOR           shift and go to state 99
    MENOR           shift and go to state 100
    MAYIGUAL        shift and go to state 101
    MENIGUAL        shift and go to state 102

  ! SUMA            [ reduce using rule 250 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 250 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 236 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 331

state 289

    (194) funcionStdout -> FUNCIONSTDOUT PIZQ expresion . PDER

    PDER            shift and go to state 368


state 290

    (195) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 369


state 291

    (246) negacionBool -> NOT PIZQ expresionBool . PDER
    (247) comparacionBool -> expresionBool . operadorLogico expresionBool
    (248) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (280) operadorLogico -> . AND
    (281) operadorLogico -> . OR

    PDER            shift and go to state 370
    AND             shift and go to state 69
    OR              shift and go to state 70

    operadorLogico                 shift and go to state 68

state 292

    (200) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER final
    (201) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER LIZQ final LDER
    (247) comparacionBool -> expresionBool . operadorLogico expresionBool
    (248) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (280) operadorLogico -> . AND
    (281) operadorLogico -> . OR

    PDER            shift and go to state 371
    AND             shift and go to state 69
    OR              shift and go to state 70

    operadorLogico                 shift and go to state 68

state 293

    (228) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final

    PUNTOYCOMA      shift and go to state 372


state 294

    (219) asignacionFor -> VARIABLE . IGUAL expresionInt
    (220) asignacionFor -> VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 373


state 295

    (212) asignacionFor -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 374


state 296

    (213) asignacionFor -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 375


state 297

    (214) asignacionFor -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 376


state 298

    (215) asignacionFor -> DYNAMIC . VARIABLE IGUAL expresionInt
    (216) asignacionFor -> DYNAMIC . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 377


state 299

    (217) asignacionFor -> VAR . VARIABLE IGUAL expresionInt
    (218) asignacionFor -> VAR . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 378


state 300

    (101) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE
    (102) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 379


state 301

    (105) expresionLista -> LIST MENOR INT . MAYOR VARIABLE
    (106) expresionLista -> LIST MENOR INT . MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> LIST MENOR INT . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 380


state 302

    (109) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE
    (110) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 381


state 303

    (113) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE
    (114) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 382


state 304

    (116) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE
    (117) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 383


state 305

    (120) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE
    (121) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 384


state 306

    (124) expresionLista -> LIST MENOR SET . MAYOR VARIABLE
    (125) expresionLista -> LIST MENOR SET . MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> LIST MENOR SET . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 385


state 307

    (128) expresionLista -> LIST MENOR MAP . MAYOR VARIABLE
    (129) expresionLista -> LIST MENOR MAP . MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> LIST MENOR MAP . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 386


state 308

    (104) expresionLista -> CIZQ expListString CDER .

    PUNTOYCOMA      reduce using rule 104 (expresionLista -> CIZQ expListString CDER .)


state 309

    (108) expresionLista -> CIZQ expListInt CDER .

    PUNTOYCOMA      reduce using rule 108 (expresionLista -> CIZQ expListInt CDER .)


state 310

    (112) expresionLista -> CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 112 (expresionLista -> CIZQ expListNum CDER .)


state 311

    (119) expresionLista -> CIZQ expListBool CDER .

    PUNTOYCOMA      reduce using rule 119 (expresionLista -> CIZQ expListBool CDER .)


state 312

    (123) expresionLista -> CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 123 (expresionLista -> CIZQ expListDynamic CDER .)


state 313

    (127) expresionLista -> CIZQ expListSet CDER .

    PUNTOYCOMA      reduce using rule 127 (expresionLista -> CIZQ expListSet CDER .)


state 314

    (131) expresionLista -> CIZQ expListMap CDER .

    PUNTOYCOMA      reduce using rule 131 (expresionLista -> CIZQ expListMap CDER .)


state 315

    (136) expListString -> STRING COMA . expListString
    (157) expListDynamic -> STRING COMA . expListDynamic
    (135) expListString -> . STRING
    (136) expListString -> . STRING COMA expListString
    (137) expListString -> . VARIABLE
    (138) expListString -> . VARIABLE COMA expListString
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 160
    VARIABLE        shift and go to state 389
    ENTERO          shift and go to state 269
    DOUBLE          shift and go to state 270
    BOOL            shift and go to state 271

    expListString                  shift and go to state 387
    expListDynamic                 shift and go to state 388

state 316

    (138) expListString -> VARIABLE COMA . expListString
    (142) expListInt -> VARIABLE COMA . expListInt
    (148) expListNum -> VARIABLE COMA . expListNum
    (152) expListBool -> VARIABLE COMA . expListBool
    (162) expListDynamic -> VARIABLE COMA . expListDynamic
    (168) expListSet -> VARIABLE COMA . expListSet
    (174) expListMap -> VARIABLE COMA . expListMap
    (135) expListString -> . STRING
    (136) expListString -> . STRING COMA expListString
    (137) expListString -> . VARIABLE
    (138) expListString -> . VARIABLE COMA expListString
    (139) expListInt -> . ENTERO
    (140) expListInt -> . ENTERO COMA expListInt
    (141) expListInt -> . VARIABLE
    (142) expListInt -> . VARIABLE COMA expListInt
    (143) expListNum -> . ENTERO
    (144) expListNum -> . DOUBLE
    (145) expListNum -> . ENTERO COMA expListNum
    (146) expListNum -> . DOUBLE COMA expListNum
    (147) expListNum -> . VARIABLE
    (148) expListNum -> . VARIABLE COMA expListNum
    (149) expListBool -> . BOOL
    (150) expListBool -> . BOOL COMA expListBool
    (151) expListBool -> . VARIABLE
    (152) expListBool -> . VARIABLE COMA expListBool
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic
    (163) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (164) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (165) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (166) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (167) expListSet -> . VARIABLE
    (168) expListSet -> . VARIABLE COMA expListSet
    (169) expListMap -> . LIZQ LDER
    (170) expListMap -> . LIZQ expMap LDER
    (171) expListMap -> . LIZQ LDER COMA expListMap
    (172) expListMap -> . LIZQ expMap LDER COMA expListMap
    (173) expListMap -> . VARIABLE
    (174) expListMap -> . VARIABLE COMA expListMap

    STRING          shift and go to state 160
    VARIABLE        shift and go to state 161
    ENTERO          shift and go to state 162
    DOUBLE          shift and go to state 163
    BOOL            shift and go to state 164
    SETFROM         shift and go to state 165
    LIZQ            shift and go to state 166

    expListString                  shift and go to state 390
    expListInt                     shift and go to state 391
    expListNum                     shift and go to state 392
    expListBool                    shift and go to state 393
    expListDynamic                 shift and go to state 394
    expListSet                     shift and go to state 395
    expListMap                     shift and go to state 396

state 317

    (140) expListInt -> ENTERO COMA . expListInt
    (145) expListNum -> ENTERO COMA . expListNum
    (158) expListDynamic -> ENTERO COMA . expListDynamic
    (139) expListInt -> . ENTERO
    (140) expListInt -> . ENTERO COMA expListInt
    (141) expListInt -> . VARIABLE
    (142) expListInt -> . VARIABLE COMA expListInt
    (143) expListNum -> . ENTERO
    (144) expListNum -> . DOUBLE
    (145) expListNum -> . ENTERO COMA expListNum
    (146) expListNum -> . DOUBLE COMA expListNum
    (147) expListNum -> . VARIABLE
    (148) expListNum -> . VARIABLE COMA expListNum
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 162
    VARIABLE        shift and go to state 400
    DOUBLE          shift and go to state 163
    STRING          shift and go to state 268
    BOOL            shift and go to state 271

    expListInt                     shift and go to state 397
    expListNum                     shift and go to state 398
    expListDynamic                 shift and go to state 399

state 318

    (146) expListNum -> DOUBLE COMA . expListNum
    (159) expListDynamic -> DOUBLE COMA . expListDynamic
    (143) expListNum -> . ENTERO
    (144) expListNum -> . DOUBLE
    (145) expListNum -> . ENTERO COMA expListNum
    (146) expListNum -> . DOUBLE COMA expListNum
    (147) expListNum -> . VARIABLE
    (148) expListNum -> . VARIABLE COMA expListNum
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 403
    DOUBLE          shift and go to state 163
    VARIABLE        shift and go to state 404
    STRING          shift and go to state 268
    BOOL            shift and go to state 271

    expListNum                     shift and go to state 401
    expListDynamic                 shift and go to state 402

state 319

    (150) expListBool -> BOOL COMA . expListBool
    (160) expListDynamic -> BOOL COMA . expListDynamic
    (149) expListBool -> . BOOL
    (150) expListBool -> . BOOL COMA expListBool
    (151) expListBool -> . VARIABLE
    (152) expListBool -> . VARIABLE COMA expListBool
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic

    BOOL            shift and go to state 164
    VARIABLE        shift and go to state 407
    STRING          shift and go to state 268
    ENTERO          shift and go to state 269
    DOUBLE          shift and go to state 270

    expListBool                    shift and go to state 405
    expListDynamic                 shift and go to state 406

state 320

    (163) expListSet -> SETFROM PIZQ . CIZQ CDER PDER
    (164) expListSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER
    (165) expListSet -> SETFROM PIZQ . CIZQ CDER PDER COMA expListSet
    (166) expListSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER COMA expListSet

    CIZQ            shift and go to state 408


state 321

    (169) expListMap -> LIZQ LDER .
    (171) expListMap -> LIZQ LDER . COMA expListMap

    CDER            reduce using rule 169 (expListMap -> LIZQ LDER .)
    COMA            shift and go to state 409


state 322

    (170) expListMap -> LIZQ expMap . LDER
    (172) expListMap -> LIZQ expMap . LDER COMA expListMap

    LDER            shift and go to state 410


state 323

    (94) expresionSet -> SET VARIABLE IGUAL . SETFROM PIZQ CIZQ CDER PDER
    (96) expresionSet -> SET VARIABLE IGUAL . SETFROM PIZQ CIZQ expListDynamic CDER PDER

    SETFROM         shift and go to state 411


state 324

    (74) expresionMap -> MAP VARIABLE IGUAL . LIZQ LDER
    (76) expresionMap -> MAP VARIABLE IGUAL . LIZQ expMap LDER

    LIZQ            shift and go to state 412


state 325

    (98) expresionNewList -> NEWLIST PIZQ PDER .

    PUNTOYCOMA      reduce using rule 98 (expresionNewList -> NEWLIST PIZQ PDER .)
    DOSPUNTOS       reduce using rule 98 (expresionNewList -> NEWLIST PIZQ PDER .)
    COMA            reduce using rule 98 (expresionNewList -> NEWLIST PIZQ PDER .)
    LDER            reduce using rule 98 (expresionNewList -> NEWLIST PIZQ PDER .)


state 326

    (99) expresionNewList -> NEWLIST PIZQ ENTERO . PDER

    PDER            shift and go to state 413


state 327

    (93) expresionSet -> SETFROM PIZQ CIZQ . CDER PDER
    (95) expresionSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 414
    STRING          shift and go to state 268
    ENTERO          shift and go to state 269
    DOUBLE          shift and go to state 270
    BOOL            shift and go to state 271
    VARIABLE        shift and go to state 416

    expListDynamic                 shift and go to state 415

state 328

    (63) expresionSwitch -> SWITCH PIZQ VARIABLE . PDER LIZQ cases LDER

    PDER            shift and go to state 417


state 329

    (254) valorString -> STRING CIZQ ENTERO . CDER

    CDER            shift and go to state 418


state 330

    (237) expresionBool -> valorDouble comparadorMat . expresionDouble
    (240) expresionBool -> valorDouble comparadorMat . VARIABLE
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 420
    DOUBLE          shift and go to state 207
    ENTERO          shift and go to state 208

    valorDouble                    shift and go to state 206
    expresionDouble                shift and go to state 419
    valorInt                       shift and go to state 185

state 331

    (238) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (239) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 421
    DOUBLE          shift and go to state 207
    ENTERO          shift and go to state 208

    expresionDouble                shift and go to state 422
    valorDouble                    shift and go to state 206
    valorInt                       shift and go to state 185

state 332

    (47) final -> VARIABLE DSUMA PUNTOYCOMA final .

    $end            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    VARIABLE        reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    INT             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DOUBLER         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NUM             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    STRINGR         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BOOLR           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    VAR             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    WHILE           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DO              reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    IF              reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ELSE            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    PRINT           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NOT             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ELSEIF          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FOR             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LIST            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    CIZQ            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NEWLIST         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    SET             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    SETFROM         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    MAP             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LIZQ            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    SWITCH          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BOOL            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ENTERO          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DOUBLE          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    STRING          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LDER            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BREAK           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)


state 333

    (49) final -> VARIABLE DRESTA PUNTOYCOMA final .

    $end            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    VARIABLE        reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    INT             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DOUBLER         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NUM             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    STRINGR         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BOOLR           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    VAR             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    WHILE           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DO              reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    IF              reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ELSE            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    PRINT           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NOT             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ELSEIF          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FOR             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LIST            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    CIZQ            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NEWLIST         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    SET             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    SETFROM         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    MAP             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LIZQ            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    SWITCH          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BOOL            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ENTERO          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DOUBLE          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    STRING          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LDER            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BREAK           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)


state 334

    (258) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . PDER
    (259) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . COMA ENTERO PDER

    PDER            shift and go to state 423
    COMA            shift and go to state 424


state 335

    (132) expresionLista -> VARIABLE CIZQ ENTERO CDER .

    PUNTOYCOMA      reduce using rule 132 (expresionLista -> VARIABLE CIZQ ENTERO CDER .)


state 336

    (133) expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO . PDER
    (97) expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO . PDER

    PDER            shift and go to state 425


state 337

    (134) expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO . COMA ENTERO PDER

    COMA            shift and go to state 426


state 338

    (206) expresion -> valor operadorMat . expresion
    (206) expresion -> . valor operadorMat expresion
    (207) expresion -> . valor
    (208) expresion -> . expresionString
    (209) expresion -> . expresionInt
    (210) expresion -> . expresionDouble
    (211) expresion -> . expresionBool
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 187
    VARIABLE        shift and go to state 213
    DOUBLE          shift and go to state 220
    STRING          shift and go to state 221
    FUNCIONSTDIN    shift and go to state 224
    BOOL            shift and go to state 186
    NOT             shift and go to state 48

    valor                          shift and go to state 215
    expresion                      shift and go to state 427
    expresionString                shift and go to state 216
    expresionInt                   shift and go to state 217
    expresionDouble                shift and go to state 218
    expresionBool                  shift and go to state 219
    valorString                    shift and go to state 37
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 222
    valorBool                      shift and go to state 183
    negacionBool                   shift and go to state 184
    comparacionBool                shift and go to state 223
    expresionIndexString           shift and go to state 62
    sentenciaSubstring             shift and go to state 225

state 339

    (175) asignacion -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 175 (asignacion -> INT VARIABLE IGUAL expresionInt .)


state 340

    (176) asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 176 (asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 341

    (177) asignacion -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 177 (asignacion -> NUM VARIABLE IGUAL expresionDouble .)


state 342

    (178) asignacion -> STRINGR VARIABLE IGUAL expresionString .

    PUNTOYCOMA      reduce using rule 178 (asignacion -> STRINGR VARIABLE IGUAL expresionString .)


state 343

    (179) asignacion -> BOOLR VARIABLE IGUAL expresionBool .
    (247) comparacionBool -> expresionBool . operadorLogico expresionBool
    (248) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (280) operadorLogico -> . AND
    (281) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 179 (asignacion -> BOOLR VARIABLE IGUAL expresionBool .)
    AND             shift and go to state 69
    OR              shift and go to state 70

    operadorLogico                 shift and go to state 68

state 344

    (180) asignacion -> DYNAMIC VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 180 (asignacion -> DYNAMIC VARIABLE IGUAL expresion .)


state 345

    (181) asignacion -> VAR VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 181 (asignacion -> VAR VARIABLE IGUAL expresion .)


state 346

    (257) expresionIndexString -> valorString CIZQ ENTERO CDER .

    SUMA            reduce using rule 257 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    CIZQ            reduce using rule 257 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PUNTOYCOMA      reduce using rule 257 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PDER            reduce using rule 257 (expresionIndexString -> valorString CIZQ ENTERO CDER .)


state 347

    (232) sentenciaWhile -> WHILE PIZQ expresionBool PDER . LIZQ final LDER
    (233) sentenciaWhile -> WHILE PIZQ expresionBool PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 428
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

    expresionBool                  shift and go to state 6
    final                          shift and go to state 429
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 348

    (91) claveValor -> LIZQ expMap LDER .

    DOSPUNTOS       reduce using rule 91 (claveValor -> LIZQ expMap LDER .)
    COMA            reduce using rule 91 (claveValor -> LIZQ expMap LDER .)
    LDER            reduce using rule 91 (claveValor -> LIZQ expMap LDER .)


state 349

    (78) expMap -> claveValor DOSPUNTOS claveValor .
    (79) expMap -> claveValor DOSPUNTOS claveValor . COMA expMap

    LDER            reduce using rule 78 (expMap -> claveValor DOSPUNTOS claveValor .)
    COMA            shift and go to state 430


state 350

    (85) claveValor -> CIZQ expListDynamic CDER .

    DOSPUNTOS       reduce using rule 85 (claveValor -> CIZQ expListDynamic CDER .)
    COMA            reduce using rule 85 (claveValor -> CIZQ expListDynamic CDER .)
    LDER            reduce using rule 85 (claveValor -> CIZQ expListDynamic CDER .)


state 351

    (86) claveValor -> CIZQ expListSet CDER .

    DOSPUNTOS       reduce using rule 86 (claveValor -> CIZQ expListSet CDER .)
    COMA            reduce using rule 86 (claveValor -> CIZQ expListSet CDER .)
    LDER            reduce using rule 86 (claveValor -> CIZQ expListSet CDER .)


state 352

    (157) expListDynamic -> STRING COMA . expListDynamic
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 268
    ENTERO          shift and go to state 269
    DOUBLE          shift and go to state 270
    BOOL            shift and go to state 271
    VARIABLE        shift and go to state 416

    expListDynamic                 shift and go to state 388

state 353

    (158) expListDynamic -> ENTERO COMA . expListDynamic
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 268
    ENTERO          shift and go to state 269
    DOUBLE          shift and go to state 270
    BOOL            shift and go to state 271
    VARIABLE        shift and go to state 416

    expListDynamic                 shift and go to state 399

state 354

    (159) expListDynamic -> DOUBLE COMA . expListDynamic
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 268
    ENTERO          shift and go to state 269
    DOUBLE          shift and go to state 270
    BOOL            shift and go to state 271
    VARIABLE        shift and go to state 416

    expListDynamic                 shift and go to state 402

state 355

    (160) expListDynamic -> BOOL COMA . expListDynamic
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 268
    ENTERO          shift and go to state 269
    DOUBLE          shift and go to state 270
    BOOL            shift and go to state 271
    VARIABLE        shift and go to state 416

    expListDynamic                 shift and go to state 406

state 356

    (162) expListDynamic -> VARIABLE COMA . expListDynamic
    (168) expListSet -> VARIABLE COMA . expListSet
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic
    (163) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (164) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (165) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (166) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (167) expListSet -> . VARIABLE
    (168) expListSet -> . VARIABLE COMA expListSet

    STRING          shift and go to state 268
    ENTERO          shift and go to state 269
    DOUBLE          shift and go to state 270
    BOOL            shift and go to state 271
    VARIABLE        shift and go to state 272
    SETFROM         shift and go to state 165

    expListDynamic                 shift and go to state 394
    expListSet                     shift and go to state 395

state 357

    (88) claveValor -> SETFROM PIZQ CIZQ . CDER PDER
    (89) claveValor -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 431
    STRING          shift and go to state 268
    ENTERO          shift and go to state 269
    DOUBLE          shift and go to state 270
    BOOL            shift and go to state 271
    VARIABLE        shift and go to state 416

    expListDynamic                 shift and go to state 432

state 358

    (234) sentenciaDoWhile -> DO LIZQ final LDER . WHILE PIZQ expresionBool PDER

    WHILE           shift and go to state 433


state 359

    (196) sentenciaIf -> IF PIZQ expresionBool PDER . final
    (197) sentenciaIf -> IF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 435
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

    expresionBool                  shift and go to state 6
    final                          shift and go to state 434
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 360

    (75) expresionMap -> LIZQ LDER .
    (90) claveValor -> LIZQ LDER .

    PUNTOYCOMA      reduce using rule 75 (expresionMap -> LIZQ LDER .)
    DOSPUNTOS       reduce using rule 90 (claveValor -> LIZQ LDER .)


state 361

    (77) expresionMap -> LIZQ expMap . LDER
    (91) claveValor -> LIZQ expMap . LDER

    LDER            shift and go to state 436


state 362

    (199) sentenciaElse -> ELSE LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    VARIABLE        reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    INT             reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLER         reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    NUM             reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRINGR         reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOLR           reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    DYNAMIC         reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    VAR             reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    WHILE           reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    DO              reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    IF              reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSE            reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    PRINT           reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    NOT             reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSEIF          reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    FOR             reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    LIST            reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    CIZQ            reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    NEWLIST         reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    SET             reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    SETFROM         reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    MAP             reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    LIZQ            reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    SWITCH          reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOL            reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    ENTERO          reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLE          reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRING          reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    $end            reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    LDER            reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)
    BREAK           reduce using rule 199 (sentenciaElse -> ELSE LIZQ final LDER .)


state 363

    (123) expresionLista -> CIZQ expListDynamic . CDER
    (85) claveValor -> CIZQ expListDynamic . CDER

    CDER            shift and go to state 437


state 364

    (127) expresionLista -> CIZQ expListSet . CDER
    (86) claveValor -> CIZQ expListSet . CDER

    CDER            shift and go to state 438


state 365

    (93) expresionSet -> SETFROM PIZQ . CIZQ CDER PDER
    (95) expresionSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER
    (88) claveValor -> SETFROM PIZQ . CIZQ CDER PDER
    (89) claveValor -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 439


state 366

    (191) imprimir -> PRINT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 191 (imprimir -> PRINT PIZQ expresion PDER .)


state 367

    (192) imprimir -> PRINT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 192 (imprimir -> PRINT PIZQ asignacionSimple PDER .)


state 368

    (194) funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 194 (funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .)


state 369

    (195) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 195 (funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .)


state 370

    (246) negacionBool -> NOT PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 246 (negacionBool -> NOT PIZQ expresionBool PDER .)
    AND             reduce using rule 246 (negacionBool -> NOT PIZQ expresionBool PDER .)
    OR              reduce using rule 246 (negacionBool -> NOT PIZQ expresionBool PDER .)
    PDER            reduce using rule 246 (negacionBool -> NOT PIZQ expresionBool PDER .)


state 371

    (200) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . final
    (201) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 441
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

    expresionBool                  shift and go to state 6
    final                          shift and go to state 440
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 372

    (228) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING

    VARIABLE        shift and go to state 443
    DOUBLE          shift and go to state 60
    BOOL            shift and go to state 186
    NOT             shift and go to state 48
    ENTERO          shift and go to state 51
    STRING          shift and go to state 188

    expresionBoolFor               shift and go to state 442
    valorDouble                    shift and go to state 444
    valorBool                      shift and go to state 445
    negacionBool                   shift and go to state 446
    comparacionBool                shift and go to state 447
    valorInt                       shift and go to state 185
    expresionBool                  shift and go to state 448
    valor                          shift and go to state 39

state 373

    (219) asignacionFor -> VARIABLE IGUAL . expresionInt
    (220) asignacionFor -> VARIABLE IGUAL . expresionDouble
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt

    ENTERO          shift and go to state 208
    VARIABLE        shift and go to state 241
    DOUBLE          shift and go to state 207

    expresionInt                   shift and go to state 449
    expresionDouble                shift and go to state 450
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 206

state 374

    (212) asignacionFor -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 451


state 375

    (213) asignacionFor -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 452


state 376

    (214) asignacionFor -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 453


state 377

    (215) asignacionFor -> DYNAMIC VARIABLE . IGUAL expresionInt
    (216) asignacionFor -> DYNAMIC VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 454


state 378

    (217) asignacionFor -> VAR VARIABLE . IGUAL expresionInt
    (218) asignacionFor -> VAR VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 455


state 379

    (101) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE
    (102) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 456


state 380

    (105) expresionLista -> LIST MENOR INT MAYOR . VARIABLE
    (106) expresionLista -> LIST MENOR INT MAYOR . VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> LIST MENOR INT MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 457


state 381

    (109) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE
    (110) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 458


state 382

    (113) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE
    (114) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 459


state 383

    (116) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE
    (117) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 460


state 384

    (120) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE
    (121) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 461


state 385

    (124) expresionLista -> LIST MENOR SET MAYOR . VARIABLE
    (125) expresionLista -> LIST MENOR SET MAYOR . VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> LIST MENOR SET MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 462


state 386

    (128) expresionLista -> LIST MENOR MAP MAYOR . VARIABLE
    (129) expresionLista -> LIST MENOR MAP MAYOR . VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> LIST MENOR MAP MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 463


state 387

    (136) expListString -> STRING COMA expListString .

    CDER            reduce using rule 136 (expListString -> STRING COMA expListString .)


state 388

    (157) expListDynamic -> STRING COMA expListDynamic .

    CDER            reduce using rule 157 (expListDynamic -> STRING COMA expListDynamic .)


state 389

    (137) expListString -> VARIABLE .
    (138) expListString -> VARIABLE . COMA expListString
    (161) expListDynamic -> VARIABLE .
    (162) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 137 (expListString -> VARIABLE .)
    CDER            reduce using rule 137 (expListString -> VARIABLE .)
    COMA            shift and go to state 464

  ! CDER            [ reduce using rule 161 (expListDynamic -> VARIABLE .) ]


state 390

    (138) expListString -> VARIABLE COMA expListString .

    CDER            reduce using rule 138 (expListString -> VARIABLE COMA expListString .)


state 391

    (142) expListInt -> VARIABLE COMA expListInt .

    CDER            reduce using rule 142 (expListInt -> VARIABLE COMA expListInt .)


state 392

    (148) expListNum -> VARIABLE COMA expListNum .

    CDER            reduce using rule 148 (expListNum -> VARIABLE COMA expListNum .)


state 393

    (152) expListBool -> VARIABLE COMA expListBool .

    CDER            reduce using rule 152 (expListBool -> VARIABLE COMA expListBool .)


state 394

    (162) expListDynamic -> VARIABLE COMA expListDynamic .

    CDER            reduce using rule 162 (expListDynamic -> VARIABLE COMA expListDynamic .)


state 395

    (168) expListSet -> VARIABLE COMA expListSet .

    CDER            reduce using rule 168 (expListSet -> VARIABLE COMA expListSet .)


state 396

    (174) expListMap -> VARIABLE COMA expListMap .

    CDER            reduce using rule 174 (expListMap -> VARIABLE COMA expListMap .)


state 397

    (140) expListInt -> ENTERO COMA expListInt .

    CDER            reduce using rule 140 (expListInt -> ENTERO COMA expListInt .)


state 398

    (145) expListNum -> ENTERO COMA expListNum .

    CDER            reduce using rule 145 (expListNum -> ENTERO COMA expListNum .)


state 399

    (158) expListDynamic -> ENTERO COMA expListDynamic .

    CDER            reduce using rule 158 (expListDynamic -> ENTERO COMA expListDynamic .)


state 400

    (141) expListInt -> VARIABLE .
    (142) expListInt -> VARIABLE . COMA expListInt
    (147) expListNum -> VARIABLE .
    (148) expListNum -> VARIABLE . COMA expListNum
    (161) expListDynamic -> VARIABLE .
    (162) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 141 (expListInt -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 141 (expListInt -> VARIABLE .)
    CDER            reduce using rule 141 (expListInt -> VARIABLE .)
    COMA            shift and go to state 465

  ! CDER            [ reduce using rule 147 (expListNum -> VARIABLE .) ]
  ! CDER            [ reduce using rule 161 (expListDynamic -> VARIABLE .) ]


state 401

    (146) expListNum -> DOUBLE COMA expListNum .

    CDER            reduce using rule 146 (expListNum -> DOUBLE COMA expListNum .)


state 402

    (159) expListDynamic -> DOUBLE COMA expListDynamic .

    CDER            reduce using rule 159 (expListDynamic -> DOUBLE COMA expListDynamic .)


state 403

    (143) expListNum -> ENTERO .
    (145) expListNum -> ENTERO . COMA expListNum
    (154) expListDynamic -> ENTERO .
    (158) expListDynamic -> ENTERO . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 143 (expListNum -> ENTERO .)
    CDER            reduce using rule 143 (expListNum -> ENTERO .)
    COMA            shift and go to state 466

  ! CDER            [ reduce using rule 154 (expListDynamic -> ENTERO .) ]


state 404

    (147) expListNum -> VARIABLE .
    (148) expListNum -> VARIABLE . COMA expListNum
    (161) expListDynamic -> VARIABLE .
    (162) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 147 (expListNum -> VARIABLE .)
    CDER            reduce using rule 147 (expListNum -> VARIABLE .)
    COMA            shift and go to state 467

  ! CDER            [ reduce using rule 161 (expListDynamic -> VARIABLE .) ]


state 405

    (150) expListBool -> BOOL COMA expListBool .

    CDER            reduce using rule 150 (expListBool -> BOOL COMA expListBool .)


state 406

    (160) expListDynamic -> BOOL COMA expListDynamic .

    CDER            reduce using rule 160 (expListDynamic -> BOOL COMA expListDynamic .)


state 407

    (151) expListBool -> VARIABLE .
    (152) expListBool -> VARIABLE . COMA expListBool
    (161) expListDynamic -> VARIABLE .
    (162) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 151 (expListBool -> VARIABLE .)
    CDER            reduce using rule 151 (expListBool -> VARIABLE .)
    COMA            shift and go to state 468

  ! CDER            [ reduce using rule 161 (expListDynamic -> VARIABLE .) ]


state 408

    (163) expListSet -> SETFROM PIZQ CIZQ . CDER PDER
    (164) expListSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (165) expListSet -> SETFROM PIZQ CIZQ . CDER PDER COMA expListSet
    (166) expListSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER COMA expListSet
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 469
    STRING          shift and go to state 268
    ENTERO          shift and go to state 269
    DOUBLE          shift and go to state 270
    BOOL            shift and go to state 271
    VARIABLE        shift and go to state 416

    expListDynamic                 shift and go to state 470

state 409

    (171) expListMap -> LIZQ LDER COMA . expListMap
    (169) expListMap -> . LIZQ LDER
    (170) expListMap -> . LIZQ expMap LDER
    (171) expListMap -> . LIZQ LDER COMA expListMap
    (172) expListMap -> . LIZQ expMap LDER COMA expListMap
    (173) expListMap -> . VARIABLE
    (174) expListMap -> . VARIABLE COMA expListMap

    LIZQ            shift and go to state 166
    VARIABLE        shift and go to state 472

    expListMap                     shift and go to state 471

state 410

    (170) expListMap -> LIZQ expMap LDER .
    (172) expListMap -> LIZQ expMap LDER . COMA expListMap

    CDER            reduce using rule 170 (expListMap -> LIZQ expMap LDER .)
    COMA            shift and go to state 473


state 411

    (94) expresionSet -> SET VARIABLE IGUAL SETFROM . PIZQ CIZQ CDER PDER
    (96) expresionSet -> SET VARIABLE IGUAL SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 474


state 412

    (74) expresionMap -> MAP VARIABLE IGUAL LIZQ . LDER
    (76) expresionMap -> MAP VARIABLE IGUAL LIZQ . expMap LDER
    (78) expMap -> . claveValor DOSPUNTOS claveValor
    (79) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (80) claveValor -> . VARIABLE
    (81) claveValor -> . STRING
    (82) claveValor -> . ENTERO
    (83) claveValor -> . DOUBLE
    (84) claveValor -> . BOOL
    (85) claveValor -> . CIZQ expListDynamic CDER
    (86) claveValor -> . CIZQ expListSet CDER
    (87) claveValor -> . expresionNewList
    (88) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (89) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) claveValor -> . LIZQ LDER
    (91) claveValor -> . LIZQ expMap LDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 475
    VARIABLE        shift and go to state 134
    STRING          shift and go to state 135
    ENTERO          shift and go to state 136
    DOUBLE          shift and go to state 137
    BOOL            shift and go to state 138
    CIZQ            shift and go to state 139
    SETFROM         shift and go to state 141
    LIZQ            shift and go to state 130
    NEWLIST         shift and go to state 56

    expMap                         shift and go to state 476
    claveValor                     shift and go to state 133
    expresionNewList               shift and go to state 140

state 413

    (99) expresionNewList -> NEWLIST PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 99 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    DOSPUNTOS       reduce using rule 99 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    COMA            reduce using rule 99 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    LDER            reduce using rule 99 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)


state 414

    (93) expresionSet -> SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 477


state 415

    (95) expresionSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 478


state 416

    (161) expListDynamic -> VARIABLE .
    (162) expListDynamic -> VARIABLE . COMA expListDynamic

    CDER            reduce using rule 161 (expListDynamic -> VARIABLE .)
    COMA            shift and go to state 479


state 417

    (63) expresionSwitch -> SWITCH PIZQ VARIABLE PDER . LIZQ cases LDER

    LIZQ            shift and go to state 480


state 418

    (254) valorString -> STRING CIZQ ENTERO CDER .

    SUMA            reduce using rule 254 (valorString -> STRING CIZQ ENTERO CDER .)
    CIZQ            reduce using rule 254 (valorString -> STRING CIZQ ENTERO CDER .)
    PUNTOYCOMA      reduce using rule 254 (valorString -> STRING CIZQ ENTERO CDER .)
    PDER            reduce using rule 254 (valorString -> STRING CIZQ ENTERO CDER .)


state 419

    (237) expresionBool -> valorDouble comparadorMat expresionDouble .

    AND             reduce using rule 237 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 237 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 237 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PDER            reduce using rule 237 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 420

    (240) expresionBool -> valorDouble comparadorMat VARIABLE .
    (261) valorInt -> VARIABLE .

  ! reduce/reduce conflict for AND resolved using rule 240 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 240 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 240 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 240 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 240 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 240 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 240 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PDER            reduce using rule 240 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 261 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 261 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 261 (valorInt -> VARIABLE .)
    DIV             reduce using rule 261 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 261 (valorInt -> VARIABLE .)
    MOD             reduce using rule 261 (valorInt -> VARIABLE .)

  ! AND             [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 261 (valorInt -> VARIABLE .) ]


state 421

    (239) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (261) valorInt -> VARIABLE .

  ! reduce/reduce conflict for AND resolved using rule 239 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 239 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 239 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 239 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 239 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 239 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 239 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PDER            reduce using rule 239 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 261 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 261 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 261 (valorInt -> VARIABLE .)
    DIV             reduce using rule 261 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 261 (valorInt -> VARIABLE .)
    MOD             reduce using rule 261 (valorInt -> VARIABLE .)

  ! AND             [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 261 (valorInt -> VARIABLE .) ]


state 422

    (238) expresionBool -> VARIABLE comparadorMat expresionDouble .

    AND             reduce using rule 238 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 238 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 238 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PDER            reduce using rule 238 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 423

    (258) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 258 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    SUMA            reduce using rule 258 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    CIZQ            reduce using rule 258 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    PDER            reduce using rule 258 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)


state 424

    (259) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA . ENTERO PDER

    ENTERO          shift and go to state 481


state 425

    (133) expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .
    (97) expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 97 (expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .)
    PUNTOYCOMA      reduce using rule 97 (expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .)

  ! PUNTOYCOMA      [ reduce using rule 133 (expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .) ]


state 426

    (134) expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA . ENTERO PDER

    ENTERO          shift and go to state 482


state 427

    (206) expresion -> valor operadorMat expresion .

    PUNTOYCOMA      reduce using rule 206 (expresion -> valor operadorMat expresion .)
    PDER            reduce using rule 206 (expresion -> valor operadorMat expresion .)


state 428

    (232) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ . final LDER
    (75) expresionMap -> LIZQ . LDER
    (77) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (78) expMap -> . claveValor DOSPUNTOS claveValor
    (79) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (80) claveValor -> . VARIABLE
    (81) claveValor -> . STRING
    (82) claveValor -> . ENTERO
    (83) claveValor -> . DOUBLE
    (84) claveValor -> . BOOL
    (85) claveValor -> . CIZQ expListDynamic CDER
    (86) claveValor -> . CIZQ expListSet CDER
    (87) claveValor -> . expresionNewList
    (88) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (89) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) claveValor -> . LIZQ LDER
    (91) claveValor -> . LIZQ expMap LDER
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 131
    VARIABLE        shift and go to state 278
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 281
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 282
    MAP             shift and go to state 55
    LIZQ            shift and go to state 276
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 283
    STRING          shift and go to state 284
    ENTERO          shift and go to state 280
    DOUBLE          shift and go to state 285

    expresionBool                  shift and go to state 6
    final                          shift and go to state 483
    expMap                         shift and go to state 132
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 279
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    claveValor                     shift and go to state 133
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 429

    (233) sentenciaWhile -> WHILE PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    INT             reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NUM             reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VAR             reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DO              reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    IF              reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NOT             reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FOR             reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LIST            reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    SET             reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    MAP             reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LIZQ            reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    SWITCH          reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRING          reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    $end            reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LDER            reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BREAK           reduce using rule 233 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)


state 430

    (79) expMap -> claveValor DOSPUNTOS claveValor COMA . expMap
    (78) expMap -> . claveValor DOSPUNTOS claveValor
    (79) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (80) claveValor -> . VARIABLE
    (81) claveValor -> . STRING
    (82) claveValor -> . ENTERO
    (83) claveValor -> . DOUBLE
    (84) claveValor -> . BOOL
    (85) claveValor -> . CIZQ expListDynamic CDER
    (86) claveValor -> . CIZQ expListSet CDER
    (87) claveValor -> . expresionNewList
    (88) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (89) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) claveValor -> . LIZQ LDER
    (91) claveValor -> . LIZQ expMap LDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER

    VARIABLE        shift and go to state 134
    STRING          shift and go to state 135
    ENTERO          shift and go to state 136
    DOUBLE          shift and go to state 137
    BOOL            shift and go to state 138
    CIZQ            shift and go to state 139
    SETFROM         shift and go to state 141
    LIZQ            shift and go to state 130
    NEWLIST         shift and go to state 56

    claveValor                     shift and go to state 133
    expMap                         shift and go to state 484
    expresionNewList               shift and go to state 140

state 431

    (88) claveValor -> SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 485


state 432

    (89) claveValor -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 486


state 433

    (234) sentenciaDoWhile -> DO LIZQ final LDER WHILE . PIZQ expresionBool PDER

    PIZQ            shift and go to state 487


state 434

    (196) sentenciaIf -> IF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    INT             reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DO              reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    IF              reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FOR             reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LIST            reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    SET             reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    MAP             reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LIZQ            reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    SWITCH          reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    $end            reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BREAK           reduce using rule 196 (sentenciaIf -> IF PIZQ expresionBool PDER final .)


state 435

    (197) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ . final LDER
    (75) expresionMap -> LIZQ . LDER
    (77) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (78) expMap -> . claveValor DOSPUNTOS claveValor
    (79) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (80) claveValor -> . VARIABLE
    (81) claveValor -> . STRING
    (82) claveValor -> . ENTERO
    (83) claveValor -> . DOUBLE
    (84) claveValor -> . BOOL
    (85) claveValor -> . CIZQ expListDynamic CDER
    (86) claveValor -> . CIZQ expListSet CDER
    (87) claveValor -> . expresionNewList
    (88) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (89) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) claveValor -> . LIZQ LDER
    (91) claveValor -> . LIZQ expMap LDER
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 131
    VARIABLE        shift and go to state 278
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 281
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 282
    MAP             shift and go to state 55
    LIZQ            shift and go to state 276
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 283
    STRING          shift and go to state 284
    ENTERO          shift and go to state 280
    DOUBLE          shift and go to state 285

    expresionBool                  shift and go to state 6
    final                          shift and go to state 488
    expMap                         shift and go to state 132
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 279
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    claveValor                     shift and go to state 133
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 436

    (77) expresionMap -> LIZQ expMap LDER .
    (91) claveValor -> LIZQ expMap LDER .

    PUNTOYCOMA      reduce using rule 77 (expresionMap -> LIZQ expMap LDER .)
    DOSPUNTOS       reduce using rule 91 (claveValor -> LIZQ expMap LDER .)


state 437

    (123) expresionLista -> CIZQ expListDynamic CDER .
    (85) claveValor -> CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 123 (expresionLista -> CIZQ expListDynamic CDER .)
    DOSPUNTOS       reduce using rule 85 (claveValor -> CIZQ expListDynamic CDER .)


state 438

    (127) expresionLista -> CIZQ expListSet CDER .
    (86) claveValor -> CIZQ expListSet CDER .

    PUNTOYCOMA      reduce using rule 127 (expresionLista -> CIZQ expListSet CDER .)
    DOSPUNTOS       reduce using rule 86 (claveValor -> CIZQ expListSet CDER .)


state 439

    (93) expresionSet -> SETFROM PIZQ CIZQ . CDER PDER
    (95) expresionSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (88) claveValor -> SETFROM PIZQ CIZQ . CDER PDER
    (89) claveValor -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 489
    STRING          shift and go to state 268
    ENTERO          shift and go to state 269
    DOUBLE          shift and go to state 270
    BOOL            shift and go to state 271
    VARIABLE        shift and go to state 416

    expListDynamic                 shift and go to state 490

state 440

    (200) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    INT             reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DO              reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    IF              reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FOR             reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LIST            reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    SET             reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    MAP             reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LIZQ            reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    SWITCH          reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    $end            reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BREAK           reduce using rule 200 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)


state 441

    (201) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ . final LDER
    (75) expresionMap -> LIZQ . LDER
    (77) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (78) expMap -> . claveValor DOSPUNTOS claveValor
    (79) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (80) claveValor -> . VARIABLE
    (81) claveValor -> . STRING
    (82) claveValor -> . ENTERO
    (83) claveValor -> . DOUBLE
    (84) claveValor -> . BOOL
    (85) claveValor -> . CIZQ expListDynamic CDER
    (86) claveValor -> . CIZQ expListSet CDER
    (87) claveValor -> . expresionNewList
    (88) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (89) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) claveValor -> . LIZQ LDER
    (91) claveValor -> . LIZQ expMap LDER
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 131
    VARIABLE        shift and go to state 278
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 281
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 282
    MAP             shift and go to state 55
    LIZQ            shift and go to state 276
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 283
    STRING          shift and go to state 284
    ENTERO          shift and go to state 280
    DOUBLE          shift and go to state 285

    expresionBool                  shift and go to state 6
    final                          shift and go to state 491
    expMap                         shift and go to state 132
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 279
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    claveValor                     shift and go to state 133
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 442

    (228) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DRESTA PDER final

    PUNTOYCOMA      shift and go to state 492


state 443

    (222) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (223) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (236) valorBool -> VARIABLE .
    (261) valorInt -> VARIABLE .
    (238) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (239) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (203) valor -> VARIABLE .
    (274) comparadorMat -> . DIGUAL
    (275) comparadorMat -> . NOIGUAL
    (276) comparadorMat -> . MAYOR
    (277) comparadorMat -> . MENOR
    (278) comparadorMat -> . MAYIGUAL
    (279) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    PUNTOYCOMA      reduce using rule 236 (valorBool -> VARIABLE .)
    AND             reduce using rule 236 (valorBool -> VARIABLE .)
    OR              reduce using rule 236 (valorBool -> VARIABLE .)
    IS              reduce using rule 203 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 203 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 97
    NOIGUAL         shift and go to state 98
    MAYOR           shift and go to state 99
    MENOR           shift and go to state 100
    MAYIGUAL        shift and go to state 101
    MENIGUAL        shift and go to state 102

  ! DIGUAL          [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 261 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 493

state 444

    (221) expresionBoolFor -> valorDouble . comparadorMat expresionDouble
    (224) expresionBoolFor -> valorDouble . comparadorMat VARIABLE
    (237) expresionBool -> valorDouble . comparadorMat expresionDouble
    (240) expresionBool -> valorDouble . comparadorMat VARIABLE
    (274) comparadorMat -> . DIGUAL
    (275) comparadorMat -> . NOIGUAL
    (276) comparadorMat -> . MAYOR
    (277) comparadorMat -> . MENOR
    (278) comparadorMat -> . MAYIGUAL
    (279) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 97
    NOIGUAL         shift and go to state 98
    MAYOR           shift and go to state 99
    MENOR           shift and go to state 100
    MAYIGUAL        shift and go to state 101
    MENIGUAL        shift and go to state 102

    comparadorMat                  shift and go to state 494

state 445

    (225) expresionBoolFor -> valorBool .
    (241) expresionBool -> valorBool .

    PUNTOYCOMA      reduce using rule 225 (expresionBoolFor -> valorBool .)
    AND             reduce using rule 241 (expresionBool -> valorBool .)
    OR              reduce using rule 241 (expresionBool -> valorBool .)


state 446

    (226) expresionBoolFor -> negacionBool .
    (242) expresionBool -> negacionBool .

    PUNTOYCOMA      reduce using rule 226 (expresionBoolFor -> negacionBool .)
    AND             reduce using rule 242 (expresionBool -> negacionBool .)
    OR              reduce using rule 242 (expresionBool -> negacionBool .)


state 447

    (227) expresionBoolFor -> comparacionBool .
    (243) expresionBool -> comparacionBool .

    PUNTOYCOMA      reduce using rule 227 (expresionBoolFor -> comparacionBool .)
    AND             reduce using rule 243 (expresionBool -> comparacionBool .)
    OR              reduce using rule 243 (expresionBool -> comparacionBool .)


state 448

    (247) comparacionBool -> expresionBool . operadorLogico expresionBool
    (248) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (280) operadorLogico -> . AND
    (281) operadorLogico -> . OR

    AND             shift and go to state 69
    OR              shift and go to state 70

    operadorLogico                 shift and go to state 68

state 449

    (219) asignacionFor -> VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 219 (asignacionFor -> VARIABLE IGUAL expresionInt .)


state 450

    (220) asignacionFor -> VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 220 (asignacionFor -> VARIABLE IGUAL expresionDouble .)


state 451

    (212) asignacionFor -> INT VARIABLE IGUAL . expresionInt
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE

    ENTERO          shift and go to state 208
    VARIABLE        shift and go to state 241

    expresionInt                   shift and go to state 495
    valorInt                       shift and go to state 239

state 452

    (213) asignacionFor -> DOUBLER VARIABLE IGUAL . expresionDouble
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 207
    ENTERO          shift and go to state 208
    VARIABLE        shift and go to state 241

    expresionDouble                shift and go to state 496
    valorDouble                    shift and go to state 206
    valorInt                       shift and go to state 185

state 453

    (214) asignacionFor -> NUM VARIABLE IGUAL . expresionDouble
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 207
    ENTERO          shift and go to state 208
    VARIABLE        shift and go to state 241

    expresionDouble                shift and go to state 497
    valorDouble                    shift and go to state 206
    valorInt                       shift and go to state 185

state 454

    (215) asignacionFor -> DYNAMIC VARIABLE IGUAL . expresionInt
    (216) asignacionFor -> DYNAMIC VARIABLE IGUAL . expresionDouble
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt

    ENTERO          shift and go to state 208
    VARIABLE        shift and go to state 241
    DOUBLE          shift and go to state 207

    expresionInt                   shift and go to state 498
    expresionDouble                shift and go to state 499
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 206

state 455

    (217) asignacionFor -> VAR VARIABLE IGUAL . expresionInt
    (218) asignacionFor -> VAR VARIABLE IGUAL . expresionDouble
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt

    ENTERO          shift and go to state 208
    VARIABLE        shift and go to state 241
    DOUBLE          shift and go to state 207

    expresionInt                   shift and go to state 500
    expresionDouble                shift and go to state 501
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 206

state 456

    (101) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE .
    (102) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE . IGUAL CIZQ expListString CDER
    (103) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 101 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE .)
    IGUAL           shift and go to state 502


state 457

    (105) expresionLista -> LIST MENOR INT MAYOR VARIABLE .
    (106) expresionLista -> LIST MENOR INT MAYOR VARIABLE . IGUAL CIZQ expListInt CDER
    (107) expresionLista -> LIST MENOR INT MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 105 (expresionLista -> LIST MENOR INT MAYOR VARIABLE .)
    IGUAL           shift and go to state 503


state 458

    (109) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE .
    (110) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE . IGUAL CIZQ expListNum CDER
    (111) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 109 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE .)
    IGUAL           shift and go to state 504


state 459

    (113) expresionLista -> LIST MENOR NUM MAYOR VARIABLE .
    (114) expresionLista -> LIST MENOR NUM MAYOR VARIABLE . IGUAL CIZQ expListNum CDER
    (115) expresionLista -> LIST MENOR NUM MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 113 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE .)
    IGUAL           shift and go to state 505


state 460

    (116) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE .
    (117) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE . IGUAL CIZQ expListBool CDER
    (118) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 116 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE .)
    IGUAL           shift and go to state 506


state 461

    (120) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE .
    (121) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE . IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 120 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE .)
    IGUAL           shift and go to state 507


state 462

    (124) expresionLista -> LIST MENOR SET MAYOR VARIABLE .
    (125) expresionLista -> LIST MENOR SET MAYOR VARIABLE . IGUAL CIZQ expListSet CDER
    (126) expresionLista -> LIST MENOR SET MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 124 (expresionLista -> LIST MENOR SET MAYOR VARIABLE .)
    IGUAL           shift and go to state 508


state 463

    (128) expresionLista -> LIST MENOR MAP MAYOR VARIABLE .
    (129) expresionLista -> LIST MENOR MAP MAYOR VARIABLE . IGUAL CIZQ expListMap CDER
    (130) expresionLista -> LIST MENOR MAP MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 128 (expresionLista -> LIST MENOR MAP MAYOR VARIABLE .)
    IGUAL           shift and go to state 509


state 464

    (138) expListString -> VARIABLE COMA . expListString
    (162) expListDynamic -> VARIABLE COMA . expListDynamic
    (135) expListString -> . STRING
    (136) expListString -> . STRING COMA expListString
    (137) expListString -> . VARIABLE
    (138) expListString -> . VARIABLE COMA expListString
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 160
    VARIABLE        shift and go to state 389
    ENTERO          shift and go to state 269
    DOUBLE          shift and go to state 270
    BOOL            shift and go to state 271

    expListString                  shift and go to state 390
    expListDynamic                 shift and go to state 394

state 465

    (142) expListInt -> VARIABLE COMA . expListInt
    (148) expListNum -> VARIABLE COMA . expListNum
    (162) expListDynamic -> VARIABLE COMA . expListDynamic
    (139) expListInt -> . ENTERO
    (140) expListInt -> . ENTERO COMA expListInt
    (141) expListInt -> . VARIABLE
    (142) expListInt -> . VARIABLE COMA expListInt
    (143) expListNum -> . ENTERO
    (144) expListNum -> . DOUBLE
    (145) expListNum -> . ENTERO COMA expListNum
    (146) expListNum -> . DOUBLE COMA expListNum
    (147) expListNum -> . VARIABLE
    (148) expListNum -> . VARIABLE COMA expListNum
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 162
    VARIABLE        shift and go to state 400
    DOUBLE          shift and go to state 163
    STRING          shift and go to state 268
    BOOL            shift and go to state 271

    expListInt                     shift and go to state 391
    expListNum                     shift and go to state 392
    expListDynamic                 shift and go to state 394

state 466

    (145) expListNum -> ENTERO COMA . expListNum
    (158) expListDynamic -> ENTERO COMA . expListDynamic
    (143) expListNum -> . ENTERO
    (144) expListNum -> . DOUBLE
    (145) expListNum -> . ENTERO COMA expListNum
    (146) expListNum -> . DOUBLE COMA expListNum
    (147) expListNum -> . VARIABLE
    (148) expListNum -> . VARIABLE COMA expListNum
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 403
    DOUBLE          shift and go to state 163
    VARIABLE        shift and go to state 404
    STRING          shift and go to state 268
    BOOL            shift and go to state 271

    expListNum                     shift and go to state 398
    expListDynamic                 shift and go to state 399

state 467

    (148) expListNum -> VARIABLE COMA . expListNum
    (162) expListDynamic -> VARIABLE COMA . expListDynamic
    (143) expListNum -> . ENTERO
    (144) expListNum -> . DOUBLE
    (145) expListNum -> . ENTERO COMA expListNum
    (146) expListNum -> . DOUBLE COMA expListNum
    (147) expListNum -> . VARIABLE
    (148) expListNum -> . VARIABLE COMA expListNum
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 403
    DOUBLE          shift and go to state 163
    VARIABLE        shift and go to state 404
    STRING          shift and go to state 268
    BOOL            shift and go to state 271

    expListNum                     shift and go to state 392
    expListDynamic                 shift and go to state 394

state 468

    (152) expListBool -> VARIABLE COMA . expListBool
    (162) expListDynamic -> VARIABLE COMA . expListDynamic
    (149) expListBool -> . BOOL
    (150) expListBool -> . BOOL COMA expListBool
    (151) expListBool -> . VARIABLE
    (152) expListBool -> . VARIABLE COMA expListBool
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic

    BOOL            shift and go to state 164
    VARIABLE        shift and go to state 407
    STRING          shift and go to state 268
    ENTERO          shift and go to state 269
    DOUBLE          shift and go to state 270

    expListBool                    shift and go to state 393
    expListDynamic                 shift and go to state 394

state 469

    (163) expListSet -> SETFROM PIZQ CIZQ CDER . PDER
    (165) expListSet -> SETFROM PIZQ CIZQ CDER . PDER COMA expListSet

    PDER            shift and go to state 510


state 470

    (164) expListSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER
    (166) expListSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER COMA expListSet

    CDER            shift and go to state 511


state 471

    (171) expListMap -> LIZQ LDER COMA expListMap .

    CDER            reduce using rule 171 (expListMap -> LIZQ LDER COMA expListMap .)


state 472

    (173) expListMap -> VARIABLE .
    (174) expListMap -> VARIABLE . COMA expListMap

    CDER            reduce using rule 173 (expListMap -> VARIABLE .)
    COMA            shift and go to state 512


state 473

    (172) expListMap -> LIZQ expMap LDER COMA . expListMap
    (169) expListMap -> . LIZQ LDER
    (170) expListMap -> . LIZQ expMap LDER
    (171) expListMap -> . LIZQ LDER COMA expListMap
    (172) expListMap -> . LIZQ expMap LDER COMA expListMap
    (173) expListMap -> . VARIABLE
    (174) expListMap -> . VARIABLE COMA expListMap

    LIZQ            shift and go to state 166
    VARIABLE        shift and go to state 472

    expListMap                     shift and go to state 513

state 474

    (94) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ . CIZQ CDER PDER
    (96) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 514


state 475

    (74) expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .

    PUNTOYCOMA      reduce using rule 74 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)


state 476

    (76) expresionMap -> MAP VARIABLE IGUAL LIZQ expMap . LDER

    LDER            shift and go to state 515


state 477

    (93) expresionSet -> SETFROM PIZQ CIZQ CDER PDER .

    PUNTOYCOMA      reduce using rule 93 (expresionSet -> SETFROM PIZQ CIZQ CDER PDER .)


state 478

    (95) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 516


state 479

    (162) expListDynamic -> VARIABLE COMA . expListDynamic
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 268
    ENTERO          shift and go to state 269
    DOUBLE          shift and go to state 270
    BOOL            shift and go to state 271
    VARIABLE        shift and go to state 416

    expListDynamic                 shift and go to state 394

state 480

    (63) expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ . cases LDER
    (64) cases -> . caseString
    (65) cases -> . caseInt
    (66) cases -> . caseBool
    (67) caseString -> . CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA
    (68) caseString -> . CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString
    (69) caseInt -> . CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA
    (70) caseInt -> . CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt
    (71) caseBool -> . CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA
    (72) caseBool -> . CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool

    CASE            shift and go to state 521

    cases                          shift and go to state 517
    caseString                     shift and go to state 518
    caseInt                        shift and go to state 519
    caseBool                       shift and go to state 520

state 481

    (259) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO . PDER

    PDER            shift and go to state 522


state 482

    (134) expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO . PDER

    PDER            shift and go to state 523


state 483

    (232) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 524


state 484

    (79) expMap -> claveValor DOSPUNTOS claveValor COMA expMap .

    LDER            reduce using rule 79 (expMap -> claveValor DOSPUNTOS claveValor COMA expMap .)


state 485

    (88) claveValor -> SETFROM PIZQ CIZQ CDER PDER .

    DOSPUNTOS       reduce using rule 88 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)
    COMA            reduce using rule 88 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)
    LDER            reduce using rule 88 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)


state 486

    (89) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 525


state 487

    (234) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ . expresionBool PDER
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 182
    DOUBLE          shift and go to state 60
    BOOL            shift and go to state 186
    NOT             shift and go to state 48
    ENTERO          shift and go to state 187
    STRING          shift and go to state 188

    expresionBool                  shift and go to state 526
    valorDouble                    shift and go to state 181
    valorBool                      shift and go to state 183
    negacionBool                   shift and go to state 184
    comparacionBool                shift and go to state 223
    valor                          shift and go to state 39
    valorInt                       shift and go to state 185

state 488

    (197) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 527


state 489

    (93) expresionSet -> SETFROM PIZQ CIZQ CDER . PDER
    (88) claveValor -> SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 528


state 490

    (95) expresionSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER
    (89) claveValor -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 529


state 491

    (201) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 530


state 492

    (228) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DSUMA PDER final
    (230) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DRESTA PDER final

    VARIABLE        shift and go to state 531


state 493

    (222) expresionBoolFor -> VARIABLE comparadorMat . expresionDouble
    (223) expresionBoolFor -> VARIABLE comparadorMat . VARIABLE
    (238) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (239) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 532
    DOUBLE          shift and go to state 207
    ENTERO          shift and go to state 208

    expresionDouble                shift and go to state 533
    valorDouble                    shift and go to state 206
    valorInt                       shift and go to state 185

state 494

    (221) expresionBoolFor -> valorDouble comparadorMat . expresionDouble
    (224) expresionBoolFor -> valorDouble comparadorMat . VARIABLE
    (237) expresionBool -> valorDouble comparadorMat . expresionDouble
    (240) expresionBool -> valorDouble comparadorMat . VARIABLE
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 535
    DOUBLE          shift and go to state 207
    ENTERO          shift and go to state 208

    valorDouble                    shift and go to state 206
    expresionDouble                shift and go to state 534
    valorInt                       shift and go to state 185

state 495

    (212) asignacionFor -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 212 (asignacionFor -> INT VARIABLE IGUAL expresionInt .)


state 496

    (213) asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 213 (asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 497

    (214) asignacionFor -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 214 (asignacionFor -> NUM VARIABLE IGUAL expresionDouble .)


state 498

    (215) asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 215 (asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt .)


state 499

    (216) asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 216 (asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble .)


state 500

    (217) asignacionFor -> VAR VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 217 (asignacionFor -> VAR VARIABLE IGUAL expresionInt .)


state 501

    (218) asignacionFor -> VAR VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 218 (asignacionFor -> VAR VARIABLE IGUAL expresionDouble .)


state 502

    (102) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL . CIZQ expListString CDER
    (103) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL . expresionNewList
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 536
    NEWLIST         shift and go to state 56

    expresionNewList               shift and go to state 537

state 503

    (106) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL . CIZQ expListInt CDER
    (107) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL . expresionNewList
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 538
    NEWLIST         shift and go to state 56

    expresionNewList               shift and go to state 539

state 504

    (110) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL . CIZQ expListNum CDER
    (111) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL . expresionNewList
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 540
    NEWLIST         shift and go to state 56

    expresionNewList               shift and go to state 541

state 505

    (114) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL . CIZQ expListNum CDER
    (115) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL . expresionNewList
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 542
    NEWLIST         shift and go to state 56

    expresionNewList               shift and go to state 543

state 506

    (117) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL . CIZQ expListBool CDER
    (118) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL . expresionNewList
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 544
    NEWLIST         shift and go to state 56

    expresionNewList               shift and go to state 545

state 507

    (121) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL . CIZQ expListDynamic CDER
    (122) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL . expresionNewList
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 546
    NEWLIST         shift and go to state 56

    expresionNewList               shift and go to state 547

state 508

    (125) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL . CIZQ expListSet CDER
    (126) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL . expresionNewList
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 548
    NEWLIST         shift and go to state 56

    expresionNewList               shift and go to state 549

state 509

    (129) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL . CIZQ expListMap CDER
    (130) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL . expresionNewList
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 550
    NEWLIST         shift and go to state 56

    expresionNewList               shift and go to state 551

state 510

    (163) expListSet -> SETFROM PIZQ CIZQ CDER PDER .
    (165) expListSet -> SETFROM PIZQ CIZQ CDER PDER . COMA expListSet

    CDER            reduce using rule 163 (expListSet -> SETFROM PIZQ CIZQ CDER PDER .)
    COMA            shift and go to state 552


state 511

    (164) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER
    (166) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER COMA expListSet

    PDER            shift and go to state 553


state 512

    (174) expListMap -> VARIABLE COMA . expListMap
    (169) expListMap -> . LIZQ LDER
    (170) expListMap -> . LIZQ expMap LDER
    (171) expListMap -> . LIZQ LDER COMA expListMap
    (172) expListMap -> . LIZQ expMap LDER COMA expListMap
    (173) expListMap -> . VARIABLE
    (174) expListMap -> . VARIABLE COMA expListMap

    LIZQ            shift and go to state 166
    VARIABLE        shift and go to state 472

    expListMap                     shift and go to state 396

state 513

    (172) expListMap -> LIZQ expMap LDER COMA expListMap .

    CDER            reduce using rule 172 (expListMap -> LIZQ expMap LDER COMA expListMap .)


state 514

    (94) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ . CDER PDER
    (96) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 554
    STRING          shift and go to state 268
    ENTERO          shift and go to state 269
    DOUBLE          shift and go to state 270
    BOOL            shift and go to state 271
    VARIABLE        shift and go to state 416

    expListDynamic                 shift and go to state 555

state 515

    (76) expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .

    PUNTOYCOMA      reduce using rule 76 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)


state 516

    (95) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    PUNTOYCOMA      reduce using rule 95 (expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 517

    (63) expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases . LDER

    LDER            shift and go to state 556


state 518

    (64) cases -> caseString .

    LDER            reduce using rule 64 (cases -> caseString .)


state 519

    (65) cases -> caseInt .

    LDER            reduce using rule 65 (cases -> caseInt .)


state 520

    (66) cases -> caseBool .

    LDER            reduce using rule 66 (cases -> caseBool .)


state 521

    (67) caseString -> CASE . STRING DOSPUNTOS final BREAK PUNTOYCOMA
    (68) caseString -> CASE . STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString
    (69) caseInt -> CASE . ENTERO DOSPUNTOS final BREAK PUNTOYCOMA
    (70) caseInt -> CASE . ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt
    (71) caseBool -> CASE . BOOL DOSPUNTOS final BREAK PUNTOYCOMA
    (72) caseBool -> CASE . BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool

    STRING          shift and go to state 557
    ENTERO          shift and go to state 558
    BOOL            shift and go to state 559


state 522

    (259) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .

    PUNTOYCOMA      reduce using rule 259 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    SUMA            reduce using rule 259 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    CIZQ            reduce using rule 259 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    PDER            reduce using rule 259 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)


state 523

    (134) expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER .

    PUNTOYCOMA      reduce using rule 134 (expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER .)


state 524

    (232) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    MAP             reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LIZQ            reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    SWITCH          reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BREAK           reduce using rule 232 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)


state 525

    (89) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    DOSPUNTOS       reduce using rule 89 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    COMA            reduce using rule 89 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    LDER            reduce using rule 89 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 526

    (234) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool . PDER
    (247) comparacionBool -> expresionBool . operadorLogico expresionBool
    (248) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (280) operadorLogico -> . AND
    (281) operadorLogico -> . OR

    PDER            shift and go to state 560
    AND             shift and go to state 69
    OR              shift and go to state 70

    operadorLogico                 shift and go to state 68

state 527

    (197) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    MAP             reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LIZQ            reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    SWITCH          reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BREAK           reduce using rule 197 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)


state 528

    (93) expresionSet -> SETFROM PIZQ CIZQ CDER PDER .
    (88) claveValor -> SETFROM PIZQ CIZQ CDER PDER .

    PUNTOYCOMA      reduce using rule 93 (expresionSet -> SETFROM PIZQ CIZQ CDER PDER .)
    DOSPUNTOS       reduce using rule 88 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)


state 529

    (95) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER
    (89) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 561


state 530

    (201) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    MAP             reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LIZQ            reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    SWITCH          reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BREAK           reduce using rule 201 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)


state 531

    (228) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DSUMA PDER final
    (230) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DRESTA PDER final

    DSUMA           shift and go to state 562
    DRESTA          shift and go to state 563


state 532

    (223) expresionBoolFor -> VARIABLE comparadorMat VARIABLE .
    (239) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (261) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 223 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 239 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 239 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 223 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 239 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 239 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 261 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 261 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 261 (valorInt -> VARIABLE .)
    DIV             reduce using rule 261 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 261 (valorInt -> VARIABLE .)
    MOD             reduce using rule 261 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 261 (valorInt -> VARIABLE .) ]


state 533

    (222) expresionBoolFor -> VARIABLE comparadorMat expresionDouble .
    (238) expresionBool -> VARIABLE comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 222 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 238 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 238 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 534

    (221) expresionBoolFor -> valorDouble comparadorMat expresionDouble .
    (237) expresionBool -> valorDouble comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 221 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 237 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 237 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 535

    (224) expresionBoolFor -> valorDouble comparadorMat VARIABLE .
    (240) expresionBool -> valorDouble comparadorMat VARIABLE .
    (261) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 224 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 240 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 240 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 224 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 240 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 240 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 261 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 261 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 261 (valorInt -> VARIABLE .)
    DIV             reduce using rule 261 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 261 (valorInt -> VARIABLE .)
    MOD             reduce using rule 261 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 261 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 261 (valorInt -> VARIABLE .) ]


state 536

    (102) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ . expListString CDER
    (100) expresionNewList -> CIZQ . CDER
    (135) expListString -> . STRING
    (136) expListString -> . STRING COMA expListString
    (137) expListString -> . VARIABLE
    (138) expListString -> . VARIABLE COMA expListString

    CDER            shift and go to state 153
    STRING          shift and go to state 566
    VARIABLE        shift and go to state 564

    expListString                  shift and go to state 565

state 537

    (103) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 103 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList .)


state 538

    (106) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ . expListInt CDER
    (100) expresionNewList -> CIZQ . CDER
    (139) expListInt -> . ENTERO
    (140) expListInt -> . ENTERO COMA expListInt
    (141) expListInt -> . VARIABLE
    (142) expListInt -> . VARIABLE COMA expListInt

    CDER            shift and go to state 153
    ENTERO          shift and go to state 569
    VARIABLE        shift and go to state 567

    expListInt                     shift and go to state 568

state 539

    (107) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 107 (expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList .)


state 540

    (110) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ . expListNum CDER
    (100) expresionNewList -> CIZQ . CDER
    (143) expListNum -> . ENTERO
    (144) expListNum -> . DOUBLE
    (145) expListNum -> . ENTERO COMA expListNum
    (146) expListNum -> . DOUBLE COMA expListNum
    (147) expListNum -> . VARIABLE
    (148) expListNum -> . VARIABLE COMA expListNum

    CDER            shift and go to state 153
    ENTERO          shift and go to state 572
    DOUBLE          shift and go to state 573
    VARIABLE        shift and go to state 570

    expListNum                     shift and go to state 571

state 541

    (111) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 111 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList .)


state 542

    (114) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ . expListNum CDER
    (100) expresionNewList -> CIZQ . CDER
    (143) expListNum -> . ENTERO
    (144) expListNum -> . DOUBLE
    (145) expListNum -> . ENTERO COMA expListNum
    (146) expListNum -> . DOUBLE COMA expListNum
    (147) expListNum -> . VARIABLE
    (148) expListNum -> . VARIABLE COMA expListNum

    CDER            shift and go to state 153
    ENTERO          shift and go to state 572
    DOUBLE          shift and go to state 573
    VARIABLE        shift and go to state 570

    expListNum                     shift and go to state 574

state 543

    (115) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 115 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList .)


state 544

    (117) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ . expListBool CDER
    (100) expresionNewList -> CIZQ . CDER
    (149) expListBool -> . BOOL
    (150) expListBool -> . BOOL COMA expListBool
    (151) expListBool -> . VARIABLE
    (152) expListBool -> . VARIABLE COMA expListBool

    CDER            shift and go to state 153
    BOOL            shift and go to state 577
    VARIABLE        shift and go to state 575

    expListBool                    shift and go to state 576

state 545

    (118) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 118 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList .)


state 546

    (121) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ . expListDynamic CDER
    (100) expresionNewList -> CIZQ . CDER
    (153) expListDynamic -> . STRING
    (154) expListDynamic -> . ENTERO
    (155) expListDynamic -> . DOUBLE
    (156) expListDynamic -> . BOOL
    (157) expListDynamic -> . STRING COMA expListDynamic
    (158) expListDynamic -> . ENTERO COMA expListDynamic
    (159) expListDynamic -> . DOUBLE COMA expListDynamic
    (160) expListDynamic -> . BOOL COMA expListDynamic
    (161) expListDynamic -> . VARIABLE
    (162) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 153
    STRING          shift and go to state 268
    ENTERO          shift and go to state 269
    DOUBLE          shift and go to state 270
    BOOL            shift and go to state 271
    VARIABLE        shift and go to state 416

    expListDynamic                 shift and go to state 578

state 547

    (122) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 122 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList .)


state 548

    (125) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ . expListSet CDER
    (100) expresionNewList -> CIZQ . CDER
    (163) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (164) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (165) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (166) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (167) expListSet -> . VARIABLE
    (168) expListSet -> . VARIABLE COMA expListSet

    CDER            shift and go to state 153
    SETFROM         shift and go to state 165
    VARIABLE        shift and go to state 579

    expListSet                     shift and go to state 580

state 549

    (126) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 126 (expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList .)


state 550

    (129) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ . expListMap CDER
    (100) expresionNewList -> CIZQ . CDER
    (169) expListMap -> . LIZQ LDER
    (170) expListMap -> . LIZQ expMap LDER
    (171) expListMap -> . LIZQ LDER COMA expListMap
    (172) expListMap -> . LIZQ expMap LDER COMA expListMap
    (173) expListMap -> . VARIABLE
    (174) expListMap -> . VARIABLE COMA expListMap

    CDER            shift and go to state 153
    LIZQ            shift and go to state 166
    VARIABLE        shift and go to state 472

    expListMap                     shift and go to state 581

state 551

    (130) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 130 (expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList .)


state 552

    (165) expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA . expListSet
    (163) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (164) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (165) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (166) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (167) expListSet -> . VARIABLE
    (168) expListSet -> . VARIABLE COMA expListSet

    SETFROM         shift and go to state 165
    VARIABLE        shift and go to state 579

    expListSet                     shift and go to state 582

state 553

    (164) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .
    (166) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER . COMA expListSet

    CDER            reduce using rule 164 (expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    COMA            shift and go to state 583


state 554

    (94) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 584


state 555

    (96) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 585


state 556

    (63) expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .

    PUNTOYCOMA      reduce using rule 63 (expresionSwitch -> SWITCH PIZQ VARIABLE PDER LIZQ cases LDER .)


state 557

    (67) caseString -> CASE STRING . DOSPUNTOS final BREAK PUNTOYCOMA
    (68) caseString -> CASE STRING . DOSPUNTOS final BREAK PUNTOYCOMA caseString

    DOSPUNTOS       shift and go to state 586


state 558

    (69) caseInt -> CASE ENTERO . DOSPUNTOS final BREAK PUNTOYCOMA
    (70) caseInt -> CASE ENTERO . DOSPUNTOS final BREAK PUNTOYCOMA caseInt

    DOSPUNTOS       shift and go to state 587


state 559

    (71) caseBool -> CASE BOOL . DOSPUNTOS final BREAK PUNTOYCOMA
    (72) caseBool -> CASE BOOL . DOSPUNTOS final BREAK PUNTOYCOMA caseBool

    DOSPUNTOS       shift and go to state 588


state 560

    (234) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 234 (sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .)


state 561

    (95) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .
    (89) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    PUNTOYCOMA      reduce using rule 95 (expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    DOSPUNTOS       reduce using rule 89 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 562

    (228) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA . PDER LIZQ final LDER
    (229) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA . PDER final

    PDER            shift and go to state 589


state 563

    (230) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA . PDER LIZQ final LDER
    (231) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA . PDER final

    PDER            shift and go to state 590


state 564

    (137) expListString -> VARIABLE .
    (138) expListString -> VARIABLE . COMA expListString

    CDER            reduce using rule 137 (expListString -> VARIABLE .)
    COMA            shift and go to state 591


state 565

    (102) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString . CDER

    CDER            shift and go to state 592


state 566

    (135) expListString -> STRING .
    (136) expListString -> STRING . COMA expListString

    CDER            reduce using rule 135 (expListString -> STRING .)
    COMA            shift and go to state 593


state 567

    (141) expListInt -> VARIABLE .
    (142) expListInt -> VARIABLE . COMA expListInt

    CDER            reduce using rule 141 (expListInt -> VARIABLE .)
    COMA            shift and go to state 594


state 568

    (106) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt . CDER

    CDER            shift and go to state 595


state 569

    (139) expListInt -> ENTERO .
    (140) expListInt -> ENTERO . COMA expListInt

    CDER            reduce using rule 139 (expListInt -> ENTERO .)
    COMA            shift and go to state 596


state 570

    (147) expListNum -> VARIABLE .
    (148) expListNum -> VARIABLE . COMA expListNum

    CDER            reduce using rule 147 (expListNum -> VARIABLE .)
    COMA            shift and go to state 597


state 571

    (110) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum . CDER

    CDER            shift and go to state 598


state 572

    (143) expListNum -> ENTERO .
    (145) expListNum -> ENTERO . COMA expListNum

    CDER            reduce using rule 143 (expListNum -> ENTERO .)
    COMA            shift and go to state 599


state 573

    (144) expListNum -> DOUBLE .
    (146) expListNum -> DOUBLE . COMA expListNum

    CDER            reduce using rule 144 (expListNum -> DOUBLE .)
    COMA            shift and go to state 600


state 574

    (114) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum . CDER

    CDER            shift and go to state 601


state 575

    (151) expListBool -> VARIABLE .
    (152) expListBool -> VARIABLE . COMA expListBool

    CDER            reduce using rule 151 (expListBool -> VARIABLE .)
    COMA            shift and go to state 602


state 576

    (117) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool . CDER

    CDER            shift and go to state 603


state 577

    (149) expListBool -> BOOL .
    (150) expListBool -> BOOL . COMA expListBool

    CDER            reduce using rule 149 (expListBool -> BOOL .)
    COMA            shift and go to state 604


state 578

    (121) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic . CDER

    CDER            shift and go to state 605


state 579

    (167) expListSet -> VARIABLE .
    (168) expListSet -> VARIABLE . COMA expListSet

    CDER            reduce using rule 167 (expListSet -> VARIABLE .)
    COMA            shift and go to state 606


state 580

    (125) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet . CDER

    CDER            shift and go to state 607


state 581

    (129) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap . CDER

    CDER            shift and go to state 608


state 582

    (165) expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet .

    CDER            reduce using rule 165 (expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet .)


state 583

    (166) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA . expListSet
    (163) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (164) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (165) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (166) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (167) expListSet -> . VARIABLE
    (168) expListSet -> . VARIABLE COMA expListSet

    SETFROM         shift and go to state 165
    VARIABLE        shift and go to state 579

    expListSet                     shift and go to state 609

state 584

    (94) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER .

    PUNTOYCOMA      reduce using rule 94 (expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER .)


state 585

    (96) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 610


state 586

    (67) caseString -> CASE STRING DOSPUNTOS . final BREAK PUNTOYCOMA
    (68) caseString -> CASE STRING DOSPUNTOS . final BREAK PUNTOYCOMA caseString
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

    final                          shift and go to state 611
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 587

    (69) caseInt -> CASE ENTERO DOSPUNTOS . final BREAK PUNTOYCOMA
    (70) caseInt -> CASE ENTERO DOSPUNTOS . final BREAK PUNTOYCOMA caseInt
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

    final                          shift and go to state 612
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 588

    (71) caseBool -> CASE BOOL DOSPUNTOS . final BREAK PUNTOYCOMA
    (72) caseBool -> CASE BOOL DOSPUNTOS . final BREAK PUNTOYCOMA caseBool
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    LIZQ            shift and go to state 41
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

    final                          shift and go to state 613
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 589

    (228) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER . LIZQ final LDER
    (229) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 614
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 615
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 590

    (230) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER . LIZQ final LDER
    (231) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 616
    VARIABLE        shift and go to state 20
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 53
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 57
    MAP             shift and go to state 55
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 59
    ENTERO          shift and go to state 51
    DOUBLE          shift and go to state 60
    STRING          shift and go to state 61

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 617
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 591

    (138) expListString -> VARIABLE COMA . expListString
    (135) expListString -> . STRING
    (136) expListString -> . STRING COMA expListString
    (137) expListString -> . VARIABLE
    (138) expListString -> . VARIABLE COMA expListString

    STRING          shift and go to state 566
    VARIABLE        shift and go to state 564

    expListString                  shift and go to state 390

state 592

    (102) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER .

    PUNTOYCOMA      reduce using rule 102 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER .)


state 593

    (136) expListString -> STRING COMA . expListString
    (135) expListString -> . STRING
    (136) expListString -> . STRING COMA expListString
    (137) expListString -> . VARIABLE
    (138) expListString -> . VARIABLE COMA expListString

    STRING          shift and go to state 566
    VARIABLE        shift and go to state 564

    expListString                  shift and go to state 387

state 594

    (142) expListInt -> VARIABLE COMA . expListInt
    (139) expListInt -> . ENTERO
    (140) expListInt -> . ENTERO COMA expListInt
    (141) expListInt -> . VARIABLE
    (142) expListInt -> . VARIABLE COMA expListInt

    ENTERO          shift and go to state 569
    VARIABLE        shift and go to state 567

    expListInt                     shift and go to state 391

state 595

    (106) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER .

    PUNTOYCOMA      reduce using rule 106 (expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER .)


state 596

    (140) expListInt -> ENTERO COMA . expListInt
    (139) expListInt -> . ENTERO
    (140) expListInt -> . ENTERO COMA expListInt
    (141) expListInt -> . VARIABLE
    (142) expListInt -> . VARIABLE COMA expListInt

    ENTERO          shift and go to state 569
    VARIABLE        shift and go to state 567

    expListInt                     shift and go to state 397

state 597

    (148) expListNum -> VARIABLE COMA . expListNum
    (143) expListNum -> . ENTERO
    (144) expListNum -> . DOUBLE
    (145) expListNum -> . ENTERO COMA expListNum
    (146) expListNum -> . DOUBLE COMA expListNum
    (147) expListNum -> . VARIABLE
    (148) expListNum -> . VARIABLE COMA expListNum

    ENTERO          shift and go to state 572
    DOUBLE          shift and go to state 573
    VARIABLE        shift and go to state 570

    expListNum                     shift and go to state 392

state 598

    (110) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 110 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER .)


state 599

    (145) expListNum -> ENTERO COMA . expListNum
    (143) expListNum -> . ENTERO
    (144) expListNum -> . DOUBLE
    (145) expListNum -> . ENTERO COMA expListNum
    (146) expListNum -> . DOUBLE COMA expListNum
    (147) expListNum -> . VARIABLE
    (148) expListNum -> . VARIABLE COMA expListNum

    ENTERO          shift and go to state 572
    DOUBLE          shift and go to state 573
    VARIABLE        shift and go to state 570

    expListNum                     shift and go to state 398

state 600

    (146) expListNum -> DOUBLE COMA . expListNum
    (143) expListNum -> . ENTERO
    (144) expListNum -> . DOUBLE
    (145) expListNum -> . ENTERO COMA expListNum
    (146) expListNum -> . DOUBLE COMA expListNum
    (147) expListNum -> . VARIABLE
    (148) expListNum -> . VARIABLE COMA expListNum

    ENTERO          shift and go to state 572
    DOUBLE          shift and go to state 573
    VARIABLE        shift and go to state 570

    expListNum                     shift and go to state 401

state 601

    (114) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 114 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER .)


state 602

    (152) expListBool -> VARIABLE COMA . expListBool
    (149) expListBool -> . BOOL
    (150) expListBool -> . BOOL COMA expListBool
    (151) expListBool -> . VARIABLE
    (152) expListBool -> . VARIABLE COMA expListBool

    BOOL            shift and go to state 577
    VARIABLE        shift and go to state 575

    expListBool                    shift and go to state 393

state 603

    (117) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER .

    PUNTOYCOMA      reduce using rule 117 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER .)


state 604

    (150) expListBool -> BOOL COMA . expListBool
    (149) expListBool -> . BOOL
    (150) expListBool -> . BOOL COMA expListBool
    (151) expListBool -> . VARIABLE
    (152) expListBool -> . VARIABLE COMA expListBool

    BOOL            shift and go to state 577
    VARIABLE        shift and go to state 575

    expListBool                    shift and go to state 405

state 605

    (121) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 121 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER .)


state 606

    (168) expListSet -> VARIABLE COMA . expListSet
    (163) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (164) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (165) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (166) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (167) expListSet -> . VARIABLE
    (168) expListSet -> . VARIABLE COMA expListSet

    SETFROM         shift and go to state 165
    VARIABLE        shift and go to state 579

    expListSet                     shift and go to state 395

state 607

    (125) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER .

    PUNTOYCOMA      reduce using rule 125 (expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER .)


state 608

    (129) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER .

    PUNTOYCOMA      reduce using rule 129 (expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER .)


state 609

    (166) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet .

    CDER            reduce using rule 166 (expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet .)


state 610

    (96) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    PUNTOYCOMA      reduce using rule 96 (expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 611

    (67) caseString -> CASE STRING DOSPUNTOS final . BREAK PUNTOYCOMA
    (68) caseString -> CASE STRING DOSPUNTOS final . BREAK PUNTOYCOMA caseString

    BREAK           shift and go to state 618


state 612

    (69) caseInt -> CASE ENTERO DOSPUNTOS final . BREAK PUNTOYCOMA
    (70) caseInt -> CASE ENTERO DOSPUNTOS final . BREAK PUNTOYCOMA caseInt

    BREAK           shift and go to state 619


state 613

    (71) caseBool -> CASE BOOL DOSPUNTOS final . BREAK PUNTOYCOMA
    (72) caseBool -> CASE BOOL DOSPUNTOS final . BREAK PUNTOYCOMA caseBool

    BREAK           shift and go to state 620


state 614

    (228) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ . final LDER
    (75) expresionMap -> LIZQ . LDER
    (77) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (78) expMap -> . claveValor DOSPUNTOS claveValor
    (79) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (80) claveValor -> . VARIABLE
    (81) claveValor -> . STRING
    (82) claveValor -> . ENTERO
    (83) claveValor -> . DOUBLE
    (84) claveValor -> . BOOL
    (85) claveValor -> . CIZQ expListDynamic CDER
    (86) claveValor -> . CIZQ expListSet CDER
    (87) claveValor -> . expresionNewList
    (88) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (89) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) claveValor -> . LIZQ LDER
    (91) claveValor -> . LIZQ expMap LDER
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 131
    VARIABLE        shift and go to state 278
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 281
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 282
    MAP             shift and go to state 55
    LIZQ            shift and go to state 276
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 283
    STRING          shift and go to state 284
    ENTERO          shift and go to state 280
    DOUBLE          shift and go to state 285

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 621
    expMap                         shift and go to state 132
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 279
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    claveValor                     shift and go to state 133
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 615

    (229) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .

    PUNTOYCOMA      reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    VARIABLE        reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    INT             reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DOUBLER         reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NUM             reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    STRINGR         reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BOOLR           reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DYNAMIC         reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    VAR             reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    WHILE           reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DO              reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    IF              reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ELSE            reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    PRINT           reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FUNCIONSTDIN    reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FUNCIONSTDOUT   reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NOT             reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ELSEIF          reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FOR             reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LIST            reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    CIZQ            reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NEWLIST         reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    SET             reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    SETFROM         reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    MAP             reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LIZQ            reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    SWITCH          reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BOOL            reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ENTERO          reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DOUBLE          reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    STRING          reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    $end            reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LDER            reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BREAK           reduce using rule 229 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)


state 616

    (230) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ . final LDER
    (75) expresionMap -> LIZQ . LDER
    (77) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch PUNTOYCOMA
    (60) final -> . expresionSwitch PUNTOYCOMA final
    (61) final -> . declaracionSimple PUNTOYCOMA
    (62) final -> . declaracionSimple PUNTOYCOMA final
    (78) expMap -> . claveValor DOSPUNTOS claveValor
    (79) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (175) asignacion -> . INT VARIABLE IGUAL expresionInt
    (176) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (177) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (178) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (179) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (180) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (181) asignacion -> . VAR VARIABLE IGUAL expresion
    (182) asignacion -> . asignacionSimple
    (262) expresionInt -> . valorInt operadorMat expresionInt
    (263) expresionInt -> . valorInt
    (266) expresionDouble -> . valorDouble operadorMat expresionDouble
    (267) expresionDouble -> . valorDouble
    (255) expresionString -> . valorString SUMA expresionString
    (256) expresionString -> . valorString
    (237) expresionBool -> . valorDouble comparadorMat expresionDouble
    (238) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (239) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (240) expresionBool -> . valorDouble comparadorMat VARIABLE
    (241) expresionBool -> . valorBool
    (242) expresionBool -> . negacionBool
    (243) expresionBool -> . comparacionBool
    (244) expresionBool -> . valor IS objeto
    (245) expresionBool -> . valor ISNEGADO objeto
    (221) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (222) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (223) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (224) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (225) expresionBoolFor -> . valorBool
    (226) expresionBoolFor -> . negacionBool
    (227) expresionBoolFor -> . comparacionBool
    (232) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (233) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (234) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (196) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (197) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (198) sentenciaElse -> . ELSE final
    (199) sentenciaElse -> . ELSE LIZQ final LDER
    (191) imprimir -> . PRINT PIZQ expresion PDER
    (192) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (193) funcionStdin -> . FUNCIONSTDIN
    (194) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (195) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (246) negacionBool -> . NOT PIZQ expresionBool PDER
    (247) comparacionBool -> . expresionBool operadorLogico expresionBool
    (248) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (201) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (228) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (229) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (230) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (231) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (258) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (259) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (101) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (103) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . CIZQ expListString CDER
    (105) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (106) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (107) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> . CIZQ expListInt CDER
    (109) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (110) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (111) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> . CIZQ expListNum CDER
    (113) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (114) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (115) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (118) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListBool CDER
    (120) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (121) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (122) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (123) expresionLista -> . CIZQ expListDynamic CDER
    (124) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (125) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (126) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (127) expresionLista -> . CIZQ expListSet CDER
    (128) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (129) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (130) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (131) expresionLista -> . CIZQ expListMap CDER
    (132) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (133) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (134) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (98) expresionNewList -> . NEWLIST PIZQ PDER
    (99) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (100) expresionNewList -> . CIZQ CDER
    (92) expresionSet -> . SET VARIABLE
    (93) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (94) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (95) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (96) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (97) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (73) expresionMap -> . MAP VARIABLE
    (74) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (75) expresionMap -> . LIZQ LDER
    (76) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (77) expresionMap -> . LIZQ expMap LDER
    (63) expresionSwitch -> . SWITCH PIZQ VARIABLE PDER LIZQ cases LDER
    (184) declaracionSimple -> . STRINGR VARIABLE
    (185) declaracionSimple -> . INT VARIABLE
    (186) declaracionSimple -> . DOUBLER VARIABLE
    (187) declaracionSimple -> . NUM VARIABLE
    (188) declaracionSimple -> . VAR VARIABLE
    (189) declaracionSimple -> . DYNAMIC VARIABLE
    (190) declaracionSimple -> . BOOL VARIABLE
    (80) claveValor -> . VARIABLE
    (81) claveValor -> . STRING
    (82) claveValor -> . ENTERO
    (83) claveValor -> . DOUBLE
    (84) claveValor -> . BOOL
    (85) claveValor -> . CIZQ expListDynamic CDER
    (86) claveValor -> . CIZQ expListSet CDER
    (87) claveValor -> . expresionNewList
    (88) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (89) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (90) claveValor -> . LIZQ LDER
    (91) claveValor -> . LIZQ expMap LDER
    (183) asignacionSimple -> . VARIABLE IGUAL expresion
    (260) valorInt -> . ENTERO
    (261) valorInt -> . VARIABLE
    (264) valorDouble -> . DOUBLE
    (265) valorDouble -> . valorInt
    (249) valorString -> . STRING
    (250) valorString -> . VARIABLE
    (251) valorString -> . FUNCIONSTDIN
    (252) valorString -> . expresionIndexString
    (253) valorString -> . sentenciaSubstring
    (254) valorString -> . STRING CIZQ ENTERO CDER
    (235) valorBool -> . BOOL
    (236) valorBool -> . VARIABLE
    (202) valor -> . ENTERO
    (203) valor -> . VARIABLE
    (204) valor -> . DOUBLE
    (205) valor -> . STRING
    (257) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 131
    VARIABLE        shift and go to state 278
    INT             shift and go to state 27
    DOUBLER         shift and go to state 28
    NUM             shift and go to state 29
    STRINGR         shift and go to state 30
    BOOLR           shift and go to state 31
    DYNAMIC         shift and go to state 32
    VAR             shift and go to state 33
    WHILE           shift and go to state 40
    DO              shift and go to state 42
    IF              shift and go to state 43
    ELSE            shift and go to state 44
    PRINT           shift and go to state 45
    FUNCIONSTDIN    shift and go to state 46
    FUNCIONSTDOUT   shift and go to state 47
    NOT             shift and go to state 48
    ELSEIF          shift and go to state 49
    FOR             shift and go to state 50
    LIST            shift and go to state 52
    CIZQ            shift and go to state 281
    NEWLIST         shift and go to state 56
    SET             shift and go to state 54
    SETFROM         shift and go to state 282
    MAP             shift and go to state 55
    LIZQ            shift and go to state 276
    SWITCH          shift and go to state 58
    BOOL            shift and go to state 283
    STRING          shift and go to state 284
    ENTERO          shift and go to state 280
    DOUBLE          shift and go to state 285

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 622
    expMap                         shift and go to state 132
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 279
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    declaracionSimple              shift and go to state 26
    claveValor                     shift and go to state 133
    asignacionSimple               shift and go to state 34
    valorInt                       shift and go to state 35
    valorDouble                    shift and go to state 36
    valorString                    shift and go to state 37
    valorBool                      shift and go to state 38
    valor                          shift and go to state 39
    expresionIndexString           shift and go to state 62

state 617

    (231) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .

    PUNTOYCOMA      reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    VARIABLE        reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    INT             reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DOUBLER         reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NUM             reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    STRINGR         reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BOOLR           reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DYNAMIC         reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    VAR             reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    WHILE           reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DO              reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    IF              reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ELSE            reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    PRINT           reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FUNCIONSTDIN    reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FUNCIONSTDOUT   reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NOT             reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ELSEIF          reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FOR             reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LIST            reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    CIZQ            reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NEWLIST         reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    SET             reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    SETFROM         reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    MAP             reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LIZQ            reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    SWITCH          reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BOOL            reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ENTERO          reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DOUBLE          reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    STRING          reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    $end            reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LDER            reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BREAK           reduce using rule 231 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)


state 618

    (67) caseString -> CASE STRING DOSPUNTOS final BREAK . PUNTOYCOMA
    (68) caseString -> CASE STRING DOSPUNTOS final BREAK . PUNTOYCOMA caseString

    PUNTOYCOMA      shift and go to state 623


state 619

    (69) caseInt -> CASE ENTERO DOSPUNTOS final BREAK . PUNTOYCOMA
    (70) caseInt -> CASE ENTERO DOSPUNTOS final BREAK . PUNTOYCOMA caseInt

    PUNTOYCOMA      shift and go to state 624


state 620

    (71) caseBool -> CASE BOOL DOSPUNTOS final BREAK . PUNTOYCOMA
    (72) caseBool -> CASE BOOL DOSPUNTOS final BREAK . PUNTOYCOMA caseBool

    PUNTOYCOMA      shift and go to state 625


state 621

    (228) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final . LDER

    LDER            shift and go to state 626


state 622

    (230) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final . LDER

    LDER            shift and go to state 627


state 623

    (67) caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA .
    (68) caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA . caseString
    (67) caseString -> . CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA
    (68) caseString -> . CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString

    LDER            reduce using rule 67 (caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA .)
    CASE            shift and go to state 628

    caseString                     shift and go to state 629

state 624

    (69) caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA .
    (70) caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA . caseInt
    (69) caseInt -> . CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA
    (70) caseInt -> . CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt

    LDER            reduce using rule 69 (caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA .)
    CASE            shift and go to state 630

    caseInt                        shift and go to state 631

state 625

    (71) caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA .
    (72) caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA . caseBool
    (71) caseBool -> . CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA
    (72) caseBool -> . CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool

    LDER            reduce using rule 71 (caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA .)
    CASE            shift and go to state 632

    caseBool                       shift and go to state 633

state 626

    (228) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    INT             reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NUM             reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    STRINGR         reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BOOLR           reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    VAR             reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    WHILE           reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DO              reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    IF              reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ELSE            reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    PRINT           reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NOT             reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FOR             reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LIST            reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    CIZQ            reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    SET             reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    SETFROM         reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    MAP             reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LIZQ            reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    SWITCH          reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BOOL            reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ENTERO          reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    STRING          reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    $end            reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LDER            reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BREAK           reduce using rule 228 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)


state 627

    (230) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    INT             reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NUM             reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    STRINGR         reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BOOLR           reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    VAR             reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    WHILE           reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DO              reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    IF              reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ELSE            reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    PRINT           reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NOT             reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FOR             reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LIST            reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    CIZQ            reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    SET             reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    SETFROM         reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    MAP             reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LIZQ            reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    SWITCH          reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BOOL            reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ENTERO          reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    STRING          reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    $end            reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LDER            reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BREAK           reduce using rule 230 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)


state 628

    (67) caseString -> CASE . STRING DOSPUNTOS final BREAK PUNTOYCOMA
    (68) caseString -> CASE . STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString

    STRING          shift and go to state 557


state 629

    (68) caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString .

    LDER            reduce using rule 68 (caseString -> CASE STRING DOSPUNTOS final BREAK PUNTOYCOMA caseString .)


state 630

    (69) caseInt -> CASE . ENTERO DOSPUNTOS final BREAK PUNTOYCOMA
    (70) caseInt -> CASE . ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt

    ENTERO          shift and go to state 558


state 631

    (70) caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt .

    LDER            reduce using rule 70 (caseInt -> CASE ENTERO DOSPUNTOS final BREAK PUNTOYCOMA caseInt .)


state 632

    (71) caseBool -> CASE . BOOL DOSPUNTOS final BREAK PUNTOYCOMA
    (72) caseBool -> CASE . BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool

    BOOL            shift and go to state 559


state 633

    (72) caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool .

    LDER            reduce using rule 72 (caseBool -> CASE BOOL DOSPUNTOS final BREAK PUNTOYCOMA caseBool .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 8 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 8 resolved as shift
WARNING: shift/reduce conflict for INT in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 8 resolved as shift
WARNING: shift/reduce conflict for NUM in state 8 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 8 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 8 resolved as shift
WARNING: shift/reduce conflict for VAR in state 8 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 8 resolved as shift
WARNING: shift/reduce conflict for DO in state 8 resolved as shift
WARNING: shift/reduce conflict for IF in state 8 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 8 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 8 resolved as shift
WARNING: shift/reduce conflict for NOT in state 8 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 8 resolved as shift
WARNING: shift/reduce conflict for FOR in state 8 resolved as shift
WARNING: shift/reduce conflict for LIST in state 8 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 8 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 8 resolved as shift
WARNING: shift/reduce conflict for SET in state 8 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 8 resolved as shift
WARNING: shift/reduce conflict for MAP in state 8 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 8 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 8 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 8 resolved as shift
WARNING: shift/reduce conflict for STRING in state 8 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 10 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 10 resolved as shift
WARNING: shift/reduce conflict for INT in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 10 resolved as shift
WARNING: shift/reduce conflict for NUM in state 10 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 10 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 10 resolved as shift
WARNING: shift/reduce conflict for VAR in state 10 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 10 resolved as shift
WARNING: shift/reduce conflict for DO in state 10 resolved as shift
WARNING: shift/reduce conflict for IF in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 10 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 10 resolved as shift
WARNING: shift/reduce conflict for NOT in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 10 resolved as shift
WARNING: shift/reduce conflict for FOR in state 10 resolved as shift
WARNING: shift/reduce conflict for LIST in state 10 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 10 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 10 resolved as shift
WARNING: shift/reduce conflict for SET in state 10 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 10 resolved as shift
WARNING: shift/reduce conflict for MAP in state 10 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 10 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 10 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 10 resolved as shift
WARNING: shift/reduce conflict for STRING in state 10 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 11 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 11 resolved as shift
WARNING: shift/reduce conflict for INT in state 11 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 11 resolved as shift
WARNING: shift/reduce conflict for NUM in state 11 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 11 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 11 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 11 resolved as shift
WARNING: shift/reduce conflict for VAR in state 11 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 11 resolved as shift
WARNING: shift/reduce conflict for DO in state 11 resolved as shift
WARNING: shift/reduce conflict for IF in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 11 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 11 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 11 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 11 resolved as shift
WARNING: shift/reduce conflict for NOT in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 11 resolved as shift
WARNING: shift/reduce conflict for FOR in state 11 resolved as shift
WARNING: shift/reduce conflict for LIST in state 11 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 11 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 11 resolved as shift
WARNING: shift/reduce conflict for SET in state 11 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 11 resolved as shift
WARNING: shift/reduce conflict for MAP in state 11 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 11 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 11 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 11 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 11 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 11 resolved as shift
WARNING: shift/reduce conflict for STRING in state 11 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 17 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 17 resolved as shift
WARNING: shift/reduce conflict for INT in state 17 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 17 resolved as shift
WARNING: shift/reduce conflict for NUM in state 17 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 17 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 17 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 17 resolved as shift
WARNING: shift/reduce conflict for VAR in state 17 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 17 resolved as shift
WARNING: shift/reduce conflict for DO in state 17 resolved as shift
WARNING: shift/reduce conflict for IF in state 17 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 17 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 17 resolved as shift
WARNING: shift/reduce conflict for NOT in state 17 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 17 resolved as shift
WARNING: shift/reduce conflict for FOR in state 17 resolved as shift
WARNING: shift/reduce conflict for LIST in state 17 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 17 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 17 resolved as shift
WARNING: shift/reduce conflict for SET in state 17 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 17 resolved as shift
WARNING: shift/reduce conflict for MAP in state 17 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 17 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 17 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 17 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 17 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 17 resolved as shift
WARNING: shift/reduce conflict for STRING in state 17 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 18 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 18 resolved as shift
WARNING: shift/reduce conflict for INT in state 18 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 18 resolved as shift
WARNING: shift/reduce conflict for NUM in state 18 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 18 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 18 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 18 resolved as shift
WARNING: shift/reduce conflict for VAR in state 18 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 18 resolved as shift
WARNING: shift/reduce conflict for DO in state 18 resolved as shift
WARNING: shift/reduce conflict for IF in state 18 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 18 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 18 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 18 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 18 resolved as shift
WARNING: shift/reduce conflict for NOT in state 18 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 18 resolved as shift
WARNING: shift/reduce conflict for FOR in state 18 resolved as shift
WARNING: shift/reduce conflict for LIST in state 18 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 18 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 18 resolved as shift
WARNING: shift/reduce conflict for SET in state 18 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 18 resolved as shift
WARNING: shift/reduce conflict for MAP in state 18 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 18 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 18 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 18 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 18 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 18 resolved as shift
WARNING: shift/reduce conflict for STRING in state 18 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 19 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 20 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 35 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 35 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 35 resolved as shift
WARNING: shift/reduce conflict for DIV in state 35 resolved as shift
WARNING: shift/reduce conflict for DIVENTERO in state 35 resolved as shift
WARNING: shift/reduce conflict for MOD in state 35 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 61 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 63 resolved as shift
WARNING: shift/reduce conflict for INT in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 63 resolved as shift
WARNING: shift/reduce conflict for NUM in state 63 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 63 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 63 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 63 resolved as shift
WARNING: shift/reduce conflict for VAR in state 63 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 63 resolved as shift
WARNING: shift/reduce conflict for DO in state 63 resolved as shift
WARNING: shift/reduce conflict for IF in state 63 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 63 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 63 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 63 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 63 resolved as shift
WARNING: shift/reduce conflict for NOT in state 63 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 63 resolved as shift
WARNING: shift/reduce conflict for FOR in state 63 resolved as shift
WARNING: shift/reduce conflict for LIST in state 63 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 63 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 63 resolved as shift
WARNING: shift/reduce conflict for SET in state 63 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 63 resolved as shift
WARNING: shift/reduce conflict for MAP in state 63 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 63 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 63 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 63 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 63 resolved as shift
WARNING: shift/reduce conflict for STRING in state 63 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 64 resolved as shift
WARNING: shift/reduce conflict for INT in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 64 resolved as shift
WARNING: shift/reduce conflict for NUM in state 64 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 64 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 64 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 64 resolved as shift
WARNING: shift/reduce conflict for VAR in state 64 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 64 resolved as shift
WARNING: shift/reduce conflict for DO in state 64 resolved as shift
WARNING: shift/reduce conflict for IF in state 64 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 64 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 64 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 64 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 64 resolved as shift
WARNING: shift/reduce conflict for NOT in state 64 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 64 resolved as shift
WARNING: shift/reduce conflict for FOR in state 64 resolved as shift
WARNING: shift/reduce conflict for LIST in state 64 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 64 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 64 resolved as shift
WARNING: shift/reduce conflict for SET in state 64 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 64 resolved as shift
WARNING: shift/reduce conflict for MAP in state 64 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 64 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 64 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 64 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 64 resolved as shift
WARNING: shift/reduce conflict for STRING in state 64 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 65 resolved as shift
WARNING: shift/reduce conflict for INT in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 65 resolved as shift
WARNING: shift/reduce conflict for NUM in state 65 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 65 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 65 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 65 resolved as shift
WARNING: shift/reduce conflict for VAR in state 65 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 65 resolved as shift
WARNING: shift/reduce conflict for DO in state 65 resolved as shift
WARNING: shift/reduce conflict for IF in state 65 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 65 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 65 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 65 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 65 resolved as shift
WARNING: shift/reduce conflict for NOT in state 65 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 65 resolved as shift
WARNING: shift/reduce conflict for FOR in state 65 resolved as shift
WARNING: shift/reduce conflict for LIST in state 65 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 65 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 65 resolved as shift
WARNING: shift/reduce conflict for SET in state 65 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 65 resolved as shift
WARNING: shift/reduce conflict for MAP in state 65 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 65 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 65 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 65 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 65 resolved as shift
WARNING: shift/reduce conflict for STRING in state 65 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 66 resolved as shift
WARNING: shift/reduce conflict for INT in state 66 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 66 resolved as shift
WARNING: shift/reduce conflict for NUM in state 66 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 66 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 66 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 66 resolved as shift
WARNING: shift/reduce conflict for VAR in state 66 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 66 resolved as shift
WARNING: shift/reduce conflict for DO in state 66 resolved as shift
WARNING: shift/reduce conflict for IF in state 66 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 66 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 66 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 66 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 66 resolved as shift
WARNING: shift/reduce conflict for NOT in state 66 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 66 resolved as shift
WARNING: shift/reduce conflict for FOR in state 66 resolved as shift
WARNING: shift/reduce conflict for LIST in state 66 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 66 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 66 resolved as shift
WARNING: shift/reduce conflict for SET in state 66 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 66 resolved as shift
WARNING: shift/reduce conflict for MAP in state 66 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 66 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 66 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 66 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 66 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 66 resolved as shift
WARNING: shift/reduce conflict for STRING in state 66 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 67 resolved as shift
WARNING: shift/reduce conflict for INT in state 67 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 67 resolved as shift
WARNING: shift/reduce conflict for NUM in state 67 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 67 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 67 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 67 resolved as shift
WARNING: shift/reduce conflict for VAR in state 67 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 67 resolved as shift
WARNING: shift/reduce conflict for DO in state 67 resolved as shift
WARNING: shift/reduce conflict for IF in state 67 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 67 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 67 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 67 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 67 resolved as shift
WARNING: shift/reduce conflict for NOT in state 67 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 67 resolved as shift
WARNING: shift/reduce conflict for FOR in state 67 resolved as shift
WARNING: shift/reduce conflict for LIST in state 67 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 67 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 67 resolved as shift
WARNING: shift/reduce conflict for SET in state 67 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 67 resolved as shift
WARNING: shift/reduce conflict for MAP in state 67 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 67 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 67 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 67 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 67 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 67 resolved as shift
WARNING: shift/reduce conflict for STRING in state 67 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 71 resolved as shift
WARNING: shift/reduce conflict for INT in state 71 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 71 resolved as shift
WARNING: shift/reduce conflict for NUM in state 71 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 71 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 71 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 71 resolved as shift
WARNING: shift/reduce conflict for VAR in state 71 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 71 resolved as shift
WARNING: shift/reduce conflict for DO in state 71 resolved as shift
WARNING: shift/reduce conflict for IF in state 71 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 71 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 71 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 71 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 71 resolved as shift
WARNING: shift/reduce conflict for NOT in state 71 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 71 resolved as shift
WARNING: shift/reduce conflict for FOR in state 71 resolved as shift
WARNING: shift/reduce conflict for LIST in state 71 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 71 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 71 resolved as shift
WARNING: shift/reduce conflict for SET in state 71 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 71 resolved as shift
WARNING: shift/reduce conflict for MAP in state 71 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 71 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 71 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 71 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 71 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 71 resolved as shift
WARNING: shift/reduce conflict for STRING in state 71 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 73 resolved as shift
WARNING: shift/reduce conflict for INT in state 73 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 73 resolved as shift
WARNING: shift/reduce conflict for NUM in state 73 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 73 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 73 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 73 resolved as shift
WARNING: shift/reduce conflict for VAR in state 73 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 73 resolved as shift
WARNING: shift/reduce conflict for DO in state 73 resolved as shift
WARNING: shift/reduce conflict for IF in state 73 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 73 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 73 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 73 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 73 resolved as shift
WARNING: shift/reduce conflict for NOT in state 73 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 73 resolved as shift
WARNING: shift/reduce conflict for FOR in state 73 resolved as shift
WARNING: shift/reduce conflict for LIST in state 73 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 73 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 73 resolved as shift
WARNING: shift/reduce conflict for SET in state 73 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 73 resolved as shift
WARNING: shift/reduce conflict for MAP in state 73 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 73 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 73 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 73 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 73 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 73 resolved as shift
WARNING: shift/reduce conflict for STRING in state 73 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 74 resolved as shift
WARNING: shift/reduce conflict for INT in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 74 resolved as shift
WARNING: shift/reduce conflict for NUM in state 74 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 74 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 74 resolved as shift
WARNING: shift/reduce conflict for VAR in state 74 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 74 resolved as shift
WARNING: shift/reduce conflict for DO in state 74 resolved as shift
WARNING: shift/reduce conflict for IF in state 74 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 74 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 74 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 74 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 74 resolved as shift
WARNING: shift/reduce conflict for NOT in state 74 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 74 resolved as shift
WARNING: shift/reduce conflict for FOR in state 74 resolved as shift
WARNING: shift/reduce conflict for LIST in state 74 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 74 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 74 resolved as shift
WARNING: shift/reduce conflict for SET in state 74 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 74 resolved as shift
WARNING: shift/reduce conflict for MAP in state 74 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 74 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 74 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 74 resolved as shift
WARNING: shift/reduce conflict for STRING in state 74 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 75 resolved as shift
WARNING: shift/reduce conflict for INT in state 75 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 75 resolved as shift
WARNING: shift/reduce conflict for NUM in state 75 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 75 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 75 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 75 resolved as shift
WARNING: shift/reduce conflict for VAR in state 75 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 75 resolved as shift
WARNING: shift/reduce conflict for DO in state 75 resolved as shift
WARNING: shift/reduce conflict for IF in state 75 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 75 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 75 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 75 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 75 resolved as shift
WARNING: shift/reduce conflict for NOT in state 75 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 75 resolved as shift
WARNING: shift/reduce conflict for FOR in state 75 resolved as shift
WARNING: shift/reduce conflict for LIST in state 75 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 75 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 75 resolved as shift
WARNING: shift/reduce conflict for SET in state 75 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 75 resolved as shift
WARNING: shift/reduce conflict for MAP in state 75 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 75 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 75 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 75 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 75 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 75 resolved as shift
WARNING: shift/reduce conflict for STRING in state 75 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 77 resolved as shift
WARNING: shift/reduce conflict for INT in state 77 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 77 resolved as shift
WARNING: shift/reduce conflict for NUM in state 77 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 77 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 77 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 77 resolved as shift
WARNING: shift/reduce conflict for VAR in state 77 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 77 resolved as shift
WARNING: shift/reduce conflict for DO in state 77 resolved as shift
WARNING: shift/reduce conflict for IF in state 77 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 77 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 77 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 77 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 77 resolved as shift
WARNING: shift/reduce conflict for NOT in state 77 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 77 resolved as shift
WARNING: shift/reduce conflict for FOR in state 77 resolved as shift
WARNING: shift/reduce conflict for LIST in state 77 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 77 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 77 resolved as shift
WARNING: shift/reduce conflict for SET in state 77 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 77 resolved as shift
WARNING: shift/reduce conflict for MAP in state 77 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 77 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 77 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 77 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 77 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 77 resolved as shift
WARNING: shift/reduce conflict for STRING in state 77 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 79 resolved as shift
WARNING: shift/reduce conflict for INT in state 79 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 79 resolved as shift
WARNING: shift/reduce conflict for NUM in state 79 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 79 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 79 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 79 resolved as shift
WARNING: shift/reduce conflict for VAR in state 79 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 79 resolved as shift
WARNING: shift/reduce conflict for DO in state 79 resolved as shift
WARNING: shift/reduce conflict for IF in state 79 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 79 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 79 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 79 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 79 resolved as shift
WARNING: shift/reduce conflict for NOT in state 79 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 79 resolved as shift
WARNING: shift/reduce conflict for FOR in state 79 resolved as shift
WARNING: shift/reduce conflict for LIST in state 79 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 79 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 79 resolved as shift
WARNING: shift/reduce conflict for SET in state 79 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 79 resolved as shift
WARNING: shift/reduce conflict for MAP in state 79 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 79 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 79 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 79 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 79 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 79 resolved as shift
WARNING: shift/reduce conflict for STRING in state 79 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 80 resolved as shift
WARNING: shift/reduce conflict for INT in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 80 resolved as shift
WARNING: shift/reduce conflict for NUM in state 80 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 80 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 80 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 80 resolved as shift
WARNING: shift/reduce conflict for VAR in state 80 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 80 resolved as shift
WARNING: shift/reduce conflict for DO in state 80 resolved as shift
WARNING: shift/reduce conflict for IF in state 80 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 80 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 80 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 80 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 80 resolved as shift
WARNING: shift/reduce conflict for NOT in state 80 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 80 resolved as shift
WARNING: shift/reduce conflict for FOR in state 80 resolved as shift
WARNING: shift/reduce conflict for LIST in state 80 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 80 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 80 resolved as shift
WARNING: shift/reduce conflict for SET in state 80 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 80 resolved as shift
WARNING: shift/reduce conflict for MAP in state 80 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 80 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 80 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 80 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 80 resolved as shift
WARNING: shift/reduce conflict for STRING in state 80 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 81 resolved as shift
WARNING: shift/reduce conflict for INT in state 81 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 81 resolved as shift
WARNING: shift/reduce conflict for NUM in state 81 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 81 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 81 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 81 resolved as shift
WARNING: shift/reduce conflict for VAR in state 81 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 81 resolved as shift
WARNING: shift/reduce conflict for DO in state 81 resolved as shift
WARNING: shift/reduce conflict for IF in state 81 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 81 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 81 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 81 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 81 resolved as shift
WARNING: shift/reduce conflict for NOT in state 81 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 81 resolved as shift
WARNING: shift/reduce conflict for FOR in state 81 resolved as shift
WARNING: shift/reduce conflict for LIST in state 81 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 81 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 81 resolved as shift
WARNING: shift/reduce conflict for SET in state 81 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 81 resolved as shift
WARNING: shift/reduce conflict for MAP in state 81 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 81 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 81 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 81 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 81 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 81 resolved as shift
WARNING: shift/reduce conflict for STRING in state 81 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 82 resolved as shift
WARNING: shift/reduce conflict for INT in state 82 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 82 resolved as shift
WARNING: shift/reduce conflict for NUM in state 82 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 82 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 82 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 82 resolved as shift
WARNING: shift/reduce conflict for VAR in state 82 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 82 resolved as shift
WARNING: shift/reduce conflict for DO in state 82 resolved as shift
WARNING: shift/reduce conflict for IF in state 82 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 82 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 82 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 82 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 82 resolved as shift
WARNING: shift/reduce conflict for NOT in state 82 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 82 resolved as shift
WARNING: shift/reduce conflict for FOR in state 82 resolved as shift
WARNING: shift/reduce conflict for LIST in state 82 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 82 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 82 resolved as shift
WARNING: shift/reduce conflict for SET in state 82 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 82 resolved as shift
WARNING: shift/reduce conflict for MAP in state 82 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 82 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 82 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 82 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 82 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 82 resolved as shift
WARNING: shift/reduce conflict for STRING in state 82 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 83 resolved as shift
WARNING: shift/reduce conflict for INT in state 83 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 83 resolved as shift
WARNING: shift/reduce conflict for NUM in state 83 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 83 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 83 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 83 resolved as shift
WARNING: shift/reduce conflict for VAR in state 83 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 83 resolved as shift
WARNING: shift/reduce conflict for DO in state 83 resolved as shift
WARNING: shift/reduce conflict for IF in state 83 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 83 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 83 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 83 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 83 resolved as shift
WARNING: shift/reduce conflict for NOT in state 83 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 83 resolved as shift
WARNING: shift/reduce conflict for FOR in state 83 resolved as shift
WARNING: shift/reduce conflict for LIST in state 83 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 83 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 83 resolved as shift
WARNING: shift/reduce conflict for SET in state 83 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 83 resolved as shift
WARNING: shift/reduce conflict for MAP in state 83 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 83 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 83 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 83 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 83 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 83 resolved as shift
WARNING: shift/reduce conflict for STRING in state 83 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 84 resolved as shift
WARNING: shift/reduce conflict for INT in state 84 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 84 resolved as shift
WARNING: shift/reduce conflict for NUM in state 84 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 84 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 84 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 84 resolved as shift
WARNING: shift/reduce conflict for VAR in state 84 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 84 resolved as shift
WARNING: shift/reduce conflict for DO in state 84 resolved as shift
WARNING: shift/reduce conflict for IF in state 84 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 84 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 84 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 84 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 84 resolved as shift
WARNING: shift/reduce conflict for NOT in state 84 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 84 resolved as shift
WARNING: shift/reduce conflict for FOR in state 84 resolved as shift
WARNING: shift/reduce conflict for LIST in state 84 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 84 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 84 resolved as shift
WARNING: shift/reduce conflict for SET in state 84 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 84 resolved as shift
WARNING: shift/reduce conflict for MAP in state 84 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 84 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 84 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 84 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 84 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 84 resolved as shift
WARNING: shift/reduce conflict for STRING in state 84 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 86 resolved as shift
WARNING: shift/reduce conflict for INT in state 86 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 86 resolved as shift
WARNING: shift/reduce conflict for NUM in state 86 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 86 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 86 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 86 resolved as shift
WARNING: shift/reduce conflict for VAR in state 86 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 86 resolved as shift
WARNING: shift/reduce conflict for DO in state 86 resolved as shift
WARNING: shift/reduce conflict for IF in state 86 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 86 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 86 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 86 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 86 resolved as shift
WARNING: shift/reduce conflict for NOT in state 86 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 86 resolved as shift
WARNING: shift/reduce conflict for FOR in state 86 resolved as shift
WARNING: shift/reduce conflict for LIST in state 86 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 86 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 86 resolved as shift
WARNING: shift/reduce conflict for SET in state 86 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 86 resolved as shift
WARNING: shift/reduce conflict for MAP in state 86 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 86 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 86 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 86 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 86 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 86 resolved as shift
WARNING: shift/reduce conflict for STRING in state 86 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 88 resolved as shift
WARNING: shift/reduce conflict for INT in state 88 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 88 resolved as shift
WARNING: shift/reduce conflict for NUM in state 88 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 88 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 88 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 88 resolved as shift
WARNING: shift/reduce conflict for VAR in state 88 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 88 resolved as shift
WARNING: shift/reduce conflict for DO in state 88 resolved as shift
WARNING: shift/reduce conflict for IF in state 88 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 88 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 88 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 88 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 88 resolved as shift
WARNING: shift/reduce conflict for NOT in state 88 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 88 resolved as shift
WARNING: shift/reduce conflict for FOR in state 88 resolved as shift
WARNING: shift/reduce conflict for LIST in state 88 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 88 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 88 resolved as shift
WARNING: shift/reduce conflict for SET in state 88 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 88 resolved as shift
WARNING: shift/reduce conflict for MAP in state 88 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 88 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 88 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 88 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 88 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 88 resolved as shift
WARNING: shift/reduce conflict for STRING in state 88 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 103 resolved as shift
WARNING: shift/reduce conflict for INT in state 103 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 103 resolved as shift
WARNING: shift/reduce conflict for NUM in state 103 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 103 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 103 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 103 resolved as shift
WARNING: shift/reduce conflict for VAR in state 103 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 103 resolved as shift
WARNING: shift/reduce conflict for DO in state 103 resolved as shift
WARNING: shift/reduce conflict for IF in state 103 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 103 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 103 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 103 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 103 resolved as shift
WARNING: shift/reduce conflict for NOT in state 103 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 103 resolved as shift
WARNING: shift/reduce conflict for FOR in state 103 resolved as shift
WARNING: shift/reduce conflict for LIST in state 103 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 103 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 103 resolved as shift
WARNING: shift/reduce conflict for SET in state 103 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 103 resolved as shift
WARNING: shift/reduce conflict for MAP in state 103 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 103 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 103 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 103 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 103 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 103 resolved as shift
WARNING: shift/reduce conflict for STRING in state 103 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 104 resolved as shift
WARNING: shift/reduce conflict for INT in state 104 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 104 resolved as shift
WARNING: shift/reduce conflict for NUM in state 104 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 104 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 104 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 104 resolved as shift
WARNING: shift/reduce conflict for VAR in state 104 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 104 resolved as shift
WARNING: shift/reduce conflict for DO in state 104 resolved as shift
WARNING: shift/reduce conflict for IF in state 104 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 104 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 104 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 104 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 104 resolved as shift
WARNING: shift/reduce conflict for NOT in state 104 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 104 resolved as shift
WARNING: shift/reduce conflict for FOR in state 104 resolved as shift
WARNING: shift/reduce conflict for LIST in state 104 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 104 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 104 resolved as shift
WARNING: shift/reduce conflict for SET in state 104 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 104 resolved as shift
WARNING: shift/reduce conflict for MAP in state 104 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 104 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 104 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 104 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 104 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 104 resolved as shift
WARNING: shift/reduce conflict for STRING in state 104 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 105 resolved as shift
WARNING: shift/reduce conflict for INT in state 105 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 105 resolved as shift
WARNING: shift/reduce conflict for NUM in state 105 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 105 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 105 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 105 resolved as shift
WARNING: shift/reduce conflict for VAR in state 105 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 105 resolved as shift
WARNING: shift/reduce conflict for DO in state 105 resolved as shift
WARNING: shift/reduce conflict for IF in state 105 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 105 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 105 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 105 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 105 resolved as shift
WARNING: shift/reduce conflict for NOT in state 105 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 105 resolved as shift
WARNING: shift/reduce conflict for FOR in state 105 resolved as shift
WARNING: shift/reduce conflict for LIST in state 105 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 105 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 105 resolved as shift
WARNING: shift/reduce conflict for SET in state 105 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 105 resolved as shift
WARNING: shift/reduce conflict for MAP in state 105 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 105 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 105 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 105 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 105 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 105 resolved as shift
WARNING: shift/reduce conflict for STRING in state 105 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 106 resolved as shift
WARNING: shift/reduce conflict for INT in state 106 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 106 resolved as shift
WARNING: shift/reduce conflict for NUM in state 106 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 106 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 106 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 106 resolved as shift
WARNING: shift/reduce conflict for VAR in state 106 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 106 resolved as shift
WARNING: shift/reduce conflict for DO in state 106 resolved as shift
WARNING: shift/reduce conflict for IF in state 106 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 106 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 106 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 106 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 106 resolved as shift
WARNING: shift/reduce conflict for NOT in state 106 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 106 resolved as shift
WARNING: shift/reduce conflict for FOR in state 106 resolved as shift
WARNING: shift/reduce conflict for LIST in state 106 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 106 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 106 resolved as shift
WARNING: shift/reduce conflict for SET in state 106 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 106 resolved as shift
WARNING: shift/reduce conflict for MAP in state 106 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 106 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 106 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 106 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 106 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 106 resolved as shift
WARNING: shift/reduce conflict for STRING in state 106 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 107 resolved as shift
WARNING: shift/reduce conflict for INT in state 107 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 107 resolved as shift
WARNING: shift/reduce conflict for NUM in state 107 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 107 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 107 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 107 resolved as shift
WARNING: shift/reduce conflict for VAR in state 107 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 107 resolved as shift
WARNING: shift/reduce conflict for DO in state 107 resolved as shift
WARNING: shift/reduce conflict for IF in state 107 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 107 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 107 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 107 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 107 resolved as shift
WARNING: shift/reduce conflict for NOT in state 107 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 107 resolved as shift
WARNING: shift/reduce conflict for FOR in state 107 resolved as shift
WARNING: shift/reduce conflict for LIST in state 107 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 107 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 107 resolved as shift
WARNING: shift/reduce conflict for SET in state 107 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 107 resolved as shift
WARNING: shift/reduce conflict for MAP in state 107 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 107 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 107 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 107 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 107 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 107 resolved as shift
WARNING: shift/reduce conflict for STRING in state 107 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 108 resolved as shift
WARNING: shift/reduce conflict for INT in state 108 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 108 resolved as shift
WARNING: shift/reduce conflict for NUM in state 108 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 108 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 108 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 108 resolved as shift
WARNING: shift/reduce conflict for VAR in state 108 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 108 resolved as shift
WARNING: shift/reduce conflict for DO in state 108 resolved as shift
WARNING: shift/reduce conflict for IF in state 108 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 108 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 108 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 108 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 108 resolved as shift
WARNING: shift/reduce conflict for NOT in state 108 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 108 resolved as shift
WARNING: shift/reduce conflict for FOR in state 108 resolved as shift
WARNING: shift/reduce conflict for LIST in state 108 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 108 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 108 resolved as shift
WARNING: shift/reduce conflict for SET in state 108 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 108 resolved as shift
WARNING: shift/reduce conflict for MAP in state 108 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 108 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 108 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 108 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 108 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 108 resolved as shift
WARNING: shift/reduce conflict for STRING in state 108 resolved as shift
WARNING: shift/reduce conflict for AND in state 179 resolved as shift
WARNING: shift/reduce conflict for OR in state 179 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 182 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 182 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 182 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 182 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 182 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 182 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 202 resolved as shift
WARNING: shift/reduce conflict for INT in state 202 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 202 resolved as shift
WARNING: shift/reduce conflict for NUM in state 202 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 202 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 202 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 202 resolved as shift
WARNING: shift/reduce conflict for VAR in state 202 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 202 resolved as shift
WARNING: shift/reduce conflict for DO in state 202 resolved as shift
WARNING: shift/reduce conflict for IF in state 202 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 202 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 202 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 202 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 202 resolved as shift
WARNING: shift/reduce conflict for NOT in state 202 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 202 resolved as shift
WARNING: shift/reduce conflict for FOR in state 202 resolved as shift
WARNING: shift/reduce conflict for LIST in state 202 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 202 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 202 resolved as shift
WARNING: shift/reduce conflict for SET in state 202 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 202 resolved as shift
WARNING: shift/reduce conflict for MAP in state 202 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 202 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 202 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 202 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 202 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 202 resolved as shift
WARNING: shift/reduce conflict for STRING in state 202 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 203 resolved as shift
WARNING: shift/reduce conflict for INT in state 203 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 203 resolved as shift
WARNING: shift/reduce conflict for NUM in state 203 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 203 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 203 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 203 resolved as shift
WARNING: shift/reduce conflict for VAR in state 203 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 203 resolved as shift
WARNING: shift/reduce conflict for DO in state 203 resolved as shift
WARNING: shift/reduce conflict for IF in state 203 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 203 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 203 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 203 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 203 resolved as shift
WARNING: shift/reduce conflict for NOT in state 203 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 203 resolved as shift
WARNING: shift/reduce conflict for FOR in state 203 resolved as shift
WARNING: shift/reduce conflict for LIST in state 203 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 203 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 203 resolved as shift
WARNING: shift/reduce conflict for SET in state 203 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 203 resolved as shift
WARNING: shift/reduce conflict for MAP in state 203 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 203 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 203 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 203 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 203 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 203 resolved as shift
WARNING: shift/reduce conflict for STRING in state 203 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 213 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 213 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 213 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 213 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 213 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 213 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 221 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 246 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 278 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 278 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 278 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 278 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 278 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 278 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 278 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 284 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 288 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 288 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 288 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 288 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 288 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 288 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 443 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 443 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 443 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 443 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 443 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 443 resolved as shift
WARNING: reduce/reduce conflict in state 20 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 35 resolved using rule (expresionInt -> valorInt)
WARNING: rejected rule (valorDouble -> valorInt) in state 35
WARNING: reduce/reduce conflict in state 38 resolved using rule (expresionBoolFor -> valorBool)
WARNING: rejected rule (expresionBool -> valorBool) in state 38
WARNING: reduce/reduce conflict in state 46 resolved using rule (funcionStdin -> FUNCIONSTDIN)
WARNING: rejected rule (valorString -> FUNCIONSTDIN) in state 46
WARNING: reduce/reduce conflict in state 160 resolved using rule (expListString -> STRING)
WARNING: rejected rule (expListDynamic -> STRING) in state 160
WARNING: reduce/reduce conflict in state 161 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListInt -> VARIABLE) in state 161
WARNING: reduce/reduce conflict in state 161 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListNum -> VARIABLE) in state 161
WARNING: reduce/reduce conflict in state 161 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListBool -> VARIABLE) in state 161
WARNING: reduce/reduce conflict in state 161 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 161
WARNING: reduce/reduce conflict in state 161 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListSet -> VARIABLE) in state 161
WARNING: reduce/reduce conflict in state 161 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListMap -> VARIABLE) in state 161
WARNING: reduce/reduce conflict in state 162 resolved using rule (expListInt -> ENTERO)
WARNING: rejected rule (expListNum -> ENTERO) in state 162
WARNING: reduce/reduce conflict in state 162 resolved using rule (expListInt -> ENTERO)
WARNING: rejected rule (expListDynamic -> ENTERO) in state 162
WARNING: reduce/reduce conflict in state 163 resolved using rule (expListNum -> DOUBLE)
WARNING: rejected rule (expListDynamic -> DOUBLE) in state 163
WARNING: reduce/reduce conflict in state 164 resolved using rule (expListBool -> BOOL)
WARNING: rejected rule (expListDynamic -> BOOL) in state 164
WARNING: reduce/reduce conflict in state 180 resolved using rule (expresionBool -> comparacionBool)
WARNING: rejected rule (comparacionBool -> expresionBool operadorLogico comparacionBool) in state 180
WARNING: reduce/reduce conflict in state 187 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 187
WARNING: reduce/reduce conflict in state 204 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (expresionBool -> VARIABLE comparadorMat VARIABLE) in state 204
WARNING: reduce/reduce conflict in state 204 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 204
WARNING: reduce/reduce conflict in state 204 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 204
WARNING: reduce/reduce conflict in state 205 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat expresionDouble)
WARNING: rejected rule (expresionBool -> VARIABLE comparadorMat expresionDouble) in state 205
WARNING: reduce/reduce conflict in state 213 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 213
WARNING: reduce/reduce conflict in state 213 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 213
WARNING: reduce/reduce conflict in state 213 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 213
WARNING: reduce/reduce conflict in state 220 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 220
WARNING: reduce/reduce conflict in state 221 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 221
WARNING: reduce/reduce conflict in state 243 resolved using rule (expresionBoolFor -> valorDouble comparadorMat expresionDouble)
WARNING: rejected rule (expresionBool -> valorDouble comparadorMat expresionDouble) in state 243
WARNING: reduce/reduce conflict in state 244 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (expresionBool -> valorDouble comparadorMat VARIABLE) in state 244
WARNING: reduce/reduce conflict in state 244 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 244
WARNING: reduce/reduce conflict in state 244 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 244
WARNING: reduce/reduce conflict in state 272 resolved using rule (expListDynamic -> VARIABLE)
WARNING: rejected rule (expListSet -> VARIABLE) in state 272
WARNING: reduce/reduce conflict in state 278 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 278
WARNING: reduce/reduce conflict in state 278 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 278
WARNING: reduce/reduce conflict in state 288 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 288
WARNING: reduce/reduce conflict in state 288 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 288
WARNING: reduce/reduce conflict in state 288 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 288
WARNING: reduce/reduce conflict in state 389 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 389
WARNING: reduce/reduce conflict in state 400 resolved using rule (expListInt -> VARIABLE)
WARNING: rejected rule (expListNum -> VARIABLE) in state 400
WARNING: reduce/reduce conflict in state 400 resolved using rule (expListInt -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 400
WARNING: reduce/reduce conflict in state 403 resolved using rule (expListNum -> ENTERO)
WARNING: rejected rule (expListDynamic -> ENTERO) in state 403
WARNING: reduce/reduce conflict in state 404 resolved using rule (expListNum -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 404
WARNING: reduce/reduce conflict in state 407 resolved using rule (expListBool -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 407
WARNING: reduce/reduce conflict in state 420 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 420
WARNING: reduce/reduce conflict in state 421 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 421
WARNING: reduce/reduce conflict in state 425 resolved using rule (expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER)
WARNING: rejected rule (expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER) in state 425
WARNING: reduce/reduce conflict in state 532 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 532
WARNING: reduce/reduce conflict in state 532 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 532
WARNING: reduce/reduce conflict in state 535 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 535
WARNING: reduce/reduce conflict in state 535 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 535
WARNING: Rule (comparacionBool -> expresionBool operadorLogico comparacionBool) is never reduced
WARNING: Rule (expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER) is never reduced
