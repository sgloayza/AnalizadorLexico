Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    BREAK
    CASE
    CDER
    CIZQ
    COMA
    COMILLAD
    COMILLAS
    DOSPUNTOS
    DRESTA
    DSUMA
    FLECHA
    FOR
    FUNCIONARR
    FUNCIONRANGE
    FUNCIONSTDOUT
    FUNCIONSTRING
    FUNCIONTAKE
    RETURN
    SWITCH

Grammar

Rule 0     S' -> final
Rule 1     final -> algoritmo PUNTOYCOMA
Rule 2     final -> algoritmo PUNTOYCOMA final
Rule 3     final -> asignacion PUNTOYCOMA
Rule 4     final -> asignacion PUNTOYCOMA final
Rule 5     final -> expresionInt PUNTOYCOMA
Rule 6     final -> expresionInt PUNTOYCOMA final
Rule 7     final -> expresionDouble PUNTOYCOMA
Rule 8     final -> expresionDouble PUNTOYCOMA final
Rule 9     final -> expresionString PUNTOYCOMA
Rule 10    final -> expresionString PUNTOYCOMA final
Rule 11    final -> expresionBool PUNTOYCOMA
Rule 12    final -> expresionBool PUNTOYCOMA final
Rule 13    final -> sentenciaWhile
Rule 14    final -> sentenciaWhile final
Rule 15    final -> sentenciaWhile PUNTOYCOMA
Rule 16    final -> sentenciaWhile PUNTOYCOMA final
Rule 17    final -> sentenciaDoWhile PUNTOYCOMA
Rule 18    final -> sentenciaDoWhile PUNTOYCOMA final
Rule 19    final -> sentenciaIf PUNTOYCOMA
Rule 20    final -> sentenciaIf PUNTOYCOMA final
Rule 21    final -> sentenciaIf
Rule 22    final -> sentenciaIf final
Rule 23    final -> sentenciaElse PUNTOYCOMA
Rule 24    final -> sentenciaElse PUNTOYCOMA final
Rule 25    final -> sentenciaElse
Rule 26    final -> sentenciaElse final
Rule 27    final -> imprimir PUNTOYCOMA
Rule 28    final -> imprimir PUNTOYCOMA final
Rule 29    final -> funcionStdin PUNTOYCOMA
Rule 30    final -> funcionStdin PUNTOYCOMA final
Rule 31    final -> negacionBool PUNTOYCOMA
Rule 32    final -> negacionBool PUNTOYCOMA final
Rule 33    final -> comparacionBool PUNTOYCOMA final
Rule 34    final -> comparacionBool PUNTOYCOMA
Rule 35    final -> sentenciaElseIf PUNTOYCOMA final
Rule 36    final -> sentenciaElseIf final
Rule 37    final -> sentenciaElseIf PUNTOYCOMA
Rule 38    final -> sentenciaElseIf
Rule 39    algoritmo -> asignacion PUNTOYCOMA
Rule 40    algoritmo -> expresionInt PUNTOYCOMA
Rule 41    algoritmo -> expresionDouble PUNTOYCOMA
Rule 42    algoritmo -> expresionString PUNTOYCOMA
Rule 43    algoritmo -> expresionBool PUNTOYCOMA
Rule 44    algoritmo -> expresion
Rule 45    algoritmo -> sentenciaWhile
Rule 46    algoritmo -> sentenciaWhile PUNTOYCOMA
Rule 47    algoritmo -> sentenciaDoWhile PUNTOYCOMA
Rule 48    algoritmo -> sentenciaIf PUNTOYCOMA
Rule 49    algoritmo -> sentenciaIf
Rule 50    algoritmo -> sentenciaElse PUNTOYCOMA
Rule 51    algoritmo -> sentenciaElse
Rule 52    algoritmo -> imprimir PUNTOYCOMA
Rule 53    algoritmo -> funcionStdin PUNTOYCOMA
Rule 54    algoritmo -> negacionBool PUNTOYCOMA
Rule 55    algoritmo -> comparacionBool PUNTOYCOMA
Rule 56    algoritmo -> sentenciaElseIf
Rule 57    algoritmo -> sentenciaElseIf PUNTOYCOMA
Rule 58    asignacion -> INT VARIABLE IGUAL expresionInt
Rule 59    asignacion -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 60    asignacion -> NUM VARIABLE IGUAL expresionDouble
Rule 61    asignacion -> STRINGR VARIABLE IGUAL expresionString
Rule 62    asignacion -> BOOLR VARIABLE IGUAL expresionBool
Rule 63    asignacion -> DYNAMIC VARIABLE IGUAL expresion
Rule 64    asignacion -> VAR VARIABLE IGUAL expresion
Rule 65    asignacion -> asignacionSimple
Rule 66    asignacionSimple -> VARIABLE IGUAL expresion
Rule 67    imprimir -> PRINT PIZQ expresion PDER
Rule 68    imprimir -> PRINT PIZQ asignacionSimple PDER
Rule 69    funcionStdin -> FUNCIONSTDIN
Rule 70    sentenciaIf -> IF PIZQ expresionBool PDER algoritmo
Rule 71    sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER
Rule 72    sentenciaElse -> ELSE algoritmo
Rule 73    sentenciaElse -> ELSE LIZQ algoritmo LDER
Rule 74    sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo
Rule 75    sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
Rule 76    valor -> ENTERO
Rule 77    valor -> VARIABLE
Rule 78    valor -> DOUBLE
Rule 79    valor -> STRING
Rule 80    expresion -> valor operadorMat expresion
Rule 81    expresion -> valor
Rule 82    expresion -> expresionString
Rule 83    expresion -> expresionInt
Rule 84    expresion -> expresionDouble
Rule 85    expresion -> expresionBool
Rule 86    sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
Rule 87    sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo
Rule 88    sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
Rule 89    valorBool -> BOOL
Rule 90    valorBool -> VARIABLE
Rule 91    expresionBool -> valorDouble comparadorMat expresionDouble
Rule 92    expresionBool -> VARIABLE comparadorMat expresionDouble
Rule 93    expresionBool -> VARIABLE comparadorMat VARIABLE
Rule 94    expresionBool -> valorDouble comparadorMat VARIABLE
Rule 95    expresionBool -> valorBool
Rule 96    expresionBool -> negacionBool
Rule 97    expresionBool -> comparacionBool
Rule 98    expresionBool -> valor IS objeto
Rule 99    expresionBool -> valor ISNEGADO objeto
Rule 100   negacionBool -> NOT PIZQ expresionBool PDER
Rule 101   comparacionBool -> expresionBool operadorLogico expresionBool
Rule 102   comparacionBool -> expresionBool operadorLogico comparacionBool
Rule 103   valorString -> STRING
Rule 104   valorString -> VARIABLE
Rule 105   expresionString -> valorString operadorMat expresionString
Rule 106   expresionString -> valorString
Rule 107   valorInt -> ENTERO
Rule 108   valorInt -> VARIABLE
Rule 109   expresionInt -> valorInt operadorMat expresionInt
Rule 110   expresionInt -> valorInt
Rule 111   valorDouble -> DOUBLE
Rule 112   valorDouble -> valorInt
Rule 113   expresionDouble -> valorDouble operadorMat expresionDouble
Rule 114   expresionDouble -> valorDouble
Rule 115   operadorMat -> SUMA
Rule 116   operadorMat -> RESTA
Rule 117   operadorMat -> MULTI
Rule 118   operadorMat -> DIV
Rule 119   operadorMat -> DIVENTERO
Rule 120   operadorMat -> MOD
Rule 121   comparadorMat -> DIGUAL
Rule 122   comparadorMat -> NOIGUAL
Rule 123   comparadorMat -> MAYOR
Rule 124   comparadorMat -> MENOR
Rule 125   comparadorMat -> MAYIGUAL
Rule 126   comparadorMat -> MENIGUAL
Rule 127   operadorLogico -> AND
Rule 128   operadorLogico -> OR
Rule 129   objeto -> STRINGR
Rule 130   objeto -> INT
Rule 131   objeto -> DOUBLER
Rule 132   objeto -> NUM
Rule 133   objeto -> VAR
Rule 134   objeto -> DYNAMIC
Rule 135   objeto -> LIST
Rule 136   objeto -> BOOL
Rule 137   objeto -> MAP
Rule 138   objeto -> SET

Terminals, with rules where they appear

AND                  : 127
AS                   : 
BOOL                 : 89 136
BOOLR                : 62
BREAK                : 
CASE                 : 
CDER                 : 
CIZQ                 : 
COMA                 : 
COMILLAD             : 
COMILLAS             : 
DIGUAL               : 121
DIV                  : 118
DIVENTERO            : 119
DO                   : 88
DOSPUNTOS            : 
DOUBLE               : 78 111
DOUBLER              : 59 131
DRESTA               : 
DSUMA                : 
DYNAMIC              : 63 134
ELSE                 : 72 73
ELSEIF               : 74 75
ENTERO               : 76 107
FLECHA               : 
FOR                  : 
FUNCIONARR           : 
FUNCIONRANGE         : 
FUNCIONSTDIN         : 69
FUNCIONSTDOUT        : 
FUNCIONSTRING        : 
FUNCIONTAKE          : 
IF                   : 70 71
IGUAL                : 58 59 60 61 62 63 64 66
INT                  : 58 130
IS                   : 98
ISNEGADO             : 99
LDER                 : 71 73 75 86 88
LIST                 : 135
LIZQ                 : 71 73 75 86 88
MAP                  : 137
MAYIGUAL             : 125
MAYOR                : 123
MENIGUAL             : 126
MENOR                : 124
MOD                  : 120
MULTI                : 117
NOIGUAL              : 122
NOT                  : 100
NUM                  : 60 132
OR                   : 128
PDER                 : 67 68 70 71 74 75 86 87 88 100
PIZQ                 : 67 68 70 71 74 75 86 87 88 100
PRINT                : 67 68
PUNTOYCOMA           : 1 2 3 4 5 6 7 8 9 10 11 12 15 16 17 18 19 20 23 24 27 28 29 30 31 32 33 34 35 37 39 40 41 42 43 46 47 48 50 52 53 54 55 57
RESTA                : 116
RETURN               : 
SET                  : 138
STRING               : 79 103
STRINGR              : 61 129
SUMA                 : 115
SWITCH               : 
VAR                  : 64 133
VARIABLE             : 58 59 60 61 62 63 64 66 77 90 92 93 93 94 104 108
WHILE                : 86 87 88
error                : 

Nonterminals, with rules where they appear

algoritmo            : 1 2 70 71 72 73 74 75 86 87 88
asignacion           : 3 4 39
asignacionSimple     : 65 68
comparacionBool      : 33 34 55 97 102
comparadorMat        : 91 92 93 94
expresion            : 44 63 64 66 67 80
expresionBool        : 11 12 43 62 70 71 74 75 85 86 87 88 100 101 101 102
expresionDouble      : 7 8 41 59 60 84 91 92 113
expresionInt         : 5 6 40 58 83 109
expresionString      : 9 10 42 61 82 105
final                : 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 33 35 36 0
funcionStdin         : 29 30 53
imprimir             : 27 28 52
negacionBool         : 31 32 54 96
objeto               : 98 99
operadorLogico       : 101 102
operadorMat          : 80 105 109 113
sentenciaDoWhile     : 17 18 47
sentenciaElse        : 23 24 25 26 50 51
sentenciaElseIf      : 35 36 37 38 56 57
sentenciaIf          : 19 20 21 22 48 49
sentenciaWhile       : 13 14 15 16 45 46
valor                : 80 81 98 99
valorBool            : 95
valorDouble          : 91 94 113 114
valorInt             : 109 110 112
valorString          : 105 106

Parsing method: LALR

state 0

    (0) S' -> . final
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    final                          shift and go to state 1
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    expresion                      shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 1

    (0) S' -> final .



state 2

    (1) final -> algoritmo . PUNTOYCOMA
    (2) final -> algoritmo . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 44


state 3

    (3) final -> asignacion . PUNTOYCOMA
    (4) final -> asignacion . PUNTOYCOMA final
    (39) algoritmo -> asignacion . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 45


state 4

    (5) final -> expresionInt . PUNTOYCOMA
    (6) final -> expresionInt . PUNTOYCOMA final
    (40) algoritmo -> expresionInt . PUNTOYCOMA
    (83) expresion -> expresionInt .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 46

  ! PUNTOYCOMA      [ reduce using rule 83 (expresion -> expresionInt .) ]


state 5

    (7) final -> expresionDouble . PUNTOYCOMA
    (8) final -> expresionDouble . PUNTOYCOMA final
    (41) algoritmo -> expresionDouble . PUNTOYCOMA
    (84) expresion -> expresionDouble .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 47

  ! PUNTOYCOMA      [ reduce using rule 84 (expresion -> expresionDouble .) ]


state 6

    (9) final -> expresionString . PUNTOYCOMA
    (10) final -> expresionString . PUNTOYCOMA final
    (42) algoritmo -> expresionString . PUNTOYCOMA
    (82) expresion -> expresionString .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 48

  ! PUNTOYCOMA      [ reduce using rule 82 (expresion -> expresionString .) ]


state 7

    (11) final -> expresionBool . PUNTOYCOMA
    (12) final -> expresionBool . PUNTOYCOMA final
    (43) algoritmo -> expresionBool . PUNTOYCOMA
    (101) comparacionBool -> expresionBool . operadorLogico expresionBool
    (102) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (85) expresion -> expresionBool .
    (127) operadorLogico -> . AND
    (128) operadorLogico -> . OR

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 49
    AND             shift and go to state 51
    OR              shift and go to state 52

  ! PUNTOYCOMA      [ reduce using rule 85 (expresion -> expresionBool .) ]

    operadorLogico                 shift and go to state 50

state 8

    (13) final -> sentenciaWhile .
    (14) final -> sentenciaWhile . final
    (15) final -> sentenciaWhile . PUNTOYCOMA
    (16) final -> sentenciaWhile . PUNTOYCOMA final
    (45) algoritmo -> sentenciaWhile .
    (46) algoritmo -> sentenciaWhile . PUNTOYCOMA
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    $end            reduce using rule 13 (final -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 54
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

  ! PUNTOYCOMA      [ reduce using rule 45 (algoritmo -> sentenciaWhile .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 53
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    expresion                      shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 9

    (17) final -> sentenciaDoWhile . PUNTOYCOMA
    (18) final -> sentenciaDoWhile . PUNTOYCOMA final
    (47) algoritmo -> sentenciaDoWhile . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 55


state 10

    (19) final -> sentenciaIf . PUNTOYCOMA
    (20) final -> sentenciaIf . PUNTOYCOMA final
    (21) final -> sentenciaIf .
    (22) final -> sentenciaIf . final
    (48) algoritmo -> sentenciaIf . PUNTOYCOMA
    (49) algoritmo -> sentenciaIf .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 56
    $end            reduce using rule 21 (final -> sentenciaIf .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

  ! PUNTOYCOMA      [ reduce using rule 49 (algoritmo -> sentenciaIf .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 57
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    expresion                      shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 11

    (23) final -> sentenciaElse . PUNTOYCOMA
    (24) final -> sentenciaElse . PUNTOYCOMA final
    (25) final -> sentenciaElse .
    (26) final -> sentenciaElse . final
    (50) algoritmo -> sentenciaElse . PUNTOYCOMA
    (51) algoritmo -> sentenciaElse .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 58
    $end            reduce using rule 25 (final -> sentenciaElse .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

  ! PUNTOYCOMA      [ reduce using rule 51 (algoritmo -> sentenciaElse .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 59
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    expresion                      shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 12

    (27) final -> imprimir . PUNTOYCOMA
    (28) final -> imprimir . PUNTOYCOMA final
    (52) algoritmo -> imprimir . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 60


state 13

    (29) final -> funcionStdin . PUNTOYCOMA
    (30) final -> funcionStdin . PUNTOYCOMA final
    (53) algoritmo -> funcionStdin . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 61


state 14

    (31) final -> negacionBool . PUNTOYCOMA
    (32) final -> negacionBool . PUNTOYCOMA final
    (54) algoritmo -> negacionBool . PUNTOYCOMA
    (96) expresionBool -> negacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 62
    AND             reduce using rule 96 (expresionBool -> negacionBool .)
    OR              reduce using rule 96 (expresionBool -> negacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 96 (expresionBool -> negacionBool .) ]


state 15

    (33) final -> comparacionBool . PUNTOYCOMA final
    (34) final -> comparacionBool . PUNTOYCOMA
    (55) algoritmo -> comparacionBool . PUNTOYCOMA
    (97) expresionBool -> comparacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 63
    AND             reduce using rule 97 (expresionBool -> comparacionBool .)
    OR              reduce using rule 97 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 97 (expresionBool -> comparacionBool .) ]


state 16

    (35) final -> sentenciaElseIf . PUNTOYCOMA final
    (36) final -> sentenciaElseIf . final
    (37) final -> sentenciaElseIf . PUNTOYCOMA
    (38) final -> sentenciaElseIf .
    (56) algoritmo -> sentenciaElseIf .
    (57) algoritmo -> sentenciaElseIf . PUNTOYCOMA
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 64
    $end            reduce using rule 38 (final -> sentenciaElseIf .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

  ! PUNTOYCOMA      [ reduce using rule 56 (algoritmo -> sentenciaElseIf .) ]

    sentenciaElseIf                shift and go to state 16
    final                          shift and go to state 65
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    expresion                      shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 17

    (44) algoritmo -> expresion .

    PUNTOYCOMA      reduce using rule 44 (algoritmo -> expresion .)
    INT             reduce using rule 44 (algoritmo -> expresion .)
    DOUBLER         reduce using rule 44 (algoritmo -> expresion .)
    NUM             reduce using rule 44 (algoritmo -> expresion .)
    STRINGR         reduce using rule 44 (algoritmo -> expresion .)
    BOOLR           reduce using rule 44 (algoritmo -> expresion .)
    DYNAMIC         reduce using rule 44 (algoritmo -> expresion .)
    VAR             reduce using rule 44 (algoritmo -> expresion .)
    VARIABLE        reduce using rule 44 (algoritmo -> expresion .)
    WHILE           reduce using rule 44 (algoritmo -> expresion .)
    DO              reduce using rule 44 (algoritmo -> expresion .)
    IF              reduce using rule 44 (algoritmo -> expresion .)
    ELSE            reduce using rule 44 (algoritmo -> expresion .)
    PRINT           reduce using rule 44 (algoritmo -> expresion .)
    FUNCIONSTDIN    reduce using rule 44 (algoritmo -> expresion .)
    NOT             reduce using rule 44 (algoritmo -> expresion .)
    ELSEIF          reduce using rule 44 (algoritmo -> expresion .)
    ENTERO          reduce using rule 44 (algoritmo -> expresion .)
    DOUBLE          reduce using rule 44 (algoritmo -> expresion .)
    STRING          reduce using rule 44 (algoritmo -> expresion .)
    BOOL            reduce using rule 44 (algoritmo -> expresion .)
    $end            reduce using rule 44 (algoritmo -> expresion .)
    LDER            reduce using rule 44 (algoritmo -> expresion .)


state 18

    (58) asignacion -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 66


state 19

    (92) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (93) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (66) asignacionSimple -> VARIABLE . IGUAL expresion
    (108) valorInt -> VARIABLE .
    (104) valorString -> VARIABLE .
    (90) valorBool -> VARIABLE .
    (77) valor -> VARIABLE .
    (121) comparadorMat -> . DIGUAL
    (122) comparadorMat -> . NOIGUAL
    (123) comparadorMat -> . MAYOR
    (124) comparadorMat -> . MENOR
    (125) comparadorMat -> . MAYIGUAL
    (126) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 104 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 90 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 77 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 68
    AND             reduce using rule 90 (valorBool -> VARIABLE .)
    OR              reduce using rule 90 (valorBool -> VARIABLE .)
    IS              reduce using rule 77 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 77 (valor -> VARIABLE .)
    SUMA            reduce using rule 77 (valor -> VARIABLE .)
    RESTA           reduce using rule 77 (valor -> VARIABLE .)
    MULTI           reduce using rule 77 (valor -> VARIABLE .)
    DIV             reduce using rule 77 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 77 (valor -> VARIABLE .)
    MOD             reduce using rule 77 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 77 (valor -> VARIABLE .)
    INT             reduce using rule 77 (valor -> VARIABLE .)
    DOUBLER         reduce using rule 77 (valor -> VARIABLE .)
    NUM             reduce using rule 77 (valor -> VARIABLE .)
    STRINGR         reduce using rule 77 (valor -> VARIABLE .)
    BOOLR           reduce using rule 77 (valor -> VARIABLE .)
    DYNAMIC         reduce using rule 77 (valor -> VARIABLE .)
    VAR             reduce using rule 77 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 77 (valor -> VARIABLE .)
    WHILE           reduce using rule 77 (valor -> VARIABLE .)
    DO              reduce using rule 77 (valor -> VARIABLE .)
    IF              reduce using rule 77 (valor -> VARIABLE .)
    ELSE            reduce using rule 77 (valor -> VARIABLE .)
    PRINT           reduce using rule 77 (valor -> VARIABLE .)
    FUNCIONSTDIN    reduce using rule 77 (valor -> VARIABLE .)
    NOT             reduce using rule 77 (valor -> VARIABLE .)
    ELSEIF          reduce using rule 77 (valor -> VARIABLE .)
    ENTERO          reduce using rule 77 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 77 (valor -> VARIABLE .)
    STRING          reduce using rule 77 (valor -> VARIABLE .)
    BOOL            reduce using rule 77 (valor -> VARIABLE .)
    $end            reduce using rule 77 (valor -> VARIABLE .)
    LDER            reduce using rule 77 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 69
    NOIGUAL         shift and go to state 70
    MAYOR           shift and go to state 71
    MENOR           shift and go to state 72
    MAYIGUAL        shift and go to state 73
    MENIGUAL        shift and go to state 74

  ! SUMA            [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! NOT             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! DIV             [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! MOD             [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! INT             [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! NUM             [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! VAR             [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! DO              [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! IF              [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! NOT             [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! STRING          [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! $end            [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! LDER            [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! INT             [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! NUM             [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! VAR             [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! DO              [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! IF              [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! NOT             [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! STRING          [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! $end            [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! LDER            [ reduce using rule 90 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 67

state 20

    (59) asignacion -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 75


state 21

    (60) asignacion -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 76


state 22

    (61) asignacion -> STRINGR . VARIABLE IGUAL expresionString

    VARIABLE        shift and go to state 77


state 23

    (62) asignacion -> BOOLR . VARIABLE IGUAL expresionBool

    VARIABLE        shift and go to state 78


state 24

    (63) asignacion -> DYNAMIC . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 79


state 25

    (64) asignacion -> VAR . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 80


state 26

    (65) asignacion -> asignacionSimple .

    PUNTOYCOMA      reduce using rule 65 (asignacion -> asignacionSimple .)


state 27

    (109) expresionInt -> valorInt . operadorMat expresionInt
    (110) expresionInt -> valorInt .
    (112) valorDouble -> valorInt .
    (115) operadorMat -> . SUMA
    (116) operadorMat -> . RESTA
    (117) operadorMat -> . MULTI
    (118) operadorMat -> . DIV
    (119) operadorMat -> . DIVENTERO
    (120) operadorMat -> . MOD

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for INT resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for NUM resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for STRINGR resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for BOOLR resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for VAR resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for WHILE resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DO resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for IF resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for ELSE resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PRINT resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for NOT resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for ENTERO resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for STRING resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for BOOL resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for $end resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for LDER resolved using rule 110 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PDER resolved using rule 110 (expresionInt -> valorInt .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DIVENTERO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PUNTOYCOMA      reduce using rule 110 (expresionInt -> valorInt .)
    INT             reduce using rule 110 (expresionInt -> valorInt .)
    DOUBLER         reduce using rule 110 (expresionInt -> valorInt .)
    NUM             reduce using rule 110 (expresionInt -> valorInt .)
    STRINGR         reduce using rule 110 (expresionInt -> valorInt .)
    BOOLR           reduce using rule 110 (expresionInt -> valorInt .)
    DYNAMIC         reduce using rule 110 (expresionInt -> valorInt .)
    VAR             reduce using rule 110 (expresionInt -> valorInt .)
    VARIABLE        reduce using rule 110 (expresionInt -> valorInt .)
    WHILE           reduce using rule 110 (expresionInt -> valorInt .)
    DO              reduce using rule 110 (expresionInt -> valorInt .)
    IF              reduce using rule 110 (expresionInt -> valorInt .)
    ELSE            reduce using rule 110 (expresionInt -> valorInt .)
    PRINT           reduce using rule 110 (expresionInt -> valorInt .)
    FUNCIONSTDIN    reduce using rule 110 (expresionInt -> valorInt .)
    NOT             reduce using rule 110 (expresionInt -> valorInt .)
    ELSEIF          reduce using rule 110 (expresionInt -> valorInt .)
    ENTERO          reduce using rule 110 (expresionInt -> valorInt .)
    DOUBLE          reduce using rule 110 (expresionInt -> valorInt .)
    STRING          reduce using rule 110 (expresionInt -> valorInt .)
    BOOL            reduce using rule 110 (expresionInt -> valorInt .)
    $end            reduce using rule 110 (expresionInt -> valorInt .)
    LDER            reduce using rule 110 (expresionInt -> valorInt .)
    PDER            reduce using rule 110 (expresionInt -> valorInt .)
    DIGUAL          reduce using rule 112 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 112 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 112 (valorDouble -> valorInt .)
    MENOR           reduce using rule 112 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 112 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 112 (valorDouble -> valorInt .)
    SUMA            shift and go to state 82
    RESTA           shift and go to state 83
    MULTI           shift and go to state 84
    DIV             shift and go to state 85
    DIVENTERO       shift and go to state 86
    MOD             shift and go to state 87

  ! SUMA            [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! RESTA           [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! MULTI           [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! DIV             [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! DIVENTERO       [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! MOD             [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! PUNTOYCOMA      [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! INT             [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! DOUBLER         [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! NUM             [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! STRINGR         [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! BOOLR           [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! DYNAMIC         [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! VAR             [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! VARIABLE        [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! WHILE           [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! DO              [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! IF              [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! ELSE            [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! PRINT           [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! FUNCIONSTDIN    [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! NOT             [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! ELSEIF          [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! ENTERO          [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! DOUBLE          [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! STRING          [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! BOOL            [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! $end            [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! LDER            [ reduce using rule 112 (valorDouble -> valorInt .) ]
  ! PDER            [ reduce using rule 112 (valorDouble -> valorInt .) ]

    operadorMat                    shift and go to state 81

state 28

    (113) expresionDouble -> valorDouble . operadorMat expresionDouble
    (114) expresionDouble -> valorDouble .
    (91) expresionBool -> valorDouble . comparadorMat expresionDouble
    (94) expresionBool -> valorDouble . comparadorMat VARIABLE
    (115) operadorMat -> . SUMA
    (116) operadorMat -> . RESTA
    (117) operadorMat -> . MULTI
    (118) operadorMat -> . DIV
    (119) operadorMat -> . DIVENTERO
    (120) operadorMat -> . MOD
    (121) comparadorMat -> . DIGUAL
    (122) comparadorMat -> . NOIGUAL
    (123) comparadorMat -> . MAYOR
    (124) comparadorMat -> . MENOR
    (125) comparadorMat -> . MAYIGUAL
    (126) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 114 (expresionDouble -> valorDouble .)
    INT             reduce using rule 114 (expresionDouble -> valorDouble .)
    DOUBLER         reduce using rule 114 (expresionDouble -> valorDouble .)
    NUM             reduce using rule 114 (expresionDouble -> valorDouble .)
    STRINGR         reduce using rule 114 (expresionDouble -> valorDouble .)
    BOOLR           reduce using rule 114 (expresionDouble -> valorDouble .)
    DYNAMIC         reduce using rule 114 (expresionDouble -> valorDouble .)
    VAR             reduce using rule 114 (expresionDouble -> valorDouble .)
    VARIABLE        reduce using rule 114 (expresionDouble -> valorDouble .)
    WHILE           reduce using rule 114 (expresionDouble -> valorDouble .)
    DO              reduce using rule 114 (expresionDouble -> valorDouble .)
    IF              reduce using rule 114 (expresionDouble -> valorDouble .)
    ELSE            reduce using rule 114 (expresionDouble -> valorDouble .)
    PRINT           reduce using rule 114 (expresionDouble -> valorDouble .)
    FUNCIONSTDIN    reduce using rule 114 (expresionDouble -> valorDouble .)
    NOT             reduce using rule 114 (expresionDouble -> valorDouble .)
    ELSEIF          reduce using rule 114 (expresionDouble -> valorDouble .)
    ENTERO          reduce using rule 114 (expresionDouble -> valorDouble .)
    DOUBLE          reduce using rule 114 (expresionDouble -> valorDouble .)
    STRING          reduce using rule 114 (expresionDouble -> valorDouble .)
    BOOL            reduce using rule 114 (expresionDouble -> valorDouble .)
    $end            reduce using rule 114 (expresionDouble -> valorDouble .)
    LDER            reduce using rule 114 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 114 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 82
    RESTA           shift and go to state 83
    MULTI           shift and go to state 84
    DIV             shift and go to state 85
    DIVENTERO       shift and go to state 86
    MOD             shift and go to state 87
    DIGUAL          shift and go to state 69
    NOIGUAL         shift and go to state 70
    MAYOR           shift and go to state 71
    MENOR           shift and go to state 72
    MAYIGUAL        shift and go to state 73
    MENIGUAL        shift and go to state 74

    operadorMat                    shift and go to state 88
    comparadorMat                  shift and go to state 89

state 29

    (105) expresionString -> valorString . operadorMat expresionString
    (106) expresionString -> valorString .
    (115) operadorMat -> . SUMA
    (116) operadorMat -> . RESTA
    (117) operadorMat -> . MULTI
    (118) operadorMat -> . DIV
    (119) operadorMat -> . DIVENTERO
    (120) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 106 (expresionString -> valorString .)
    INT             reduce using rule 106 (expresionString -> valorString .)
    DOUBLER         reduce using rule 106 (expresionString -> valorString .)
    NUM             reduce using rule 106 (expresionString -> valorString .)
    STRINGR         reduce using rule 106 (expresionString -> valorString .)
    BOOLR           reduce using rule 106 (expresionString -> valorString .)
    DYNAMIC         reduce using rule 106 (expresionString -> valorString .)
    VAR             reduce using rule 106 (expresionString -> valorString .)
    VARIABLE        reduce using rule 106 (expresionString -> valorString .)
    WHILE           reduce using rule 106 (expresionString -> valorString .)
    DO              reduce using rule 106 (expresionString -> valorString .)
    IF              reduce using rule 106 (expresionString -> valorString .)
    ELSE            reduce using rule 106 (expresionString -> valorString .)
    PRINT           reduce using rule 106 (expresionString -> valorString .)
    FUNCIONSTDIN    reduce using rule 106 (expresionString -> valorString .)
    NOT             reduce using rule 106 (expresionString -> valorString .)
    ELSEIF          reduce using rule 106 (expresionString -> valorString .)
    ENTERO          reduce using rule 106 (expresionString -> valorString .)
    DOUBLE          reduce using rule 106 (expresionString -> valorString .)
    STRING          reduce using rule 106 (expresionString -> valorString .)
    BOOL            reduce using rule 106 (expresionString -> valorString .)
    $end            reduce using rule 106 (expresionString -> valorString .)
    LDER            reduce using rule 106 (expresionString -> valorString .)
    PDER            reduce using rule 106 (expresionString -> valorString .)
    SUMA            shift and go to state 82
    RESTA           shift and go to state 83
    MULTI           shift and go to state 84
    DIV             shift and go to state 85
    DIVENTERO       shift and go to state 86
    MOD             shift and go to state 87

    operadorMat                    shift and go to state 90

state 30

    (95) expresionBool -> valorBool .

    PUNTOYCOMA      reduce using rule 95 (expresionBool -> valorBool .)
    AND             reduce using rule 95 (expresionBool -> valorBool .)
    OR              reduce using rule 95 (expresionBool -> valorBool .)
    INT             reduce using rule 95 (expresionBool -> valorBool .)
    DOUBLER         reduce using rule 95 (expresionBool -> valorBool .)
    NUM             reduce using rule 95 (expresionBool -> valorBool .)
    STRINGR         reduce using rule 95 (expresionBool -> valorBool .)
    BOOLR           reduce using rule 95 (expresionBool -> valorBool .)
    DYNAMIC         reduce using rule 95 (expresionBool -> valorBool .)
    VAR             reduce using rule 95 (expresionBool -> valorBool .)
    VARIABLE        reduce using rule 95 (expresionBool -> valorBool .)
    WHILE           reduce using rule 95 (expresionBool -> valorBool .)
    DO              reduce using rule 95 (expresionBool -> valorBool .)
    IF              reduce using rule 95 (expresionBool -> valorBool .)
    ELSE            reduce using rule 95 (expresionBool -> valorBool .)
    PRINT           reduce using rule 95 (expresionBool -> valorBool .)
    FUNCIONSTDIN    reduce using rule 95 (expresionBool -> valorBool .)
    NOT             reduce using rule 95 (expresionBool -> valorBool .)
    ELSEIF          reduce using rule 95 (expresionBool -> valorBool .)
    ENTERO          reduce using rule 95 (expresionBool -> valorBool .)
    DOUBLE          reduce using rule 95 (expresionBool -> valorBool .)
    STRING          reduce using rule 95 (expresionBool -> valorBool .)
    BOOL            reduce using rule 95 (expresionBool -> valorBool .)
    $end            reduce using rule 95 (expresionBool -> valorBool .)
    LDER            reduce using rule 95 (expresionBool -> valorBool .)
    PDER            reduce using rule 95 (expresionBool -> valorBool .)


state 31

    (98) expresionBool -> valor . IS objeto
    (99) expresionBool -> valor . ISNEGADO objeto
    (80) expresion -> valor . operadorMat expresion
    (81) expresion -> valor .
    (115) operadorMat -> . SUMA
    (116) operadorMat -> . RESTA
    (117) operadorMat -> . MULTI
    (118) operadorMat -> . DIV
    (119) operadorMat -> . DIVENTERO
    (120) operadorMat -> . MOD

    IS              shift and go to state 91
    ISNEGADO        shift and go to state 92
    PUNTOYCOMA      reduce using rule 81 (expresion -> valor .)
    INT             reduce using rule 81 (expresion -> valor .)
    DOUBLER         reduce using rule 81 (expresion -> valor .)
    NUM             reduce using rule 81 (expresion -> valor .)
    STRINGR         reduce using rule 81 (expresion -> valor .)
    BOOLR           reduce using rule 81 (expresion -> valor .)
    DYNAMIC         reduce using rule 81 (expresion -> valor .)
    VAR             reduce using rule 81 (expresion -> valor .)
    VARIABLE        reduce using rule 81 (expresion -> valor .)
    WHILE           reduce using rule 81 (expresion -> valor .)
    DO              reduce using rule 81 (expresion -> valor .)
    IF              reduce using rule 81 (expresion -> valor .)
    ELSE            reduce using rule 81 (expresion -> valor .)
    PRINT           reduce using rule 81 (expresion -> valor .)
    FUNCIONSTDIN    reduce using rule 81 (expresion -> valor .)
    NOT             reduce using rule 81 (expresion -> valor .)
    ELSEIF          reduce using rule 81 (expresion -> valor .)
    ENTERO          reduce using rule 81 (expresion -> valor .)
    DOUBLE          reduce using rule 81 (expresion -> valor .)
    STRING          reduce using rule 81 (expresion -> valor .)
    BOOL            reduce using rule 81 (expresion -> valor .)
    $end            reduce using rule 81 (expresion -> valor .)
    LDER            reduce using rule 81 (expresion -> valor .)
    SUMA            shift and go to state 82
    RESTA           shift and go to state 83
    MULTI           shift and go to state 84
    DIV             shift and go to state 85
    DIVENTERO       shift and go to state 86
    MOD             shift and go to state 87

    operadorMat                    shift and go to state 93

state 32

    (86) sentenciaWhile -> WHILE . PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> WHILE . PIZQ expresionBool PDER algoritmo

    PIZQ            shift and go to state 94


state 33

    (88) sentenciaDoWhile -> DO . LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER

    LIZQ            shift and go to state 95


state 34

    (70) sentenciaIf -> IF . PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> IF . PIZQ expresionBool PDER LIZQ algoritmo LDER

    PIZQ            shift and go to state 96


state 35

    (72) sentenciaElse -> ELSE . algoritmo
    (73) sentenciaElse -> ELSE . LIZQ algoritmo LDER
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    LIZQ            shift and go to state 98
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    algoritmo                      shift and go to state 97
    asignacion                     shift and go to state 99
    expresionInt                   shift and go to state 100
    expresionDouble                shift and go to state 101
    expresionString                shift and go to state 102
    expresionBool                  shift and go to state 103
    expresion                      shift and go to state 17
    sentenciaWhile                 shift and go to state 104
    sentenciaDoWhile               shift and go to state 105
    sentenciaIf                    shift and go to state 106
    sentenciaElse                  shift and go to state 107
    imprimir                       shift and go to state 108
    funcionStdin                   shift and go to state 109
    negacionBool                   shift and go to state 110
    comparacionBool                shift and go to state 111
    sentenciaElseIf                shift and go to state 112
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 36

    (67) imprimir -> PRINT . PIZQ expresion PDER
    (68) imprimir -> PRINT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 113


state 37

    (69) funcionStdin -> FUNCIONSTDIN .

    PUNTOYCOMA      reduce using rule 69 (funcionStdin -> FUNCIONSTDIN .)


state 38

    (100) negacionBool -> NOT . PIZQ expresionBool PDER

    PIZQ            shift and go to state 114


state 39

    (74) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER LIZQ algoritmo LDER

    PIZQ            shift and go to state 115


state 40

    (107) valorInt -> ENTERO .
    (76) valor -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for INT resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for NUM resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRINGR resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOLR resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for VAR resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for WHILE resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for DO resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for IF resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for ELSE resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for PRINT resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for NOT resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for ENTERO resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRING resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOL resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for $end resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for LDER resolved using rule 76 (valor -> ENTERO .)
    DIGUAL          reduce using rule 107 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 107 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 107 (valorInt -> ENTERO .)
    MENOR           reduce using rule 107 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 107 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 107 (valorInt -> ENTERO .)
    IS              reduce using rule 76 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 76 (valor -> ENTERO .)
    SUMA            reduce using rule 76 (valor -> ENTERO .)
    RESTA           reduce using rule 76 (valor -> ENTERO .)
    MULTI           reduce using rule 76 (valor -> ENTERO .)
    DIV             reduce using rule 76 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 76 (valor -> ENTERO .)
    MOD             reduce using rule 76 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 76 (valor -> ENTERO .)
    INT             reduce using rule 76 (valor -> ENTERO .)
    DOUBLER         reduce using rule 76 (valor -> ENTERO .)
    NUM             reduce using rule 76 (valor -> ENTERO .)
    STRINGR         reduce using rule 76 (valor -> ENTERO .)
    BOOLR           reduce using rule 76 (valor -> ENTERO .)
    DYNAMIC         reduce using rule 76 (valor -> ENTERO .)
    VAR             reduce using rule 76 (valor -> ENTERO .)
    VARIABLE        reduce using rule 76 (valor -> ENTERO .)
    WHILE           reduce using rule 76 (valor -> ENTERO .)
    DO              reduce using rule 76 (valor -> ENTERO .)
    IF              reduce using rule 76 (valor -> ENTERO .)
    ELSE            reduce using rule 76 (valor -> ENTERO .)
    PRINT           reduce using rule 76 (valor -> ENTERO .)
    FUNCIONSTDIN    reduce using rule 76 (valor -> ENTERO .)
    NOT             reduce using rule 76 (valor -> ENTERO .)
    ELSEIF          reduce using rule 76 (valor -> ENTERO .)
    ENTERO          reduce using rule 76 (valor -> ENTERO .)
    DOUBLE          reduce using rule 76 (valor -> ENTERO .)
    STRING          reduce using rule 76 (valor -> ENTERO .)
    BOOL            reduce using rule 76 (valor -> ENTERO .)
    $end            reduce using rule 76 (valor -> ENTERO .)
    LDER            reduce using rule 76 (valor -> ENTERO .)

  ! SUMA            [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! INT             [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! DOUBLER         [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! NUM             [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! STRINGR         [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! BOOLR           [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! DYNAMIC         [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! VAR             [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! VARIABLE        [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! WHILE           [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! DO              [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! IF              [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! ELSE            [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! PRINT           [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! FUNCIONSTDIN    [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! NOT             [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! ELSEIF          [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! ENTERO          [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! DOUBLE          [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! STRING          [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! BOOL            [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! $end            [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! LDER            [ reduce using rule 107 (valorInt -> ENTERO .) ]


state 41

    (111) valorDouble -> DOUBLE .
    (78) valor -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for INT resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NUM resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VAR resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DO resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for IF resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NOT resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRING resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for $end resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for LDER resolved using rule 78 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 111 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 111 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 111 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 111 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 111 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 111 (valorDouble -> DOUBLE .)
    IS              reduce using rule 78 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 78 (valor -> DOUBLE .)
    SUMA            reduce using rule 78 (valor -> DOUBLE .)
    RESTA           reduce using rule 78 (valor -> DOUBLE .)
    MULTI           reduce using rule 78 (valor -> DOUBLE .)
    DIV             reduce using rule 78 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 78 (valor -> DOUBLE .)
    MOD             reduce using rule 78 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 78 (valor -> DOUBLE .)
    INT             reduce using rule 78 (valor -> DOUBLE .)
    DOUBLER         reduce using rule 78 (valor -> DOUBLE .)
    NUM             reduce using rule 78 (valor -> DOUBLE .)
    STRINGR         reduce using rule 78 (valor -> DOUBLE .)
    BOOLR           reduce using rule 78 (valor -> DOUBLE .)
    DYNAMIC         reduce using rule 78 (valor -> DOUBLE .)
    VAR             reduce using rule 78 (valor -> DOUBLE .)
    VARIABLE        reduce using rule 78 (valor -> DOUBLE .)
    WHILE           reduce using rule 78 (valor -> DOUBLE .)
    DO              reduce using rule 78 (valor -> DOUBLE .)
    IF              reduce using rule 78 (valor -> DOUBLE .)
    ELSE            reduce using rule 78 (valor -> DOUBLE .)
    PRINT           reduce using rule 78 (valor -> DOUBLE .)
    FUNCIONSTDIN    reduce using rule 78 (valor -> DOUBLE .)
    NOT             reduce using rule 78 (valor -> DOUBLE .)
    ELSEIF          reduce using rule 78 (valor -> DOUBLE .)
    ENTERO          reduce using rule 78 (valor -> DOUBLE .)
    DOUBLE          reduce using rule 78 (valor -> DOUBLE .)
    STRING          reduce using rule 78 (valor -> DOUBLE .)
    BOOL            reduce using rule 78 (valor -> DOUBLE .)
    $end            reduce using rule 78 (valor -> DOUBLE .)
    LDER            reduce using rule 78 (valor -> DOUBLE .)

  ! SUMA            [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! INT             [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! DOUBLER         [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! NUM             [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! STRINGR         [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! BOOLR           [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! DYNAMIC         [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! VAR             [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! VARIABLE        [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! WHILE           [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! DO              [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! IF              [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! ELSE            [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! PRINT           [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! NOT             [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! ELSEIF          [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! ENTERO          [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! DOUBLE          [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! STRING          [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! BOOL            [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! $end            [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! LDER            [ reduce using rule 111 (valorDouble -> DOUBLE .) ]


state 42

    (103) valorString -> STRING .
    (79) valor -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for RESTA resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for MULTI resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for DIV resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for MOD resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for INT resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for NUM resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for STRINGR resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for BOOLR resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for VAR resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for WHILE resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for DO resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for IF resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for ELSE resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for PRINT resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for NOT resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for ENTERO resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for STRING resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for BOOL resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for $end resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for LDER resolved using rule 79 (valor -> STRING .)
    IS              reduce using rule 79 (valor -> STRING .)
    ISNEGADO        reduce using rule 79 (valor -> STRING .)
    SUMA            reduce using rule 79 (valor -> STRING .)
    RESTA           reduce using rule 79 (valor -> STRING .)
    MULTI           reduce using rule 79 (valor -> STRING .)
    DIV             reduce using rule 79 (valor -> STRING .)
    DIVENTERO       reduce using rule 79 (valor -> STRING .)
    MOD             reduce using rule 79 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 79 (valor -> STRING .)
    INT             reduce using rule 79 (valor -> STRING .)
    DOUBLER         reduce using rule 79 (valor -> STRING .)
    NUM             reduce using rule 79 (valor -> STRING .)
    STRINGR         reduce using rule 79 (valor -> STRING .)
    BOOLR           reduce using rule 79 (valor -> STRING .)
    DYNAMIC         reduce using rule 79 (valor -> STRING .)
    VAR             reduce using rule 79 (valor -> STRING .)
    VARIABLE        reduce using rule 79 (valor -> STRING .)
    WHILE           reduce using rule 79 (valor -> STRING .)
    DO              reduce using rule 79 (valor -> STRING .)
    IF              reduce using rule 79 (valor -> STRING .)
    ELSE            reduce using rule 79 (valor -> STRING .)
    PRINT           reduce using rule 79 (valor -> STRING .)
    FUNCIONSTDIN    reduce using rule 79 (valor -> STRING .)
    NOT             reduce using rule 79 (valor -> STRING .)
    ELSEIF          reduce using rule 79 (valor -> STRING .)
    ENTERO          reduce using rule 79 (valor -> STRING .)
    DOUBLE          reduce using rule 79 (valor -> STRING .)
    STRING          reduce using rule 79 (valor -> STRING .)
    BOOL            reduce using rule 79 (valor -> STRING .)
    $end            reduce using rule 79 (valor -> STRING .)
    LDER            reduce using rule 79 (valor -> STRING .)

  ! SUMA            [ reduce using rule 103 (valorString -> STRING .) ]
  ! RESTA           [ reduce using rule 103 (valorString -> STRING .) ]
  ! MULTI           [ reduce using rule 103 (valorString -> STRING .) ]
  ! DIV             [ reduce using rule 103 (valorString -> STRING .) ]
  ! DIVENTERO       [ reduce using rule 103 (valorString -> STRING .) ]
  ! MOD             [ reduce using rule 103 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 103 (valorString -> STRING .) ]
  ! INT             [ reduce using rule 103 (valorString -> STRING .) ]
  ! DOUBLER         [ reduce using rule 103 (valorString -> STRING .) ]
  ! NUM             [ reduce using rule 103 (valorString -> STRING .) ]
  ! STRINGR         [ reduce using rule 103 (valorString -> STRING .) ]
  ! BOOLR           [ reduce using rule 103 (valorString -> STRING .) ]
  ! DYNAMIC         [ reduce using rule 103 (valorString -> STRING .) ]
  ! VAR             [ reduce using rule 103 (valorString -> STRING .) ]
  ! VARIABLE        [ reduce using rule 103 (valorString -> STRING .) ]
  ! WHILE           [ reduce using rule 103 (valorString -> STRING .) ]
  ! DO              [ reduce using rule 103 (valorString -> STRING .) ]
  ! IF              [ reduce using rule 103 (valorString -> STRING .) ]
  ! ELSE            [ reduce using rule 103 (valorString -> STRING .) ]
  ! PRINT           [ reduce using rule 103 (valorString -> STRING .) ]
  ! FUNCIONSTDIN    [ reduce using rule 103 (valorString -> STRING .) ]
  ! NOT             [ reduce using rule 103 (valorString -> STRING .) ]
  ! ELSEIF          [ reduce using rule 103 (valorString -> STRING .) ]
  ! ENTERO          [ reduce using rule 103 (valorString -> STRING .) ]
  ! DOUBLE          [ reduce using rule 103 (valorString -> STRING .) ]
  ! STRING          [ reduce using rule 103 (valorString -> STRING .) ]
  ! BOOL            [ reduce using rule 103 (valorString -> STRING .) ]
  ! $end            [ reduce using rule 103 (valorString -> STRING .) ]
  ! LDER            [ reduce using rule 103 (valorString -> STRING .) ]


state 43

    (89) valorBool -> BOOL .

    PUNTOYCOMA      reduce using rule 89 (valorBool -> BOOL .)
    AND             reduce using rule 89 (valorBool -> BOOL .)
    OR              reduce using rule 89 (valorBool -> BOOL .)
    INT             reduce using rule 89 (valorBool -> BOOL .)
    DOUBLER         reduce using rule 89 (valorBool -> BOOL .)
    NUM             reduce using rule 89 (valorBool -> BOOL .)
    STRINGR         reduce using rule 89 (valorBool -> BOOL .)
    BOOLR           reduce using rule 89 (valorBool -> BOOL .)
    DYNAMIC         reduce using rule 89 (valorBool -> BOOL .)
    VAR             reduce using rule 89 (valorBool -> BOOL .)
    VARIABLE        reduce using rule 89 (valorBool -> BOOL .)
    WHILE           reduce using rule 89 (valorBool -> BOOL .)
    DO              reduce using rule 89 (valorBool -> BOOL .)
    IF              reduce using rule 89 (valorBool -> BOOL .)
    ELSE            reduce using rule 89 (valorBool -> BOOL .)
    PRINT           reduce using rule 89 (valorBool -> BOOL .)
    FUNCIONSTDIN    reduce using rule 89 (valorBool -> BOOL .)
    NOT             reduce using rule 89 (valorBool -> BOOL .)
    ELSEIF          reduce using rule 89 (valorBool -> BOOL .)
    ENTERO          reduce using rule 89 (valorBool -> BOOL .)
    DOUBLE          reduce using rule 89 (valorBool -> BOOL .)
    STRING          reduce using rule 89 (valorBool -> BOOL .)
    BOOL            reduce using rule 89 (valorBool -> BOOL .)
    $end            reduce using rule 89 (valorBool -> BOOL .)
    LDER            reduce using rule 89 (valorBool -> BOOL .)
    PDER            reduce using rule 89 (valorBool -> BOOL .)


state 44

    (1) final -> algoritmo PUNTOYCOMA .
    (2) final -> algoritmo PUNTOYCOMA . final
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    $end            reduce using rule 1 (final -> algoritmo PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    algoritmo                      shift and go to state 2
    final                          shift and go to state 116
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    expresion                      shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 45

    (3) final -> asignacion PUNTOYCOMA .
    (4) final -> asignacion PUNTOYCOMA . final
    (39) algoritmo -> asignacion PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    $end            reduce using rule 3 (final -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    asignacion                     shift and go to state 3
    final                          shift and go to state 117
    algoritmo                      shift and go to state 2
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    expresion                      shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 46

    (5) final -> expresionInt PUNTOYCOMA .
    (6) final -> expresionInt PUNTOYCOMA . final
    (40) algoritmo -> expresionInt PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    $end            reduce using rule 5 (final -> expresionInt PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expresionInt                   shift and go to state 4
    final                          shift and go to state 118
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    expresion                      shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 47

    (7) final -> expresionDouble PUNTOYCOMA .
    (8) final -> expresionDouble PUNTOYCOMA . final
    (41) algoritmo -> expresionDouble PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    $end            reduce using rule 7 (final -> expresionDouble PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expresionDouble                shift and go to state 5
    final                          shift and go to state 119
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    expresion                      shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 48

    (9) final -> expresionString PUNTOYCOMA .
    (10) final -> expresionString PUNTOYCOMA . final
    (42) algoritmo -> expresionString PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    $end            reduce using rule 9 (final -> expresionString PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expresionString                shift and go to state 6
    final                          shift and go to state 120
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    expresion                      shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 49

    (11) final -> expresionBool PUNTOYCOMA .
    (12) final -> expresionBool PUNTOYCOMA . final
    (43) algoritmo -> expresionBool PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    $end            reduce using rule 11 (final -> expresionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expresionBool                  shift and go to state 7
    final                          shift and go to state 121
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    expresion                      shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 50

    (101) comparacionBool -> expresionBool operadorLogico . expresionBool
    (102) comparacionBool -> expresionBool operadorLogico . comparacionBool
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 125
    DOUBLE          shift and go to state 41
    BOOL            shift and go to state 43
    NOT             shift and go to state 38
    ENTERO          shift and go to state 129
    STRING          shift and go to state 130

    expresionBool                  shift and go to state 122
    comparacionBool                shift and go to state 123
    valorDouble                    shift and go to state 124
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 126
    valor                          shift and go to state 127
    valorInt                       shift and go to state 128

state 51

    (127) operadorLogico -> AND .

    VARIABLE        reduce using rule 127 (operadorLogico -> AND .)
    DOUBLE          reduce using rule 127 (operadorLogico -> AND .)
    BOOL            reduce using rule 127 (operadorLogico -> AND .)
    NOT             reduce using rule 127 (operadorLogico -> AND .)
    ENTERO          reduce using rule 127 (operadorLogico -> AND .)
    STRING          reduce using rule 127 (operadorLogico -> AND .)


state 52

    (128) operadorLogico -> OR .

    VARIABLE        reduce using rule 128 (operadorLogico -> OR .)
    DOUBLE          reduce using rule 128 (operadorLogico -> OR .)
    BOOL            reduce using rule 128 (operadorLogico -> OR .)
    NOT             reduce using rule 128 (operadorLogico -> OR .)
    ENTERO          reduce using rule 128 (operadorLogico -> OR .)
    STRING          reduce using rule 128 (operadorLogico -> OR .)


state 53

    (14) final -> sentenciaWhile final .

    $end            reduce using rule 14 (final -> sentenciaWhile final .)


state 54

    (15) final -> sentenciaWhile PUNTOYCOMA .
    (16) final -> sentenciaWhile PUNTOYCOMA . final
    (46) algoritmo -> sentenciaWhile PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    $end            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 131
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    expresion                      shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 55

    (17) final -> sentenciaDoWhile PUNTOYCOMA .
    (18) final -> sentenciaDoWhile PUNTOYCOMA . final
    (47) algoritmo -> sentenciaDoWhile PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    $end            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    sentenciaDoWhile               shift and go to state 9
    final                          shift and go to state 132
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    expresion                      shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 56

    (19) final -> sentenciaIf PUNTOYCOMA .
    (20) final -> sentenciaIf PUNTOYCOMA . final
    (48) algoritmo -> sentenciaIf PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    $end            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 133
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    expresion                      shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 57

    (22) final -> sentenciaIf final .

    $end            reduce using rule 22 (final -> sentenciaIf final .)


state 58

    (23) final -> sentenciaElse PUNTOYCOMA .
    (24) final -> sentenciaElse PUNTOYCOMA . final
    (50) algoritmo -> sentenciaElse PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    $end            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 134
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    expresion                      shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 59

    (26) final -> sentenciaElse final .

    $end            reduce using rule 26 (final -> sentenciaElse final .)


state 60

    (27) final -> imprimir PUNTOYCOMA .
    (28) final -> imprimir PUNTOYCOMA . final
    (52) algoritmo -> imprimir PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    $end            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    imprimir                       shift and go to state 12
    final                          shift and go to state 135
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    expresion                      shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 61

    (29) final -> funcionStdin PUNTOYCOMA .
    (30) final -> funcionStdin PUNTOYCOMA . final
    (53) algoritmo -> funcionStdin PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    $end            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    funcionStdin                   shift and go to state 13
    final                          shift and go to state 136
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    expresion                      shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 62

    (31) final -> negacionBool PUNTOYCOMA .
    (32) final -> negacionBool PUNTOYCOMA . final
    (54) algoritmo -> negacionBool PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    $end            reduce using rule 31 (final -> negacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    negacionBool                   shift and go to state 14
    final                          shift and go to state 137
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    expresion                      shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 63

    (33) final -> comparacionBool PUNTOYCOMA . final
    (34) final -> comparacionBool PUNTOYCOMA .
    (55) algoritmo -> comparacionBool PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    $end            reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    comparacionBool                shift and go to state 15
    final                          shift and go to state 138
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 14
    sentenciaElseIf                shift and go to state 16
    expresion                      shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 64

    (35) final -> sentenciaElseIf PUNTOYCOMA . final
    (37) final -> sentenciaElseIf PUNTOYCOMA .
    (57) algoritmo -> sentenciaElseIf PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    $end            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    sentenciaElseIf                shift and go to state 16
    final                          shift and go to state 139
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    expresion                      shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 65

    (36) final -> sentenciaElseIf final .

    $end            reduce using rule 36 (final -> sentenciaElseIf final .)


state 66

    (58) asignacion -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 140


state 67

    (92) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (93) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 141
    DOUBLE          shift and go to state 144
    ENTERO          shift and go to state 145

    expresionDouble                shift and go to state 142
    valorDouble                    shift and go to state 143
    valorInt                       shift and go to state 128

state 68

    (66) asignacionSimple -> VARIABLE IGUAL . expresion
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool

    ENTERO          shift and go to state 129
    VARIABLE        shift and go to state 146
    DOUBLE          shift and go to state 153
    STRING          shift and go to state 154
    BOOL            shift and go to state 43
    NOT             shift and go to state 38

    expresion                      shift and go to state 147
    valor                          shift and go to state 148
    expresionString                shift and go to state 149
    expresionInt                   shift and go to state 150
    expresionDouble                shift and go to state 151
    expresionBool                  shift and go to state 152
    valorString                    shift and go to state 29
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 155

state 69

    (121) comparadorMat -> DIGUAL .

    VARIABLE        reduce using rule 121 (comparadorMat -> DIGUAL .)
    DOUBLE          reduce using rule 121 (comparadorMat -> DIGUAL .)
    ENTERO          reduce using rule 121 (comparadorMat -> DIGUAL .)


state 70

    (122) comparadorMat -> NOIGUAL .

    VARIABLE        reduce using rule 122 (comparadorMat -> NOIGUAL .)
    DOUBLE          reduce using rule 122 (comparadorMat -> NOIGUAL .)
    ENTERO          reduce using rule 122 (comparadorMat -> NOIGUAL .)


state 71

    (123) comparadorMat -> MAYOR .

    VARIABLE        reduce using rule 123 (comparadorMat -> MAYOR .)
    DOUBLE          reduce using rule 123 (comparadorMat -> MAYOR .)
    ENTERO          reduce using rule 123 (comparadorMat -> MAYOR .)


state 72

    (124) comparadorMat -> MENOR .

    VARIABLE        reduce using rule 124 (comparadorMat -> MENOR .)
    DOUBLE          reduce using rule 124 (comparadorMat -> MENOR .)
    ENTERO          reduce using rule 124 (comparadorMat -> MENOR .)


state 73

    (125) comparadorMat -> MAYIGUAL .

    VARIABLE        reduce using rule 125 (comparadorMat -> MAYIGUAL .)
    DOUBLE          reduce using rule 125 (comparadorMat -> MAYIGUAL .)
    ENTERO          reduce using rule 125 (comparadorMat -> MAYIGUAL .)


state 74

    (126) comparadorMat -> MENIGUAL .

    VARIABLE        reduce using rule 126 (comparadorMat -> MENIGUAL .)
    DOUBLE          reduce using rule 126 (comparadorMat -> MENIGUAL .)
    ENTERO          reduce using rule 126 (comparadorMat -> MENIGUAL .)


state 75

    (59) asignacion -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 156


state 76

    (60) asignacion -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 157


state 77

    (61) asignacion -> STRINGR VARIABLE . IGUAL expresionString

    IGUAL           shift and go to state 158


state 78

    (62) asignacion -> BOOLR VARIABLE . IGUAL expresionBool

    IGUAL           shift and go to state 159


state 79

    (63) asignacion -> DYNAMIC VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 160


state 80

    (64) asignacion -> VAR VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 161


state 81

    (109) expresionInt -> valorInt operadorMat . expresionInt
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE

    ENTERO          shift and go to state 145
    VARIABLE        shift and go to state 164

    valorInt                       shift and go to state 162
    expresionInt                   shift and go to state 163

state 82

    (115) operadorMat -> SUMA .

    ENTERO          reduce using rule 115 (operadorMat -> SUMA .)
    VARIABLE        reduce using rule 115 (operadorMat -> SUMA .)
    DOUBLE          reduce using rule 115 (operadorMat -> SUMA .)
    STRING          reduce using rule 115 (operadorMat -> SUMA .)
    BOOL            reduce using rule 115 (operadorMat -> SUMA .)
    NOT             reduce using rule 115 (operadorMat -> SUMA .)


state 83

    (116) operadorMat -> RESTA .

    ENTERO          reduce using rule 116 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 116 (operadorMat -> RESTA .)
    DOUBLE          reduce using rule 116 (operadorMat -> RESTA .)
    STRING          reduce using rule 116 (operadorMat -> RESTA .)
    BOOL            reduce using rule 116 (operadorMat -> RESTA .)
    NOT             reduce using rule 116 (operadorMat -> RESTA .)


state 84

    (117) operadorMat -> MULTI .

    ENTERO          reduce using rule 117 (operadorMat -> MULTI .)
    VARIABLE        reduce using rule 117 (operadorMat -> MULTI .)
    DOUBLE          reduce using rule 117 (operadorMat -> MULTI .)
    STRING          reduce using rule 117 (operadorMat -> MULTI .)
    BOOL            reduce using rule 117 (operadorMat -> MULTI .)
    NOT             reduce using rule 117 (operadorMat -> MULTI .)


state 85

    (118) operadorMat -> DIV .

    ENTERO          reduce using rule 118 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 118 (operadorMat -> DIV .)
    DOUBLE          reduce using rule 118 (operadorMat -> DIV .)
    STRING          reduce using rule 118 (operadorMat -> DIV .)
    BOOL            reduce using rule 118 (operadorMat -> DIV .)
    NOT             reduce using rule 118 (operadorMat -> DIV .)


state 86

    (119) operadorMat -> DIVENTERO .

    ENTERO          reduce using rule 119 (operadorMat -> DIVENTERO .)
    VARIABLE        reduce using rule 119 (operadorMat -> DIVENTERO .)
    DOUBLE          reduce using rule 119 (operadorMat -> DIVENTERO .)
    STRING          reduce using rule 119 (operadorMat -> DIVENTERO .)
    BOOL            reduce using rule 119 (operadorMat -> DIVENTERO .)
    NOT             reduce using rule 119 (operadorMat -> DIVENTERO .)


state 87

    (120) operadorMat -> MOD .

    ENTERO          reduce using rule 120 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 120 (operadorMat -> MOD .)
    DOUBLE          reduce using rule 120 (operadorMat -> MOD .)
    STRING          reduce using rule 120 (operadorMat -> MOD .)
    BOOL            reduce using rule 120 (operadorMat -> MOD .)
    NOT             reduce using rule 120 (operadorMat -> MOD .)


state 88

    (113) expresionDouble -> valorDouble operadorMat . expresionDouble
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 144
    ENTERO          shift and go to state 145
    VARIABLE        shift and go to state 164

    valorDouble                    shift and go to state 143
    expresionDouble                shift and go to state 165
    valorInt                       shift and go to state 128

state 89

    (91) expresionBool -> valorDouble comparadorMat . expresionDouble
    (94) expresionBool -> valorDouble comparadorMat . VARIABLE
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 167
    DOUBLE          shift and go to state 144
    ENTERO          shift and go to state 145

    valorDouble                    shift and go to state 143
    expresionDouble                shift and go to state 166
    valorInt                       shift and go to state 128

state 90

    (105) expresionString -> valorString operadorMat . expresionString
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE

    STRING          shift and go to state 169
    VARIABLE        shift and go to state 170

    valorString                    shift and go to state 29
    expresionString                shift and go to state 168

state 91

    (98) expresionBool -> valor IS . objeto
    (129) objeto -> . STRINGR
    (130) objeto -> . INT
    (131) objeto -> . DOUBLER
    (132) objeto -> . NUM
    (133) objeto -> . VAR
    (134) objeto -> . DYNAMIC
    (135) objeto -> . LIST
    (136) objeto -> . BOOL
    (137) objeto -> . MAP
    (138) objeto -> . SET

    STRINGR         shift and go to state 172
    INT             shift and go to state 173
    DOUBLER         shift and go to state 174
    NUM             shift and go to state 175
    VAR             shift and go to state 176
    DYNAMIC         shift and go to state 177
    LIST            shift and go to state 178
    BOOL            shift and go to state 179
    MAP             shift and go to state 180
    SET             shift and go to state 181

    objeto                         shift and go to state 171

state 92

    (99) expresionBool -> valor ISNEGADO . objeto
    (129) objeto -> . STRINGR
    (130) objeto -> . INT
    (131) objeto -> . DOUBLER
    (132) objeto -> . NUM
    (133) objeto -> . VAR
    (134) objeto -> . DYNAMIC
    (135) objeto -> . LIST
    (136) objeto -> . BOOL
    (137) objeto -> . MAP
    (138) objeto -> . SET

    STRINGR         shift and go to state 172
    INT             shift and go to state 173
    DOUBLER         shift and go to state 174
    NUM             shift and go to state 175
    VAR             shift and go to state 176
    DYNAMIC         shift and go to state 177
    LIST            shift and go to state 178
    BOOL            shift and go to state 179
    MAP             shift and go to state 180
    SET             shift and go to state 181

    objeto                         shift and go to state 182

state 93

    (80) expresion -> valor operadorMat . expresion
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool

    ENTERO          shift and go to state 129
    VARIABLE        shift and go to state 146
    DOUBLE          shift and go to state 153
    STRING          shift and go to state 154
    BOOL            shift and go to state 43
    NOT             shift and go to state 38

    valor                          shift and go to state 148
    expresion                      shift and go to state 183
    expresionString                shift and go to state 149
    expresionInt                   shift and go to state 150
    expresionDouble                shift and go to state 151
    expresionBool                  shift and go to state 152
    valorString                    shift and go to state 29
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 155

state 94

    (86) sentenciaWhile -> WHILE PIZQ . expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> WHILE PIZQ . expresionBool PDER algoritmo
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 125
    DOUBLE          shift and go to state 41
    BOOL            shift and go to state 43
    NOT             shift and go to state 38
    ENTERO          shift and go to state 129
    STRING          shift and go to state 130

    expresionBool                  shift and go to state 184
    valorDouble                    shift and go to state 124
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 155
    valor                          shift and go to state 127
    valorInt                       shift and go to state 128

state 95

    (88) sentenciaDoWhile -> DO LIZQ . algoritmo LDER WHILE PIZQ expresionBool PDER
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    algoritmo                      shift and go to state 185
    expresionBool                  shift and go to state 103
    asignacion                     shift and go to state 99
    expresionInt                   shift and go to state 100
    expresionDouble                shift and go to state 101
    expresionString                shift and go to state 102
    expresion                      shift and go to state 17
    sentenciaWhile                 shift and go to state 104
    sentenciaDoWhile               shift and go to state 105
    sentenciaIf                    shift and go to state 106
    sentenciaElse                  shift and go to state 107
    imprimir                       shift and go to state 108
    funcionStdin                   shift and go to state 109
    negacionBool                   shift and go to state 110
    comparacionBool                shift and go to state 111
    sentenciaElseIf                shift and go to state 112
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 96

    (70) sentenciaIf -> IF PIZQ . expresionBool PDER algoritmo
    (71) sentenciaIf -> IF PIZQ . expresionBool PDER LIZQ algoritmo LDER
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 125
    DOUBLE          shift and go to state 41
    BOOL            shift and go to state 43
    NOT             shift and go to state 38
    ENTERO          shift and go to state 129
    STRING          shift and go to state 130

    expresionBool                  shift and go to state 186
    valorDouble                    shift and go to state 124
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 155
    valor                          shift and go to state 127
    valorInt                       shift and go to state 128

state 97

    (72) sentenciaElse -> ELSE algoritmo .

    PUNTOYCOMA      reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)
    INT             reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)
    DOUBLER         reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)
    NUM             reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)
    STRINGR         reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)
    BOOLR           reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)
    DYNAMIC         reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)
    VAR             reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)
    VARIABLE        reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)
    WHILE           reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)
    DO              reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)
    IF              reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)
    ELSE            reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)
    PRINT           reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)
    FUNCIONSTDIN    reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)
    NOT             reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)
    ELSEIF          reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)
    ENTERO          reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)
    DOUBLE          reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)
    STRING          reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)
    BOOL            reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)
    $end            reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)
    LDER            reduce using rule 72 (sentenciaElse -> ELSE algoritmo .)


state 98

    (73) sentenciaElse -> ELSE LIZQ . algoritmo LDER
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    algoritmo                      shift and go to state 187
    asignacion                     shift and go to state 99
    expresionInt                   shift and go to state 100
    expresionDouble                shift and go to state 101
    expresionString                shift and go to state 102
    expresionBool                  shift and go to state 103
    expresion                      shift and go to state 17
    sentenciaWhile                 shift and go to state 104
    sentenciaDoWhile               shift and go to state 105
    sentenciaIf                    shift and go to state 106
    sentenciaElse                  shift and go to state 107
    imprimir                       shift and go to state 108
    funcionStdin                   shift and go to state 109
    negacionBool                   shift and go to state 110
    comparacionBool                shift and go to state 111
    sentenciaElseIf                shift and go to state 112
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 99

    (39) algoritmo -> asignacion . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 188


state 100

    (40) algoritmo -> expresionInt . PUNTOYCOMA
    (83) expresion -> expresionInt .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 189
    INT             reduce using rule 83 (expresion -> expresionInt .)
    DOUBLER         reduce using rule 83 (expresion -> expresionInt .)
    NUM             reduce using rule 83 (expresion -> expresionInt .)
    STRINGR         reduce using rule 83 (expresion -> expresionInt .)
    BOOLR           reduce using rule 83 (expresion -> expresionInt .)
    DYNAMIC         reduce using rule 83 (expresion -> expresionInt .)
    VAR             reduce using rule 83 (expresion -> expresionInt .)
    VARIABLE        reduce using rule 83 (expresion -> expresionInt .)
    WHILE           reduce using rule 83 (expresion -> expresionInt .)
    DO              reduce using rule 83 (expresion -> expresionInt .)
    IF              reduce using rule 83 (expresion -> expresionInt .)
    ELSE            reduce using rule 83 (expresion -> expresionInt .)
    PRINT           reduce using rule 83 (expresion -> expresionInt .)
    FUNCIONSTDIN    reduce using rule 83 (expresion -> expresionInt .)
    NOT             reduce using rule 83 (expresion -> expresionInt .)
    ELSEIF          reduce using rule 83 (expresion -> expresionInt .)
    ENTERO          reduce using rule 83 (expresion -> expresionInt .)
    DOUBLE          reduce using rule 83 (expresion -> expresionInt .)
    STRING          reduce using rule 83 (expresion -> expresionInt .)
    BOOL            reduce using rule 83 (expresion -> expresionInt .)
    $end            reduce using rule 83 (expresion -> expresionInt .)
    LDER            reduce using rule 83 (expresion -> expresionInt .)

  ! PUNTOYCOMA      [ reduce using rule 83 (expresion -> expresionInt .) ]


state 101

    (41) algoritmo -> expresionDouble . PUNTOYCOMA
    (84) expresion -> expresionDouble .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 190
    INT             reduce using rule 84 (expresion -> expresionDouble .)
    DOUBLER         reduce using rule 84 (expresion -> expresionDouble .)
    NUM             reduce using rule 84 (expresion -> expresionDouble .)
    STRINGR         reduce using rule 84 (expresion -> expresionDouble .)
    BOOLR           reduce using rule 84 (expresion -> expresionDouble .)
    DYNAMIC         reduce using rule 84 (expresion -> expresionDouble .)
    VAR             reduce using rule 84 (expresion -> expresionDouble .)
    VARIABLE        reduce using rule 84 (expresion -> expresionDouble .)
    WHILE           reduce using rule 84 (expresion -> expresionDouble .)
    DO              reduce using rule 84 (expresion -> expresionDouble .)
    IF              reduce using rule 84 (expresion -> expresionDouble .)
    ELSE            reduce using rule 84 (expresion -> expresionDouble .)
    PRINT           reduce using rule 84 (expresion -> expresionDouble .)
    FUNCIONSTDIN    reduce using rule 84 (expresion -> expresionDouble .)
    NOT             reduce using rule 84 (expresion -> expresionDouble .)
    ELSEIF          reduce using rule 84 (expresion -> expresionDouble .)
    ENTERO          reduce using rule 84 (expresion -> expresionDouble .)
    DOUBLE          reduce using rule 84 (expresion -> expresionDouble .)
    STRING          reduce using rule 84 (expresion -> expresionDouble .)
    BOOL            reduce using rule 84 (expresion -> expresionDouble .)
    $end            reduce using rule 84 (expresion -> expresionDouble .)
    LDER            reduce using rule 84 (expresion -> expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 84 (expresion -> expresionDouble .) ]


state 102

    (42) algoritmo -> expresionString . PUNTOYCOMA
    (82) expresion -> expresionString .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 191
    INT             reduce using rule 82 (expresion -> expresionString .)
    DOUBLER         reduce using rule 82 (expresion -> expresionString .)
    NUM             reduce using rule 82 (expresion -> expresionString .)
    STRINGR         reduce using rule 82 (expresion -> expresionString .)
    BOOLR           reduce using rule 82 (expresion -> expresionString .)
    DYNAMIC         reduce using rule 82 (expresion -> expresionString .)
    VAR             reduce using rule 82 (expresion -> expresionString .)
    VARIABLE        reduce using rule 82 (expresion -> expresionString .)
    WHILE           reduce using rule 82 (expresion -> expresionString .)
    DO              reduce using rule 82 (expresion -> expresionString .)
    IF              reduce using rule 82 (expresion -> expresionString .)
    ELSE            reduce using rule 82 (expresion -> expresionString .)
    PRINT           reduce using rule 82 (expresion -> expresionString .)
    FUNCIONSTDIN    reduce using rule 82 (expresion -> expresionString .)
    NOT             reduce using rule 82 (expresion -> expresionString .)
    ELSEIF          reduce using rule 82 (expresion -> expresionString .)
    ENTERO          reduce using rule 82 (expresion -> expresionString .)
    DOUBLE          reduce using rule 82 (expresion -> expresionString .)
    STRING          reduce using rule 82 (expresion -> expresionString .)
    BOOL            reduce using rule 82 (expresion -> expresionString .)
    $end            reduce using rule 82 (expresion -> expresionString .)
    LDER            reduce using rule 82 (expresion -> expresionString .)

  ! PUNTOYCOMA      [ reduce using rule 82 (expresion -> expresionString .) ]


state 103

    (43) algoritmo -> expresionBool . PUNTOYCOMA
    (85) expresion -> expresionBool .
    (101) comparacionBool -> expresionBool . operadorLogico expresionBool
    (102) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (127) operadorLogico -> . AND
    (128) operadorLogico -> . OR

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 192
    INT             reduce using rule 85 (expresion -> expresionBool .)
    DOUBLER         reduce using rule 85 (expresion -> expresionBool .)
    NUM             reduce using rule 85 (expresion -> expresionBool .)
    STRINGR         reduce using rule 85 (expresion -> expresionBool .)
    BOOLR           reduce using rule 85 (expresion -> expresionBool .)
    DYNAMIC         reduce using rule 85 (expresion -> expresionBool .)
    VAR             reduce using rule 85 (expresion -> expresionBool .)
    VARIABLE        reduce using rule 85 (expresion -> expresionBool .)
    WHILE           reduce using rule 85 (expresion -> expresionBool .)
    DO              reduce using rule 85 (expresion -> expresionBool .)
    IF              reduce using rule 85 (expresion -> expresionBool .)
    ELSE            reduce using rule 85 (expresion -> expresionBool .)
    PRINT           reduce using rule 85 (expresion -> expresionBool .)
    FUNCIONSTDIN    reduce using rule 85 (expresion -> expresionBool .)
    NOT             reduce using rule 85 (expresion -> expresionBool .)
    ELSEIF          reduce using rule 85 (expresion -> expresionBool .)
    ENTERO          reduce using rule 85 (expresion -> expresionBool .)
    DOUBLE          reduce using rule 85 (expresion -> expresionBool .)
    STRING          reduce using rule 85 (expresion -> expresionBool .)
    BOOL            reduce using rule 85 (expresion -> expresionBool .)
    $end            reduce using rule 85 (expresion -> expresionBool .)
    LDER            reduce using rule 85 (expresion -> expresionBool .)
    AND             shift and go to state 51
    OR              shift and go to state 52

  ! PUNTOYCOMA      [ reduce using rule 85 (expresion -> expresionBool .) ]

    operadorLogico                 shift and go to state 50

state 104

    (45) algoritmo -> sentenciaWhile .
    (46) algoritmo -> sentenciaWhile . PUNTOYCOMA

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    INT             reduce using rule 45 (algoritmo -> sentenciaWhile .)
    DOUBLER         reduce using rule 45 (algoritmo -> sentenciaWhile .)
    NUM             reduce using rule 45 (algoritmo -> sentenciaWhile .)
    STRINGR         reduce using rule 45 (algoritmo -> sentenciaWhile .)
    BOOLR           reduce using rule 45 (algoritmo -> sentenciaWhile .)
    DYNAMIC         reduce using rule 45 (algoritmo -> sentenciaWhile .)
    VAR             reduce using rule 45 (algoritmo -> sentenciaWhile .)
    VARIABLE        reduce using rule 45 (algoritmo -> sentenciaWhile .)
    WHILE           reduce using rule 45 (algoritmo -> sentenciaWhile .)
    DO              reduce using rule 45 (algoritmo -> sentenciaWhile .)
    IF              reduce using rule 45 (algoritmo -> sentenciaWhile .)
    ELSE            reduce using rule 45 (algoritmo -> sentenciaWhile .)
    PRINT           reduce using rule 45 (algoritmo -> sentenciaWhile .)
    FUNCIONSTDIN    reduce using rule 45 (algoritmo -> sentenciaWhile .)
    NOT             reduce using rule 45 (algoritmo -> sentenciaWhile .)
    ELSEIF          reduce using rule 45 (algoritmo -> sentenciaWhile .)
    ENTERO          reduce using rule 45 (algoritmo -> sentenciaWhile .)
    DOUBLE          reduce using rule 45 (algoritmo -> sentenciaWhile .)
    STRING          reduce using rule 45 (algoritmo -> sentenciaWhile .)
    BOOL            reduce using rule 45 (algoritmo -> sentenciaWhile .)
    $end            reduce using rule 45 (algoritmo -> sentenciaWhile .)
    LDER            reduce using rule 45 (algoritmo -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 193

  ! PUNTOYCOMA      [ reduce using rule 45 (algoritmo -> sentenciaWhile .) ]


state 105

    (47) algoritmo -> sentenciaDoWhile . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 194


state 106

    (48) algoritmo -> sentenciaIf . PUNTOYCOMA
    (49) algoritmo -> sentenciaIf .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 195
    INT             reduce using rule 49 (algoritmo -> sentenciaIf .)
    DOUBLER         reduce using rule 49 (algoritmo -> sentenciaIf .)
    NUM             reduce using rule 49 (algoritmo -> sentenciaIf .)
    STRINGR         reduce using rule 49 (algoritmo -> sentenciaIf .)
    BOOLR           reduce using rule 49 (algoritmo -> sentenciaIf .)
    DYNAMIC         reduce using rule 49 (algoritmo -> sentenciaIf .)
    VAR             reduce using rule 49 (algoritmo -> sentenciaIf .)
    VARIABLE        reduce using rule 49 (algoritmo -> sentenciaIf .)
    WHILE           reduce using rule 49 (algoritmo -> sentenciaIf .)
    DO              reduce using rule 49 (algoritmo -> sentenciaIf .)
    IF              reduce using rule 49 (algoritmo -> sentenciaIf .)
    ELSE            reduce using rule 49 (algoritmo -> sentenciaIf .)
    PRINT           reduce using rule 49 (algoritmo -> sentenciaIf .)
    FUNCIONSTDIN    reduce using rule 49 (algoritmo -> sentenciaIf .)
    NOT             reduce using rule 49 (algoritmo -> sentenciaIf .)
    ELSEIF          reduce using rule 49 (algoritmo -> sentenciaIf .)
    ENTERO          reduce using rule 49 (algoritmo -> sentenciaIf .)
    DOUBLE          reduce using rule 49 (algoritmo -> sentenciaIf .)
    STRING          reduce using rule 49 (algoritmo -> sentenciaIf .)
    BOOL            reduce using rule 49 (algoritmo -> sentenciaIf .)
    $end            reduce using rule 49 (algoritmo -> sentenciaIf .)
    LDER            reduce using rule 49 (algoritmo -> sentenciaIf .)

  ! PUNTOYCOMA      [ reduce using rule 49 (algoritmo -> sentenciaIf .) ]


state 107

    (50) algoritmo -> sentenciaElse . PUNTOYCOMA
    (51) algoritmo -> sentenciaElse .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 196
    INT             reduce using rule 51 (algoritmo -> sentenciaElse .)
    DOUBLER         reduce using rule 51 (algoritmo -> sentenciaElse .)
    NUM             reduce using rule 51 (algoritmo -> sentenciaElse .)
    STRINGR         reduce using rule 51 (algoritmo -> sentenciaElse .)
    BOOLR           reduce using rule 51 (algoritmo -> sentenciaElse .)
    DYNAMIC         reduce using rule 51 (algoritmo -> sentenciaElse .)
    VAR             reduce using rule 51 (algoritmo -> sentenciaElse .)
    VARIABLE        reduce using rule 51 (algoritmo -> sentenciaElse .)
    WHILE           reduce using rule 51 (algoritmo -> sentenciaElse .)
    DO              reduce using rule 51 (algoritmo -> sentenciaElse .)
    IF              reduce using rule 51 (algoritmo -> sentenciaElse .)
    ELSE            reduce using rule 51 (algoritmo -> sentenciaElse .)
    PRINT           reduce using rule 51 (algoritmo -> sentenciaElse .)
    FUNCIONSTDIN    reduce using rule 51 (algoritmo -> sentenciaElse .)
    NOT             reduce using rule 51 (algoritmo -> sentenciaElse .)
    ELSEIF          reduce using rule 51 (algoritmo -> sentenciaElse .)
    ENTERO          reduce using rule 51 (algoritmo -> sentenciaElse .)
    DOUBLE          reduce using rule 51 (algoritmo -> sentenciaElse .)
    STRING          reduce using rule 51 (algoritmo -> sentenciaElse .)
    BOOL            reduce using rule 51 (algoritmo -> sentenciaElse .)
    $end            reduce using rule 51 (algoritmo -> sentenciaElse .)
    LDER            reduce using rule 51 (algoritmo -> sentenciaElse .)

  ! PUNTOYCOMA      [ reduce using rule 51 (algoritmo -> sentenciaElse .) ]


state 108

    (52) algoritmo -> imprimir . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 197


state 109

    (53) algoritmo -> funcionStdin . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 198


state 110

    (54) algoritmo -> negacionBool . PUNTOYCOMA
    (96) expresionBool -> negacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 199
    AND             reduce using rule 96 (expresionBool -> negacionBool .)
    OR              reduce using rule 96 (expresionBool -> negacionBool .)
    INT             reduce using rule 96 (expresionBool -> negacionBool .)
    DOUBLER         reduce using rule 96 (expresionBool -> negacionBool .)
    NUM             reduce using rule 96 (expresionBool -> negacionBool .)
    STRINGR         reduce using rule 96 (expresionBool -> negacionBool .)
    BOOLR           reduce using rule 96 (expresionBool -> negacionBool .)
    DYNAMIC         reduce using rule 96 (expresionBool -> negacionBool .)
    VAR             reduce using rule 96 (expresionBool -> negacionBool .)
    VARIABLE        reduce using rule 96 (expresionBool -> negacionBool .)
    WHILE           reduce using rule 96 (expresionBool -> negacionBool .)
    DO              reduce using rule 96 (expresionBool -> negacionBool .)
    IF              reduce using rule 96 (expresionBool -> negacionBool .)
    ELSE            reduce using rule 96 (expresionBool -> negacionBool .)
    PRINT           reduce using rule 96 (expresionBool -> negacionBool .)
    FUNCIONSTDIN    reduce using rule 96 (expresionBool -> negacionBool .)
    NOT             reduce using rule 96 (expresionBool -> negacionBool .)
    ELSEIF          reduce using rule 96 (expresionBool -> negacionBool .)
    ENTERO          reduce using rule 96 (expresionBool -> negacionBool .)
    DOUBLE          reduce using rule 96 (expresionBool -> negacionBool .)
    STRING          reduce using rule 96 (expresionBool -> negacionBool .)
    BOOL            reduce using rule 96 (expresionBool -> negacionBool .)
    $end            reduce using rule 96 (expresionBool -> negacionBool .)
    LDER            reduce using rule 96 (expresionBool -> negacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 96 (expresionBool -> negacionBool .) ]


state 111

    (55) algoritmo -> comparacionBool . PUNTOYCOMA
    (97) expresionBool -> comparacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 200
    AND             reduce using rule 97 (expresionBool -> comparacionBool .)
    OR              reduce using rule 97 (expresionBool -> comparacionBool .)
    INT             reduce using rule 97 (expresionBool -> comparacionBool .)
    DOUBLER         reduce using rule 97 (expresionBool -> comparacionBool .)
    NUM             reduce using rule 97 (expresionBool -> comparacionBool .)
    STRINGR         reduce using rule 97 (expresionBool -> comparacionBool .)
    BOOLR           reduce using rule 97 (expresionBool -> comparacionBool .)
    DYNAMIC         reduce using rule 97 (expresionBool -> comparacionBool .)
    VAR             reduce using rule 97 (expresionBool -> comparacionBool .)
    VARIABLE        reduce using rule 97 (expresionBool -> comparacionBool .)
    WHILE           reduce using rule 97 (expresionBool -> comparacionBool .)
    DO              reduce using rule 97 (expresionBool -> comparacionBool .)
    IF              reduce using rule 97 (expresionBool -> comparacionBool .)
    ELSE            reduce using rule 97 (expresionBool -> comparacionBool .)
    PRINT           reduce using rule 97 (expresionBool -> comparacionBool .)
    FUNCIONSTDIN    reduce using rule 97 (expresionBool -> comparacionBool .)
    NOT             reduce using rule 97 (expresionBool -> comparacionBool .)
    ELSEIF          reduce using rule 97 (expresionBool -> comparacionBool .)
    ENTERO          reduce using rule 97 (expresionBool -> comparacionBool .)
    DOUBLE          reduce using rule 97 (expresionBool -> comparacionBool .)
    STRING          reduce using rule 97 (expresionBool -> comparacionBool .)
    BOOL            reduce using rule 97 (expresionBool -> comparacionBool .)
    $end            reduce using rule 97 (expresionBool -> comparacionBool .)
    LDER            reduce using rule 97 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 97 (expresionBool -> comparacionBool .) ]


state 112

    (56) algoritmo -> sentenciaElseIf .
    (57) algoritmo -> sentenciaElseIf . PUNTOYCOMA

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    INT             reduce using rule 56 (algoritmo -> sentenciaElseIf .)
    DOUBLER         reduce using rule 56 (algoritmo -> sentenciaElseIf .)
    NUM             reduce using rule 56 (algoritmo -> sentenciaElseIf .)
    STRINGR         reduce using rule 56 (algoritmo -> sentenciaElseIf .)
    BOOLR           reduce using rule 56 (algoritmo -> sentenciaElseIf .)
    DYNAMIC         reduce using rule 56 (algoritmo -> sentenciaElseIf .)
    VAR             reduce using rule 56 (algoritmo -> sentenciaElseIf .)
    VARIABLE        reduce using rule 56 (algoritmo -> sentenciaElseIf .)
    WHILE           reduce using rule 56 (algoritmo -> sentenciaElseIf .)
    DO              reduce using rule 56 (algoritmo -> sentenciaElseIf .)
    IF              reduce using rule 56 (algoritmo -> sentenciaElseIf .)
    ELSE            reduce using rule 56 (algoritmo -> sentenciaElseIf .)
    PRINT           reduce using rule 56 (algoritmo -> sentenciaElseIf .)
    FUNCIONSTDIN    reduce using rule 56 (algoritmo -> sentenciaElseIf .)
    NOT             reduce using rule 56 (algoritmo -> sentenciaElseIf .)
    ELSEIF          reduce using rule 56 (algoritmo -> sentenciaElseIf .)
    ENTERO          reduce using rule 56 (algoritmo -> sentenciaElseIf .)
    DOUBLE          reduce using rule 56 (algoritmo -> sentenciaElseIf .)
    STRING          reduce using rule 56 (algoritmo -> sentenciaElseIf .)
    BOOL            reduce using rule 56 (algoritmo -> sentenciaElseIf .)
    $end            reduce using rule 56 (algoritmo -> sentenciaElseIf .)
    LDER            reduce using rule 56 (algoritmo -> sentenciaElseIf .)
    PUNTOYCOMA      shift and go to state 201

  ! PUNTOYCOMA      [ reduce using rule 56 (algoritmo -> sentenciaElseIf .) ]


state 113

    (67) imprimir -> PRINT PIZQ . expresion PDER
    (68) imprimir -> PRINT PIZQ . asignacionSimple PDER
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool

    VARIABLE        shift and go to state 204
    ENTERO          shift and go to state 129
    DOUBLE          shift and go to state 153
    STRING          shift and go to state 154
    BOOL            shift and go to state 43
    NOT             shift and go to state 38

    expresion                      shift and go to state 202
    asignacionSimple               shift and go to state 203
    valor                          shift and go to state 148
    expresionString                shift and go to state 149
    expresionInt                   shift and go to state 150
    expresionDouble                shift and go to state 151
    expresionBool                  shift and go to state 152
    valorString                    shift and go to state 29
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 155

state 114

    (100) negacionBool -> NOT PIZQ . expresionBool PDER
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 125
    DOUBLE          shift and go to state 41
    BOOL            shift and go to state 43
    NOT             shift and go to state 38
    ENTERO          shift and go to state 129
    STRING          shift and go to state 130

    expresionBool                  shift and go to state 205
    valorDouble                    shift and go to state 124
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 155
    valor                          shift and go to state 127
    valorInt                       shift and go to state 128

state 115

    (74) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER algoritmo
    (75) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER LIZQ algoritmo LDER
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 125
    DOUBLE          shift and go to state 41
    BOOL            shift and go to state 43
    NOT             shift and go to state 38
    ENTERO          shift and go to state 129
    STRING          shift and go to state 130

    expresionBool                  shift and go to state 206
    valorDouble                    shift and go to state 124
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 155
    valor                          shift and go to state 127
    valorInt                       shift and go to state 128

state 116

    (2) final -> algoritmo PUNTOYCOMA final .

    $end            reduce using rule 2 (final -> algoritmo PUNTOYCOMA final .)


state 117

    (4) final -> asignacion PUNTOYCOMA final .

    $end            reduce using rule 4 (final -> asignacion PUNTOYCOMA final .)


state 118

    (6) final -> expresionInt PUNTOYCOMA final .

    $end            reduce using rule 6 (final -> expresionInt PUNTOYCOMA final .)


state 119

    (8) final -> expresionDouble PUNTOYCOMA final .

    $end            reduce using rule 8 (final -> expresionDouble PUNTOYCOMA final .)


state 120

    (10) final -> expresionString PUNTOYCOMA final .

    $end            reduce using rule 10 (final -> expresionString PUNTOYCOMA final .)


state 121

    (12) final -> expresionBool PUNTOYCOMA final .

    $end            reduce using rule 12 (final -> expresionBool PUNTOYCOMA final .)


state 122

    (101) comparacionBool -> expresionBool operadorLogico expresionBool .
    (101) comparacionBool -> expresionBool . operadorLogico expresionBool
    (102) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (127) operadorLogico -> . AND
    (128) operadorLogico -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNTOYCOMA      reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    INT             reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    DOUBLER         reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    NUM             reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    STRINGR         reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    BOOLR           reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    DYNAMIC         reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    VAR             reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    VARIABLE        reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    WHILE           reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    DO              reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    IF              reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    ELSE            reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    PRINT           reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    FUNCIONSTDIN    reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    NOT             reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    ELSEIF          reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    ENTERO          reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    DOUBLE          reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    STRING          reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    BOOL            reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    $end            reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    LDER            reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    PDER            reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    AND             shift and go to state 51
    OR              shift and go to state 52

  ! AND             [ reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]
  ! OR              [ reduce using rule 101 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]

    operadorLogico                 shift and go to state 50

state 123

    (102) comparacionBool -> expresionBool operadorLogico comparacionBool .
    (97) expresionBool -> comparacionBool .

  ! reduce/reduce conflict for AND resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for OR resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for INT resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for NUM resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for STRINGR resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for BOOLR resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for VAR resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for WHILE resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for DO resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for IF resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for ELSE resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PRINT resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for NOT resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for ENTERO resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for STRING resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for BOOL resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for $end resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for LDER resolved using rule 97 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PDER resolved using rule 97 (expresionBool -> comparacionBool .)
    AND             reduce using rule 97 (expresionBool -> comparacionBool .)
    OR              reduce using rule 97 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 97 (expresionBool -> comparacionBool .)
    INT             reduce using rule 97 (expresionBool -> comparacionBool .)
    DOUBLER         reduce using rule 97 (expresionBool -> comparacionBool .)
    NUM             reduce using rule 97 (expresionBool -> comparacionBool .)
    STRINGR         reduce using rule 97 (expresionBool -> comparacionBool .)
    BOOLR           reduce using rule 97 (expresionBool -> comparacionBool .)
    DYNAMIC         reduce using rule 97 (expresionBool -> comparacionBool .)
    VAR             reduce using rule 97 (expresionBool -> comparacionBool .)
    VARIABLE        reduce using rule 97 (expresionBool -> comparacionBool .)
    WHILE           reduce using rule 97 (expresionBool -> comparacionBool .)
    DO              reduce using rule 97 (expresionBool -> comparacionBool .)
    IF              reduce using rule 97 (expresionBool -> comparacionBool .)
    ELSE            reduce using rule 97 (expresionBool -> comparacionBool .)
    PRINT           reduce using rule 97 (expresionBool -> comparacionBool .)
    FUNCIONSTDIN    reduce using rule 97 (expresionBool -> comparacionBool .)
    NOT             reduce using rule 97 (expresionBool -> comparacionBool .)
    ELSEIF          reduce using rule 97 (expresionBool -> comparacionBool .)
    ENTERO          reduce using rule 97 (expresionBool -> comparacionBool .)
    DOUBLE          reduce using rule 97 (expresionBool -> comparacionBool .)
    STRING          reduce using rule 97 (expresionBool -> comparacionBool .)
    BOOL            reduce using rule 97 (expresionBool -> comparacionBool .)
    $end            reduce using rule 97 (expresionBool -> comparacionBool .)
    LDER            reduce using rule 97 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 97 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! AND             [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! OR              [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! INT             [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! DOUBLER         [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! NUM             [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! STRINGR         [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! BOOLR           [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! DYNAMIC         [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! VAR             [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! VARIABLE        [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! WHILE           [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! DO              [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! IF              [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! ELSE            [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! PRINT           [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! FUNCIONSTDIN    [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! NOT             [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! ELSEIF          [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! ENTERO          [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! DOUBLE          [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! STRING          [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! BOOL            [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! $end            [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! LDER            [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! PDER            [ reduce using rule 102 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]


state 124

    (91) expresionBool -> valorDouble . comparadorMat expresionDouble
    (94) expresionBool -> valorDouble . comparadorMat VARIABLE
    (121) comparadorMat -> . DIGUAL
    (122) comparadorMat -> . NOIGUAL
    (123) comparadorMat -> . MAYOR
    (124) comparadorMat -> . MENOR
    (125) comparadorMat -> . MAYIGUAL
    (126) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 69
    NOIGUAL         shift and go to state 70
    MAYOR           shift and go to state 71
    MENOR           shift and go to state 72
    MAYIGUAL        shift and go to state 73
    MENIGUAL        shift and go to state 74

    comparadorMat                  shift and go to state 89

state 125

    (92) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (93) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (90) valorBool -> VARIABLE .
    (77) valor -> VARIABLE .
    (108) valorInt -> VARIABLE .
    (121) comparadorMat -> . DIGUAL
    (122) comparadorMat -> . NOIGUAL
    (123) comparadorMat -> . MAYOR
    (124) comparadorMat -> . MENOR
    (125) comparadorMat -> . MAYIGUAL
    (126) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    AND             reduce using rule 90 (valorBool -> VARIABLE .)
    OR              reduce using rule 90 (valorBool -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 90 (valorBool -> VARIABLE .)
    INT             reduce using rule 90 (valorBool -> VARIABLE .)
    DOUBLER         reduce using rule 90 (valorBool -> VARIABLE .)
    NUM             reduce using rule 90 (valorBool -> VARIABLE .)
    STRINGR         reduce using rule 90 (valorBool -> VARIABLE .)
    BOOLR           reduce using rule 90 (valorBool -> VARIABLE .)
    DYNAMIC         reduce using rule 90 (valorBool -> VARIABLE .)
    VAR             reduce using rule 90 (valorBool -> VARIABLE .)
    VARIABLE        reduce using rule 90 (valorBool -> VARIABLE .)
    WHILE           reduce using rule 90 (valorBool -> VARIABLE .)
    DO              reduce using rule 90 (valorBool -> VARIABLE .)
    IF              reduce using rule 90 (valorBool -> VARIABLE .)
    ELSE            reduce using rule 90 (valorBool -> VARIABLE .)
    PRINT           reduce using rule 90 (valorBool -> VARIABLE .)
    FUNCIONSTDIN    reduce using rule 90 (valorBool -> VARIABLE .)
    NOT             reduce using rule 90 (valorBool -> VARIABLE .)
    ELSEIF          reduce using rule 90 (valorBool -> VARIABLE .)
    ENTERO          reduce using rule 90 (valorBool -> VARIABLE .)
    DOUBLE          reduce using rule 90 (valorBool -> VARIABLE .)
    STRING          reduce using rule 90 (valorBool -> VARIABLE .)
    BOOL            reduce using rule 90 (valorBool -> VARIABLE .)
    $end            reduce using rule 90 (valorBool -> VARIABLE .)
    LDER            reduce using rule 90 (valorBool -> VARIABLE .)
    PDER            reduce using rule 90 (valorBool -> VARIABLE .)
    IS              reduce using rule 77 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 77 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 69
    NOIGUAL         shift and go to state 70
    MAYOR           shift and go to state 71
    MENOR           shift and go to state 72
    MAYIGUAL        shift and go to state 73
    MENIGUAL        shift and go to state 74

  ! DIGUAL          [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 108 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 67

state 126

    (96) expresionBool -> negacionBool .

    AND             reduce using rule 96 (expresionBool -> negacionBool .)
    OR              reduce using rule 96 (expresionBool -> negacionBool .)
    PUNTOYCOMA      reduce using rule 96 (expresionBool -> negacionBool .)
    INT             reduce using rule 96 (expresionBool -> negacionBool .)
    DOUBLER         reduce using rule 96 (expresionBool -> negacionBool .)
    NUM             reduce using rule 96 (expresionBool -> negacionBool .)
    STRINGR         reduce using rule 96 (expresionBool -> negacionBool .)
    BOOLR           reduce using rule 96 (expresionBool -> negacionBool .)
    DYNAMIC         reduce using rule 96 (expresionBool -> negacionBool .)
    VAR             reduce using rule 96 (expresionBool -> negacionBool .)
    VARIABLE        reduce using rule 96 (expresionBool -> negacionBool .)
    WHILE           reduce using rule 96 (expresionBool -> negacionBool .)
    DO              reduce using rule 96 (expresionBool -> negacionBool .)
    IF              reduce using rule 96 (expresionBool -> negacionBool .)
    ELSE            reduce using rule 96 (expresionBool -> negacionBool .)
    PRINT           reduce using rule 96 (expresionBool -> negacionBool .)
    FUNCIONSTDIN    reduce using rule 96 (expresionBool -> negacionBool .)
    NOT             reduce using rule 96 (expresionBool -> negacionBool .)
    ELSEIF          reduce using rule 96 (expresionBool -> negacionBool .)
    ENTERO          reduce using rule 96 (expresionBool -> negacionBool .)
    DOUBLE          reduce using rule 96 (expresionBool -> negacionBool .)
    STRING          reduce using rule 96 (expresionBool -> negacionBool .)
    BOOL            reduce using rule 96 (expresionBool -> negacionBool .)
    $end            reduce using rule 96 (expresionBool -> negacionBool .)
    LDER            reduce using rule 96 (expresionBool -> negacionBool .)
    PDER            reduce using rule 96 (expresionBool -> negacionBool .)


state 127

    (98) expresionBool -> valor . IS objeto
    (99) expresionBool -> valor . ISNEGADO objeto

    IS              shift and go to state 91
    ISNEGADO        shift and go to state 92


state 128

    (112) valorDouble -> valorInt .

    DIGUAL          reduce using rule 112 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 112 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 112 (valorDouble -> valorInt .)
    MENOR           reduce using rule 112 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 112 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 112 (valorDouble -> valorInt .)
    SUMA            reduce using rule 112 (valorDouble -> valorInt .)
    RESTA           reduce using rule 112 (valorDouble -> valorInt .)
    MULTI           reduce using rule 112 (valorDouble -> valorInt .)
    DIV             reduce using rule 112 (valorDouble -> valorInt .)
    DIVENTERO       reduce using rule 112 (valorDouble -> valorInt .)
    MOD             reduce using rule 112 (valorDouble -> valorInt .)
    PUNTOYCOMA      reduce using rule 112 (valorDouble -> valorInt .)
    AND             reduce using rule 112 (valorDouble -> valorInt .)
    OR              reduce using rule 112 (valorDouble -> valorInt .)
    INT             reduce using rule 112 (valorDouble -> valorInt .)
    DOUBLER         reduce using rule 112 (valorDouble -> valorInt .)
    NUM             reduce using rule 112 (valorDouble -> valorInt .)
    STRINGR         reduce using rule 112 (valorDouble -> valorInt .)
    BOOLR           reduce using rule 112 (valorDouble -> valorInt .)
    DYNAMIC         reduce using rule 112 (valorDouble -> valorInt .)
    VAR             reduce using rule 112 (valorDouble -> valorInt .)
    VARIABLE        reduce using rule 112 (valorDouble -> valorInt .)
    WHILE           reduce using rule 112 (valorDouble -> valorInt .)
    DO              reduce using rule 112 (valorDouble -> valorInt .)
    IF              reduce using rule 112 (valorDouble -> valorInt .)
    ELSE            reduce using rule 112 (valorDouble -> valorInt .)
    PRINT           reduce using rule 112 (valorDouble -> valorInt .)
    FUNCIONSTDIN    reduce using rule 112 (valorDouble -> valorInt .)
    NOT             reduce using rule 112 (valorDouble -> valorInt .)
    ELSEIF          reduce using rule 112 (valorDouble -> valorInt .)
    ENTERO          reduce using rule 112 (valorDouble -> valorInt .)
    DOUBLE          reduce using rule 112 (valorDouble -> valorInt .)
    STRING          reduce using rule 112 (valorDouble -> valorInt .)
    BOOL            reduce using rule 112 (valorDouble -> valorInt .)
    $end            reduce using rule 112 (valorDouble -> valorInt .)
    LDER            reduce using rule 112 (valorDouble -> valorInt .)
    PDER            reduce using rule 112 (valorDouble -> valorInt .)


state 129

    (76) valor -> ENTERO .
    (107) valorInt -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for PDER resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for INT resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for NUM resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRINGR resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOLR resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for VAR resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for WHILE resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for DO resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for IF resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for ELSE resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for PRINT resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for NOT resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for ENTERO resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRING resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOL resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for $end resolved using rule 76 (valor -> ENTERO .)
  ! reduce/reduce conflict for LDER resolved using rule 76 (valor -> ENTERO .)
    IS              reduce using rule 76 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 76 (valor -> ENTERO .)
    SUMA            reduce using rule 76 (valor -> ENTERO .)
    RESTA           reduce using rule 76 (valor -> ENTERO .)
    MULTI           reduce using rule 76 (valor -> ENTERO .)
    DIV             reduce using rule 76 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 76 (valor -> ENTERO .)
    MOD             reduce using rule 76 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 76 (valor -> ENTERO .)
    PDER            reduce using rule 76 (valor -> ENTERO .)
    INT             reduce using rule 76 (valor -> ENTERO .)
    DOUBLER         reduce using rule 76 (valor -> ENTERO .)
    NUM             reduce using rule 76 (valor -> ENTERO .)
    STRINGR         reduce using rule 76 (valor -> ENTERO .)
    BOOLR           reduce using rule 76 (valor -> ENTERO .)
    DYNAMIC         reduce using rule 76 (valor -> ENTERO .)
    VAR             reduce using rule 76 (valor -> ENTERO .)
    VARIABLE        reduce using rule 76 (valor -> ENTERO .)
    WHILE           reduce using rule 76 (valor -> ENTERO .)
    DO              reduce using rule 76 (valor -> ENTERO .)
    IF              reduce using rule 76 (valor -> ENTERO .)
    ELSE            reduce using rule 76 (valor -> ENTERO .)
    PRINT           reduce using rule 76 (valor -> ENTERO .)
    FUNCIONSTDIN    reduce using rule 76 (valor -> ENTERO .)
    NOT             reduce using rule 76 (valor -> ENTERO .)
    ELSEIF          reduce using rule 76 (valor -> ENTERO .)
    ENTERO          reduce using rule 76 (valor -> ENTERO .)
    DOUBLE          reduce using rule 76 (valor -> ENTERO .)
    STRING          reduce using rule 76 (valor -> ENTERO .)
    BOOL            reduce using rule 76 (valor -> ENTERO .)
    $end            reduce using rule 76 (valor -> ENTERO .)
    LDER            reduce using rule 76 (valor -> ENTERO .)
    DIGUAL          reduce using rule 107 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 107 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 107 (valorInt -> ENTERO .)
    MENOR           reduce using rule 107 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 107 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 107 (valorInt -> ENTERO .)

  ! SUMA            [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! PDER            [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! INT             [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! DOUBLER         [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! NUM             [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! STRINGR         [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! BOOLR           [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! DYNAMIC         [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! VAR             [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! VARIABLE        [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! WHILE           [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! DO              [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! IF              [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! ELSE            [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! PRINT           [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! FUNCIONSTDIN    [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! NOT             [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! ELSEIF          [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! ENTERO          [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! DOUBLE          [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! STRING          [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! BOOL            [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! $end            [ reduce using rule 107 (valorInt -> ENTERO .) ]
  ! LDER            [ reduce using rule 107 (valorInt -> ENTERO .) ]


state 130

    (79) valor -> STRING .

    IS              reduce using rule 79 (valor -> STRING .)
    ISNEGADO        reduce using rule 79 (valor -> STRING .)


state 131

    (16) final -> sentenciaWhile PUNTOYCOMA final .

    $end            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)


state 132

    (18) final -> sentenciaDoWhile PUNTOYCOMA final .

    $end            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)


state 133

    (20) final -> sentenciaIf PUNTOYCOMA final .

    $end            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)


state 134

    (24) final -> sentenciaElse PUNTOYCOMA final .

    $end            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)


state 135

    (28) final -> imprimir PUNTOYCOMA final .

    $end            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)


state 136

    (30) final -> funcionStdin PUNTOYCOMA final .

    $end            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)


state 137

    (32) final -> negacionBool PUNTOYCOMA final .

    $end            reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)


state 138

    (33) final -> comparacionBool PUNTOYCOMA final .

    $end            reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)


state 139

    (35) final -> sentenciaElseIf PUNTOYCOMA final .

    $end            reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)


state 140

    (58) asignacion -> INT VARIABLE IGUAL . expresionInt
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE

    ENTERO          shift and go to state 145
    VARIABLE        shift and go to state 164

    expresionInt                   shift and go to state 207
    valorInt                       shift and go to state 162

state 141

    (93) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (108) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    INT             reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DOUBLER         reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    NUM             reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    STRINGR         reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    BOOLR           reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DYNAMIC         reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    VAR             reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    VARIABLE        reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    WHILE           reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DO              reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    IF              reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    ELSE            reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PRINT           reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    FUNCIONSTDIN    reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    NOT             reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    ELSEIF          reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    ENTERO          reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DOUBLE          reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    STRING          reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    BOOL            reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    $end            reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    LDER            reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PDER            reduce using rule 93 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 108 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 108 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 108 (valorInt -> VARIABLE .)
    DIV             reduce using rule 108 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 108 (valorInt -> VARIABLE .)
    MOD             reduce using rule 108 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! NOT             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 108 (valorInt -> VARIABLE .) ]


state 142

    (92) expresionBool -> VARIABLE comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    INT             reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DOUBLER         reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    NUM             reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    STRINGR         reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    BOOLR           reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DYNAMIC         reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    VAR             reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    VARIABLE        reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    WHILE           reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DO              reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    IF              reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    ELSE            reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PRINT           reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    FUNCIONSTDIN    reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    NOT             reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    ELSEIF          reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    ENTERO          reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DOUBLE          reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    STRING          reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    BOOL            reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    $end            reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    LDER            reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PDER            reduce using rule 92 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 143

    (113) expresionDouble -> valorDouble . operadorMat expresionDouble
    (114) expresionDouble -> valorDouble .
    (115) operadorMat -> . SUMA
    (116) operadorMat -> . RESTA
    (117) operadorMat -> . MULTI
    (118) operadorMat -> . DIV
    (119) operadorMat -> . DIVENTERO
    (120) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 114 (expresionDouble -> valorDouble .)
    AND             reduce using rule 114 (expresionDouble -> valorDouble .)
    OR              reduce using rule 114 (expresionDouble -> valorDouble .)
    INT             reduce using rule 114 (expresionDouble -> valorDouble .)
    DOUBLER         reduce using rule 114 (expresionDouble -> valorDouble .)
    NUM             reduce using rule 114 (expresionDouble -> valorDouble .)
    STRINGR         reduce using rule 114 (expresionDouble -> valorDouble .)
    BOOLR           reduce using rule 114 (expresionDouble -> valorDouble .)
    DYNAMIC         reduce using rule 114 (expresionDouble -> valorDouble .)
    VAR             reduce using rule 114 (expresionDouble -> valorDouble .)
    VARIABLE        reduce using rule 114 (expresionDouble -> valorDouble .)
    WHILE           reduce using rule 114 (expresionDouble -> valorDouble .)
    DO              reduce using rule 114 (expresionDouble -> valorDouble .)
    IF              reduce using rule 114 (expresionDouble -> valorDouble .)
    ELSE            reduce using rule 114 (expresionDouble -> valorDouble .)
    PRINT           reduce using rule 114 (expresionDouble -> valorDouble .)
    FUNCIONSTDIN    reduce using rule 114 (expresionDouble -> valorDouble .)
    NOT             reduce using rule 114 (expresionDouble -> valorDouble .)
    ELSEIF          reduce using rule 114 (expresionDouble -> valorDouble .)
    ENTERO          reduce using rule 114 (expresionDouble -> valorDouble .)
    DOUBLE          reduce using rule 114 (expresionDouble -> valorDouble .)
    STRING          reduce using rule 114 (expresionDouble -> valorDouble .)
    BOOL            reduce using rule 114 (expresionDouble -> valorDouble .)
    $end            reduce using rule 114 (expresionDouble -> valorDouble .)
    LDER            reduce using rule 114 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 114 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 82
    RESTA           shift and go to state 83
    MULTI           shift and go to state 84
    DIV             shift and go to state 85
    DIVENTERO       shift and go to state 86
    MOD             shift and go to state 87

    operadorMat                    shift and go to state 88

state 144

    (111) valorDouble -> DOUBLE .

    SUMA            reduce using rule 111 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 111 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 111 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 111 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 111 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 111 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 111 (valorDouble -> DOUBLE .)
    AND             reduce using rule 111 (valorDouble -> DOUBLE .)
    OR              reduce using rule 111 (valorDouble -> DOUBLE .)
    INT             reduce using rule 111 (valorDouble -> DOUBLE .)
    DOUBLER         reduce using rule 111 (valorDouble -> DOUBLE .)
    NUM             reduce using rule 111 (valorDouble -> DOUBLE .)
    STRINGR         reduce using rule 111 (valorDouble -> DOUBLE .)
    BOOLR           reduce using rule 111 (valorDouble -> DOUBLE .)
    DYNAMIC         reduce using rule 111 (valorDouble -> DOUBLE .)
    VAR             reduce using rule 111 (valorDouble -> DOUBLE .)
    VARIABLE        reduce using rule 111 (valorDouble -> DOUBLE .)
    WHILE           reduce using rule 111 (valorDouble -> DOUBLE .)
    DO              reduce using rule 111 (valorDouble -> DOUBLE .)
    IF              reduce using rule 111 (valorDouble -> DOUBLE .)
    ELSE            reduce using rule 111 (valorDouble -> DOUBLE .)
    PRINT           reduce using rule 111 (valorDouble -> DOUBLE .)
    FUNCIONSTDIN    reduce using rule 111 (valorDouble -> DOUBLE .)
    NOT             reduce using rule 111 (valorDouble -> DOUBLE .)
    ELSEIF          reduce using rule 111 (valorDouble -> DOUBLE .)
    ENTERO          reduce using rule 111 (valorDouble -> DOUBLE .)
    DOUBLE          reduce using rule 111 (valorDouble -> DOUBLE .)
    STRING          reduce using rule 111 (valorDouble -> DOUBLE .)
    BOOL            reduce using rule 111 (valorDouble -> DOUBLE .)
    $end            reduce using rule 111 (valorDouble -> DOUBLE .)
    LDER            reduce using rule 111 (valorDouble -> DOUBLE .)
    PDER            reduce using rule 111 (valorDouble -> DOUBLE .)


state 145

    (107) valorInt -> ENTERO .

    SUMA            reduce using rule 107 (valorInt -> ENTERO .)
    RESTA           reduce using rule 107 (valorInt -> ENTERO .)
    MULTI           reduce using rule 107 (valorInt -> ENTERO .)
    DIV             reduce using rule 107 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 107 (valorInt -> ENTERO .)
    MOD             reduce using rule 107 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 107 (valorInt -> ENTERO .)
    AND             reduce using rule 107 (valorInt -> ENTERO .)
    OR              reduce using rule 107 (valorInt -> ENTERO .)
    INT             reduce using rule 107 (valorInt -> ENTERO .)
    DOUBLER         reduce using rule 107 (valorInt -> ENTERO .)
    NUM             reduce using rule 107 (valorInt -> ENTERO .)
    STRINGR         reduce using rule 107 (valorInt -> ENTERO .)
    BOOLR           reduce using rule 107 (valorInt -> ENTERO .)
    DYNAMIC         reduce using rule 107 (valorInt -> ENTERO .)
    VAR             reduce using rule 107 (valorInt -> ENTERO .)
    VARIABLE        reduce using rule 107 (valorInt -> ENTERO .)
    WHILE           reduce using rule 107 (valorInt -> ENTERO .)
    DO              reduce using rule 107 (valorInt -> ENTERO .)
    IF              reduce using rule 107 (valorInt -> ENTERO .)
    ELSE            reduce using rule 107 (valorInt -> ENTERO .)
    PRINT           reduce using rule 107 (valorInt -> ENTERO .)
    FUNCIONSTDIN    reduce using rule 107 (valorInt -> ENTERO .)
    NOT             reduce using rule 107 (valorInt -> ENTERO .)
    ELSEIF          reduce using rule 107 (valorInt -> ENTERO .)
    ENTERO          reduce using rule 107 (valorInt -> ENTERO .)
    DOUBLE          reduce using rule 107 (valorInt -> ENTERO .)
    STRING          reduce using rule 107 (valorInt -> ENTERO .)
    BOOL            reduce using rule 107 (valorInt -> ENTERO .)
    $end            reduce using rule 107 (valorInt -> ENTERO .)
    LDER            reduce using rule 107 (valorInt -> ENTERO .)
    PDER            reduce using rule 107 (valorInt -> ENTERO .)


state 146

    (77) valor -> VARIABLE .
    (92) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (93) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (104) valorString -> VARIABLE .
    (108) valorInt -> VARIABLE .
    (90) valorBool -> VARIABLE .
    (121) comparadorMat -> . DIGUAL
    (122) comparadorMat -> . NOIGUAL
    (123) comparadorMat -> . MAYOR
    (124) comparadorMat -> . MENOR
    (125) comparadorMat -> . MAYIGUAL
    (126) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 77 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IS              reduce using rule 77 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 77 (valor -> VARIABLE .)
    SUMA            reduce using rule 77 (valor -> VARIABLE .)
    RESTA           reduce using rule 77 (valor -> VARIABLE .)
    MULTI           reduce using rule 77 (valor -> VARIABLE .)
    DIV             reduce using rule 77 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 77 (valor -> VARIABLE .)
    MOD             reduce using rule 77 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 77 (valor -> VARIABLE .)
    PDER            reduce using rule 77 (valor -> VARIABLE .)
    INT             reduce using rule 77 (valor -> VARIABLE .)
    DOUBLER         reduce using rule 77 (valor -> VARIABLE .)
    NUM             reduce using rule 77 (valor -> VARIABLE .)
    STRINGR         reduce using rule 77 (valor -> VARIABLE .)
    BOOLR           reduce using rule 77 (valor -> VARIABLE .)
    DYNAMIC         reduce using rule 77 (valor -> VARIABLE .)
    VAR             reduce using rule 77 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 77 (valor -> VARIABLE .)
    WHILE           reduce using rule 77 (valor -> VARIABLE .)
    DO              reduce using rule 77 (valor -> VARIABLE .)
    IF              reduce using rule 77 (valor -> VARIABLE .)
    ELSE            reduce using rule 77 (valor -> VARIABLE .)
    PRINT           reduce using rule 77 (valor -> VARIABLE .)
    FUNCIONSTDIN    reduce using rule 77 (valor -> VARIABLE .)
    NOT             reduce using rule 77 (valor -> VARIABLE .)
    ELSEIF          reduce using rule 77 (valor -> VARIABLE .)
    ENTERO          reduce using rule 77 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 77 (valor -> VARIABLE .)
    STRING          reduce using rule 77 (valor -> VARIABLE .)
    BOOL            reduce using rule 77 (valor -> VARIABLE .)
    $end            reduce using rule 77 (valor -> VARIABLE .)
    LDER            reduce using rule 77 (valor -> VARIABLE .)
    AND             reduce using rule 90 (valorBool -> VARIABLE .)
    OR              reduce using rule 90 (valorBool -> VARIABLE .)
    DIGUAL          shift and go to state 69
    NOIGUAL         shift and go to state 70
    MAYOR           shift and go to state 71
    MENOR           shift and go to state 72
    MAYIGUAL        shift and go to state 73
    MENIGUAL        shift and go to state 74

  ! SUMA            [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! DIV             [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! MOD             [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! INT             [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! NUM             [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! VAR             [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! DO              [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! IF              [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! NOT             [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! STRING          [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! $end            [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! LDER            [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! NOT             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! PDER            [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! INT             [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! NUM             [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! VAR             [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! DO              [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! IF              [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! NOT             [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! STRING          [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! $end            [ reduce using rule 90 (valorBool -> VARIABLE .) ]
  ! LDER            [ reduce using rule 90 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 67

state 147

    (66) asignacionSimple -> VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 66 (asignacionSimple -> VARIABLE IGUAL expresion .)
    PDER            reduce using rule 66 (asignacionSimple -> VARIABLE IGUAL expresion .)


state 148

    (80) expresion -> valor . operadorMat expresion
    (81) expresion -> valor .
    (98) expresionBool -> valor . IS objeto
    (99) expresionBool -> valor . ISNEGADO objeto
    (115) operadorMat -> . SUMA
    (116) operadorMat -> . RESTA
    (117) operadorMat -> . MULTI
    (118) operadorMat -> . DIV
    (119) operadorMat -> . DIVENTERO
    (120) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 81 (expresion -> valor .)
    PDER            reduce using rule 81 (expresion -> valor .)
    INT             reduce using rule 81 (expresion -> valor .)
    DOUBLER         reduce using rule 81 (expresion -> valor .)
    NUM             reduce using rule 81 (expresion -> valor .)
    STRINGR         reduce using rule 81 (expresion -> valor .)
    BOOLR           reduce using rule 81 (expresion -> valor .)
    DYNAMIC         reduce using rule 81 (expresion -> valor .)
    VAR             reduce using rule 81 (expresion -> valor .)
    VARIABLE        reduce using rule 81 (expresion -> valor .)
    WHILE           reduce using rule 81 (expresion -> valor .)
    DO              reduce using rule 81 (expresion -> valor .)
    IF              reduce using rule 81 (expresion -> valor .)
    ELSE            reduce using rule 81 (expresion -> valor .)
    PRINT           reduce using rule 81 (expresion -> valor .)
    FUNCIONSTDIN    reduce using rule 81 (expresion -> valor .)
    NOT             reduce using rule 81 (expresion -> valor .)
    ELSEIF          reduce using rule 81 (expresion -> valor .)
    ENTERO          reduce using rule 81 (expresion -> valor .)
    DOUBLE          reduce using rule 81 (expresion -> valor .)
    STRING          reduce using rule 81 (expresion -> valor .)
    BOOL            reduce using rule 81 (expresion -> valor .)
    $end            reduce using rule 81 (expresion -> valor .)
    LDER            reduce using rule 81 (expresion -> valor .)
    IS              shift and go to state 91
    ISNEGADO        shift and go to state 92
    SUMA            shift and go to state 82
    RESTA           shift and go to state 83
    MULTI           shift and go to state 84
    DIV             shift and go to state 85
    DIVENTERO       shift and go to state 86
    MOD             shift and go to state 87

    operadorMat                    shift and go to state 93

state 149

    (82) expresion -> expresionString .

    PUNTOYCOMA      reduce using rule 82 (expresion -> expresionString .)
    PDER            reduce using rule 82 (expresion -> expresionString .)
    INT             reduce using rule 82 (expresion -> expresionString .)
    DOUBLER         reduce using rule 82 (expresion -> expresionString .)
    NUM             reduce using rule 82 (expresion -> expresionString .)
    STRINGR         reduce using rule 82 (expresion -> expresionString .)
    BOOLR           reduce using rule 82 (expresion -> expresionString .)
    DYNAMIC         reduce using rule 82 (expresion -> expresionString .)
    VAR             reduce using rule 82 (expresion -> expresionString .)
    VARIABLE        reduce using rule 82 (expresion -> expresionString .)
    WHILE           reduce using rule 82 (expresion -> expresionString .)
    DO              reduce using rule 82 (expresion -> expresionString .)
    IF              reduce using rule 82 (expresion -> expresionString .)
    ELSE            reduce using rule 82 (expresion -> expresionString .)
    PRINT           reduce using rule 82 (expresion -> expresionString .)
    FUNCIONSTDIN    reduce using rule 82 (expresion -> expresionString .)
    NOT             reduce using rule 82 (expresion -> expresionString .)
    ELSEIF          reduce using rule 82 (expresion -> expresionString .)
    ENTERO          reduce using rule 82 (expresion -> expresionString .)
    DOUBLE          reduce using rule 82 (expresion -> expresionString .)
    STRING          reduce using rule 82 (expresion -> expresionString .)
    BOOL            reduce using rule 82 (expresion -> expresionString .)
    $end            reduce using rule 82 (expresion -> expresionString .)
    LDER            reduce using rule 82 (expresion -> expresionString .)


state 150

    (83) expresion -> expresionInt .

    PUNTOYCOMA      reduce using rule 83 (expresion -> expresionInt .)
    PDER            reduce using rule 83 (expresion -> expresionInt .)
    INT             reduce using rule 83 (expresion -> expresionInt .)
    DOUBLER         reduce using rule 83 (expresion -> expresionInt .)
    NUM             reduce using rule 83 (expresion -> expresionInt .)
    STRINGR         reduce using rule 83 (expresion -> expresionInt .)
    BOOLR           reduce using rule 83 (expresion -> expresionInt .)
    DYNAMIC         reduce using rule 83 (expresion -> expresionInt .)
    VAR             reduce using rule 83 (expresion -> expresionInt .)
    VARIABLE        reduce using rule 83 (expresion -> expresionInt .)
    WHILE           reduce using rule 83 (expresion -> expresionInt .)
    DO              reduce using rule 83 (expresion -> expresionInt .)
    IF              reduce using rule 83 (expresion -> expresionInt .)
    ELSE            reduce using rule 83 (expresion -> expresionInt .)
    PRINT           reduce using rule 83 (expresion -> expresionInt .)
    FUNCIONSTDIN    reduce using rule 83 (expresion -> expresionInt .)
    NOT             reduce using rule 83 (expresion -> expresionInt .)
    ELSEIF          reduce using rule 83 (expresion -> expresionInt .)
    ENTERO          reduce using rule 83 (expresion -> expresionInt .)
    DOUBLE          reduce using rule 83 (expresion -> expresionInt .)
    STRING          reduce using rule 83 (expresion -> expresionInt .)
    BOOL            reduce using rule 83 (expresion -> expresionInt .)
    $end            reduce using rule 83 (expresion -> expresionInt .)
    LDER            reduce using rule 83 (expresion -> expresionInt .)


state 151

    (84) expresion -> expresionDouble .

    PUNTOYCOMA      reduce using rule 84 (expresion -> expresionDouble .)
    PDER            reduce using rule 84 (expresion -> expresionDouble .)
    INT             reduce using rule 84 (expresion -> expresionDouble .)
    DOUBLER         reduce using rule 84 (expresion -> expresionDouble .)
    NUM             reduce using rule 84 (expresion -> expresionDouble .)
    STRINGR         reduce using rule 84 (expresion -> expresionDouble .)
    BOOLR           reduce using rule 84 (expresion -> expresionDouble .)
    DYNAMIC         reduce using rule 84 (expresion -> expresionDouble .)
    VAR             reduce using rule 84 (expresion -> expresionDouble .)
    VARIABLE        reduce using rule 84 (expresion -> expresionDouble .)
    WHILE           reduce using rule 84 (expresion -> expresionDouble .)
    DO              reduce using rule 84 (expresion -> expresionDouble .)
    IF              reduce using rule 84 (expresion -> expresionDouble .)
    ELSE            reduce using rule 84 (expresion -> expresionDouble .)
    PRINT           reduce using rule 84 (expresion -> expresionDouble .)
    FUNCIONSTDIN    reduce using rule 84 (expresion -> expresionDouble .)
    NOT             reduce using rule 84 (expresion -> expresionDouble .)
    ELSEIF          reduce using rule 84 (expresion -> expresionDouble .)
    ENTERO          reduce using rule 84 (expresion -> expresionDouble .)
    DOUBLE          reduce using rule 84 (expresion -> expresionDouble .)
    STRING          reduce using rule 84 (expresion -> expresionDouble .)
    BOOL            reduce using rule 84 (expresion -> expresionDouble .)
    $end            reduce using rule 84 (expresion -> expresionDouble .)
    LDER            reduce using rule 84 (expresion -> expresionDouble .)


state 152

    (85) expresion -> expresionBool .
    (101) comparacionBool -> expresionBool . operadorLogico expresionBool
    (102) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (127) operadorLogico -> . AND
    (128) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 85 (expresion -> expresionBool .)
    PDER            reduce using rule 85 (expresion -> expresionBool .)
    INT             reduce using rule 85 (expresion -> expresionBool .)
    DOUBLER         reduce using rule 85 (expresion -> expresionBool .)
    NUM             reduce using rule 85 (expresion -> expresionBool .)
    STRINGR         reduce using rule 85 (expresion -> expresionBool .)
    BOOLR           reduce using rule 85 (expresion -> expresionBool .)
    DYNAMIC         reduce using rule 85 (expresion -> expresionBool .)
    VAR             reduce using rule 85 (expresion -> expresionBool .)
    VARIABLE        reduce using rule 85 (expresion -> expresionBool .)
    WHILE           reduce using rule 85 (expresion -> expresionBool .)
    DO              reduce using rule 85 (expresion -> expresionBool .)
    IF              reduce using rule 85 (expresion -> expresionBool .)
    ELSE            reduce using rule 85 (expresion -> expresionBool .)
    PRINT           reduce using rule 85 (expresion -> expresionBool .)
    FUNCIONSTDIN    reduce using rule 85 (expresion -> expresionBool .)
    NOT             reduce using rule 85 (expresion -> expresionBool .)
    ELSEIF          reduce using rule 85 (expresion -> expresionBool .)
    ENTERO          reduce using rule 85 (expresion -> expresionBool .)
    DOUBLE          reduce using rule 85 (expresion -> expresionBool .)
    STRING          reduce using rule 85 (expresion -> expresionBool .)
    BOOL            reduce using rule 85 (expresion -> expresionBool .)
    $end            reduce using rule 85 (expresion -> expresionBool .)
    LDER            reduce using rule 85 (expresion -> expresionBool .)
    AND             shift and go to state 51
    OR              shift and go to state 52

    operadorLogico                 shift and go to state 50

state 153

    (78) valor -> DOUBLE .
    (111) valorDouble -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PDER resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for INT resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NUM resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VAR resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DO resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for IF resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NOT resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRING resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for $end resolved using rule 78 (valor -> DOUBLE .)
  ! reduce/reduce conflict for LDER resolved using rule 78 (valor -> DOUBLE .)
    IS              reduce using rule 78 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 78 (valor -> DOUBLE .)
    SUMA            reduce using rule 78 (valor -> DOUBLE .)
    RESTA           reduce using rule 78 (valor -> DOUBLE .)
    MULTI           reduce using rule 78 (valor -> DOUBLE .)
    DIV             reduce using rule 78 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 78 (valor -> DOUBLE .)
    MOD             reduce using rule 78 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 78 (valor -> DOUBLE .)
    PDER            reduce using rule 78 (valor -> DOUBLE .)
    INT             reduce using rule 78 (valor -> DOUBLE .)
    DOUBLER         reduce using rule 78 (valor -> DOUBLE .)
    NUM             reduce using rule 78 (valor -> DOUBLE .)
    STRINGR         reduce using rule 78 (valor -> DOUBLE .)
    BOOLR           reduce using rule 78 (valor -> DOUBLE .)
    DYNAMIC         reduce using rule 78 (valor -> DOUBLE .)
    VAR             reduce using rule 78 (valor -> DOUBLE .)
    VARIABLE        reduce using rule 78 (valor -> DOUBLE .)
    WHILE           reduce using rule 78 (valor -> DOUBLE .)
    DO              reduce using rule 78 (valor -> DOUBLE .)
    IF              reduce using rule 78 (valor -> DOUBLE .)
    ELSE            reduce using rule 78 (valor -> DOUBLE .)
    PRINT           reduce using rule 78 (valor -> DOUBLE .)
    FUNCIONSTDIN    reduce using rule 78 (valor -> DOUBLE .)
    NOT             reduce using rule 78 (valor -> DOUBLE .)
    ELSEIF          reduce using rule 78 (valor -> DOUBLE .)
    ENTERO          reduce using rule 78 (valor -> DOUBLE .)
    DOUBLE          reduce using rule 78 (valor -> DOUBLE .)
    STRING          reduce using rule 78 (valor -> DOUBLE .)
    BOOL            reduce using rule 78 (valor -> DOUBLE .)
    $end            reduce using rule 78 (valor -> DOUBLE .)
    LDER            reduce using rule 78 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 111 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 111 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 111 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 111 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 111 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 111 (valorDouble -> DOUBLE .)

  ! SUMA            [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! PDER            [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! INT             [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! DOUBLER         [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! NUM             [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! STRINGR         [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! BOOLR           [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! DYNAMIC         [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! VAR             [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! VARIABLE        [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! WHILE           [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! DO              [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! IF              [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! ELSE            [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! PRINT           [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! NOT             [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! ELSEIF          [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! ENTERO          [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! DOUBLE          [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! STRING          [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! BOOL            [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! $end            [ reduce using rule 111 (valorDouble -> DOUBLE .) ]
  ! LDER            [ reduce using rule 111 (valorDouble -> DOUBLE .) ]


state 154

    (79) valor -> STRING .
    (103) valorString -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for RESTA resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for MULTI resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for DIV resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for MOD resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for PDER resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for INT resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for NUM resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for STRINGR resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for BOOLR resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for VAR resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for WHILE resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for DO resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for IF resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for ELSE resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for PRINT resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for NOT resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for ENTERO resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for STRING resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for BOOL resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for $end resolved using rule 79 (valor -> STRING .)
  ! reduce/reduce conflict for LDER resolved using rule 79 (valor -> STRING .)
    IS              reduce using rule 79 (valor -> STRING .)
    ISNEGADO        reduce using rule 79 (valor -> STRING .)
    SUMA            reduce using rule 79 (valor -> STRING .)
    RESTA           reduce using rule 79 (valor -> STRING .)
    MULTI           reduce using rule 79 (valor -> STRING .)
    DIV             reduce using rule 79 (valor -> STRING .)
    DIVENTERO       reduce using rule 79 (valor -> STRING .)
    MOD             reduce using rule 79 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 79 (valor -> STRING .)
    PDER            reduce using rule 79 (valor -> STRING .)
    INT             reduce using rule 79 (valor -> STRING .)
    DOUBLER         reduce using rule 79 (valor -> STRING .)
    NUM             reduce using rule 79 (valor -> STRING .)
    STRINGR         reduce using rule 79 (valor -> STRING .)
    BOOLR           reduce using rule 79 (valor -> STRING .)
    DYNAMIC         reduce using rule 79 (valor -> STRING .)
    VAR             reduce using rule 79 (valor -> STRING .)
    VARIABLE        reduce using rule 79 (valor -> STRING .)
    WHILE           reduce using rule 79 (valor -> STRING .)
    DO              reduce using rule 79 (valor -> STRING .)
    IF              reduce using rule 79 (valor -> STRING .)
    ELSE            reduce using rule 79 (valor -> STRING .)
    PRINT           reduce using rule 79 (valor -> STRING .)
    FUNCIONSTDIN    reduce using rule 79 (valor -> STRING .)
    NOT             reduce using rule 79 (valor -> STRING .)
    ELSEIF          reduce using rule 79 (valor -> STRING .)
    ENTERO          reduce using rule 79 (valor -> STRING .)
    DOUBLE          reduce using rule 79 (valor -> STRING .)
    STRING          reduce using rule 79 (valor -> STRING .)
    BOOL            reduce using rule 79 (valor -> STRING .)
    $end            reduce using rule 79 (valor -> STRING .)
    LDER            reduce using rule 79 (valor -> STRING .)

  ! SUMA            [ reduce using rule 103 (valorString -> STRING .) ]
  ! RESTA           [ reduce using rule 103 (valorString -> STRING .) ]
  ! MULTI           [ reduce using rule 103 (valorString -> STRING .) ]
  ! DIV             [ reduce using rule 103 (valorString -> STRING .) ]
  ! DIVENTERO       [ reduce using rule 103 (valorString -> STRING .) ]
  ! MOD             [ reduce using rule 103 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 103 (valorString -> STRING .) ]
  ! PDER            [ reduce using rule 103 (valorString -> STRING .) ]
  ! INT             [ reduce using rule 103 (valorString -> STRING .) ]
  ! DOUBLER         [ reduce using rule 103 (valorString -> STRING .) ]
  ! NUM             [ reduce using rule 103 (valorString -> STRING .) ]
  ! STRINGR         [ reduce using rule 103 (valorString -> STRING .) ]
  ! BOOLR           [ reduce using rule 103 (valorString -> STRING .) ]
  ! DYNAMIC         [ reduce using rule 103 (valorString -> STRING .) ]
  ! VAR             [ reduce using rule 103 (valorString -> STRING .) ]
  ! VARIABLE        [ reduce using rule 103 (valorString -> STRING .) ]
  ! WHILE           [ reduce using rule 103 (valorString -> STRING .) ]
  ! DO              [ reduce using rule 103 (valorString -> STRING .) ]
  ! IF              [ reduce using rule 103 (valorString -> STRING .) ]
  ! ELSE            [ reduce using rule 103 (valorString -> STRING .) ]
  ! PRINT           [ reduce using rule 103 (valorString -> STRING .) ]
  ! FUNCIONSTDIN    [ reduce using rule 103 (valorString -> STRING .) ]
  ! NOT             [ reduce using rule 103 (valorString -> STRING .) ]
  ! ELSEIF          [ reduce using rule 103 (valorString -> STRING .) ]
  ! ENTERO          [ reduce using rule 103 (valorString -> STRING .) ]
  ! DOUBLE          [ reduce using rule 103 (valorString -> STRING .) ]
  ! STRING          [ reduce using rule 103 (valorString -> STRING .) ]
  ! BOOL            [ reduce using rule 103 (valorString -> STRING .) ]
  ! $end            [ reduce using rule 103 (valorString -> STRING .) ]
  ! LDER            [ reduce using rule 103 (valorString -> STRING .) ]


state 155

    (97) expresionBool -> comparacionBool .

    AND             reduce using rule 97 (expresionBool -> comparacionBool .)
    OR              reduce using rule 97 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 97 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 97 (expresionBool -> comparacionBool .)
    INT             reduce using rule 97 (expresionBool -> comparacionBool .)
    DOUBLER         reduce using rule 97 (expresionBool -> comparacionBool .)
    NUM             reduce using rule 97 (expresionBool -> comparacionBool .)
    STRINGR         reduce using rule 97 (expresionBool -> comparacionBool .)
    BOOLR           reduce using rule 97 (expresionBool -> comparacionBool .)
    DYNAMIC         reduce using rule 97 (expresionBool -> comparacionBool .)
    VAR             reduce using rule 97 (expresionBool -> comparacionBool .)
    VARIABLE        reduce using rule 97 (expresionBool -> comparacionBool .)
    WHILE           reduce using rule 97 (expresionBool -> comparacionBool .)
    DO              reduce using rule 97 (expresionBool -> comparacionBool .)
    IF              reduce using rule 97 (expresionBool -> comparacionBool .)
    ELSE            reduce using rule 97 (expresionBool -> comparacionBool .)
    PRINT           reduce using rule 97 (expresionBool -> comparacionBool .)
    FUNCIONSTDIN    reduce using rule 97 (expresionBool -> comparacionBool .)
    NOT             reduce using rule 97 (expresionBool -> comparacionBool .)
    ELSEIF          reduce using rule 97 (expresionBool -> comparacionBool .)
    ENTERO          reduce using rule 97 (expresionBool -> comparacionBool .)
    DOUBLE          reduce using rule 97 (expresionBool -> comparacionBool .)
    STRING          reduce using rule 97 (expresionBool -> comparacionBool .)
    BOOL            reduce using rule 97 (expresionBool -> comparacionBool .)
    $end            reduce using rule 97 (expresionBool -> comparacionBool .)
    LDER            reduce using rule 97 (expresionBool -> comparacionBool .)


state 156

    (59) asignacion -> DOUBLER VARIABLE IGUAL . expresionDouble
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 144
    ENTERO          shift and go to state 145
    VARIABLE        shift and go to state 164

    expresionDouble                shift and go to state 208
    valorDouble                    shift and go to state 143
    valorInt                       shift and go to state 128

state 157

    (60) asignacion -> NUM VARIABLE IGUAL . expresionDouble
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 144
    ENTERO          shift and go to state 145
    VARIABLE        shift and go to state 164

    expresionDouble                shift and go to state 209
    valorDouble                    shift and go to state 143
    valorInt                       shift and go to state 128

state 158

    (61) asignacion -> STRINGR VARIABLE IGUAL . expresionString
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE

    STRING          shift and go to state 169
    VARIABLE        shift and go to state 170

    expresionString                shift and go to state 210
    valorString                    shift and go to state 29

state 159

    (62) asignacion -> BOOLR VARIABLE IGUAL . expresionBool
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 125
    DOUBLE          shift and go to state 41
    BOOL            shift and go to state 43
    NOT             shift and go to state 38
    ENTERO          shift and go to state 129
    STRING          shift and go to state 130

    expresionBool                  shift and go to state 211
    valorDouble                    shift and go to state 124
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 155
    valor                          shift and go to state 127
    valorInt                       shift and go to state 128

state 160

    (63) asignacion -> DYNAMIC VARIABLE IGUAL . expresion
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool

    ENTERO          shift and go to state 129
    VARIABLE        shift and go to state 146
    DOUBLE          shift and go to state 153
    STRING          shift and go to state 154
    BOOL            shift and go to state 43
    NOT             shift and go to state 38

    expresion                      shift and go to state 212
    valor                          shift and go to state 148
    expresionString                shift and go to state 149
    expresionInt                   shift and go to state 150
    expresionDouble                shift and go to state 151
    expresionBool                  shift and go to state 152
    valorString                    shift and go to state 29
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 155

state 161

    (64) asignacion -> VAR VARIABLE IGUAL . expresion
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool

    ENTERO          shift and go to state 129
    VARIABLE        shift and go to state 146
    DOUBLE          shift and go to state 153
    STRING          shift and go to state 154
    BOOL            shift and go to state 43
    NOT             shift and go to state 38

    expresion                      shift and go to state 213
    valor                          shift and go to state 148
    expresionString                shift and go to state 149
    expresionInt                   shift and go to state 150
    expresionDouble                shift and go to state 151
    expresionBool                  shift and go to state 152
    valorString                    shift and go to state 29
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 155

state 162

    (109) expresionInt -> valorInt . operadorMat expresionInt
    (110) expresionInt -> valorInt .
    (115) operadorMat -> . SUMA
    (116) operadorMat -> . RESTA
    (117) operadorMat -> . MULTI
    (118) operadorMat -> . DIV
    (119) operadorMat -> . DIVENTERO
    (120) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 110 (expresionInt -> valorInt .)
    INT             reduce using rule 110 (expresionInt -> valorInt .)
    DOUBLER         reduce using rule 110 (expresionInt -> valorInt .)
    NUM             reduce using rule 110 (expresionInt -> valorInt .)
    STRINGR         reduce using rule 110 (expresionInt -> valorInt .)
    BOOLR           reduce using rule 110 (expresionInt -> valorInt .)
    DYNAMIC         reduce using rule 110 (expresionInt -> valorInt .)
    VAR             reduce using rule 110 (expresionInt -> valorInt .)
    VARIABLE        reduce using rule 110 (expresionInt -> valorInt .)
    WHILE           reduce using rule 110 (expresionInt -> valorInt .)
    DO              reduce using rule 110 (expresionInt -> valorInt .)
    IF              reduce using rule 110 (expresionInt -> valorInt .)
    ELSE            reduce using rule 110 (expresionInt -> valorInt .)
    PRINT           reduce using rule 110 (expresionInt -> valorInt .)
    FUNCIONSTDIN    reduce using rule 110 (expresionInt -> valorInt .)
    NOT             reduce using rule 110 (expresionInt -> valorInt .)
    ELSEIF          reduce using rule 110 (expresionInt -> valorInt .)
    ENTERO          reduce using rule 110 (expresionInt -> valorInt .)
    DOUBLE          reduce using rule 110 (expresionInt -> valorInt .)
    STRING          reduce using rule 110 (expresionInt -> valorInt .)
    BOOL            reduce using rule 110 (expresionInt -> valorInt .)
    $end            reduce using rule 110 (expresionInt -> valorInt .)
    LDER            reduce using rule 110 (expresionInt -> valorInt .)
    PDER            reduce using rule 110 (expresionInt -> valorInt .)
    SUMA            shift and go to state 82
    RESTA           shift and go to state 83
    MULTI           shift and go to state 84
    DIV             shift and go to state 85
    DIVENTERO       shift and go to state 86
    MOD             shift and go to state 87

    operadorMat                    shift and go to state 81

state 163

    (109) expresionInt -> valorInt operadorMat expresionInt .

    PUNTOYCOMA      reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    INT             reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    DOUBLER         reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    NUM             reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    STRINGR         reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    BOOLR           reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    DYNAMIC         reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    VAR             reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    VARIABLE        reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    WHILE           reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    DO              reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    IF              reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    ELSE            reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    PRINT           reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    FUNCIONSTDIN    reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    NOT             reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    ELSEIF          reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    ENTERO          reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    DOUBLE          reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    STRING          reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    BOOL            reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    $end            reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    LDER            reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)
    PDER            reduce using rule 109 (expresionInt -> valorInt operadorMat expresionInt .)


state 164

    (108) valorInt -> VARIABLE .

    SUMA            reduce using rule 108 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 108 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 108 (valorInt -> VARIABLE .)
    DIV             reduce using rule 108 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 108 (valorInt -> VARIABLE .)
    MOD             reduce using rule 108 (valorInt -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 108 (valorInt -> VARIABLE .)
    INT             reduce using rule 108 (valorInt -> VARIABLE .)
    DOUBLER         reduce using rule 108 (valorInt -> VARIABLE .)
    NUM             reduce using rule 108 (valorInt -> VARIABLE .)
    STRINGR         reduce using rule 108 (valorInt -> VARIABLE .)
    BOOLR           reduce using rule 108 (valorInt -> VARIABLE .)
    DYNAMIC         reduce using rule 108 (valorInt -> VARIABLE .)
    VAR             reduce using rule 108 (valorInt -> VARIABLE .)
    VARIABLE        reduce using rule 108 (valorInt -> VARIABLE .)
    WHILE           reduce using rule 108 (valorInt -> VARIABLE .)
    DO              reduce using rule 108 (valorInt -> VARIABLE .)
    IF              reduce using rule 108 (valorInt -> VARIABLE .)
    ELSE            reduce using rule 108 (valorInt -> VARIABLE .)
    PRINT           reduce using rule 108 (valorInt -> VARIABLE .)
    FUNCIONSTDIN    reduce using rule 108 (valorInt -> VARIABLE .)
    NOT             reduce using rule 108 (valorInt -> VARIABLE .)
    ELSEIF          reduce using rule 108 (valorInt -> VARIABLE .)
    ENTERO          reduce using rule 108 (valorInt -> VARIABLE .)
    DOUBLE          reduce using rule 108 (valorInt -> VARIABLE .)
    STRING          reduce using rule 108 (valorInt -> VARIABLE .)
    BOOL            reduce using rule 108 (valorInt -> VARIABLE .)
    $end            reduce using rule 108 (valorInt -> VARIABLE .)
    LDER            reduce using rule 108 (valorInt -> VARIABLE .)
    PDER            reduce using rule 108 (valorInt -> VARIABLE .)
    AND             reduce using rule 108 (valorInt -> VARIABLE .)
    OR              reduce using rule 108 (valorInt -> VARIABLE .)


state 165

    (113) expresionDouble -> valorDouble operadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    INT             reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DOUBLER         reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    NUM             reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    STRINGR         reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    BOOLR           reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DYNAMIC         reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    VAR             reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    VARIABLE        reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    WHILE           reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DO              reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    IF              reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    ELSE            reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PRINT           reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    FUNCIONSTDIN    reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    NOT             reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    ELSEIF          reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    ENTERO          reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DOUBLE          reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    STRING          reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    BOOL            reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    $end            reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    LDER            reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    AND             reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    OR              reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PDER            reduce using rule 113 (expresionDouble -> valorDouble operadorMat expresionDouble .)


state 166

    (91) expresionBool -> valorDouble comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    INT             reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DOUBLER         reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    NUM             reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    STRINGR         reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    BOOLR           reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DYNAMIC         reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    VAR             reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    VARIABLE        reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    WHILE           reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DO              reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    IF              reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    ELSE            reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PRINT           reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    FUNCIONSTDIN    reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    NOT             reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    ELSEIF          reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    ENTERO          reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DOUBLE          reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    STRING          reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    BOOL            reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    $end            reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    LDER            reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PDER            reduce using rule 91 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 167

    (94) expresionBool -> valorDouble comparadorMat VARIABLE .
    (108) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    INT             reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DOUBLER         reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    NUM             reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    STRINGR         reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    BOOLR           reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DYNAMIC         reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    VAR             reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    VARIABLE        reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    WHILE           reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DO              reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    IF              reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    ELSE            reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PRINT           reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    FUNCIONSTDIN    reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    NOT             reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    ELSEIF          reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    ENTERO          reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DOUBLE          reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    STRING          reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    BOOL            reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    $end            reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    LDER            reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PDER            reduce using rule 94 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 108 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 108 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 108 (valorInt -> VARIABLE .)
    DIV             reduce using rule 108 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 108 (valorInt -> VARIABLE .)
    MOD             reduce using rule 108 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! NOT             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 108 (valorInt -> VARIABLE .) ]


state 168

    (105) expresionString -> valorString operadorMat expresionString .

    PUNTOYCOMA      reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    INT             reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    DOUBLER         reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    NUM             reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    STRINGR         reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    BOOLR           reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    DYNAMIC         reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    VAR             reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    VARIABLE        reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    WHILE           reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    DO              reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    IF              reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    ELSE            reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    PRINT           reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    FUNCIONSTDIN    reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    NOT             reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    ELSEIF          reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    ENTERO          reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    DOUBLE          reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    STRING          reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    BOOL            reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    $end            reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    LDER            reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)
    PDER            reduce using rule 105 (expresionString -> valorString operadorMat expresionString .)


state 169

    (103) valorString -> STRING .

    SUMA            reduce using rule 103 (valorString -> STRING .)
    RESTA           reduce using rule 103 (valorString -> STRING .)
    MULTI           reduce using rule 103 (valorString -> STRING .)
    DIV             reduce using rule 103 (valorString -> STRING .)
    DIVENTERO       reduce using rule 103 (valorString -> STRING .)
    MOD             reduce using rule 103 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 103 (valorString -> STRING .)
    INT             reduce using rule 103 (valorString -> STRING .)
    DOUBLER         reduce using rule 103 (valorString -> STRING .)
    NUM             reduce using rule 103 (valorString -> STRING .)
    STRINGR         reduce using rule 103 (valorString -> STRING .)
    BOOLR           reduce using rule 103 (valorString -> STRING .)
    DYNAMIC         reduce using rule 103 (valorString -> STRING .)
    VAR             reduce using rule 103 (valorString -> STRING .)
    VARIABLE        reduce using rule 103 (valorString -> STRING .)
    WHILE           reduce using rule 103 (valorString -> STRING .)
    DO              reduce using rule 103 (valorString -> STRING .)
    IF              reduce using rule 103 (valorString -> STRING .)
    ELSE            reduce using rule 103 (valorString -> STRING .)
    PRINT           reduce using rule 103 (valorString -> STRING .)
    FUNCIONSTDIN    reduce using rule 103 (valorString -> STRING .)
    NOT             reduce using rule 103 (valorString -> STRING .)
    ELSEIF          reduce using rule 103 (valorString -> STRING .)
    ENTERO          reduce using rule 103 (valorString -> STRING .)
    DOUBLE          reduce using rule 103 (valorString -> STRING .)
    STRING          reduce using rule 103 (valorString -> STRING .)
    BOOL            reduce using rule 103 (valorString -> STRING .)
    $end            reduce using rule 103 (valorString -> STRING .)
    LDER            reduce using rule 103 (valorString -> STRING .)
    PDER            reduce using rule 103 (valorString -> STRING .)


state 170

    (104) valorString -> VARIABLE .

    SUMA            reduce using rule 104 (valorString -> VARIABLE .)
    RESTA           reduce using rule 104 (valorString -> VARIABLE .)
    MULTI           reduce using rule 104 (valorString -> VARIABLE .)
    DIV             reduce using rule 104 (valorString -> VARIABLE .)
    DIVENTERO       reduce using rule 104 (valorString -> VARIABLE .)
    MOD             reduce using rule 104 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 104 (valorString -> VARIABLE .)
    INT             reduce using rule 104 (valorString -> VARIABLE .)
    DOUBLER         reduce using rule 104 (valorString -> VARIABLE .)
    NUM             reduce using rule 104 (valorString -> VARIABLE .)
    STRINGR         reduce using rule 104 (valorString -> VARIABLE .)
    BOOLR           reduce using rule 104 (valorString -> VARIABLE .)
    DYNAMIC         reduce using rule 104 (valorString -> VARIABLE .)
    VAR             reduce using rule 104 (valorString -> VARIABLE .)
    VARIABLE        reduce using rule 104 (valorString -> VARIABLE .)
    WHILE           reduce using rule 104 (valorString -> VARIABLE .)
    DO              reduce using rule 104 (valorString -> VARIABLE .)
    IF              reduce using rule 104 (valorString -> VARIABLE .)
    ELSE            reduce using rule 104 (valorString -> VARIABLE .)
    PRINT           reduce using rule 104 (valorString -> VARIABLE .)
    FUNCIONSTDIN    reduce using rule 104 (valorString -> VARIABLE .)
    NOT             reduce using rule 104 (valorString -> VARIABLE .)
    ELSEIF          reduce using rule 104 (valorString -> VARIABLE .)
    ENTERO          reduce using rule 104 (valorString -> VARIABLE .)
    DOUBLE          reduce using rule 104 (valorString -> VARIABLE .)
    STRING          reduce using rule 104 (valorString -> VARIABLE .)
    BOOL            reduce using rule 104 (valorString -> VARIABLE .)
    $end            reduce using rule 104 (valorString -> VARIABLE .)
    LDER            reduce using rule 104 (valorString -> VARIABLE .)
    PDER            reduce using rule 104 (valorString -> VARIABLE .)


state 171

    (98) expresionBool -> valor IS objeto .

    PUNTOYCOMA      reduce using rule 98 (expresionBool -> valor IS objeto .)
    AND             reduce using rule 98 (expresionBool -> valor IS objeto .)
    OR              reduce using rule 98 (expresionBool -> valor IS objeto .)
    INT             reduce using rule 98 (expresionBool -> valor IS objeto .)
    DOUBLER         reduce using rule 98 (expresionBool -> valor IS objeto .)
    NUM             reduce using rule 98 (expresionBool -> valor IS objeto .)
    STRINGR         reduce using rule 98 (expresionBool -> valor IS objeto .)
    BOOLR           reduce using rule 98 (expresionBool -> valor IS objeto .)
    DYNAMIC         reduce using rule 98 (expresionBool -> valor IS objeto .)
    VAR             reduce using rule 98 (expresionBool -> valor IS objeto .)
    VARIABLE        reduce using rule 98 (expresionBool -> valor IS objeto .)
    WHILE           reduce using rule 98 (expresionBool -> valor IS objeto .)
    DO              reduce using rule 98 (expresionBool -> valor IS objeto .)
    IF              reduce using rule 98 (expresionBool -> valor IS objeto .)
    ELSE            reduce using rule 98 (expresionBool -> valor IS objeto .)
    PRINT           reduce using rule 98 (expresionBool -> valor IS objeto .)
    FUNCIONSTDIN    reduce using rule 98 (expresionBool -> valor IS objeto .)
    NOT             reduce using rule 98 (expresionBool -> valor IS objeto .)
    ELSEIF          reduce using rule 98 (expresionBool -> valor IS objeto .)
    ENTERO          reduce using rule 98 (expresionBool -> valor IS objeto .)
    DOUBLE          reduce using rule 98 (expresionBool -> valor IS objeto .)
    STRING          reduce using rule 98 (expresionBool -> valor IS objeto .)
    BOOL            reduce using rule 98 (expresionBool -> valor IS objeto .)
    $end            reduce using rule 98 (expresionBool -> valor IS objeto .)
    LDER            reduce using rule 98 (expresionBool -> valor IS objeto .)
    PDER            reduce using rule 98 (expresionBool -> valor IS objeto .)


state 172

    (129) objeto -> STRINGR .

    PUNTOYCOMA      reduce using rule 129 (objeto -> STRINGR .)
    AND             reduce using rule 129 (objeto -> STRINGR .)
    OR              reduce using rule 129 (objeto -> STRINGR .)
    INT             reduce using rule 129 (objeto -> STRINGR .)
    DOUBLER         reduce using rule 129 (objeto -> STRINGR .)
    NUM             reduce using rule 129 (objeto -> STRINGR .)
    STRINGR         reduce using rule 129 (objeto -> STRINGR .)
    BOOLR           reduce using rule 129 (objeto -> STRINGR .)
    DYNAMIC         reduce using rule 129 (objeto -> STRINGR .)
    VAR             reduce using rule 129 (objeto -> STRINGR .)
    VARIABLE        reduce using rule 129 (objeto -> STRINGR .)
    WHILE           reduce using rule 129 (objeto -> STRINGR .)
    DO              reduce using rule 129 (objeto -> STRINGR .)
    IF              reduce using rule 129 (objeto -> STRINGR .)
    ELSE            reduce using rule 129 (objeto -> STRINGR .)
    PRINT           reduce using rule 129 (objeto -> STRINGR .)
    FUNCIONSTDIN    reduce using rule 129 (objeto -> STRINGR .)
    NOT             reduce using rule 129 (objeto -> STRINGR .)
    ELSEIF          reduce using rule 129 (objeto -> STRINGR .)
    ENTERO          reduce using rule 129 (objeto -> STRINGR .)
    DOUBLE          reduce using rule 129 (objeto -> STRINGR .)
    STRING          reduce using rule 129 (objeto -> STRINGR .)
    BOOL            reduce using rule 129 (objeto -> STRINGR .)
    $end            reduce using rule 129 (objeto -> STRINGR .)
    LDER            reduce using rule 129 (objeto -> STRINGR .)
    PDER            reduce using rule 129 (objeto -> STRINGR .)


state 173

    (130) objeto -> INT .

    PUNTOYCOMA      reduce using rule 130 (objeto -> INT .)
    AND             reduce using rule 130 (objeto -> INT .)
    OR              reduce using rule 130 (objeto -> INT .)
    INT             reduce using rule 130 (objeto -> INT .)
    DOUBLER         reduce using rule 130 (objeto -> INT .)
    NUM             reduce using rule 130 (objeto -> INT .)
    STRINGR         reduce using rule 130 (objeto -> INT .)
    BOOLR           reduce using rule 130 (objeto -> INT .)
    DYNAMIC         reduce using rule 130 (objeto -> INT .)
    VAR             reduce using rule 130 (objeto -> INT .)
    VARIABLE        reduce using rule 130 (objeto -> INT .)
    WHILE           reduce using rule 130 (objeto -> INT .)
    DO              reduce using rule 130 (objeto -> INT .)
    IF              reduce using rule 130 (objeto -> INT .)
    ELSE            reduce using rule 130 (objeto -> INT .)
    PRINT           reduce using rule 130 (objeto -> INT .)
    FUNCIONSTDIN    reduce using rule 130 (objeto -> INT .)
    NOT             reduce using rule 130 (objeto -> INT .)
    ELSEIF          reduce using rule 130 (objeto -> INT .)
    ENTERO          reduce using rule 130 (objeto -> INT .)
    DOUBLE          reduce using rule 130 (objeto -> INT .)
    STRING          reduce using rule 130 (objeto -> INT .)
    BOOL            reduce using rule 130 (objeto -> INT .)
    $end            reduce using rule 130 (objeto -> INT .)
    LDER            reduce using rule 130 (objeto -> INT .)
    PDER            reduce using rule 130 (objeto -> INT .)


state 174

    (131) objeto -> DOUBLER .

    PUNTOYCOMA      reduce using rule 131 (objeto -> DOUBLER .)
    AND             reduce using rule 131 (objeto -> DOUBLER .)
    OR              reduce using rule 131 (objeto -> DOUBLER .)
    INT             reduce using rule 131 (objeto -> DOUBLER .)
    DOUBLER         reduce using rule 131 (objeto -> DOUBLER .)
    NUM             reduce using rule 131 (objeto -> DOUBLER .)
    STRINGR         reduce using rule 131 (objeto -> DOUBLER .)
    BOOLR           reduce using rule 131 (objeto -> DOUBLER .)
    DYNAMIC         reduce using rule 131 (objeto -> DOUBLER .)
    VAR             reduce using rule 131 (objeto -> DOUBLER .)
    VARIABLE        reduce using rule 131 (objeto -> DOUBLER .)
    WHILE           reduce using rule 131 (objeto -> DOUBLER .)
    DO              reduce using rule 131 (objeto -> DOUBLER .)
    IF              reduce using rule 131 (objeto -> DOUBLER .)
    ELSE            reduce using rule 131 (objeto -> DOUBLER .)
    PRINT           reduce using rule 131 (objeto -> DOUBLER .)
    FUNCIONSTDIN    reduce using rule 131 (objeto -> DOUBLER .)
    NOT             reduce using rule 131 (objeto -> DOUBLER .)
    ELSEIF          reduce using rule 131 (objeto -> DOUBLER .)
    ENTERO          reduce using rule 131 (objeto -> DOUBLER .)
    DOUBLE          reduce using rule 131 (objeto -> DOUBLER .)
    STRING          reduce using rule 131 (objeto -> DOUBLER .)
    BOOL            reduce using rule 131 (objeto -> DOUBLER .)
    $end            reduce using rule 131 (objeto -> DOUBLER .)
    LDER            reduce using rule 131 (objeto -> DOUBLER .)
    PDER            reduce using rule 131 (objeto -> DOUBLER .)


state 175

    (132) objeto -> NUM .

    PUNTOYCOMA      reduce using rule 132 (objeto -> NUM .)
    AND             reduce using rule 132 (objeto -> NUM .)
    OR              reduce using rule 132 (objeto -> NUM .)
    INT             reduce using rule 132 (objeto -> NUM .)
    DOUBLER         reduce using rule 132 (objeto -> NUM .)
    NUM             reduce using rule 132 (objeto -> NUM .)
    STRINGR         reduce using rule 132 (objeto -> NUM .)
    BOOLR           reduce using rule 132 (objeto -> NUM .)
    DYNAMIC         reduce using rule 132 (objeto -> NUM .)
    VAR             reduce using rule 132 (objeto -> NUM .)
    VARIABLE        reduce using rule 132 (objeto -> NUM .)
    WHILE           reduce using rule 132 (objeto -> NUM .)
    DO              reduce using rule 132 (objeto -> NUM .)
    IF              reduce using rule 132 (objeto -> NUM .)
    ELSE            reduce using rule 132 (objeto -> NUM .)
    PRINT           reduce using rule 132 (objeto -> NUM .)
    FUNCIONSTDIN    reduce using rule 132 (objeto -> NUM .)
    NOT             reduce using rule 132 (objeto -> NUM .)
    ELSEIF          reduce using rule 132 (objeto -> NUM .)
    ENTERO          reduce using rule 132 (objeto -> NUM .)
    DOUBLE          reduce using rule 132 (objeto -> NUM .)
    STRING          reduce using rule 132 (objeto -> NUM .)
    BOOL            reduce using rule 132 (objeto -> NUM .)
    $end            reduce using rule 132 (objeto -> NUM .)
    LDER            reduce using rule 132 (objeto -> NUM .)
    PDER            reduce using rule 132 (objeto -> NUM .)


state 176

    (133) objeto -> VAR .

    PUNTOYCOMA      reduce using rule 133 (objeto -> VAR .)
    AND             reduce using rule 133 (objeto -> VAR .)
    OR              reduce using rule 133 (objeto -> VAR .)
    INT             reduce using rule 133 (objeto -> VAR .)
    DOUBLER         reduce using rule 133 (objeto -> VAR .)
    NUM             reduce using rule 133 (objeto -> VAR .)
    STRINGR         reduce using rule 133 (objeto -> VAR .)
    BOOLR           reduce using rule 133 (objeto -> VAR .)
    DYNAMIC         reduce using rule 133 (objeto -> VAR .)
    VAR             reduce using rule 133 (objeto -> VAR .)
    VARIABLE        reduce using rule 133 (objeto -> VAR .)
    WHILE           reduce using rule 133 (objeto -> VAR .)
    DO              reduce using rule 133 (objeto -> VAR .)
    IF              reduce using rule 133 (objeto -> VAR .)
    ELSE            reduce using rule 133 (objeto -> VAR .)
    PRINT           reduce using rule 133 (objeto -> VAR .)
    FUNCIONSTDIN    reduce using rule 133 (objeto -> VAR .)
    NOT             reduce using rule 133 (objeto -> VAR .)
    ELSEIF          reduce using rule 133 (objeto -> VAR .)
    ENTERO          reduce using rule 133 (objeto -> VAR .)
    DOUBLE          reduce using rule 133 (objeto -> VAR .)
    STRING          reduce using rule 133 (objeto -> VAR .)
    BOOL            reduce using rule 133 (objeto -> VAR .)
    $end            reduce using rule 133 (objeto -> VAR .)
    LDER            reduce using rule 133 (objeto -> VAR .)
    PDER            reduce using rule 133 (objeto -> VAR .)


state 177

    (134) objeto -> DYNAMIC .

    PUNTOYCOMA      reduce using rule 134 (objeto -> DYNAMIC .)
    AND             reduce using rule 134 (objeto -> DYNAMIC .)
    OR              reduce using rule 134 (objeto -> DYNAMIC .)
    INT             reduce using rule 134 (objeto -> DYNAMIC .)
    DOUBLER         reduce using rule 134 (objeto -> DYNAMIC .)
    NUM             reduce using rule 134 (objeto -> DYNAMIC .)
    STRINGR         reduce using rule 134 (objeto -> DYNAMIC .)
    BOOLR           reduce using rule 134 (objeto -> DYNAMIC .)
    DYNAMIC         reduce using rule 134 (objeto -> DYNAMIC .)
    VAR             reduce using rule 134 (objeto -> DYNAMIC .)
    VARIABLE        reduce using rule 134 (objeto -> DYNAMIC .)
    WHILE           reduce using rule 134 (objeto -> DYNAMIC .)
    DO              reduce using rule 134 (objeto -> DYNAMIC .)
    IF              reduce using rule 134 (objeto -> DYNAMIC .)
    ELSE            reduce using rule 134 (objeto -> DYNAMIC .)
    PRINT           reduce using rule 134 (objeto -> DYNAMIC .)
    FUNCIONSTDIN    reduce using rule 134 (objeto -> DYNAMIC .)
    NOT             reduce using rule 134 (objeto -> DYNAMIC .)
    ELSEIF          reduce using rule 134 (objeto -> DYNAMIC .)
    ENTERO          reduce using rule 134 (objeto -> DYNAMIC .)
    DOUBLE          reduce using rule 134 (objeto -> DYNAMIC .)
    STRING          reduce using rule 134 (objeto -> DYNAMIC .)
    BOOL            reduce using rule 134 (objeto -> DYNAMIC .)
    $end            reduce using rule 134 (objeto -> DYNAMIC .)
    LDER            reduce using rule 134 (objeto -> DYNAMIC .)
    PDER            reduce using rule 134 (objeto -> DYNAMIC .)


state 178

    (135) objeto -> LIST .

    PUNTOYCOMA      reduce using rule 135 (objeto -> LIST .)
    AND             reduce using rule 135 (objeto -> LIST .)
    OR              reduce using rule 135 (objeto -> LIST .)
    INT             reduce using rule 135 (objeto -> LIST .)
    DOUBLER         reduce using rule 135 (objeto -> LIST .)
    NUM             reduce using rule 135 (objeto -> LIST .)
    STRINGR         reduce using rule 135 (objeto -> LIST .)
    BOOLR           reduce using rule 135 (objeto -> LIST .)
    DYNAMIC         reduce using rule 135 (objeto -> LIST .)
    VAR             reduce using rule 135 (objeto -> LIST .)
    VARIABLE        reduce using rule 135 (objeto -> LIST .)
    WHILE           reduce using rule 135 (objeto -> LIST .)
    DO              reduce using rule 135 (objeto -> LIST .)
    IF              reduce using rule 135 (objeto -> LIST .)
    ELSE            reduce using rule 135 (objeto -> LIST .)
    PRINT           reduce using rule 135 (objeto -> LIST .)
    FUNCIONSTDIN    reduce using rule 135 (objeto -> LIST .)
    NOT             reduce using rule 135 (objeto -> LIST .)
    ELSEIF          reduce using rule 135 (objeto -> LIST .)
    ENTERO          reduce using rule 135 (objeto -> LIST .)
    DOUBLE          reduce using rule 135 (objeto -> LIST .)
    STRING          reduce using rule 135 (objeto -> LIST .)
    BOOL            reduce using rule 135 (objeto -> LIST .)
    $end            reduce using rule 135 (objeto -> LIST .)
    LDER            reduce using rule 135 (objeto -> LIST .)
    PDER            reduce using rule 135 (objeto -> LIST .)


state 179

    (136) objeto -> BOOL .

    PUNTOYCOMA      reduce using rule 136 (objeto -> BOOL .)
    AND             reduce using rule 136 (objeto -> BOOL .)
    OR              reduce using rule 136 (objeto -> BOOL .)
    INT             reduce using rule 136 (objeto -> BOOL .)
    DOUBLER         reduce using rule 136 (objeto -> BOOL .)
    NUM             reduce using rule 136 (objeto -> BOOL .)
    STRINGR         reduce using rule 136 (objeto -> BOOL .)
    BOOLR           reduce using rule 136 (objeto -> BOOL .)
    DYNAMIC         reduce using rule 136 (objeto -> BOOL .)
    VAR             reduce using rule 136 (objeto -> BOOL .)
    VARIABLE        reduce using rule 136 (objeto -> BOOL .)
    WHILE           reduce using rule 136 (objeto -> BOOL .)
    DO              reduce using rule 136 (objeto -> BOOL .)
    IF              reduce using rule 136 (objeto -> BOOL .)
    ELSE            reduce using rule 136 (objeto -> BOOL .)
    PRINT           reduce using rule 136 (objeto -> BOOL .)
    FUNCIONSTDIN    reduce using rule 136 (objeto -> BOOL .)
    NOT             reduce using rule 136 (objeto -> BOOL .)
    ELSEIF          reduce using rule 136 (objeto -> BOOL .)
    ENTERO          reduce using rule 136 (objeto -> BOOL .)
    DOUBLE          reduce using rule 136 (objeto -> BOOL .)
    STRING          reduce using rule 136 (objeto -> BOOL .)
    BOOL            reduce using rule 136 (objeto -> BOOL .)
    $end            reduce using rule 136 (objeto -> BOOL .)
    LDER            reduce using rule 136 (objeto -> BOOL .)
    PDER            reduce using rule 136 (objeto -> BOOL .)


state 180

    (137) objeto -> MAP .

    PUNTOYCOMA      reduce using rule 137 (objeto -> MAP .)
    AND             reduce using rule 137 (objeto -> MAP .)
    OR              reduce using rule 137 (objeto -> MAP .)
    INT             reduce using rule 137 (objeto -> MAP .)
    DOUBLER         reduce using rule 137 (objeto -> MAP .)
    NUM             reduce using rule 137 (objeto -> MAP .)
    STRINGR         reduce using rule 137 (objeto -> MAP .)
    BOOLR           reduce using rule 137 (objeto -> MAP .)
    DYNAMIC         reduce using rule 137 (objeto -> MAP .)
    VAR             reduce using rule 137 (objeto -> MAP .)
    VARIABLE        reduce using rule 137 (objeto -> MAP .)
    WHILE           reduce using rule 137 (objeto -> MAP .)
    DO              reduce using rule 137 (objeto -> MAP .)
    IF              reduce using rule 137 (objeto -> MAP .)
    ELSE            reduce using rule 137 (objeto -> MAP .)
    PRINT           reduce using rule 137 (objeto -> MAP .)
    FUNCIONSTDIN    reduce using rule 137 (objeto -> MAP .)
    NOT             reduce using rule 137 (objeto -> MAP .)
    ELSEIF          reduce using rule 137 (objeto -> MAP .)
    ENTERO          reduce using rule 137 (objeto -> MAP .)
    DOUBLE          reduce using rule 137 (objeto -> MAP .)
    STRING          reduce using rule 137 (objeto -> MAP .)
    BOOL            reduce using rule 137 (objeto -> MAP .)
    $end            reduce using rule 137 (objeto -> MAP .)
    LDER            reduce using rule 137 (objeto -> MAP .)
    PDER            reduce using rule 137 (objeto -> MAP .)


state 181

    (138) objeto -> SET .

    PUNTOYCOMA      reduce using rule 138 (objeto -> SET .)
    AND             reduce using rule 138 (objeto -> SET .)
    OR              reduce using rule 138 (objeto -> SET .)
    INT             reduce using rule 138 (objeto -> SET .)
    DOUBLER         reduce using rule 138 (objeto -> SET .)
    NUM             reduce using rule 138 (objeto -> SET .)
    STRINGR         reduce using rule 138 (objeto -> SET .)
    BOOLR           reduce using rule 138 (objeto -> SET .)
    DYNAMIC         reduce using rule 138 (objeto -> SET .)
    VAR             reduce using rule 138 (objeto -> SET .)
    VARIABLE        reduce using rule 138 (objeto -> SET .)
    WHILE           reduce using rule 138 (objeto -> SET .)
    DO              reduce using rule 138 (objeto -> SET .)
    IF              reduce using rule 138 (objeto -> SET .)
    ELSE            reduce using rule 138 (objeto -> SET .)
    PRINT           reduce using rule 138 (objeto -> SET .)
    FUNCIONSTDIN    reduce using rule 138 (objeto -> SET .)
    NOT             reduce using rule 138 (objeto -> SET .)
    ELSEIF          reduce using rule 138 (objeto -> SET .)
    ENTERO          reduce using rule 138 (objeto -> SET .)
    DOUBLE          reduce using rule 138 (objeto -> SET .)
    STRING          reduce using rule 138 (objeto -> SET .)
    BOOL            reduce using rule 138 (objeto -> SET .)
    $end            reduce using rule 138 (objeto -> SET .)
    LDER            reduce using rule 138 (objeto -> SET .)
    PDER            reduce using rule 138 (objeto -> SET .)


state 182

    (99) expresionBool -> valor ISNEGADO objeto .

    PUNTOYCOMA      reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    AND             reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    OR              reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    INT             reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    DOUBLER         reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    NUM             reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    STRINGR         reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    BOOLR           reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    DYNAMIC         reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    VAR             reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    VARIABLE        reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    WHILE           reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    DO              reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    IF              reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    ELSE            reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    PRINT           reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    FUNCIONSTDIN    reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    NOT             reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    ELSEIF          reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    ENTERO          reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    DOUBLE          reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    STRING          reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    BOOL            reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    $end            reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    LDER            reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)
    PDER            reduce using rule 99 (expresionBool -> valor ISNEGADO objeto .)


state 183

    (80) expresion -> valor operadorMat expresion .

    PUNTOYCOMA      reduce using rule 80 (expresion -> valor operadorMat expresion .)
    INT             reduce using rule 80 (expresion -> valor operadorMat expresion .)
    DOUBLER         reduce using rule 80 (expresion -> valor operadorMat expresion .)
    NUM             reduce using rule 80 (expresion -> valor operadorMat expresion .)
    STRINGR         reduce using rule 80 (expresion -> valor operadorMat expresion .)
    BOOLR           reduce using rule 80 (expresion -> valor operadorMat expresion .)
    DYNAMIC         reduce using rule 80 (expresion -> valor operadorMat expresion .)
    VAR             reduce using rule 80 (expresion -> valor operadorMat expresion .)
    VARIABLE        reduce using rule 80 (expresion -> valor operadorMat expresion .)
    WHILE           reduce using rule 80 (expresion -> valor operadorMat expresion .)
    DO              reduce using rule 80 (expresion -> valor operadorMat expresion .)
    IF              reduce using rule 80 (expresion -> valor operadorMat expresion .)
    ELSE            reduce using rule 80 (expresion -> valor operadorMat expresion .)
    PRINT           reduce using rule 80 (expresion -> valor operadorMat expresion .)
    FUNCIONSTDIN    reduce using rule 80 (expresion -> valor operadorMat expresion .)
    NOT             reduce using rule 80 (expresion -> valor operadorMat expresion .)
    ELSEIF          reduce using rule 80 (expresion -> valor operadorMat expresion .)
    ENTERO          reduce using rule 80 (expresion -> valor operadorMat expresion .)
    DOUBLE          reduce using rule 80 (expresion -> valor operadorMat expresion .)
    STRING          reduce using rule 80 (expresion -> valor operadorMat expresion .)
    BOOL            reduce using rule 80 (expresion -> valor operadorMat expresion .)
    $end            reduce using rule 80 (expresion -> valor operadorMat expresion .)
    LDER            reduce using rule 80 (expresion -> valor operadorMat expresion .)
    PDER            reduce using rule 80 (expresion -> valor operadorMat expresion .)


state 184

    (86) sentenciaWhile -> WHILE PIZQ expresionBool . PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> WHILE PIZQ expresionBool . PDER algoritmo
    (101) comparacionBool -> expresionBool . operadorLogico expresionBool
    (102) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (127) operadorLogico -> . AND
    (128) operadorLogico -> . OR

    PDER            shift and go to state 214
    AND             shift and go to state 51
    OR              shift and go to state 52

    operadorLogico                 shift and go to state 50

state 185

    (88) sentenciaDoWhile -> DO LIZQ algoritmo . LDER WHILE PIZQ expresionBool PDER

    LDER            shift and go to state 215


state 186

    (70) sentenciaIf -> IF PIZQ expresionBool . PDER algoritmo
    (71) sentenciaIf -> IF PIZQ expresionBool . PDER LIZQ algoritmo LDER
    (101) comparacionBool -> expresionBool . operadorLogico expresionBool
    (102) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (127) operadorLogico -> . AND
    (128) operadorLogico -> . OR

    PDER            shift and go to state 216
    AND             shift and go to state 51
    OR              shift and go to state 52

    operadorLogico                 shift and go to state 50

state 187

    (73) sentenciaElse -> ELSE LIZQ algoritmo . LDER

    LDER            shift and go to state 217


state 188

    (39) algoritmo -> asignacion PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    INT             reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    DOUBLER         reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    NUM             reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    STRINGR         reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    BOOLR           reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    DYNAMIC         reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    VAR             reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    VARIABLE        reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    WHILE           reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    DO              reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    IF              reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    ELSE            reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    PRINT           reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    NOT             reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    ELSEIF          reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    ENTERO          reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    DOUBLE          reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    STRING          reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    BOOL            reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    $end            reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)
    LDER            reduce using rule 39 (algoritmo -> asignacion PUNTOYCOMA .)


state 189

    (40) algoritmo -> expresionInt PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    INT             reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    DOUBLER         reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    NUM             reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    STRINGR         reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    BOOLR           reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    DYNAMIC         reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    VAR             reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    VARIABLE        reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    WHILE           reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    DO              reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    IF              reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    ELSE            reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    PRINT           reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    NOT             reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    ELSEIF          reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    ENTERO          reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    DOUBLE          reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    STRING          reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    BOOL            reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    $end            reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)
    LDER            reduce using rule 40 (algoritmo -> expresionInt PUNTOYCOMA .)


state 190

    (41) algoritmo -> expresionDouble PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    INT             reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DOUBLER         reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    NUM             reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    STRINGR         reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    BOOLR           reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DYNAMIC         reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    VAR             reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    VARIABLE        reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    WHILE           reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DO              reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    IF              reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    ELSE            reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    PRINT           reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    NOT             reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    ELSEIF          reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    ENTERO          reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DOUBLE          reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    STRING          reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    BOOL            reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    $end            reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)
    LDER            reduce using rule 41 (algoritmo -> expresionDouble PUNTOYCOMA .)


state 191

    (42) algoritmo -> expresionString PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    INT             reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    DOUBLER         reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    NUM             reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    STRINGR         reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    BOOLR           reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    DYNAMIC         reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    VAR             reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    VARIABLE        reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    WHILE           reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    DO              reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    IF              reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    ELSE            reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    PRINT           reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    NOT             reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    ELSEIF          reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    ENTERO          reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    DOUBLE          reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    STRING          reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    BOOL            reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    $end            reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)
    LDER            reduce using rule 42 (algoritmo -> expresionString PUNTOYCOMA .)


state 192

    (43) algoritmo -> expresionBool PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    INT             reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    DOUBLER         reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    NUM             reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    STRINGR         reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    BOOLR           reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    DYNAMIC         reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    VAR             reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    VARIABLE        reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    WHILE           reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    DO              reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    IF              reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    ELSE            reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    PRINT           reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    NOT             reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    ELSEIF          reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    ENTERO          reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    DOUBLE          reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    STRING          reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    BOOL            reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    $end            reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)
    LDER            reduce using rule 43 (algoritmo -> expresionBool PUNTOYCOMA .)


state 193

    (46) algoritmo -> sentenciaWhile PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    INT             reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DOUBLER         reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    NUM             reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    STRINGR         reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    BOOLR           reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DYNAMIC         reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    VAR             reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    VARIABLE        reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    WHILE           reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DO              reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    IF              reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    ELSE            reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    PRINT           reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    NOT             reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    ELSEIF          reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    ENTERO          reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DOUBLE          reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    STRING          reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    BOOL            reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    $end            reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    LDER            reduce using rule 46 (algoritmo -> sentenciaWhile PUNTOYCOMA .)


state 194

    (47) algoritmo -> sentenciaDoWhile PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    INT             reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DOUBLER         reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    NUM             reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    STRINGR         reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    BOOLR           reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DYNAMIC         reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    VAR             reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    VARIABLE        reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    WHILE           reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DO              reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    IF              reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    ELSE            reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    PRINT           reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    NOT             reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    ELSEIF          reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    ENTERO          reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DOUBLE          reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    STRING          reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    BOOL            reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    $end            reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    LDER            reduce using rule 47 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)


state 195

    (48) algoritmo -> sentenciaIf PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    INT             reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DOUBLER         reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    NUM             reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    STRINGR         reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    BOOLR           reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DYNAMIC         reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    VAR             reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    VARIABLE        reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    WHILE           reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DO              reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    IF              reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    ELSE            reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    PRINT           reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    NOT             reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    ELSEIF          reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    ENTERO          reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DOUBLE          reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    STRING          reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    BOOL            reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    $end            reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    LDER            reduce using rule 48 (algoritmo -> sentenciaIf PUNTOYCOMA .)


state 196

    (50) algoritmo -> sentenciaElse PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    INT             reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DOUBLER         reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    NUM             reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    STRINGR         reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    BOOLR           reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DYNAMIC         reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    VAR             reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    VARIABLE        reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    WHILE           reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DO              reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    IF              reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    ELSE            reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    PRINT           reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    NOT             reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    ELSEIF          reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    ENTERO          reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DOUBLE          reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    STRING          reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    BOOL            reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    $end            reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    LDER            reduce using rule 50 (algoritmo -> sentenciaElse PUNTOYCOMA .)


state 197

    (52) algoritmo -> imprimir PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    INT             reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    DOUBLER         reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    NUM             reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    STRINGR         reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    BOOLR           reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    DYNAMIC         reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    VAR             reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    VARIABLE        reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    WHILE           reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    DO              reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    IF              reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    ELSE            reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    PRINT           reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    NOT             reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    ELSEIF          reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    ENTERO          reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    DOUBLE          reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    STRING          reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    BOOL            reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    $end            reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)
    LDER            reduce using rule 52 (algoritmo -> imprimir PUNTOYCOMA .)


state 198

    (53) algoritmo -> funcionStdin PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    INT             reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    DOUBLER         reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    NUM             reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    STRINGR         reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    BOOLR           reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    DYNAMIC         reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    VAR             reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    VARIABLE        reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    WHILE           reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    DO              reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    IF              reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    ELSE            reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    PRINT           reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    NOT             reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    ELSEIF          reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    ENTERO          reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    DOUBLE          reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    STRING          reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    BOOL            reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    $end            reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)
    LDER            reduce using rule 53 (algoritmo -> funcionStdin PUNTOYCOMA .)


state 199

    (54) algoritmo -> negacionBool PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    INT             reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    DOUBLER         reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    NUM             reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    STRINGR         reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    BOOLR           reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    DYNAMIC         reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    VAR             reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    VARIABLE        reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    WHILE           reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    DO              reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    IF              reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    ELSE            reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    PRINT           reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    NOT             reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    ELSEIF          reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    ENTERO          reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    DOUBLE          reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    STRING          reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    BOOL            reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    $end            reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)
    LDER            reduce using rule 54 (algoritmo -> negacionBool PUNTOYCOMA .)


state 200

    (55) algoritmo -> comparacionBool PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    INT             reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    DOUBLER         reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    NUM             reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    STRINGR         reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    BOOLR           reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    DYNAMIC         reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    VAR             reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    VARIABLE        reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    WHILE           reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    DO              reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    IF              reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    ELSE            reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    PRINT           reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    NOT             reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    ELSEIF          reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    ENTERO          reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    DOUBLE          reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    STRING          reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    BOOL            reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    $end            reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)
    LDER            reduce using rule 55 (algoritmo -> comparacionBool PUNTOYCOMA .)


state 201

    (57) algoritmo -> sentenciaElseIf PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    INT             reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    DOUBLER         reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    NUM             reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    STRINGR         reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    BOOLR           reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    DYNAMIC         reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    VAR             reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    VARIABLE        reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    WHILE           reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    DO              reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    IF              reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    ELSE            reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    PRINT           reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    NOT             reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    ELSEIF          reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    ENTERO          reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    DOUBLE          reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    STRING          reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    BOOL            reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    $end            reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    LDER            reduce using rule 57 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)


state 202

    (67) imprimir -> PRINT PIZQ expresion . PDER

    PDER            shift and go to state 218


state 203

    (68) imprimir -> PRINT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 219


state 204

    (66) asignacionSimple -> VARIABLE . IGUAL expresion
    (77) valor -> VARIABLE .
    (92) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (93) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (104) valorString -> VARIABLE .
    (108) valorInt -> VARIABLE .
    (90) valorBool -> VARIABLE .
    (121) comparadorMat -> . DIGUAL
    (122) comparadorMat -> . NOIGUAL
    (123) comparadorMat -> . MAYOR
    (124) comparadorMat -> . MENOR
    (125) comparadorMat -> . MAYIGUAL
    (126) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 77 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 77 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 68
    IS              reduce using rule 77 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 77 (valor -> VARIABLE .)
    SUMA            reduce using rule 77 (valor -> VARIABLE .)
    RESTA           reduce using rule 77 (valor -> VARIABLE .)
    MULTI           reduce using rule 77 (valor -> VARIABLE .)
    DIV             reduce using rule 77 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 77 (valor -> VARIABLE .)
    MOD             reduce using rule 77 (valor -> VARIABLE .)
    PDER            reduce using rule 77 (valor -> VARIABLE .)
    AND             reduce using rule 90 (valorBool -> VARIABLE .)
    OR              reduce using rule 90 (valorBool -> VARIABLE .)
    DIGUAL          shift and go to state 69
    NOIGUAL         shift and go to state 70
    MAYOR           shift and go to state 71
    MENOR           shift and go to state 72
    MAYIGUAL        shift and go to state 73
    MENIGUAL        shift and go to state 74

  ! SUMA            [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! DIV             [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! MOD             [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 104 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 108 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 90 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 67

state 205

    (100) negacionBool -> NOT PIZQ expresionBool . PDER
    (101) comparacionBool -> expresionBool . operadorLogico expresionBool
    (102) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (127) operadorLogico -> . AND
    (128) operadorLogico -> . OR

    PDER            shift and go to state 220
    AND             shift and go to state 51
    OR              shift and go to state 52

    operadorLogico                 shift and go to state 50

state 206

    (74) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER algoritmo
    (75) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER LIZQ algoritmo LDER
    (101) comparacionBool -> expresionBool . operadorLogico expresionBool
    (102) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (127) operadorLogico -> . AND
    (128) operadorLogico -> . OR

    PDER            shift and go to state 221
    AND             shift and go to state 51
    OR              shift and go to state 52

    operadorLogico                 shift and go to state 50

state 207

    (58) asignacion -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 58 (asignacion -> INT VARIABLE IGUAL expresionInt .)


state 208

    (59) asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 59 (asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 209

    (60) asignacion -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 60 (asignacion -> NUM VARIABLE IGUAL expresionDouble .)


state 210

    (61) asignacion -> STRINGR VARIABLE IGUAL expresionString .

    PUNTOYCOMA      reduce using rule 61 (asignacion -> STRINGR VARIABLE IGUAL expresionString .)


state 211

    (62) asignacion -> BOOLR VARIABLE IGUAL expresionBool .
    (101) comparacionBool -> expresionBool . operadorLogico expresionBool
    (102) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (127) operadorLogico -> . AND
    (128) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 62 (asignacion -> BOOLR VARIABLE IGUAL expresionBool .)
    AND             shift and go to state 51
    OR              shift and go to state 52

    operadorLogico                 shift and go to state 50

state 212

    (63) asignacion -> DYNAMIC VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 63 (asignacion -> DYNAMIC VARIABLE IGUAL expresion .)


state 213

    (64) asignacion -> VAR VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 64 (asignacion -> VAR VARIABLE IGUAL expresion .)


state 214

    (86) sentenciaWhile -> WHILE PIZQ expresionBool PDER . LIZQ algoritmo LDER
    (87) sentenciaWhile -> WHILE PIZQ expresionBool PDER . algoritmo
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    LIZQ            shift and go to state 222
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expresionBool                  shift and go to state 103
    algoritmo                      shift and go to state 223
    asignacion                     shift and go to state 99
    expresionInt                   shift and go to state 100
    expresionDouble                shift and go to state 101
    expresionString                shift and go to state 102
    expresion                      shift and go to state 17
    sentenciaWhile                 shift and go to state 104
    sentenciaDoWhile               shift and go to state 105
    sentenciaIf                    shift and go to state 106
    sentenciaElse                  shift and go to state 107
    imprimir                       shift and go to state 108
    funcionStdin                   shift and go to state 109
    negacionBool                   shift and go to state 110
    comparacionBool                shift and go to state 111
    sentenciaElseIf                shift and go to state 112
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 215

    (88) sentenciaDoWhile -> DO LIZQ algoritmo LDER . WHILE PIZQ expresionBool PDER

    WHILE           shift and go to state 224


state 216

    (70) sentenciaIf -> IF PIZQ expresionBool PDER . algoritmo
    (71) sentenciaIf -> IF PIZQ expresionBool PDER . LIZQ algoritmo LDER
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    LIZQ            shift and go to state 226
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expresionBool                  shift and go to state 103
    algoritmo                      shift and go to state 225
    asignacion                     shift and go to state 99
    expresionInt                   shift and go to state 100
    expresionDouble                shift and go to state 101
    expresionString                shift and go to state 102
    expresion                      shift and go to state 17
    sentenciaWhile                 shift and go to state 104
    sentenciaDoWhile               shift and go to state 105
    sentenciaIf                    shift and go to state 106
    sentenciaElse                  shift and go to state 107
    imprimir                       shift and go to state 108
    funcionStdin                   shift and go to state 109
    negacionBool                   shift and go to state 110
    comparacionBool                shift and go to state 111
    sentenciaElseIf                shift and go to state 112
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 217

    (73) sentenciaElse -> ELSE LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    INT             reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    NUM             reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    VAR             reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    WHILE           reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DO              reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    IF              reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    ELSE            reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    PRINT           reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    FUNCIONSTDIN    reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    NOT             reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    ELSEIF          reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    STRING          reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    BOOL            reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    $end            reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    LDER            reduce using rule 73 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)


state 218

    (67) imprimir -> PRINT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 67 (imprimir -> PRINT PIZQ expresion PDER .)


state 219

    (68) imprimir -> PRINT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 68 (imprimir -> PRINT PIZQ asignacionSimple PDER .)


state 220

    (100) negacionBool -> NOT PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    AND             reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    OR              reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    INT             reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    DOUBLER         reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    NUM             reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    STRINGR         reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    BOOLR           reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    DYNAMIC         reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    VAR             reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    VARIABLE        reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    WHILE           reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    DO              reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    IF              reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    ELSE            reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    PRINT           reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    FUNCIONSTDIN    reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    NOT             reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    ELSEIF          reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    ENTERO          reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    DOUBLE          reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    STRING          reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    BOOL            reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    $end            reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    LDER            reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)
    PDER            reduce using rule 100 (negacionBool -> NOT PIZQ expresionBool PDER .)


state 221

    (74) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . algoritmo
    (75) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . LIZQ algoritmo LDER
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    LIZQ            shift and go to state 228
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expresionBool                  shift and go to state 103
    algoritmo                      shift and go to state 227
    asignacion                     shift and go to state 99
    expresionInt                   shift and go to state 100
    expresionDouble                shift and go to state 101
    expresionString                shift and go to state 102
    expresion                      shift and go to state 17
    sentenciaWhile                 shift and go to state 104
    sentenciaDoWhile               shift and go to state 105
    sentenciaIf                    shift and go to state 106
    sentenciaElse                  shift and go to state 107
    imprimir                       shift and go to state 108
    funcionStdin                   shift and go to state 109
    negacionBool                   shift and go to state 110
    comparacionBool                shift and go to state 111
    sentenciaElseIf                shift and go to state 112
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 222

    (86) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ . algoritmo LDER
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expresionBool                  shift and go to state 103
    algoritmo                      shift and go to state 229
    asignacion                     shift and go to state 99
    expresionInt                   shift and go to state 100
    expresionDouble                shift and go to state 101
    expresionString                shift and go to state 102
    expresion                      shift and go to state 17
    sentenciaWhile                 shift and go to state 104
    sentenciaDoWhile               shift and go to state 105
    sentenciaIf                    shift and go to state 106
    sentenciaElse                  shift and go to state 107
    imprimir                       shift and go to state 108
    funcionStdin                   shift and go to state 109
    negacionBool                   shift and go to state 110
    comparacionBool                shift and go to state 111
    sentenciaElseIf                shift and go to state 112
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 223

    (87) sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .

    PUNTOYCOMA      reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    INT             reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DOUBLER         reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    NUM             reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    STRINGR         reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    BOOLR           reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DYNAMIC         reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    VAR             reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    VARIABLE        reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    WHILE           reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DO              reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    IF              reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    ELSE            reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    PRINT           reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    FUNCIONSTDIN    reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    NOT             reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    ELSEIF          reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    ENTERO          reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DOUBLE          reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    STRING          reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    BOOL            reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    $end            reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    LDER            reduce using rule 87 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)


state 224

    (88) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE . PIZQ expresionBool PDER

    PIZQ            shift and go to state 230


state 225

    (70) sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .

    PUNTOYCOMA      reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    INT             reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DOUBLER         reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    NUM             reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    STRINGR         reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    BOOLR           reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DYNAMIC         reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    VAR             reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    VARIABLE        reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    WHILE           reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DO              reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    IF              reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    ELSE            reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    PRINT           reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    FUNCIONSTDIN    reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    NOT             reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    ELSEIF          reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    ENTERO          reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DOUBLE          reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    STRING          reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    BOOL            reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    $end            reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    LDER            reduce using rule 70 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)


state 226

    (71) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ . algoritmo LDER
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expresionBool                  shift and go to state 103
    algoritmo                      shift and go to state 231
    asignacion                     shift and go to state 99
    expresionInt                   shift and go to state 100
    expresionDouble                shift and go to state 101
    expresionString                shift and go to state 102
    expresion                      shift and go to state 17
    sentenciaWhile                 shift and go to state 104
    sentenciaDoWhile               shift and go to state 105
    sentenciaIf                    shift and go to state 106
    sentenciaElse                  shift and go to state 107
    imprimir                       shift and go to state 108
    funcionStdin                   shift and go to state 109
    negacionBool                   shift and go to state 110
    comparacionBool                shift and go to state 111
    sentenciaElseIf                shift and go to state 112
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 227

    (74) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .

    PUNTOYCOMA      reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    INT             reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    DOUBLER         reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    NUM             reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    STRINGR         reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    BOOLR           reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    DYNAMIC         reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    VAR             reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    VARIABLE        reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    WHILE           reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    DO              reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    IF              reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    ELSE            reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    PRINT           reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    FUNCIONSTDIN    reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    NOT             reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    ELSEIF          reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    ENTERO          reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    DOUBLE          reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    STRING          reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    BOOL            reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    $end            reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    LDER            reduce using rule 74 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)


state 228

    (75) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ . algoritmo LDER
    (39) algoritmo -> . asignacion PUNTOYCOMA
    (40) algoritmo -> . expresionInt PUNTOYCOMA
    (41) algoritmo -> . expresionDouble PUNTOYCOMA
    (42) algoritmo -> . expresionString PUNTOYCOMA
    (43) algoritmo -> . expresionBool PUNTOYCOMA
    (44) algoritmo -> . expresion
    (45) algoritmo -> . sentenciaWhile
    (46) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (47) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (48) algoritmo -> . sentenciaIf PUNTOYCOMA
    (49) algoritmo -> . sentenciaIf
    (50) algoritmo -> . sentenciaElse PUNTOYCOMA
    (51) algoritmo -> . sentenciaElse
    (52) algoritmo -> . imprimir PUNTOYCOMA
    (53) algoritmo -> . funcionStdin PUNTOYCOMA
    (54) algoritmo -> . negacionBool PUNTOYCOMA
    (55) algoritmo -> . comparacionBool PUNTOYCOMA
    (56) algoritmo -> . sentenciaElseIf
    (57) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (58) asignacion -> . INT VARIABLE IGUAL expresionInt
    (59) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (60) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (61) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (62) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (63) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (64) asignacion -> . VAR VARIABLE IGUAL expresion
    (65) asignacion -> . asignacionSimple
    (109) expresionInt -> . valorInt operadorMat expresionInt
    (110) expresionInt -> . valorInt
    (113) expresionDouble -> . valorDouble operadorMat expresionDouble
    (114) expresionDouble -> . valorDouble
    (105) expresionString -> . valorString operadorMat expresionString
    (106) expresionString -> . valorString
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (80) expresion -> . valor operadorMat expresion
    (81) expresion -> . valor
    (82) expresion -> . expresionString
    (83) expresion -> . expresionInt
    (84) expresion -> . expresionDouble
    (85) expresion -> . expresionBool
    (86) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (87) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (88) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (70) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (71) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (72) sentenciaElse -> . ELSE algoritmo
    (73) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (67) imprimir -> . PRINT PIZQ expresion PDER
    (68) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (69) funcionStdin -> . FUNCIONSTDIN
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (74) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (75) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (66) asignacionSimple -> . VARIABLE IGUAL expresion
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (103) valorString -> . STRING
    (104) valorString -> . VARIABLE
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING

    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    NOT             shift and go to state 38
    ELSEIF          shift and go to state 39
    ENTERO          shift and go to state 40
    DOUBLE          shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expresionBool                  shift and go to state 103
    algoritmo                      shift and go to state 232
    asignacion                     shift and go to state 99
    expresionInt                   shift and go to state 100
    expresionDouble                shift and go to state 101
    expresionString                shift and go to state 102
    expresion                      shift and go to state 17
    sentenciaWhile                 shift and go to state 104
    sentenciaDoWhile               shift and go to state 105
    sentenciaIf                    shift and go to state 106
    sentenciaElse                  shift and go to state 107
    imprimir                       shift and go to state 108
    funcionStdin                   shift and go to state 109
    negacionBool                   shift and go to state 110
    comparacionBool                shift and go to state 111
    sentenciaElseIf                shift and go to state 112
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31

state 229

    (86) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo . LDER

    LDER            shift and go to state 233


state 230

    (88) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ . expresionBool PDER
    (91) expresionBool -> . valorDouble comparadorMat expresionDouble
    (92) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (93) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (94) expresionBool -> . valorDouble comparadorMat VARIABLE
    (95) expresionBool -> . valorBool
    (96) expresionBool -> . negacionBool
    (97) expresionBool -> . comparacionBool
    (98) expresionBool -> . valor IS objeto
    (99) expresionBool -> . valor ISNEGADO objeto
    (111) valorDouble -> . DOUBLE
    (112) valorDouble -> . valorInt
    (89) valorBool -> . BOOL
    (90) valorBool -> . VARIABLE
    (100) negacionBool -> . NOT PIZQ expresionBool PDER
    (101) comparacionBool -> . expresionBool operadorLogico expresionBool
    (102) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (76) valor -> . ENTERO
    (77) valor -> . VARIABLE
    (78) valor -> . DOUBLE
    (79) valor -> . STRING
    (107) valorInt -> . ENTERO
    (108) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 125
    DOUBLE          shift and go to state 41
    BOOL            shift and go to state 43
    NOT             shift and go to state 38
    ENTERO          shift and go to state 129
    STRING          shift and go to state 130

    expresionBool                  shift and go to state 234
    valorDouble                    shift and go to state 124
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 155
    valor                          shift and go to state 127
    valorInt                       shift and go to state 128

state 231

    (71) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo . LDER

    LDER            shift and go to state 235


state 232

    (75) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo . LDER

    LDER            shift and go to state 236


state 233

    (86) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    INT             reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NUM             reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VAR             reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    WHILE           reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DO              reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    IF              reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSE            reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    PRINT           reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    FUNCIONSTDIN    reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NOT             reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSEIF          reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRING          reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOL            reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    $end            reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    LDER            reduce using rule 86 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)


state 234

    (88) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool . PDER
    (101) comparacionBool -> expresionBool . operadorLogico expresionBool
    (102) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (127) operadorLogico -> . AND
    (128) operadorLogico -> . OR

    PDER            shift and go to state 237
    AND             shift and go to state 51
    OR              shift and go to state 52

    operadorLogico                 shift and go to state 50

state 235

    (71) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    INT             reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NUM             reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VAR             reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    WHILE           reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DO              reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    IF              reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSE            reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    PRINT           reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    FUNCIONSTDIN    reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NOT             reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSEIF          reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRING          reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOL            reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    $end            reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    LDER            reduce using rule 71 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)


state 236

    (75) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    INT             reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NUM             reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VAR             reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    WHILE           reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DO              reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    IF              reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSE            reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    PRINT           reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    FUNCIONSTDIN    reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NOT             reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSEIF          reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRING          reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOL            reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    $end            reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    LDER            reduce using rule 75 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)


state 237

    (88) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 88 (sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 4 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 5 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 6 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 7 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 8 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 10 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 11 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 14 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 19 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 19 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 27 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 27 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 27 resolved as shift
WARNING: shift/reduce conflict for DIV in state 27 resolved as shift
WARNING: shift/reduce conflict for DIVENTERO in state 27 resolved as shift
WARNING: shift/reduce conflict for MOD in state 27 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 100 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 101 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 102 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 103 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 104 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 106 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 107 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 110 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 111 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 112 resolved as shift
WARNING: shift/reduce conflict for AND in state 122 resolved as shift
WARNING: shift/reduce conflict for OR in state 122 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 125 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 125 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 146 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 146 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 146 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 146 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 146 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 146 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 204 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 204 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 204 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 204 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 204 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 204 resolved as shift
WARNING: reduce/reduce conflict in state 19 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 19
WARNING: reduce/reduce conflict in state 19 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 19
WARNING: reduce/reduce conflict in state 19 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 19
WARNING: reduce/reduce conflict in state 19 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 19
WARNING: reduce/reduce conflict in state 27 resolved using rule (expresionInt -> valorInt)
WARNING: rejected rule (valorDouble -> valorInt) in state 27
WARNING: reduce/reduce conflict in state 40 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 40
WARNING: reduce/reduce conflict in state 41 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 41
WARNING: reduce/reduce conflict in state 42 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 42
WARNING: reduce/reduce conflict in state 123 resolved using rule (expresionBool -> comparacionBool)
WARNING: rejected rule (comparacionBool -> expresionBool operadorLogico comparacionBool) in state 123
WARNING: reduce/reduce conflict in state 129 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 129
WARNING: reduce/reduce conflict in state 141 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 141
WARNING: reduce/reduce conflict in state 146 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 146
WARNING: reduce/reduce conflict in state 146 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 146
WARNING: reduce/reduce conflict in state 146 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 146
WARNING: reduce/reduce conflict in state 153 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 153
WARNING: reduce/reduce conflict in state 154 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 154
WARNING: reduce/reduce conflict in state 167 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 167
WARNING: reduce/reduce conflict in state 204 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 204
WARNING: reduce/reduce conflict in state 204 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 204
WARNING: reduce/reduce conflict in state 204 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 204
WARNING: Rule (comparacionBool -> expresionBool operadorLogico comparacionBool) is never reduced
