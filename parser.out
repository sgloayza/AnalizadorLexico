Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    BREAK
    CASE
    COMILLAD
    COMILLAS
    DOSPUNTOS
    DRESTA
    DSUMA
    FLECHA
    FOR
    FUNCIONARR
    FUNCIONRANGE
    FUNCIONTAKE
    RETURN
    SWITCH

Grammar

Rule 0     S' -> final
Rule 1     final -> asignacion PUNTOYCOMA
Rule 2     final -> asignacion PUNTOYCOMA final
Rule 3     final -> expresionInt PUNTOYCOMA
Rule 4     final -> expresionInt PUNTOYCOMA final
Rule 5     final -> expresionDouble PUNTOYCOMA
Rule 6     final -> expresionDouble PUNTOYCOMA final
Rule 7     final -> expresionString PUNTOYCOMA
Rule 8     final -> expresionString PUNTOYCOMA final
Rule 9     final -> expresionBool PUNTOYCOMA
Rule 10    final -> expresionBool PUNTOYCOMA final
Rule 11    final -> sentenciaWhile
Rule 12    final -> sentenciaWhile final
Rule 13    final -> sentenciaWhile PUNTOYCOMA
Rule 14    final -> sentenciaWhile PUNTOYCOMA final
Rule 15    final -> sentenciaDoWhile PUNTOYCOMA
Rule 16    final -> sentenciaDoWhile PUNTOYCOMA final
Rule 17    final -> sentenciaIf PUNTOYCOMA
Rule 18    final -> sentenciaIf PUNTOYCOMA final
Rule 19    final -> sentenciaIf
Rule 20    final -> sentenciaIf final
Rule 21    final -> sentenciaElse PUNTOYCOMA
Rule 22    final -> sentenciaElse PUNTOYCOMA final
Rule 23    final -> sentenciaElse
Rule 24    final -> sentenciaElse final
Rule 25    final -> imprimir PUNTOYCOMA
Rule 26    final -> imprimir PUNTOYCOMA final
Rule 27    final -> funcionStdin PUNTOYCOMA
Rule 28    final -> funcionStdin PUNTOYCOMA final
Rule 29    final -> funcionStdout PUNTOYCOMA
Rule 30    final -> funcionStdout PUNTOYCOMA final
Rule 31    final -> negacionBool PUNTOYCOMA
Rule 32    final -> negacionBool PUNTOYCOMA final
Rule 33    final -> comparacionBool PUNTOYCOMA final
Rule 34    final -> comparacionBool PUNTOYCOMA
Rule 35    final -> sentenciaElseIf PUNTOYCOMA final
Rule 36    final -> sentenciaElseIf final
Rule 37    final -> sentenciaElseIf PUNTOYCOMA
Rule 38    final -> sentenciaElseIf
Rule 39    final -> sentenciaSubstring PUNTOYCOMA final
Rule 40    final -> sentenciaSubstring PUNTOYCOMA
Rule 41    asignacion -> INT VARIABLE IGUAL expresionInt
Rule 42    asignacion -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 43    asignacion -> NUM VARIABLE IGUAL expresionDouble
Rule 44    asignacion -> STRINGR VARIABLE IGUAL expresionString
Rule 45    asignacion -> BOOLR VARIABLE IGUAL expresionBool
Rule 46    asignacion -> DYNAMIC VARIABLE IGUAL expresion
Rule 47    asignacion -> VAR VARIABLE IGUAL expresion
Rule 48    asignacion -> asignacionSimple
Rule 49    asignacionSimple -> VARIABLE IGUAL expresion
Rule 50    imprimir -> PRINT PIZQ expresion PDER
Rule 51    imprimir -> PRINT PIZQ asignacionSimple PDER
Rule 52    funcionStdin -> FUNCIONSTDIN
Rule 53    funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER
Rule 54    funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER
Rule 55    sentenciaIf -> IF PIZQ expresionBool PDER final
Rule 56    sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER
Rule 57    sentenciaElse -> ELSE final
Rule 58    sentenciaElse -> ELSE LIZQ final LDER
Rule 59    sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final
Rule 60    sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER
Rule 61    valor -> ENTERO
Rule 62    valor -> VARIABLE
Rule 63    valor -> DOUBLE
Rule 64    valor -> STRING
Rule 65    expresion -> valor operadorMat expresion
Rule 66    expresion -> valor
Rule 67    expresion -> expresionString
Rule 68    expresion -> expresionInt
Rule 69    expresion -> expresionDouble
Rule 70    expresion -> expresionBool
Rule 71    sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER
Rule 72    sentenciaWhile -> WHILE PIZQ expresionBool PDER final
Rule 73    sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER
Rule 74    valorBool -> BOOL
Rule 75    valorBool -> VARIABLE
Rule 76    expresionBool -> valorDouble comparadorMat expresionDouble
Rule 77    expresionBool -> VARIABLE comparadorMat expresionDouble
Rule 78    expresionBool -> VARIABLE comparadorMat VARIABLE
Rule 79    expresionBool -> valorDouble comparadorMat VARIABLE
Rule 80    expresionBool -> valorBool
Rule 81    expresionBool -> negacionBool
Rule 82    expresionBool -> comparacionBool
Rule 83    expresionBool -> valor IS objeto
Rule 84    expresionBool -> valor ISNEGADO objeto
Rule 85    negacionBool -> NOT PIZQ expresionBool PDER
Rule 86    comparacionBool -> expresionBool operadorLogico expresionBool
Rule 87    comparacionBool -> expresionBool operadorLogico comparacionBool
Rule 88    valorString -> STRING
Rule 89    valorString -> VARIABLE
Rule 90    valorString -> FUNCIONSTDIN
Rule 91    valorString -> expresionIndexString
Rule 92    valorString -> sentenciaSubstring
Rule 93    expresionString -> valorString SUMA expresionString
Rule 94    expresionString -> valorString
Rule 95    expresionIndexString -> valorString CIZQ ENTERO CDER
Rule 96    sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
Rule 97    sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
Rule 98    valorInt -> ENTERO
Rule 99    valorInt -> VARIABLE
Rule 100   expresionInt -> valorInt operadorMat expresionInt
Rule 101   expresionInt -> valorInt
Rule 102   valorDouble -> DOUBLE
Rule 103   valorDouble -> valorInt
Rule 104   expresionDouble -> valorDouble operadorMat expresionDouble
Rule 105   expresionDouble -> valorDouble
Rule 106   operadorMat -> SUMA
Rule 107   operadorMat -> RESTA
Rule 108   operadorMat -> MULTI
Rule 109   operadorMat -> DIV
Rule 110   operadorMat -> DIVENTERO
Rule 111   operadorMat -> MOD
Rule 112   comparadorMat -> DIGUAL
Rule 113   comparadorMat -> NOIGUAL
Rule 114   comparadorMat -> MAYOR
Rule 115   comparadorMat -> MENOR
Rule 116   comparadorMat -> MAYIGUAL
Rule 117   comparadorMat -> MENIGUAL
Rule 118   operadorLogico -> AND
Rule 119   operadorLogico -> OR
Rule 120   objeto -> STRINGR
Rule 121   objeto -> INT
Rule 122   objeto -> DOUBLER
Rule 123   objeto -> NUM
Rule 124   objeto -> VAR
Rule 125   objeto -> DYNAMIC
Rule 126   objeto -> LIST
Rule 127   objeto -> BOOL
Rule 128   objeto -> MAP
Rule 129   objeto -> SET

Terminals, with rules where they appear

AND                  : 118
AS                   : 
BOOL                 : 74 127
BOOLR                : 45
BREAK                : 
CASE                 : 
CDER                 : 95
CIZQ                 : 95
COMA                 : 97
COMILLAD             : 
COMILLAS             : 
DIGUAL               : 112
DIV                  : 109
DIVENTERO            : 110
DO                   : 73
DOSPUNTOS            : 
DOUBLE               : 63 102
DOUBLER              : 42 122
DRESTA               : 
DSUMA                : 
DYNAMIC              : 46 125
ELSE                 : 57 58
ELSEIF               : 59 60
ENTERO               : 61 95 96 97 97 98
FLECHA               : 
FOR                  : 
FUNCIONARR           : 
FUNCIONRANGE         : 
FUNCIONSTDIN         : 52 90
FUNCIONSTDOUT        : 53 54
FUNCIONSUBSTRING     : 96 97
FUNCIONTAKE          : 
IF                   : 55 56
IGUAL                : 41 42 43 44 45 46 47 49
INT                  : 41 121
IS                   : 83
ISNEGADO             : 84
LDER                 : 56 58 60 71 73
LIST                 : 126
LIZQ                 : 56 58 60 71 73
MAP                  : 128
MAYIGUAL             : 116
MAYOR                : 114
MENIGUAL             : 117
MENOR                : 115
MOD                  : 111
MULTI                : 108
NOIGUAL              : 113
NOT                  : 85
NUM                  : 43 123
OR                   : 119
PDER                 : 50 51 53 54 55 56 59 60 71 72 73 85 96 97
PIZQ                 : 50 51 53 54 55 56 59 60 71 72 73 85 96 97
PRINT                : 50 51
PUNTOYCOMA           : 1 2 3 4 5 6 7 8 9 10 13 14 15 16 17 18 21 22 25 26 27 28 29 30 31 32 33 34 35 37 39 40
RESTA                : 107
RETURN               : 
SET                  : 129
STRING               : 64 88
STRINGR              : 44 120
SUMA                 : 93 106
SWITCH               : 
VAR                  : 47 124
VARIABLE             : 41 42 43 44 45 46 47 49 62 75 77 78 78 79 89 96 97 99
WHILE                : 71 72 73
error                : 

Nonterminals, with rules where they appear

asignacion           : 1 2
asignacionSimple     : 48 51 54
comparacionBool      : 33 34 82 87
comparadorMat        : 76 77 78 79
expresion            : 46 47 49 50 53 65
expresionBool        : 9 10 45 55 56 59 60 70 71 72 73 85 86 86 87
expresionDouble      : 5 6 42 43 69 76 77 104
expresionIndexString : 91
expresionInt         : 3 4 41 68 100
expresionString      : 7 8 44 67 93
final                : 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 33 35 36 39 55 56 57 58 59 60 71 72 73 0
funcionStdin         : 27 28
funcionStdout        : 29 30
imprimir             : 25 26
negacionBool         : 31 32 81
objeto               : 83 84
operadorLogico       : 86 87
operadorMat          : 65 100 104
sentenciaDoWhile     : 15 16
sentenciaElse        : 21 22 23 24
sentenciaElseIf      : 35 36 37 38
sentenciaIf          : 17 18 19 20
sentenciaSubstring   : 39 40 92
sentenciaWhile       : 11 12 13 14
valor                : 65 66 83 84
valorBool            : 80
valorDouble          : 76 79 104 105
valorInt             : 100 101 103
valorString          : 93 94 95

Parsing method: LALR

state 0

    (0) S' -> . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

    final                          shift and go to state 1
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 1

    (0) S' -> final .



state 2

    (1) final -> asignacion . PUNTOYCOMA
    (2) final -> asignacion . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 46


state 3

    (3) final -> expresionInt . PUNTOYCOMA
    (4) final -> expresionInt . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 47


state 4

    (5) final -> expresionDouble . PUNTOYCOMA
    (6) final -> expresionDouble . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 48


state 5

    (7) final -> expresionString . PUNTOYCOMA
    (8) final -> expresionString . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 49


state 6

    (9) final -> expresionBool . PUNTOYCOMA
    (10) final -> expresionBool . PUNTOYCOMA final
    (86) comparacionBool -> expresionBool . operadorLogico expresionBool
    (87) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (118) operadorLogico -> . AND
    (119) operadorLogico -> . OR

    PUNTOYCOMA      shift and go to state 50
    AND             shift and go to state 52
    OR              shift and go to state 53

    operadorLogico                 shift and go to state 51

state 7

    (11) final -> sentenciaWhile .
    (12) final -> sentenciaWhile . final
    (13) final -> sentenciaWhile . PUNTOYCOMA
    (14) final -> sentenciaWhile . PUNTOYCOMA final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 11 (final -> sentenciaWhile .)
    LDER            reduce using rule 11 (final -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 55
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

  ! PUNTOYCOMA      [ reduce using rule 11 (final -> sentenciaWhile .) ]
  ! INT             [ reduce using rule 11 (final -> sentenciaWhile .) ]
  ! DOUBLER         [ reduce using rule 11 (final -> sentenciaWhile .) ]
  ! NUM             [ reduce using rule 11 (final -> sentenciaWhile .) ]
  ! STRINGR         [ reduce using rule 11 (final -> sentenciaWhile .) ]
  ! BOOLR           [ reduce using rule 11 (final -> sentenciaWhile .) ]
  ! DYNAMIC         [ reduce using rule 11 (final -> sentenciaWhile .) ]
  ! VAR             [ reduce using rule 11 (final -> sentenciaWhile .) ]
  ! VARIABLE        [ reduce using rule 11 (final -> sentenciaWhile .) ]
  ! WHILE           [ reduce using rule 11 (final -> sentenciaWhile .) ]
  ! DO              [ reduce using rule 11 (final -> sentenciaWhile .) ]
  ! IF              [ reduce using rule 11 (final -> sentenciaWhile .) ]
  ! ELSE            [ reduce using rule 11 (final -> sentenciaWhile .) ]
  ! PRINT           [ reduce using rule 11 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDIN    [ reduce using rule 11 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 11 (final -> sentenciaWhile .) ]
  ! NOT             [ reduce using rule 11 (final -> sentenciaWhile .) ]
  ! ELSEIF          [ reduce using rule 11 (final -> sentenciaWhile .) ]
  ! ENTERO          [ reduce using rule 11 (final -> sentenciaWhile .) ]
  ! DOUBLE          [ reduce using rule 11 (final -> sentenciaWhile .) ]
  ! STRING          [ reduce using rule 11 (final -> sentenciaWhile .) ]
  ! BOOL            [ reduce using rule 11 (final -> sentenciaWhile .) ]

    sentenciaWhile                 shift and go to state 7
    final                          shift and go to state 54
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 8

    (15) final -> sentenciaDoWhile . PUNTOYCOMA
    (16) final -> sentenciaDoWhile . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 56


state 9

    (17) final -> sentenciaIf . PUNTOYCOMA
    (18) final -> sentenciaIf . PUNTOYCOMA final
    (19) final -> sentenciaIf .
    (20) final -> sentenciaIf . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 57
    $end            reduce using rule 19 (final -> sentenciaIf .)
    LDER            reduce using rule 19 (final -> sentenciaIf .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

  ! PUNTOYCOMA      [ reduce using rule 19 (final -> sentenciaIf .) ]
  ! INT             [ reduce using rule 19 (final -> sentenciaIf .) ]
  ! DOUBLER         [ reduce using rule 19 (final -> sentenciaIf .) ]
  ! NUM             [ reduce using rule 19 (final -> sentenciaIf .) ]
  ! STRINGR         [ reduce using rule 19 (final -> sentenciaIf .) ]
  ! BOOLR           [ reduce using rule 19 (final -> sentenciaIf .) ]
  ! DYNAMIC         [ reduce using rule 19 (final -> sentenciaIf .) ]
  ! VAR             [ reduce using rule 19 (final -> sentenciaIf .) ]
  ! VARIABLE        [ reduce using rule 19 (final -> sentenciaIf .) ]
  ! WHILE           [ reduce using rule 19 (final -> sentenciaIf .) ]
  ! DO              [ reduce using rule 19 (final -> sentenciaIf .) ]
  ! IF              [ reduce using rule 19 (final -> sentenciaIf .) ]
  ! ELSE            [ reduce using rule 19 (final -> sentenciaIf .) ]
  ! PRINT           [ reduce using rule 19 (final -> sentenciaIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 19 (final -> sentenciaIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 19 (final -> sentenciaIf .) ]
  ! NOT             [ reduce using rule 19 (final -> sentenciaIf .) ]
  ! ELSEIF          [ reduce using rule 19 (final -> sentenciaIf .) ]
  ! ENTERO          [ reduce using rule 19 (final -> sentenciaIf .) ]
  ! DOUBLE          [ reduce using rule 19 (final -> sentenciaIf .) ]
  ! STRING          [ reduce using rule 19 (final -> sentenciaIf .) ]
  ! BOOL            [ reduce using rule 19 (final -> sentenciaIf .) ]

    sentenciaIf                    shift and go to state 9
    final                          shift and go to state 58
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 10

    (21) final -> sentenciaElse . PUNTOYCOMA
    (22) final -> sentenciaElse . PUNTOYCOMA final
    (23) final -> sentenciaElse .
    (24) final -> sentenciaElse . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 59
    $end            reduce using rule 23 (final -> sentenciaElse .)
    LDER            reduce using rule 23 (final -> sentenciaElse .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

  ! PUNTOYCOMA      [ reduce using rule 23 (final -> sentenciaElse .) ]
  ! INT             [ reduce using rule 23 (final -> sentenciaElse .) ]
  ! DOUBLER         [ reduce using rule 23 (final -> sentenciaElse .) ]
  ! NUM             [ reduce using rule 23 (final -> sentenciaElse .) ]
  ! STRINGR         [ reduce using rule 23 (final -> sentenciaElse .) ]
  ! BOOLR           [ reduce using rule 23 (final -> sentenciaElse .) ]
  ! DYNAMIC         [ reduce using rule 23 (final -> sentenciaElse .) ]
  ! VAR             [ reduce using rule 23 (final -> sentenciaElse .) ]
  ! VARIABLE        [ reduce using rule 23 (final -> sentenciaElse .) ]
  ! WHILE           [ reduce using rule 23 (final -> sentenciaElse .) ]
  ! DO              [ reduce using rule 23 (final -> sentenciaElse .) ]
  ! IF              [ reduce using rule 23 (final -> sentenciaElse .) ]
  ! ELSE            [ reduce using rule 23 (final -> sentenciaElse .) ]
  ! PRINT           [ reduce using rule 23 (final -> sentenciaElse .) ]
  ! FUNCIONSTDIN    [ reduce using rule 23 (final -> sentenciaElse .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 23 (final -> sentenciaElse .) ]
  ! NOT             [ reduce using rule 23 (final -> sentenciaElse .) ]
  ! ELSEIF          [ reduce using rule 23 (final -> sentenciaElse .) ]
  ! ENTERO          [ reduce using rule 23 (final -> sentenciaElse .) ]
  ! DOUBLE          [ reduce using rule 23 (final -> sentenciaElse .) ]
  ! STRING          [ reduce using rule 23 (final -> sentenciaElse .) ]
  ! BOOL            [ reduce using rule 23 (final -> sentenciaElse .) ]

    sentenciaElse                  shift and go to state 10
    final                          shift and go to state 60
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 11

    (25) final -> imprimir . PUNTOYCOMA
    (26) final -> imprimir . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 61


state 12

    (27) final -> funcionStdin . PUNTOYCOMA
    (28) final -> funcionStdin . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 62


state 13

    (29) final -> funcionStdout . PUNTOYCOMA
    (30) final -> funcionStdout . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 63


state 14

    (31) final -> negacionBool . PUNTOYCOMA
    (32) final -> negacionBool . PUNTOYCOMA final
    (81) expresionBool -> negacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 64
    AND             reduce using rule 81 (expresionBool -> negacionBool .)
    OR              reduce using rule 81 (expresionBool -> negacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 81 (expresionBool -> negacionBool .) ]


state 15

    (33) final -> comparacionBool . PUNTOYCOMA final
    (34) final -> comparacionBool . PUNTOYCOMA
    (82) expresionBool -> comparacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 65
    AND             reduce using rule 82 (expresionBool -> comparacionBool .)
    OR              reduce using rule 82 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 82 (expresionBool -> comparacionBool .) ]


state 16

    (35) final -> sentenciaElseIf . PUNTOYCOMA final
    (36) final -> sentenciaElseIf . final
    (37) final -> sentenciaElseIf . PUNTOYCOMA
    (38) final -> sentenciaElseIf .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 66
    $end            reduce using rule 38 (final -> sentenciaElseIf .)
    LDER            reduce using rule 38 (final -> sentenciaElseIf .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

  ! PUNTOYCOMA      [ reduce using rule 38 (final -> sentenciaElseIf .) ]
  ! INT             [ reduce using rule 38 (final -> sentenciaElseIf .) ]
  ! DOUBLER         [ reduce using rule 38 (final -> sentenciaElseIf .) ]
  ! NUM             [ reduce using rule 38 (final -> sentenciaElseIf .) ]
  ! STRINGR         [ reduce using rule 38 (final -> sentenciaElseIf .) ]
  ! BOOLR           [ reduce using rule 38 (final -> sentenciaElseIf .) ]
  ! DYNAMIC         [ reduce using rule 38 (final -> sentenciaElseIf .) ]
  ! VAR             [ reduce using rule 38 (final -> sentenciaElseIf .) ]
  ! VARIABLE        [ reduce using rule 38 (final -> sentenciaElseIf .) ]
  ! WHILE           [ reduce using rule 38 (final -> sentenciaElseIf .) ]
  ! DO              [ reduce using rule 38 (final -> sentenciaElseIf .) ]
  ! IF              [ reduce using rule 38 (final -> sentenciaElseIf .) ]
  ! ELSE            [ reduce using rule 38 (final -> sentenciaElseIf .) ]
  ! PRINT           [ reduce using rule 38 (final -> sentenciaElseIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 38 (final -> sentenciaElseIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 38 (final -> sentenciaElseIf .) ]
  ! NOT             [ reduce using rule 38 (final -> sentenciaElseIf .) ]
  ! ELSEIF          [ reduce using rule 38 (final -> sentenciaElseIf .) ]
  ! ENTERO          [ reduce using rule 38 (final -> sentenciaElseIf .) ]
  ! DOUBLE          [ reduce using rule 38 (final -> sentenciaElseIf .) ]
  ! STRING          [ reduce using rule 38 (final -> sentenciaElseIf .) ]
  ! BOOL            [ reduce using rule 38 (final -> sentenciaElseIf .) ]

    sentenciaElseIf                shift and go to state 16
    final                          shift and go to state 67
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 17

    (39) final -> sentenciaSubstring . PUNTOYCOMA final
    (40) final -> sentenciaSubstring . PUNTOYCOMA
    (92) valorString -> sentenciaSubstring .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 68
    SUMA            reduce using rule 92 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 92 (valorString -> sentenciaSubstring .)

  ! PUNTOYCOMA      [ reduce using rule 92 (valorString -> sentenciaSubstring .) ]


state 18

    (41) asignacion -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 69


state 19

    (77) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (78) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (96) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> VARIABLE . IGUAL expresion
    (99) valorInt -> VARIABLE .
    (89) valorString -> VARIABLE .
    (75) valorBool -> VARIABLE .
    (62) valor -> VARIABLE .
    (112) comparadorMat -> . DIGUAL
    (113) comparadorMat -> . NOIGUAL
    (114) comparadorMat -> . MAYOR
    (115) comparadorMat -> . MENOR
    (116) comparadorMat -> . MAYIGUAL
    (117) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 89 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 89 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 75 (valorBool -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    FUNCIONSUBSTRING shift and go to state 71
    IGUAL           shift and go to state 72
    RESTA           reduce using rule 99 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 99 (valorInt -> VARIABLE .)
    DIV             reduce using rule 99 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 99 (valorInt -> VARIABLE .)
    MOD             reduce using rule 99 (valorInt -> VARIABLE .)
    SUMA            reduce using rule 89 (valorString -> VARIABLE .)
    CIZQ            reduce using rule 89 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 75 (valorBool -> VARIABLE .)
    AND             reduce using rule 75 (valorBool -> VARIABLE .)
    OR              reduce using rule 75 (valorBool -> VARIABLE .)
    IS              reduce using rule 62 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 62 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 73
    NOIGUAL         shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAYIGUAL        shift and go to state 77
    MENIGUAL        shift and go to state 78

  ! SUMA            [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 89 (valorString -> VARIABLE .) ]

    comparadorMat                  shift and go to state 70

state 20

    (42) asignacion -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 79


state 21

    (43) asignacion -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 80


state 22

    (44) asignacion -> STRINGR . VARIABLE IGUAL expresionString

    VARIABLE        shift and go to state 81


state 23

    (45) asignacion -> BOOLR . VARIABLE IGUAL expresionBool

    VARIABLE        shift and go to state 82


state 24

    (46) asignacion -> DYNAMIC . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 83


state 25

    (47) asignacion -> VAR . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 84


state 26

    (48) asignacion -> asignacionSimple .

    PUNTOYCOMA      reduce using rule 48 (asignacion -> asignacionSimple .)


state 27

    (100) expresionInt -> valorInt . operadorMat expresionInt
    (101) expresionInt -> valorInt .
    (103) valorDouble -> valorInt .
    (106) operadorMat -> . SUMA
    (107) operadorMat -> . RESTA
    (108) operadorMat -> . MULTI
    (109) operadorMat -> . DIV
    (110) operadorMat -> . DIVENTERO
    (111) operadorMat -> . MOD

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 101 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PDER resolved using rule 101 (expresionInt -> valorInt .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DIVENTERO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PUNTOYCOMA      reduce using rule 101 (expresionInt -> valorInt .)
    PDER            reduce using rule 101 (expresionInt -> valorInt .)
    DIGUAL          reduce using rule 103 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 103 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 103 (valorDouble -> valorInt .)
    MENOR           reduce using rule 103 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 103 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 103 (valorDouble -> valorInt .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULTI           shift and go to state 88
    DIV             shift and go to state 89
    DIVENTERO       shift and go to state 90
    MOD             shift and go to state 91

  ! SUMA            [ reduce using rule 103 (valorDouble -> valorInt .) ]
  ! RESTA           [ reduce using rule 103 (valorDouble -> valorInt .) ]
  ! MULTI           [ reduce using rule 103 (valorDouble -> valorInt .) ]
  ! DIV             [ reduce using rule 103 (valorDouble -> valorInt .) ]
  ! DIVENTERO       [ reduce using rule 103 (valorDouble -> valorInt .) ]
  ! MOD             [ reduce using rule 103 (valorDouble -> valorInt .) ]
  ! PUNTOYCOMA      [ reduce using rule 103 (valorDouble -> valorInt .) ]
  ! PDER            [ reduce using rule 103 (valorDouble -> valorInt .) ]

    operadorMat                    shift and go to state 85

state 28

    (104) expresionDouble -> valorDouble . operadorMat expresionDouble
    (105) expresionDouble -> valorDouble .
    (76) expresionBool -> valorDouble . comparadorMat expresionDouble
    (79) expresionBool -> valorDouble . comparadorMat VARIABLE
    (106) operadorMat -> . SUMA
    (107) operadorMat -> . RESTA
    (108) operadorMat -> . MULTI
    (109) operadorMat -> . DIV
    (110) operadorMat -> . DIVENTERO
    (111) operadorMat -> . MOD
    (112) comparadorMat -> . DIGUAL
    (113) comparadorMat -> . NOIGUAL
    (114) comparadorMat -> . MAYOR
    (115) comparadorMat -> . MENOR
    (116) comparadorMat -> . MAYIGUAL
    (117) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 105 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 105 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULTI           shift and go to state 88
    DIV             shift and go to state 89
    DIVENTERO       shift and go to state 90
    MOD             shift and go to state 91
    DIGUAL          shift and go to state 73
    NOIGUAL         shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAYIGUAL        shift and go to state 77
    MENIGUAL        shift and go to state 78

    operadorMat                    shift and go to state 92
    comparadorMat                  shift and go to state 93

state 29

    (93) expresionString -> valorString . SUMA expresionString
    (94) expresionString -> valorString .
    (95) expresionIndexString -> valorString . CIZQ ENTERO CDER

    SUMA            shift and go to state 94
    PUNTOYCOMA      reduce using rule 94 (expresionString -> valorString .)
    PDER            reduce using rule 94 (expresionString -> valorString .)
    CIZQ            shift and go to state 95


state 30

    (80) expresionBool -> valorBool .

    PUNTOYCOMA      reduce using rule 80 (expresionBool -> valorBool .)
    AND             reduce using rule 80 (expresionBool -> valorBool .)
    OR              reduce using rule 80 (expresionBool -> valorBool .)
    PDER            reduce using rule 80 (expresionBool -> valorBool .)


state 31

    (83) expresionBool -> valor . IS objeto
    (84) expresionBool -> valor . ISNEGADO objeto

    IS              shift and go to state 96
    ISNEGADO        shift and go to state 97


state 32

    (71) sentenciaWhile -> WHILE . PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> WHILE . PIZQ expresionBool PDER final

    PIZQ            shift and go to state 98


state 33

    (73) sentenciaDoWhile -> DO . LIZQ final LDER WHILE PIZQ expresionBool PDER

    LIZQ            shift and go to state 99


state 34

    (55) sentenciaIf -> IF . PIZQ expresionBool PDER final
    (56) sentenciaIf -> IF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 100


state 35

    (57) sentenciaElse -> ELSE . final
    (58) sentenciaElse -> ELSE . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 102
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

    final                          shift and go to state 101
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 36

    (50) imprimir -> PRINT . PIZQ expresion PDER
    (51) imprimir -> PRINT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 103


state 37

    (52) funcionStdin -> FUNCIONSTDIN .
    (90) valorString -> FUNCIONSTDIN .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 52 (funcionStdin -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 52 (funcionStdin -> FUNCIONSTDIN .)
    SUMA            reduce using rule 90 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 90 (valorString -> FUNCIONSTDIN .)

  ! PUNTOYCOMA      [ reduce using rule 90 (valorString -> FUNCIONSTDIN .) ]


state 38

    (53) funcionStdout -> FUNCIONSTDOUT . PIZQ expresion PDER
    (54) funcionStdout -> FUNCIONSTDOUT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 104


state 39

    (85) negacionBool -> NOT . PIZQ expresionBool PDER

    PIZQ            shift and go to state 105


state 40

    (59) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 106


state 41

    (98) valorInt -> ENTERO .
    (61) valor -> ENTERO .

    SUMA            reduce using rule 98 (valorInt -> ENTERO .)
    RESTA           reduce using rule 98 (valorInt -> ENTERO .)
    MULTI           reduce using rule 98 (valorInt -> ENTERO .)
    DIV             reduce using rule 98 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 98 (valorInt -> ENTERO .)
    MOD             reduce using rule 98 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 98 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 98 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 98 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 98 (valorInt -> ENTERO .)
    MENOR           reduce using rule 98 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 98 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 98 (valorInt -> ENTERO .)
    IS              reduce using rule 61 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 61 (valor -> ENTERO .)


state 42

    (102) valorDouble -> DOUBLE .
    (63) valor -> DOUBLE .

    SUMA            reduce using rule 102 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 102 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 102 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 102 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 102 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 102 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 102 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 102 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 102 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 102 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 102 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 102 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 102 (valorDouble -> DOUBLE .)
    IS              reduce using rule 63 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 63 (valor -> DOUBLE .)


state 43

    (88) valorString -> STRING .
    (64) valor -> STRING .

    SUMA            reduce using rule 88 (valorString -> STRING .)
    CIZQ            reduce using rule 88 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 88 (valorString -> STRING .)
    IS              reduce using rule 64 (valor -> STRING .)
    ISNEGADO        reduce using rule 64 (valor -> STRING .)


state 44

    (91) valorString -> expresionIndexString .

    SUMA            reduce using rule 91 (valorString -> expresionIndexString .)
    CIZQ            reduce using rule 91 (valorString -> expresionIndexString .)
    PUNTOYCOMA      reduce using rule 91 (valorString -> expresionIndexString .)
    PDER            reduce using rule 91 (valorString -> expresionIndexString .)


state 45

    (74) valorBool -> BOOL .

    PUNTOYCOMA      reduce using rule 74 (valorBool -> BOOL .)
    AND             reduce using rule 74 (valorBool -> BOOL .)
    OR              reduce using rule 74 (valorBool -> BOOL .)
    PDER            reduce using rule 74 (valorBool -> BOOL .)


state 46

    (1) final -> asignacion PUNTOYCOMA .
    (2) final -> asignacion PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    LDER            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

  ! INT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! VARIABLE        [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]

    asignacion                     shift and go to state 2
    final                          shift and go to state 107
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 47

    (3) final -> expresionInt PUNTOYCOMA .
    (4) final -> expresionInt PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    LDER            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

  ! INT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! VARIABLE        [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]

    expresionInt                   shift and go to state 3
    final                          shift and go to state 108
    asignacion                     shift and go to state 2
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 48

    (5) final -> expresionDouble PUNTOYCOMA .
    (6) final -> expresionDouble PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    LDER            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

  ! INT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! VARIABLE        [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]

    expresionDouble                shift and go to state 4
    final                          shift and go to state 109
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 49

    (7) final -> expresionString PUNTOYCOMA .
    (8) final -> expresionString PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    LDER            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

  ! INT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! VARIABLE        [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]

    expresionString                shift and go to state 5
    final                          shift and go to state 110
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 50

    (9) final -> expresionBool PUNTOYCOMA .
    (10) final -> expresionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    LDER            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

  ! INT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! VARIABLE        [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]

    expresionBool                  shift and go to state 6
    final                          shift and go to state 111
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 51

    (86) comparacionBool -> expresionBool operadorLogico . expresionBool
    (87) comparacionBool -> expresionBool operadorLogico . comparacionBool
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 115
    DOUBLE          shift and go to state 42
    BOOL            shift and go to state 45
    NOT             shift and go to state 39
    ENTERO          shift and go to state 118
    STRING          shift and go to state 119

    expresionBool                  shift and go to state 112
    comparacionBool                shift and go to state 113
    valorDouble                    shift and go to state 114
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 116
    valor                          shift and go to state 31
    valorInt                       shift and go to state 117

state 52

    (118) operadorLogico -> AND .

    VARIABLE        reduce using rule 118 (operadorLogico -> AND .)
    DOUBLE          reduce using rule 118 (operadorLogico -> AND .)
    BOOL            reduce using rule 118 (operadorLogico -> AND .)
    NOT             reduce using rule 118 (operadorLogico -> AND .)
    ENTERO          reduce using rule 118 (operadorLogico -> AND .)
    STRING          reduce using rule 118 (operadorLogico -> AND .)


state 53

    (119) operadorLogico -> OR .

    VARIABLE        reduce using rule 119 (operadorLogico -> OR .)
    DOUBLE          reduce using rule 119 (operadorLogico -> OR .)
    BOOL            reduce using rule 119 (operadorLogico -> OR .)
    NOT             reduce using rule 119 (operadorLogico -> OR .)
    ENTERO          reduce using rule 119 (operadorLogico -> OR .)
    STRING          reduce using rule 119 (operadorLogico -> OR .)


state 54

    (12) final -> sentenciaWhile final .

    $end            reduce using rule 12 (final -> sentenciaWhile final .)
    PUNTOYCOMA      reduce using rule 12 (final -> sentenciaWhile final .)
    INT             reduce using rule 12 (final -> sentenciaWhile final .)
    DOUBLER         reduce using rule 12 (final -> sentenciaWhile final .)
    NUM             reduce using rule 12 (final -> sentenciaWhile final .)
    STRINGR         reduce using rule 12 (final -> sentenciaWhile final .)
    BOOLR           reduce using rule 12 (final -> sentenciaWhile final .)
    DYNAMIC         reduce using rule 12 (final -> sentenciaWhile final .)
    VAR             reduce using rule 12 (final -> sentenciaWhile final .)
    VARIABLE        reduce using rule 12 (final -> sentenciaWhile final .)
    WHILE           reduce using rule 12 (final -> sentenciaWhile final .)
    DO              reduce using rule 12 (final -> sentenciaWhile final .)
    IF              reduce using rule 12 (final -> sentenciaWhile final .)
    ELSE            reduce using rule 12 (final -> sentenciaWhile final .)
    PRINT           reduce using rule 12 (final -> sentenciaWhile final .)
    FUNCIONSTDIN    reduce using rule 12 (final -> sentenciaWhile final .)
    FUNCIONSTDOUT   reduce using rule 12 (final -> sentenciaWhile final .)
    NOT             reduce using rule 12 (final -> sentenciaWhile final .)
    ELSEIF          reduce using rule 12 (final -> sentenciaWhile final .)
    ENTERO          reduce using rule 12 (final -> sentenciaWhile final .)
    DOUBLE          reduce using rule 12 (final -> sentenciaWhile final .)
    STRING          reduce using rule 12 (final -> sentenciaWhile final .)
    BOOL            reduce using rule 12 (final -> sentenciaWhile final .)
    LDER            reduce using rule 12 (final -> sentenciaWhile final .)


state 55

    (13) final -> sentenciaWhile PUNTOYCOMA .
    (14) final -> sentenciaWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .)
    LDER            reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

  ! INT             [ reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! VARIABLE        [ reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 13 (final -> sentenciaWhile PUNTOYCOMA .) ]

    sentenciaWhile                 shift and go to state 7
    final                          shift and go to state 120
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 56

    (15) final -> sentenciaDoWhile PUNTOYCOMA .
    (16) final -> sentenciaDoWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .)
    LDER            reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

  ! INT             [ reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! VARIABLE        [ reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 15 (final -> sentenciaDoWhile PUNTOYCOMA .) ]

    sentenciaDoWhile               shift and go to state 8
    final                          shift and go to state 121
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 7
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 57

    (17) final -> sentenciaIf PUNTOYCOMA .
    (18) final -> sentenciaIf PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .)
    LDER            reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

  ! INT             [ reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! VARIABLE        [ reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 17 (final -> sentenciaIf PUNTOYCOMA .) ]

    sentenciaIf                    shift and go to state 9
    final                          shift and go to state 122
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 58

    (20) final -> sentenciaIf final .

    $end            reduce using rule 20 (final -> sentenciaIf final .)
    PUNTOYCOMA      reduce using rule 20 (final -> sentenciaIf final .)
    INT             reduce using rule 20 (final -> sentenciaIf final .)
    DOUBLER         reduce using rule 20 (final -> sentenciaIf final .)
    NUM             reduce using rule 20 (final -> sentenciaIf final .)
    STRINGR         reduce using rule 20 (final -> sentenciaIf final .)
    BOOLR           reduce using rule 20 (final -> sentenciaIf final .)
    DYNAMIC         reduce using rule 20 (final -> sentenciaIf final .)
    VAR             reduce using rule 20 (final -> sentenciaIf final .)
    VARIABLE        reduce using rule 20 (final -> sentenciaIf final .)
    WHILE           reduce using rule 20 (final -> sentenciaIf final .)
    DO              reduce using rule 20 (final -> sentenciaIf final .)
    IF              reduce using rule 20 (final -> sentenciaIf final .)
    ELSE            reduce using rule 20 (final -> sentenciaIf final .)
    PRINT           reduce using rule 20 (final -> sentenciaIf final .)
    FUNCIONSTDIN    reduce using rule 20 (final -> sentenciaIf final .)
    FUNCIONSTDOUT   reduce using rule 20 (final -> sentenciaIf final .)
    NOT             reduce using rule 20 (final -> sentenciaIf final .)
    ELSEIF          reduce using rule 20 (final -> sentenciaIf final .)
    ENTERO          reduce using rule 20 (final -> sentenciaIf final .)
    DOUBLE          reduce using rule 20 (final -> sentenciaIf final .)
    STRING          reduce using rule 20 (final -> sentenciaIf final .)
    BOOL            reduce using rule 20 (final -> sentenciaIf final .)
    LDER            reduce using rule 20 (final -> sentenciaIf final .)


state 59

    (21) final -> sentenciaElse PUNTOYCOMA .
    (22) final -> sentenciaElse PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .)
    LDER            reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

  ! INT             [ reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! VARIABLE        [ reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 21 (final -> sentenciaElse PUNTOYCOMA .) ]

    sentenciaElse                  shift and go to state 10
    final                          shift and go to state 123
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 60

    (24) final -> sentenciaElse final .

    $end            reduce using rule 24 (final -> sentenciaElse final .)
    PUNTOYCOMA      reduce using rule 24 (final -> sentenciaElse final .)
    INT             reduce using rule 24 (final -> sentenciaElse final .)
    DOUBLER         reduce using rule 24 (final -> sentenciaElse final .)
    NUM             reduce using rule 24 (final -> sentenciaElse final .)
    STRINGR         reduce using rule 24 (final -> sentenciaElse final .)
    BOOLR           reduce using rule 24 (final -> sentenciaElse final .)
    DYNAMIC         reduce using rule 24 (final -> sentenciaElse final .)
    VAR             reduce using rule 24 (final -> sentenciaElse final .)
    VARIABLE        reduce using rule 24 (final -> sentenciaElse final .)
    WHILE           reduce using rule 24 (final -> sentenciaElse final .)
    DO              reduce using rule 24 (final -> sentenciaElse final .)
    IF              reduce using rule 24 (final -> sentenciaElse final .)
    ELSE            reduce using rule 24 (final -> sentenciaElse final .)
    PRINT           reduce using rule 24 (final -> sentenciaElse final .)
    FUNCIONSTDIN    reduce using rule 24 (final -> sentenciaElse final .)
    FUNCIONSTDOUT   reduce using rule 24 (final -> sentenciaElse final .)
    NOT             reduce using rule 24 (final -> sentenciaElse final .)
    ELSEIF          reduce using rule 24 (final -> sentenciaElse final .)
    ENTERO          reduce using rule 24 (final -> sentenciaElse final .)
    DOUBLE          reduce using rule 24 (final -> sentenciaElse final .)
    STRING          reduce using rule 24 (final -> sentenciaElse final .)
    BOOL            reduce using rule 24 (final -> sentenciaElse final .)
    LDER            reduce using rule 24 (final -> sentenciaElse final .)


state 61

    (25) final -> imprimir PUNTOYCOMA .
    (26) final -> imprimir PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 25 (final -> imprimir PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 25 (final -> imprimir PUNTOYCOMA .)
    LDER            reduce using rule 25 (final -> imprimir PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

  ! INT             [ reduce using rule 25 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 25 (final -> imprimir PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 25 (final -> imprimir PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 25 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 25 (final -> imprimir PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 25 (final -> imprimir PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 25 (final -> imprimir PUNTOYCOMA .) ]
  ! VARIABLE        [ reduce using rule 25 (final -> imprimir PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 25 (final -> imprimir PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 25 (final -> imprimir PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 25 (final -> imprimir PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 25 (final -> imprimir PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 25 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 25 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 25 (final -> imprimir PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 25 (final -> imprimir PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 25 (final -> imprimir PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 25 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 25 (final -> imprimir PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 25 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 25 (final -> imprimir PUNTOYCOMA .) ]

    imprimir                       shift and go to state 11
    final                          shift and go to state 124
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 62

    (27) final -> funcionStdin PUNTOYCOMA .
    (28) final -> funcionStdin PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .)
    LDER            reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

  ! INT             [ reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .) ]
  ! VARIABLE        [ reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 27 (final -> funcionStdin PUNTOYCOMA .) ]

    funcionStdin                   shift and go to state 12
    final                          shift and go to state 125
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 63

    (29) final -> funcionStdout PUNTOYCOMA .
    (30) final -> funcionStdout PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .)
    LDER            reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

  ! INT             [ reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .) ]
  ! VARIABLE        [ reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 29 (final -> funcionStdout PUNTOYCOMA .) ]

    funcionStdout                  shift and go to state 13
    final                          shift and go to state 126
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 64

    (31) final -> negacionBool PUNTOYCOMA .
    (32) final -> negacionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 31 (final -> negacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 31 (final -> negacionBool PUNTOYCOMA .)
    LDER            reduce using rule 31 (final -> negacionBool PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

  ! INT             [ reduce using rule 31 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 31 (final -> negacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 31 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 31 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 31 (final -> negacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 31 (final -> negacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 31 (final -> negacionBool PUNTOYCOMA .) ]
  ! VARIABLE        [ reduce using rule 31 (final -> negacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 31 (final -> negacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 31 (final -> negacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 31 (final -> negacionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 31 (final -> negacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 31 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 31 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 31 (final -> negacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 31 (final -> negacionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 31 (final -> negacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 31 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 31 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 31 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 31 (final -> negacionBool PUNTOYCOMA .) ]

    negacionBool                   shift and go to state 14
    final                          shift and go to state 127
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 65

    (33) final -> comparacionBool PUNTOYCOMA . final
    (34) final -> comparacionBool PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .)
    LDER            reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

  ! INT             [ reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .) ]
  ! VARIABLE        [ reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 34 (final -> comparacionBool PUNTOYCOMA .) ]

    comparacionBool                shift and go to state 15
    final                          shift and go to state 128
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 66

    (35) final -> sentenciaElseIf PUNTOYCOMA . final
    (37) final -> sentenciaElseIf PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .)
    LDER            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

  ! INT             [ reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! VARIABLE        [ reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA .) ]

    sentenciaElseIf                shift and go to state 16
    final                          shift and go to state 129
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 67

    (36) final -> sentenciaElseIf final .

    $end            reduce using rule 36 (final -> sentenciaElseIf final .)
    PUNTOYCOMA      reduce using rule 36 (final -> sentenciaElseIf final .)
    INT             reduce using rule 36 (final -> sentenciaElseIf final .)
    DOUBLER         reduce using rule 36 (final -> sentenciaElseIf final .)
    NUM             reduce using rule 36 (final -> sentenciaElseIf final .)
    STRINGR         reduce using rule 36 (final -> sentenciaElseIf final .)
    BOOLR           reduce using rule 36 (final -> sentenciaElseIf final .)
    DYNAMIC         reduce using rule 36 (final -> sentenciaElseIf final .)
    VAR             reduce using rule 36 (final -> sentenciaElseIf final .)
    VARIABLE        reduce using rule 36 (final -> sentenciaElseIf final .)
    WHILE           reduce using rule 36 (final -> sentenciaElseIf final .)
    DO              reduce using rule 36 (final -> sentenciaElseIf final .)
    IF              reduce using rule 36 (final -> sentenciaElseIf final .)
    ELSE            reduce using rule 36 (final -> sentenciaElseIf final .)
    PRINT           reduce using rule 36 (final -> sentenciaElseIf final .)
    FUNCIONSTDIN    reduce using rule 36 (final -> sentenciaElseIf final .)
    FUNCIONSTDOUT   reduce using rule 36 (final -> sentenciaElseIf final .)
    NOT             reduce using rule 36 (final -> sentenciaElseIf final .)
    ELSEIF          reduce using rule 36 (final -> sentenciaElseIf final .)
    ENTERO          reduce using rule 36 (final -> sentenciaElseIf final .)
    DOUBLE          reduce using rule 36 (final -> sentenciaElseIf final .)
    STRING          reduce using rule 36 (final -> sentenciaElseIf final .)
    BOOL            reduce using rule 36 (final -> sentenciaElseIf final .)
    LDER            reduce using rule 36 (final -> sentenciaElseIf final .)


state 68

    (39) final -> sentenciaSubstring PUNTOYCOMA . final
    (40) final -> sentenciaSubstring PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .)
    LDER            reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .)
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

  ! INT             [ reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! VARIABLE        [ reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 40 (final -> sentenciaSubstring PUNTOYCOMA .) ]

    sentenciaSubstring             shift and go to state 17
    final                          shift and go to state 130
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 69

    (41) asignacion -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 131


state 70

    (77) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (78) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 132
    DOUBLE          shift and go to state 135
    ENTERO          shift and go to state 136

    expresionDouble                shift and go to state 133
    valorDouble                    shift and go to state 134
    valorInt                       shift and go to state 117

state 71

    (96) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO PDER
    (97) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO COMA ENTERO PDER

    PIZQ            shift and go to state 137


state 72

    (49) asignacionSimple -> VARIABLE IGUAL . expresion
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 118
    VARIABLE        shift and go to state 138
    DOUBLE          shift and go to state 145
    STRING          shift and go to state 146
    FUNCIONSTDIN    shift and go to state 148
    BOOL            shift and go to state 45
    NOT             shift and go to state 39

    expresion                      shift and go to state 139
    valor                          shift and go to state 140
    expresionString                shift and go to state 141
    expresionInt                   shift and go to state 142
    expresionDouble                shift and go to state 143
    expresionBool                  shift and go to state 144
    valorString                    shift and go to state 29
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 116
    comparacionBool                shift and go to state 147
    expresionIndexString           shift and go to state 44
    sentenciaSubstring             shift and go to state 149

state 73

    (112) comparadorMat -> DIGUAL .

    VARIABLE        reduce using rule 112 (comparadorMat -> DIGUAL .)
    DOUBLE          reduce using rule 112 (comparadorMat -> DIGUAL .)
    ENTERO          reduce using rule 112 (comparadorMat -> DIGUAL .)


state 74

    (113) comparadorMat -> NOIGUAL .

    VARIABLE        reduce using rule 113 (comparadorMat -> NOIGUAL .)
    DOUBLE          reduce using rule 113 (comparadorMat -> NOIGUAL .)
    ENTERO          reduce using rule 113 (comparadorMat -> NOIGUAL .)


state 75

    (114) comparadorMat -> MAYOR .

    VARIABLE        reduce using rule 114 (comparadorMat -> MAYOR .)
    DOUBLE          reduce using rule 114 (comparadorMat -> MAYOR .)
    ENTERO          reduce using rule 114 (comparadorMat -> MAYOR .)


state 76

    (115) comparadorMat -> MENOR .

    VARIABLE        reduce using rule 115 (comparadorMat -> MENOR .)
    DOUBLE          reduce using rule 115 (comparadorMat -> MENOR .)
    ENTERO          reduce using rule 115 (comparadorMat -> MENOR .)


state 77

    (116) comparadorMat -> MAYIGUAL .

    VARIABLE        reduce using rule 116 (comparadorMat -> MAYIGUAL .)
    DOUBLE          reduce using rule 116 (comparadorMat -> MAYIGUAL .)
    ENTERO          reduce using rule 116 (comparadorMat -> MAYIGUAL .)


state 78

    (117) comparadorMat -> MENIGUAL .

    VARIABLE        reduce using rule 117 (comparadorMat -> MENIGUAL .)
    DOUBLE          reduce using rule 117 (comparadorMat -> MENIGUAL .)
    ENTERO          reduce using rule 117 (comparadorMat -> MENIGUAL .)


state 79

    (42) asignacion -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 150


state 80

    (43) asignacion -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 151


state 81

    (44) asignacion -> STRINGR VARIABLE . IGUAL expresionString

    IGUAL           shift and go to state 152


state 82

    (45) asignacion -> BOOLR VARIABLE . IGUAL expresionBool

    IGUAL           shift and go to state 153


state 83

    (46) asignacion -> DYNAMIC VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 154


state 84

    (47) asignacion -> VAR VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 155


state 85

    (100) expresionInt -> valorInt operadorMat . expresionInt
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE

    ENTERO          shift and go to state 136
    VARIABLE        shift and go to state 158

    valorInt                       shift and go to state 156
    expresionInt                   shift and go to state 157

state 86

    (106) operadorMat -> SUMA .

    ENTERO          reduce using rule 106 (operadorMat -> SUMA .)
    VARIABLE        reduce using rule 106 (operadorMat -> SUMA .)
    DOUBLE          reduce using rule 106 (operadorMat -> SUMA .)
    STRING          reduce using rule 106 (operadorMat -> SUMA .)
    FUNCIONSTDIN    reduce using rule 106 (operadorMat -> SUMA .)
    BOOL            reduce using rule 106 (operadorMat -> SUMA .)
    NOT             reduce using rule 106 (operadorMat -> SUMA .)


state 87

    (107) operadorMat -> RESTA .

    ENTERO          reduce using rule 107 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 107 (operadorMat -> RESTA .)
    DOUBLE          reduce using rule 107 (operadorMat -> RESTA .)
    STRING          reduce using rule 107 (operadorMat -> RESTA .)
    FUNCIONSTDIN    reduce using rule 107 (operadorMat -> RESTA .)
    BOOL            reduce using rule 107 (operadorMat -> RESTA .)
    NOT             reduce using rule 107 (operadorMat -> RESTA .)


state 88

    (108) operadorMat -> MULTI .

    ENTERO          reduce using rule 108 (operadorMat -> MULTI .)
    VARIABLE        reduce using rule 108 (operadorMat -> MULTI .)
    DOUBLE          reduce using rule 108 (operadorMat -> MULTI .)
    STRING          reduce using rule 108 (operadorMat -> MULTI .)
    FUNCIONSTDIN    reduce using rule 108 (operadorMat -> MULTI .)
    BOOL            reduce using rule 108 (operadorMat -> MULTI .)
    NOT             reduce using rule 108 (operadorMat -> MULTI .)


state 89

    (109) operadorMat -> DIV .

    ENTERO          reduce using rule 109 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 109 (operadorMat -> DIV .)
    DOUBLE          reduce using rule 109 (operadorMat -> DIV .)
    STRING          reduce using rule 109 (operadorMat -> DIV .)
    FUNCIONSTDIN    reduce using rule 109 (operadorMat -> DIV .)
    BOOL            reduce using rule 109 (operadorMat -> DIV .)
    NOT             reduce using rule 109 (operadorMat -> DIV .)


state 90

    (110) operadorMat -> DIVENTERO .

    ENTERO          reduce using rule 110 (operadorMat -> DIVENTERO .)
    VARIABLE        reduce using rule 110 (operadorMat -> DIVENTERO .)
    DOUBLE          reduce using rule 110 (operadorMat -> DIVENTERO .)
    STRING          reduce using rule 110 (operadorMat -> DIVENTERO .)
    FUNCIONSTDIN    reduce using rule 110 (operadorMat -> DIVENTERO .)
    BOOL            reduce using rule 110 (operadorMat -> DIVENTERO .)
    NOT             reduce using rule 110 (operadorMat -> DIVENTERO .)


state 91

    (111) operadorMat -> MOD .

    ENTERO          reduce using rule 111 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 111 (operadorMat -> MOD .)
    DOUBLE          reduce using rule 111 (operadorMat -> MOD .)
    STRING          reduce using rule 111 (operadorMat -> MOD .)
    FUNCIONSTDIN    reduce using rule 111 (operadorMat -> MOD .)
    BOOL            reduce using rule 111 (operadorMat -> MOD .)
    NOT             reduce using rule 111 (operadorMat -> MOD .)


state 92

    (104) expresionDouble -> valorDouble operadorMat . expresionDouble
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 135
    ENTERO          shift and go to state 136
    VARIABLE        shift and go to state 158

    valorDouble                    shift and go to state 134
    expresionDouble                shift and go to state 159
    valorInt                       shift and go to state 117

state 93

    (76) expresionBool -> valorDouble comparadorMat . expresionDouble
    (79) expresionBool -> valorDouble comparadorMat . VARIABLE
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 161
    DOUBLE          shift and go to state 135
    ENTERO          shift and go to state 136

    valorDouble                    shift and go to state 134
    expresionDouble                shift and go to state 160
    valorInt                       shift and go to state 117

state 94

    (93) expresionString -> valorString SUMA . expresionString
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 163
    VARIABLE        shift and go to state 164
    FUNCIONSTDIN    shift and go to state 148

    valorString                    shift and go to state 29
    expresionString                shift and go to state 162
    expresionIndexString           shift and go to state 44
    sentenciaSubstring             shift and go to state 149

state 95

    (95) expresionIndexString -> valorString CIZQ . ENTERO CDER

    ENTERO          shift and go to state 165


state 96

    (83) expresionBool -> valor IS . objeto
    (120) objeto -> . STRINGR
    (121) objeto -> . INT
    (122) objeto -> . DOUBLER
    (123) objeto -> . NUM
    (124) objeto -> . VAR
    (125) objeto -> . DYNAMIC
    (126) objeto -> . LIST
    (127) objeto -> . BOOL
    (128) objeto -> . MAP
    (129) objeto -> . SET

    STRINGR         shift and go to state 167
    INT             shift and go to state 168
    DOUBLER         shift and go to state 169
    NUM             shift and go to state 170
    VAR             shift and go to state 171
    DYNAMIC         shift and go to state 172
    LIST            shift and go to state 173
    BOOL            shift and go to state 174
    MAP             shift and go to state 175
    SET             shift and go to state 176

    objeto                         shift and go to state 166

state 97

    (84) expresionBool -> valor ISNEGADO . objeto
    (120) objeto -> . STRINGR
    (121) objeto -> . INT
    (122) objeto -> . DOUBLER
    (123) objeto -> . NUM
    (124) objeto -> . VAR
    (125) objeto -> . DYNAMIC
    (126) objeto -> . LIST
    (127) objeto -> . BOOL
    (128) objeto -> . MAP
    (129) objeto -> . SET

    STRINGR         shift and go to state 167
    INT             shift and go to state 168
    DOUBLER         shift and go to state 169
    NUM             shift and go to state 170
    VAR             shift and go to state 171
    DYNAMIC         shift and go to state 172
    LIST            shift and go to state 173
    BOOL            shift and go to state 174
    MAP             shift and go to state 175
    SET             shift and go to state 176

    objeto                         shift and go to state 177

state 98

    (71) sentenciaWhile -> WHILE PIZQ . expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> WHILE PIZQ . expresionBool PDER final
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 115
    DOUBLE          shift and go to state 42
    BOOL            shift and go to state 45
    NOT             shift and go to state 39
    ENTERO          shift and go to state 118
    STRING          shift and go to state 119

    expresionBool                  shift and go to state 178
    valorDouble                    shift and go to state 114
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 116
    comparacionBool                shift and go to state 147
    valor                          shift and go to state 31
    valorInt                       shift and go to state 117

state 99

    (73) sentenciaDoWhile -> DO LIZQ . final LDER WHILE PIZQ expresionBool PDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

    final                          shift and go to state 179
    expresionBool                  shift and go to state 6
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 100

    (55) sentenciaIf -> IF PIZQ . expresionBool PDER final
    (56) sentenciaIf -> IF PIZQ . expresionBool PDER LIZQ final LDER
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 115
    DOUBLE          shift and go to state 42
    BOOL            shift and go to state 45
    NOT             shift and go to state 39
    ENTERO          shift and go to state 118
    STRING          shift and go to state 119

    expresionBool                  shift and go to state 180
    valorDouble                    shift and go to state 114
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 116
    comparacionBool                shift and go to state 147
    valor                          shift and go to state 31
    valorInt                       shift and go to state 117

state 101

    (57) sentenciaElse -> ELSE final .

    PUNTOYCOMA      reduce using rule 57 (sentenciaElse -> ELSE final .)
    INT             reduce using rule 57 (sentenciaElse -> ELSE final .)
    DOUBLER         reduce using rule 57 (sentenciaElse -> ELSE final .)
    NUM             reduce using rule 57 (sentenciaElse -> ELSE final .)
    STRINGR         reduce using rule 57 (sentenciaElse -> ELSE final .)
    BOOLR           reduce using rule 57 (sentenciaElse -> ELSE final .)
    DYNAMIC         reduce using rule 57 (sentenciaElse -> ELSE final .)
    VAR             reduce using rule 57 (sentenciaElse -> ELSE final .)
    VARIABLE        reduce using rule 57 (sentenciaElse -> ELSE final .)
    WHILE           reduce using rule 57 (sentenciaElse -> ELSE final .)
    DO              reduce using rule 57 (sentenciaElse -> ELSE final .)
    IF              reduce using rule 57 (sentenciaElse -> ELSE final .)
    ELSE            reduce using rule 57 (sentenciaElse -> ELSE final .)
    PRINT           reduce using rule 57 (sentenciaElse -> ELSE final .)
    FUNCIONSTDIN    reduce using rule 57 (sentenciaElse -> ELSE final .)
    FUNCIONSTDOUT   reduce using rule 57 (sentenciaElse -> ELSE final .)
    NOT             reduce using rule 57 (sentenciaElse -> ELSE final .)
    ELSEIF          reduce using rule 57 (sentenciaElse -> ELSE final .)
    ENTERO          reduce using rule 57 (sentenciaElse -> ELSE final .)
    DOUBLE          reduce using rule 57 (sentenciaElse -> ELSE final .)
    STRING          reduce using rule 57 (sentenciaElse -> ELSE final .)
    BOOL            reduce using rule 57 (sentenciaElse -> ELSE final .)
    $end            reduce using rule 57 (sentenciaElse -> ELSE final .)
    LDER            reduce using rule 57 (sentenciaElse -> ELSE final .)


state 102

    (58) sentenciaElse -> ELSE LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

    final                          shift and go to state 181
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 103

    (50) imprimir -> PRINT PIZQ . expresion PDER
    (51) imprimir -> PRINT PIZQ . asignacionSimple PDER
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 184
    ENTERO          shift and go to state 118
    DOUBLE          shift and go to state 145
    STRING          shift and go to state 146
    FUNCIONSTDIN    shift and go to state 148
    BOOL            shift and go to state 45
    NOT             shift and go to state 39

    expresion                      shift and go to state 182
    asignacionSimple               shift and go to state 183
    valor                          shift and go to state 140
    expresionString                shift and go to state 141
    expresionInt                   shift and go to state 142
    expresionDouble                shift and go to state 143
    expresionBool                  shift and go to state 144
    valorString                    shift and go to state 29
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 116
    comparacionBool                shift and go to state 147
    expresionIndexString           shift and go to state 44
    sentenciaSubstring             shift and go to state 149

state 104

    (53) funcionStdout -> FUNCIONSTDOUT PIZQ . expresion PDER
    (54) funcionStdout -> FUNCIONSTDOUT PIZQ . asignacionSimple PDER
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 184
    ENTERO          shift and go to state 118
    DOUBLE          shift and go to state 145
    STRING          shift and go to state 146
    FUNCIONSTDIN    shift and go to state 148
    BOOL            shift and go to state 45
    NOT             shift and go to state 39

    expresion                      shift and go to state 185
    asignacionSimple               shift and go to state 186
    valor                          shift and go to state 140
    expresionString                shift and go to state 141
    expresionInt                   shift and go to state 142
    expresionDouble                shift and go to state 143
    expresionBool                  shift and go to state 144
    valorString                    shift and go to state 29
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 116
    comparacionBool                shift and go to state 147
    expresionIndexString           shift and go to state 44
    sentenciaSubstring             shift and go to state 149

state 105

    (85) negacionBool -> NOT PIZQ . expresionBool PDER
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 115
    DOUBLE          shift and go to state 42
    BOOL            shift and go to state 45
    NOT             shift and go to state 39
    ENTERO          shift and go to state 118
    STRING          shift and go to state 119

    expresionBool                  shift and go to state 187
    valorDouble                    shift and go to state 114
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 116
    comparacionBool                shift and go to state 147
    valor                          shift and go to state 31
    valorInt                       shift and go to state 117

state 106

    (59) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER final
    (60) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER LIZQ final LDER
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 115
    DOUBLE          shift and go to state 42
    BOOL            shift and go to state 45
    NOT             shift and go to state 39
    ENTERO          shift and go to state 118
    STRING          shift and go to state 119

    expresionBool                  shift and go to state 188
    valorDouble                    shift and go to state 114
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 116
    comparacionBool                shift and go to state 147
    valor                          shift and go to state 31
    valorInt                       shift and go to state 117

state 107

    (2) final -> asignacion PUNTOYCOMA final .

    $end            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    INT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLER         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NUM             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRINGR         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOLR           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VAR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VARIABLE        reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    WHILE           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DO              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    IF              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSE            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PRINT           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NOT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSEIF          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ENTERO          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLE          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRING          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOL            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LDER            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)


state 108

    (4) final -> expresionInt PUNTOYCOMA final .

    $end            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    INT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLER         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NUM             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRINGR         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOLR           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VAR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VARIABLE        reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    WHILE           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DO              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    IF              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSE            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PRINT           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NOT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSEIF          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ENTERO          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLE          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRING          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOL            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LDER            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)


state 109

    (6) final -> expresionDouble PUNTOYCOMA final .

    $end            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    INT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLER         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NUM             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRINGR         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOLR           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VAR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VARIABLE        reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    WHILE           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DO              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    IF              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSE            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PRINT           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NOT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSEIF          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ENTERO          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLE          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRING          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOL            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LDER            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)


state 110

    (8) final -> expresionString PUNTOYCOMA final .

    $end            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    INT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLER         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NUM             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRINGR         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOLR           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VAR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VARIABLE        reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    WHILE           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DO              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    IF              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSE            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PRINT           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NOT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSEIF          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ENTERO          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLE          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRING          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOL            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LDER            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)


state 111

    (10) final -> expresionBool PUNTOYCOMA final .

    $end            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    INT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NUM             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VAR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DO              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    IF              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NOT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRING          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LDER            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)


state 112

    (86) comparacionBool -> expresionBool operadorLogico expresionBool .
    (86) comparacionBool -> expresionBool . operadorLogico expresionBool
    (87) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (118) operadorLogico -> . AND
    (119) operadorLogico -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNTOYCOMA      reduce using rule 86 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    PDER            reduce using rule 86 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    AND             shift and go to state 52
    OR              shift and go to state 53

  ! AND             [ reduce using rule 86 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]
  ! OR              [ reduce using rule 86 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]

    operadorLogico                 shift and go to state 51

state 113

    (87) comparacionBool -> expresionBool operadorLogico comparacionBool .
    (82) expresionBool -> comparacionBool .

  ! reduce/reduce conflict for AND resolved using rule 82 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for OR resolved using rule 82 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 82 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PDER resolved using rule 82 (expresionBool -> comparacionBool .)
    AND             reduce using rule 82 (expresionBool -> comparacionBool .)
    OR              reduce using rule 82 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 82 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 82 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 87 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! AND             [ reduce using rule 87 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! OR              [ reduce using rule 87 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! PDER            [ reduce using rule 87 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]


state 114

    (76) expresionBool -> valorDouble . comparadorMat expresionDouble
    (79) expresionBool -> valorDouble . comparadorMat VARIABLE
    (112) comparadorMat -> . DIGUAL
    (113) comparadorMat -> . NOIGUAL
    (114) comparadorMat -> . MAYOR
    (115) comparadorMat -> . MENOR
    (116) comparadorMat -> . MAYIGUAL
    (117) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 73
    NOIGUAL         shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAYIGUAL        shift and go to state 77
    MENIGUAL        shift and go to state 78

    comparadorMat                  shift and go to state 93

state 115

    (77) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (78) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (75) valorBool -> VARIABLE .
    (62) valor -> VARIABLE .
    (99) valorInt -> VARIABLE .
    (112) comparadorMat -> . DIGUAL
    (113) comparadorMat -> . NOIGUAL
    (114) comparadorMat -> . MAYOR
    (115) comparadorMat -> . MENOR
    (116) comparadorMat -> . MAYIGUAL
    (117) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    AND             reduce using rule 75 (valorBool -> VARIABLE .)
    OR              reduce using rule 75 (valorBool -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 75 (valorBool -> VARIABLE .)
    PDER            reduce using rule 75 (valorBool -> VARIABLE .)
    IS              reduce using rule 62 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 62 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 73
    NOIGUAL         shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAYIGUAL        shift and go to state 77
    MENIGUAL        shift and go to state 78

  ! DIGUAL          [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 99 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 70

state 116

    (81) expresionBool -> negacionBool .

    AND             reduce using rule 81 (expresionBool -> negacionBool .)
    OR              reduce using rule 81 (expresionBool -> negacionBool .)
    PUNTOYCOMA      reduce using rule 81 (expresionBool -> negacionBool .)
    PDER            reduce using rule 81 (expresionBool -> negacionBool .)


state 117

    (103) valorDouble -> valorInt .

    DIGUAL          reduce using rule 103 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 103 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 103 (valorDouble -> valorInt .)
    MENOR           reduce using rule 103 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 103 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 103 (valorDouble -> valorInt .)
    SUMA            reduce using rule 103 (valorDouble -> valorInt .)
    RESTA           reduce using rule 103 (valorDouble -> valorInt .)
    MULTI           reduce using rule 103 (valorDouble -> valorInt .)
    DIV             reduce using rule 103 (valorDouble -> valorInt .)
    DIVENTERO       reduce using rule 103 (valorDouble -> valorInt .)
    MOD             reduce using rule 103 (valorDouble -> valorInt .)
    PUNTOYCOMA      reduce using rule 103 (valorDouble -> valorInt .)
    AND             reduce using rule 103 (valorDouble -> valorInt .)
    OR              reduce using rule 103 (valorDouble -> valorInt .)
    PDER            reduce using rule 103 (valorDouble -> valorInt .)


state 118

    (61) valor -> ENTERO .
    (98) valorInt -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 61 (valor -> ENTERO .)
  ! reduce/reduce conflict for PDER resolved using rule 61 (valor -> ENTERO .)
    IS              reduce using rule 61 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 61 (valor -> ENTERO .)
    SUMA            reduce using rule 61 (valor -> ENTERO .)
    RESTA           reduce using rule 61 (valor -> ENTERO .)
    MULTI           reduce using rule 61 (valor -> ENTERO .)
    DIV             reduce using rule 61 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 61 (valor -> ENTERO .)
    MOD             reduce using rule 61 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 61 (valor -> ENTERO .)
    PDER            reduce using rule 61 (valor -> ENTERO .)
    DIGUAL          reduce using rule 98 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 98 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 98 (valorInt -> ENTERO .)
    MENOR           reduce using rule 98 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 98 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 98 (valorInt -> ENTERO .)

  ! SUMA            [ reduce using rule 98 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 98 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 98 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 98 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 98 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 98 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 98 (valorInt -> ENTERO .) ]
  ! PDER            [ reduce using rule 98 (valorInt -> ENTERO .) ]


state 119

    (64) valor -> STRING .

    IS              reduce using rule 64 (valor -> STRING .)
    ISNEGADO        reduce using rule 64 (valor -> STRING .)


state 120

    (14) final -> sentenciaWhile PUNTOYCOMA final .

    $end            reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    INT             reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    NUM             reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    VAR             reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    DO              reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    IF              reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    NOT             reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRING          reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)
    LDER            reduce using rule 14 (final -> sentenciaWhile PUNTOYCOMA final .)


state 121

    (16) final -> sentenciaDoWhile PUNTOYCOMA final .

    $end            reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    INT             reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NUM             reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VAR             reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DO              reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    IF              reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NOT             reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRING          reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LDER            reduce using rule 16 (final -> sentenciaDoWhile PUNTOYCOMA final .)


state 122

    (18) final -> sentenciaIf PUNTOYCOMA final .

    $end            reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    INT             reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    NUM             reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    VAR             reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    WHILE           reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    DO              reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    IF              reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSE            reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    PRINT           reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    NOT             reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    STRING          reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOL            reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)
    LDER            reduce using rule 18 (final -> sentenciaIf PUNTOYCOMA final .)


state 123

    (22) final -> sentenciaElse PUNTOYCOMA final .

    $end            reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    INT             reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    DOUBLER         reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    NUM             reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    STRINGR         reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    BOOLR           reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    VAR             reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    VARIABLE        reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    WHILE           reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    DO              reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    IF              reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    ELSE            reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    PRINT           reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    NOT             reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    ELSEIF          reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    ENTERO          reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    DOUBLE          reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    STRING          reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    BOOL            reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)
    LDER            reduce using rule 22 (final -> sentenciaElse PUNTOYCOMA final .)


state 124

    (26) final -> imprimir PUNTOYCOMA final .

    $end            reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    INT             reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    DOUBLER         reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    NUM             reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    STRINGR         reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    BOOLR           reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    VAR             reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    VARIABLE        reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    WHILE           reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    DO              reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    IF              reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    ELSE            reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    PRINT           reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    NOT             reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    ELSEIF          reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    ENTERO          reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    DOUBLE          reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    STRING          reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    BOOL            reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)
    LDER            reduce using rule 26 (final -> imprimir PUNTOYCOMA final .)


state 125

    (28) final -> funcionStdin PUNTOYCOMA final .

    $end            reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    INT             reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLER         reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    NUM             reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    STRINGR         reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    BOOLR           reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    VAR             reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    VARIABLE        reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    WHILE           reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    DO              reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    IF              reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    ELSE            reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    PRINT           reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    NOT             reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    ELSEIF          reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    ENTERO          reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLE          reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    STRING          reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    BOOL            reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)
    LDER            reduce using rule 28 (final -> funcionStdin PUNTOYCOMA final .)


state 126

    (30) final -> funcionStdout PUNTOYCOMA final .

    $end            reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    INT             reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLER         reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    NUM             reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    STRINGR         reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    BOOLR           reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    VAR             reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    VARIABLE        reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    WHILE           reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    DO              reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    IF              reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    ELSE            reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    PRINT           reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    NOT             reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    ELSEIF          reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    ENTERO          reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLE          reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    STRING          reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    BOOL            reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)
    LDER            reduce using rule 30 (final -> funcionStdout PUNTOYCOMA final .)


state 127

    (32) final -> negacionBool PUNTOYCOMA final .

    $end            reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    INT             reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    DO              reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    IF              reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 32 (final -> negacionBool PUNTOYCOMA final .)


state 128

    (33) final -> comparacionBool PUNTOYCOMA final .

    $end            reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    INT             reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    DO              reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    IF              reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 33 (final -> comparacionBool PUNTOYCOMA final .)


state 129

    (35) final -> sentenciaElseIf PUNTOYCOMA final .

    $end            reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    INT             reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NUM             reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    VAR             reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    WHILE           reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DO              reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    IF              reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ELSE            reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    PRINT           reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NOT             reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    STRING          reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BOOL            reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LDER            reduce using rule 35 (final -> sentenciaElseIf PUNTOYCOMA final .)


state 130

    (39) final -> sentenciaSubstring PUNTOYCOMA final .

    $end            reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    INT             reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLER         reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NUM             reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRINGR         reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOLR           reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VAR             reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VARIABLE        reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    WHILE           reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DO              reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    IF              reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSE            reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PRINT           reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NOT             reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSEIF          reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ENTERO          reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLE          reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRING          reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOL            reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LDER            reduce using rule 39 (final -> sentenciaSubstring PUNTOYCOMA final .)


state 131

    (41) asignacion -> INT VARIABLE IGUAL . expresionInt
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE

    ENTERO          shift and go to state 136
    VARIABLE        shift and go to state 158

    expresionInt                   shift and go to state 189
    valorInt                       shift and go to state 156

state 132

    (78) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (99) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PDER            reduce using rule 78 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 99 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 99 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 99 (valorInt -> VARIABLE .)
    DIV             reduce using rule 99 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 99 (valorInt -> VARIABLE .)
    MOD             reduce using rule 99 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 99 (valorInt -> VARIABLE .) ]


state 133

    (77) expresionBool -> VARIABLE comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PDER            reduce using rule 77 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 134

    (104) expresionDouble -> valorDouble . operadorMat expresionDouble
    (105) expresionDouble -> valorDouble .
    (106) operadorMat -> . SUMA
    (107) operadorMat -> . RESTA
    (108) operadorMat -> . MULTI
    (109) operadorMat -> . DIV
    (110) operadorMat -> . DIVENTERO
    (111) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 105 (expresionDouble -> valorDouble .)
    AND             reduce using rule 105 (expresionDouble -> valorDouble .)
    OR              reduce using rule 105 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 105 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULTI           shift and go to state 88
    DIV             shift and go to state 89
    DIVENTERO       shift and go to state 90
    MOD             shift and go to state 91

    operadorMat                    shift and go to state 92

state 135

    (102) valorDouble -> DOUBLE .

    SUMA            reduce using rule 102 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 102 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 102 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 102 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 102 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 102 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 102 (valorDouble -> DOUBLE .)
    AND             reduce using rule 102 (valorDouble -> DOUBLE .)
    OR              reduce using rule 102 (valorDouble -> DOUBLE .)
    PDER            reduce using rule 102 (valorDouble -> DOUBLE .)


state 136

    (98) valorInt -> ENTERO .

    SUMA            reduce using rule 98 (valorInt -> ENTERO .)
    RESTA           reduce using rule 98 (valorInt -> ENTERO .)
    MULTI           reduce using rule 98 (valorInt -> ENTERO .)
    DIV             reduce using rule 98 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 98 (valorInt -> ENTERO .)
    MOD             reduce using rule 98 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 98 (valorInt -> ENTERO .)
    AND             reduce using rule 98 (valorInt -> ENTERO .)
    OR              reduce using rule 98 (valorInt -> ENTERO .)
    PDER            reduce using rule 98 (valorInt -> ENTERO .)


state 137

    (96) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO PDER
    (97) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 190


state 138

    (62) valor -> VARIABLE .
    (77) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (78) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (89) valorString -> VARIABLE .
    (99) valorInt -> VARIABLE .
    (75) valorBool -> VARIABLE .
    (96) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (112) comparadorMat -> . DIGUAL
    (113) comparadorMat -> . NOIGUAL
    (114) comparadorMat -> . MAYOR
    (115) comparadorMat -> . MENOR
    (116) comparadorMat -> . MAYIGUAL
    (117) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 62 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IS              reduce using rule 62 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 62 (valor -> VARIABLE .)
    SUMA            reduce using rule 62 (valor -> VARIABLE .)
    RESTA           reduce using rule 62 (valor -> VARIABLE .)
    MULTI           reduce using rule 62 (valor -> VARIABLE .)
    DIV             reduce using rule 62 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 62 (valor -> VARIABLE .)
    MOD             reduce using rule 62 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 62 (valor -> VARIABLE .)
    PDER            reduce using rule 62 (valor -> VARIABLE .)
    CIZQ            reduce using rule 89 (valorString -> VARIABLE .)
    AND             reduce using rule 75 (valorBool -> VARIABLE .)
    OR              reduce using rule 75 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 71
    DIGUAL          shift and go to state 73
    NOIGUAL         shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAYIGUAL        shift and go to state 77
    MENIGUAL        shift and go to state 78

  ! SUMA            [ reduce using rule 89 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 89 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 89 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 75 (valorBool -> VARIABLE .) ]
  ! PDER            [ reduce using rule 75 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 70

state 139

    (49) asignacionSimple -> VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 49 (asignacionSimple -> VARIABLE IGUAL expresion .)
    PDER            reduce using rule 49 (asignacionSimple -> VARIABLE IGUAL expresion .)


state 140

    (65) expresion -> valor . operadorMat expresion
    (66) expresion -> valor .
    (83) expresionBool -> valor . IS objeto
    (84) expresionBool -> valor . ISNEGADO objeto
    (106) operadorMat -> . SUMA
    (107) operadorMat -> . RESTA
    (108) operadorMat -> . MULTI
    (109) operadorMat -> . DIV
    (110) operadorMat -> . DIVENTERO
    (111) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 66 (expresion -> valor .)
    PDER            reduce using rule 66 (expresion -> valor .)
    IS              shift and go to state 96
    ISNEGADO        shift and go to state 97
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULTI           shift and go to state 88
    DIV             shift and go to state 89
    DIVENTERO       shift and go to state 90
    MOD             shift and go to state 91

    operadorMat                    shift and go to state 191

state 141

    (67) expresion -> expresionString .

    PUNTOYCOMA      reduce using rule 67 (expresion -> expresionString .)
    PDER            reduce using rule 67 (expresion -> expresionString .)


state 142

    (68) expresion -> expresionInt .

    PUNTOYCOMA      reduce using rule 68 (expresion -> expresionInt .)
    PDER            reduce using rule 68 (expresion -> expresionInt .)


state 143

    (69) expresion -> expresionDouble .

    PUNTOYCOMA      reduce using rule 69 (expresion -> expresionDouble .)
    PDER            reduce using rule 69 (expresion -> expresionDouble .)


state 144

    (70) expresion -> expresionBool .
    (86) comparacionBool -> expresionBool . operadorLogico expresionBool
    (87) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (118) operadorLogico -> . AND
    (119) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 70 (expresion -> expresionBool .)
    PDER            reduce using rule 70 (expresion -> expresionBool .)
    AND             shift and go to state 52
    OR              shift and go to state 53

    operadorLogico                 shift and go to state 51

state 145

    (63) valor -> DOUBLE .
    (102) valorDouble -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 63 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PDER resolved using rule 63 (valor -> DOUBLE .)
    IS              reduce using rule 63 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 63 (valor -> DOUBLE .)
    SUMA            reduce using rule 63 (valor -> DOUBLE .)
    RESTA           reduce using rule 63 (valor -> DOUBLE .)
    MULTI           reduce using rule 63 (valor -> DOUBLE .)
    DIV             reduce using rule 63 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 63 (valor -> DOUBLE .)
    MOD             reduce using rule 63 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 63 (valor -> DOUBLE .)
    PDER            reduce using rule 63 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 102 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 102 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 102 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 102 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 102 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 102 (valorDouble -> DOUBLE .)

  ! SUMA            [ reduce using rule 102 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 102 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 102 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 102 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 102 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 102 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 102 (valorDouble -> DOUBLE .) ]
  ! PDER            [ reduce using rule 102 (valorDouble -> DOUBLE .) ]


state 146

    (64) valor -> STRING .
    (88) valorString -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 64 (valor -> STRING .)
  ! reduce/reduce conflict for PDER resolved using rule 64 (valor -> STRING .)
    IS              reduce using rule 64 (valor -> STRING .)
    ISNEGADO        reduce using rule 64 (valor -> STRING .)
    SUMA            reduce using rule 64 (valor -> STRING .)
    RESTA           reduce using rule 64 (valor -> STRING .)
    MULTI           reduce using rule 64 (valor -> STRING .)
    DIV             reduce using rule 64 (valor -> STRING .)
    DIVENTERO       reduce using rule 64 (valor -> STRING .)
    MOD             reduce using rule 64 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 64 (valor -> STRING .)
    PDER            reduce using rule 64 (valor -> STRING .)
    CIZQ            reduce using rule 88 (valorString -> STRING .)

  ! SUMA            [ reduce using rule 88 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 88 (valorString -> STRING .) ]
  ! PDER            [ reduce using rule 88 (valorString -> STRING .) ]


state 147

    (82) expresionBool -> comparacionBool .

    AND             reduce using rule 82 (expresionBool -> comparacionBool .)
    OR              reduce using rule 82 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 82 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 82 (expresionBool -> comparacionBool .)


state 148

    (90) valorString -> FUNCIONSTDIN .

    SUMA            reduce using rule 90 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 90 (valorString -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 90 (valorString -> FUNCIONSTDIN .)
    PDER            reduce using rule 90 (valorString -> FUNCIONSTDIN .)


state 149

    (92) valorString -> sentenciaSubstring .

    SUMA            reduce using rule 92 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 92 (valorString -> sentenciaSubstring .)
    PUNTOYCOMA      reduce using rule 92 (valorString -> sentenciaSubstring .)
    PDER            reduce using rule 92 (valorString -> sentenciaSubstring .)


state 150

    (42) asignacion -> DOUBLER VARIABLE IGUAL . expresionDouble
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 135
    ENTERO          shift and go to state 136
    VARIABLE        shift and go to state 158

    expresionDouble                shift and go to state 192
    valorDouble                    shift and go to state 134
    valorInt                       shift and go to state 117

state 151

    (43) asignacion -> NUM VARIABLE IGUAL . expresionDouble
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 135
    ENTERO          shift and go to state 136
    VARIABLE        shift and go to state 158

    expresionDouble                shift and go to state 193
    valorDouble                    shift and go to state 134
    valorInt                       shift and go to state 117

state 152

    (44) asignacion -> STRINGR VARIABLE IGUAL . expresionString
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 163
    VARIABLE        shift and go to state 164
    FUNCIONSTDIN    shift and go to state 148

    expresionString                shift and go to state 194
    valorString                    shift and go to state 29
    expresionIndexString           shift and go to state 44
    sentenciaSubstring             shift and go to state 149

state 153

    (45) asignacion -> BOOLR VARIABLE IGUAL . expresionBool
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 115
    DOUBLE          shift and go to state 42
    BOOL            shift and go to state 45
    NOT             shift and go to state 39
    ENTERO          shift and go to state 118
    STRING          shift and go to state 119

    expresionBool                  shift and go to state 195
    valorDouble                    shift and go to state 114
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 116
    comparacionBool                shift and go to state 147
    valor                          shift and go to state 31
    valorInt                       shift and go to state 117

state 154

    (46) asignacion -> DYNAMIC VARIABLE IGUAL . expresion
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 118
    VARIABLE        shift and go to state 138
    DOUBLE          shift and go to state 145
    STRING          shift and go to state 146
    FUNCIONSTDIN    shift and go to state 148
    BOOL            shift and go to state 45
    NOT             shift and go to state 39

    expresion                      shift and go to state 196
    valor                          shift and go to state 140
    expresionString                shift and go to state 141
    expresionInt                   shift and go to state 142
    expresionDouble                shift and go to state 143
    expresionBool                  shift and go to state 144
    valorString                    shift and go to state 29
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 116
    comparacionBool                shift and go to state 147
    expresionIndexString           shift and go to state 44
    sentenciaSubstring             shift and go to state 149

state 155

    (47) asignacion -> VAR VARIABLE IGUAL . expresion
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 118
    VARIABLE        shift and go to state 138
    DOUBLE          shift and go to state 145
    STRING          shift and go to state 146
    FUNCIONSTDIN    shift and go to state 148
    BOOL            shift and go to state 45
    NOT             shift and go to state 39

    expresion                      shift and go to state 197
    valor                          shift and go to state 140
    expresionString                shift and go to state 141
    expresionInt                   shift and go to state 142
    expresionDouble                shift and go to state 143
    expresionBool                  shift and go to state 144
    valorString                    shift and go to state 29
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 116
    comparacionBool                shift and go to state 147
    expresionIndexString           shift and go to state 44
    sentenciaSubstring             shift and go to state 149

state 156

    (100) expresionInt -> valorInt . operadorMat expresionInt
    (101) expresionInt -> valorInt .
    (106) operadorMat -> . SUMA
    (107) operadorMat -> . RESTA
    (108) operadorMat -> . MULTI
    (109) operadorMat -> . DIV
    (110) operadorMat -> . DIVENTERO
    (111) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 101 (expresionInt -> valorInt .)
    PDER            reduce using rule 101 (expresionInt -> valorInt .)
    SUMA            shift and go to state 86
    RESTA           shift and go to state 87
    MULTI           shift and go to state 88
    DIV             shift and go to state 89
    DIVENTERO       shift and go to state 90
    MOD             shift and go to state 91

    operadorMat                    shift and go to state 85

state 157

    (100) expresionInt -> valorInt operadorMat expresionInt .

    PUNTOYCOMA      reduce using rule 100 (expresionInt -> valorInt operadorMat expresionInt .)
    PDER            reduce using rule 100 (expresionInt -> valorInt operadorMat expresionInt .)


state 158

    (99) valorInt -> VARIABLE .

    SUMA            reduce using rule 99 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 99 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 99 (valorInt -> VARIABLE .)
    DIV             reduce using rule 99 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 99 (valorInt -> VARIABLE .)
    MOD             reduce using rule 99 (valorInt -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 99 (valorInt -> VARIABLE .)
    PDER            reduce using rule 99 (valorInt -> VARIABLE .)
    AND             reduce using rule 99 (valorInt -> VARIABLE .)
    OR              reduce using rule 99 (valorInt -> VARIABLE .)


state 159

    (104) expresionDouble -> valorDouble operadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 104 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    AND             reduce using rule 104 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    OR              reduce using rule 104 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PDER            reduce using rule 104 (expresionDouble -> valorDouble operadorMat expresionDouble .)


state 160

    (76) expresionBool -> valorDouble comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PDER            reduce using rule 76 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 161

    (79) expresionBool -> valorDouble comparadorMat VARIABLE .
    (99) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PDER            reduce using rule 79 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 99 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 99 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 99 (valorInt -> VARIABLE .)
    DIV             reduce using rule 99 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 99 (valorInt -> VARIABLE .)
    MOD             reduce using rule 99 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 99 (valorInt -> VARIABLE .) ]


state 162

    (93) expresionString -> valorString SUMA expresionString .

    PUNTOYCOMA      reduce using rule 93 (expresionString -> valorString SUMA expresionString .)
    PDER            reduce using rule 93 (expresionString -> valorString SUMA expresionString .)


state 163

    (88) valorString -> STRING .

    SUMA            reduce using rule 88 (valorString -> STRING .)
    CIZQ            reduce using rule 88 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 88 (valorString -> STRING .)
    PDER            reduce using rule 88 (valorString -> STRING .)


state 164

    (89) valorString -> VARIABLE .
    (96) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    SUMA            reduce using rule 89 (valorString -> VARIABLE .)
    CIZQ            reduce using rule 89 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 89 (valorString -> VARIABLE .)
    PDER            reduce using rule 89 (valorString -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 71


state 165

    (95) expresionIndexString -> valorString CIZQ ENTERO . CDER

    CDER            shift and go to state 198


state 166

    (83) expresionBool -> valor IS objeto .

    PUNTOYCOMA      reduce using rule 83 (expresionBool -> valor IS objeto .)
    AND             reduce using rule 83 (expresionBool -> valor IS objeto .)
    OR              reduce using rule 83 (expresionBool -> valor IS objeto .)
    PDER            reduce using rule 83 (expresionBool -> valor IS objeto .)


state 167

    (120) objeto -> STRINGR .

    PUNTOYCOMA      reduce using rule 120 (objeto -> STRINGR .)
    AND             reduce using rule 120 (objeto -> STRINGR .)
    OR              reduce using rule 120 (objeto -> STRINGR .)
    PDER            reduce using rule 120 (objeto -> STRINGR .)


state 168

    (121) objeto -> INT .

    PUNTOYCOMA      reduce using rule 121 (objeto -> INT .)
    AND             reduce using rule 121 (objeto -> INT .)
    OR              reduce using rule 121 (objeto -> INT .)
    PDER            reduce using rule 121 (objeto -> INT .)


state 169

    (122) objeto -> DOUBLER .

    PUNTOYCOMA      reduce using rule 122 (objeto -> DOUBLER .)
    AND             reduce using rule 122 (objeto -> DOUBLER .)
    OR              reduce using rule 122 (objeto -> DOUBLER .)
    PDER            reduce using rule 122 (objeto -> DOUBLER .)


state 170

    (123) objeto -> NUM .

    PUNTOYCOMA      reduce using rule 123 (objeto -> NUM .)
    AND             reduce using rule 123 (objeto -> NUM .)
    OR              reduce using rule 123 (objeto -> NUM .)
    PDER            reduce using rule 123 (objeto -> NUM .)


state 171

    (124) objeto -> VAR .

    PUNTOYCOMA      reduce using rule 124 (objeto -> VAR .)
    AND             reduce using rule 124 (objeto -> VAR .)
    OR              reduce using rule 124 (objeto -> VAR .)
    PDER            reduce using rule 124 (objeto -> VAR .)


state 172

    (125) objeto -> DYNAMIC .

    PUNTOYCOMA      reduce using rule 125 (objeto -> DYNAMIC .)
    AND             reduce using rule 125 (objeto -> DYNAMIC .)
    OR              reduce using rule 125 (objeto -> DYNAMIC .)
    PDER            reduce using rule 125 (objeto -> DYNAMIC .)


state 173

    (126) objeto -> LIST .

    PUNTOYCOMA      reduce using rule 126 (objeto -> LIST .)
    AND             reduce using rule 126 (objeto -> LIST .)
    OR              reduce using rule 126 (objeto -> LIST .)
    PDER            reduce using rule 126 (objeto -> LIST .)


state 174

    (127) objeto -> BOOL .

    PUNTOYCOMA      reduce using rule 127 (objeto -> BOOL .)
    AND             reduce using rule 127 (objeto -> BOOL .)
    OR              reduce using rule 127 (objeto -> BOOL .)
    PDER            reduce using rule 127 (objeto -> BOOL .)


state 175

    (128) objeto -> MAP .

    PUNTOYCOMA      reduce using rule 128 (objeto -> MAP .)
    AND             reduce using rule 128 (objeto -> MAP .)
    OR              reduce using rule 128 (objeto -> MAP .)
    PDER            reduce using rule 128 (objeto -> MAP .)


state 176

    (129) objeto -> SET .

    PUNTOYCOMA      reduce using rule 129 (objeto -> SET .)
    AND             reduce using rule 129 (objeto -> SET .)
    OR              reduce using rule 129 (objeto -> SET .)
    PDER            reduce using rule 129 (objeto -> SET .)


state 177

    (84) expresionBool -> valor ISNEGADO objeto .

    PUNTOYCOMA      reduce using rule 84 (expresionBool -> valor ISNEGADO objeto .)
    AND             reduce using rule 84 (expresionBool -> valor ISNEGADO objeto .)
    OR              reduce using rule 84 (expresionBool -> valor ISNEGADO objeto .)
    PDER            reduce using rule 84 (expresionBool -> valor ISNEGADO objeto .)


state 178

    (71) sentenciaWhile -> WHILE PIZQ expresionBool . PDER LIZQ final LDER
    (72) sentenciaWhile -> WHILE PIZQ expresionBool . PDER final
    (86) comparacionBool -> expresionBool . operadorLogico expresionBool
    (87) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (118) operadorLogico -> . AND
    (119) operadorLogico -> . OR

    PDER            shift and go to state 199
    AND             shift and go to state 52
    OR              shift and go to state 53

    operadorLogico                 shift and go to state 51

state 179

    (73) sentenciaDoWhile -> DO LIZQ final . LDER WHILE PIZQ expresionBool PDER

    LDER            shift and go to state 200


state 180

    (55) sentenciaIf -> IF PIZQ expresionBool . PDER final
    (56) sentenciaIf -> IF PIZQ expresionBool . PDER LIZQ final LDER
    (86) comparacionBool -> expresionBool . operadorLogico expresionBool
    (87) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (118) operadorLogico -> . AND
    (119) operadorLogico -> . OR

    PDER            shift and go to state 201
    AND             shift and go to state 52
    OR              shift and go to state 53

    operadorLogico                 shift and go to state 51

state 181

    (58) sentenciaElse -> ELSE LIZQ final . LDER

    LDER            shift and go to state 202


state 182

    (50) imprimir -> PRINT PIZQ expresion . PDER

    PDER            shift and go to state 203


state 183

    (51) imprimir -> PRINT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 204


state 184

    (49) asignacionSimple -> VARIABLE . IGUAL expresion
    (62) valor -> VARIABLE .
    (77) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (78) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (89) valorString -> VARIABLE .
    (99) valorInt -> VARIABLE .
    (75) valorBool -> VARIABLE .
    (96) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (112) comparadorMat -> . DIGUAL
    (113) comparadorMat -> . NOIGUAL
    (114) comparadorMat -> . MAYOR
    (115) comparadorMat -> . MENOR
    (116) comparadorMat -> . MAYIGUAL
    (117) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 62 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 62 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 72
    IS              reduce using rule 62 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 62 (valor -> VARIABLE .)
    SUMA            reduce using rule 62 (valor -> VARIABLE .)
    RESTA           reduce using rule 62 (valor -> VARIABLE .)
    MULTI           reduce using rule 62 (valor -> VARIABLE .)
    DIV             reduce using rule 62 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 62 (valor -> VARIABLE .)
    MOD             reduce using rule 62 (valor -> VARIABLE .)
    PDER            reduce using rule 62 (valor -> VARIABLE .)
    CIZQ            reduce using rule 89 (valorString -> VARIABLE .)
    AND             reduce using rule 75 (valorBool -> VARIABLE .)
    OR              reduce using rule 75 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 71
    DIGUAL          shift and go to state 73
    NOIGUAL         shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAYIGUAL        shift and go to state 77
    MENIGUAL        shift and go to state 78

  ! SUMA            [ reduce using rule 89 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 89 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 99 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 75 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 70

state 185

    (53) funcionStdout -> FUNCIONSTDOUT PIZQ expresion . PDER

    PDER            shift and go to state 205


state 186

    (54) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 206


state 187

    (85) negacionBool -> NOT PIZQ expresionBool . PDER
    (86) comparacionBool -> expresionBool . operadorLogico expresionBool
    (87) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (118) operadorLogico -> . AND
    (119) operadorLogico -> . OR

    PDER            shift and go to state 207
    AND             shift and go to state 52
    OR              shift and go to state 53

    operadorLogico                 shift and go to state 51

state 188

    (59) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER final
    (60) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER LIZQ final LDER
    (86) comparacionBool -> expresionBool . operadorLogico expresionBool
    (87) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (118) operadorLogico -> . AND
    (119) operadorLogico -> . OR

    PDER            shift and go to state 208
    AND             shift and go to state 52
    OR              shift and go to state 53

    operadorLogico                 shift and go to state 51

state 189

    (41) asignacion -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 41 (asignacion -> INT VARIABLE IGUAL expresionInt .)


state 190

    (96) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . PDER
    (97) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . COMA ENTERO PDER

    PDER            shift and go to state 209
    COMA            shift and go to state 210


state 191

    (65) expresion -> valor operadorMat . expresion
    (65) expresion -> . valor operadorMat expresion
    (66) expresion -> . valor
    (67) expresion -> . expresionString
    (68) expresion -> . expresionInt
    (69) expresion -> . expresionDouble
    (70) expresion -> . expresionBool
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 118
    VARIABLE        shift and go to state 138
    DOUBLE          shift and go to state 145
    STRING          shift and go to state 146
    FUNCIONSTDIN    shift and go to state 148
    BOOL            shift and go to state 45
    NOT             shift and go to state 39

    valor                          shift and go to state 140
    expresion                      shift and go to state 211
    expresionString                shift and go to state 141
    expresionInt                   shift and go to state 142
    expresionDouble                shift and go to state 143
    expresionBool                  shift and go to state 144
    valorString                    shift and go to state 29
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 116
    comparacionBool                shift and go to state 147
    expresionIndexString           shift and go to state 44
    sentenciaSubstring             shift and go to state 149

state 192

    (42) asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 42 (asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 193

    (43) asignacion -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 43 (asignacion -> NUM VARIABLE IGUAL expresionDouble .)


state 194

    (44) asignacion -> STRINGR VARIABLE IGUAL expresionString .

    PUNTOYCOMA      reduce using rule 44 (asignacion -> STRINGR VARIABLE IGUAL expresionString .)


state 195

    (45) asignacion -> BOOLR VARIABLE IGUAL expresionBool .
    (86) comparacionBool -> expresionBool . operadorLogico expresionBool
    (87) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (118) operadorLogico -> . AND
    (119) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 45 (asignacion -> BOOLR VARIABLE IGUAL expresionBool .)
    AND             shift and go to state 52
    OR              shift and go to state 53

    operadorLogico                 shift and go to state 51

state 196

    (46) asignacion -> DYNAMIC VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 46 (asignacion -> DYNAMIC VARIABLE IGUAL expresion .)


state 197

    (47) asignacion -> VAR VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 47 (asignacion -> VAR VARIABLE IGUAL expresion .)


state 198

    (95) expresionIndexString -> valorString CIZQ ENTERO CDER .

    SUMA            reduce using rule 95 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    CIZQ            reduce using rule 95 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PUNTOYCOMA      reduce using rule 95 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PDER            reduce using rule 95 (expresionIndexString -> valorString CIZQ ENTERO CDER .)


state 199

    (71) sentenciaWhile -> WHILE PIZQ expresionBool PDER . LIZQ final LDER
    (72) sentenciaWhile -> WHILE PIZQ expresionBool PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 212
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

    expresionBool                  shift and go to state 6
    final                          shift and go to state 213
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 200

    (73) sentenciaDoWhile -> DO LIZQ final LDER . WHILE PIZQ expresionBool PDER

    WHILE           shift and go to state 214


state 201

    (55) sentenciaIf -> IF PIZQ expresionBool PDER . final
    (56) sentenciaIf -> IF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 216
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

    expresionBool                  shift and go to state 6
    final                          shift and go to state 215
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 202

    (58) sentenciaElse -> ELSE LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    INT             reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLER         reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    NUM             reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRINGR         reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOLR           reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    DYNAMIC         reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    VAR             reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    VARIABLE        reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    WHILE           reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    DO              reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    IF              reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSE            reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    PRINT           reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    NOT             reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSEIF          reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    ENTERO          reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLE          reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRING          reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOL            reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    $end            reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)
    LDER            reduce using rule 58 (sentenciaElse -> ELSE LIZQ final LDER .)


state 203

    (50) imprimir -> PRINT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 50 (imprimir -> PRINT PIZQ expresion PDER .)


state 204

    (51) imprimir -> PRINT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 51 (imprimir -> PRINT PIZQ asignacionSimple PDER .)


state 205

    (53) funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 53 (funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .)


state 206

    (54) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 54 (funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .)


state 207

    (85) negacionBool -> NOT PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 85 (negacionBool -> NOT PIZQ expresionBool PDER .)
    AND             reduce using rule 85 (negacionBool -> NOT PIZQ expresionBool PDER .)
    OR              reduce using rule 85 (negacionBool -> NOT PIZQ expresionBool PDER .)
    PDER            reduce using rule 85 (negacionBool -> NOT PIZQ expresionBool PDER .)


state 208

    (59) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . final
    (60) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 218
    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

    expresionBool                  shift and go to state 6
    final                          shift and go to state 217
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 209

    (96) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 96 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    SUMA            reduce using rule 96 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    CIZQ            reduce using rule 96 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    PDER            reduce using rule 96 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)


state 210

    (97) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA . ENTERO PDER

    ENTERO          shift and go to state 219


state 211

    (65) expresion -> valor operadorMat expresion .

    PUNTOYCOMA      reduce using rule 65 (expresion -> valor operadorMat expresion .)
    PDER            reduce using rule 65 (expresion -> valor operadorMat expresion .)


state 212

    (71) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

    expresionBool                  shift and go to state 6
    final                          shift and go to state 220
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 213

    (72) sentenciaWhile -> WHILE PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    INT             reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NUM             reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VAR             reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DO              reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    IF              reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NOT             reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRING          reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    $end            reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LDER            reduce using rule 72 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)


state 214

    (73) sentenciaDoWhile -> DO LIZQ final LDER WHILE . PIZQ expresionBool PDER

    PIZQ            shift and go to state 221


state 215

    (55) sentenciaIf -> IF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    INT             reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DO              reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    IF              reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    $end            reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 55 (sentenciaIf -> IF PIZQ expresionBool PDER final .)


state 216

    (56) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

    expresionBool                  shift and go to state 6
    final                          shift and go to state 222
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 217

    (59) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    INT             reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DO              reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    IF              reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    $end            reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 59 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)


state 218

    (60) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . sentenciaWhile
    (12) final -> . sentenciaWhile final
    (13) final -> . sentenciaWhile PUNTOYCOMA
    (14) final -> . sentenciaWhile PUNTOYCOMA final
    (15) final -> . sentenciaDoWhile PUNTOYCOMA
    (16) final -> . sentenciaDoWhile PUNTOYCOMA final
    (17) final -> . sentenciaIf PUNTOYCOMA
    (18) final -> . sentenciaIf PUNTOYCOMA final
    (19) final -> . sentenciaIf
    (20) final -> . sentenciaIf final
    (21) final -> . sentenciaElse PUNTOYCOMA
    (22) final -> . sentenciaElse PUNTOYCOMA final
    (23) final -> . sentenciaElse
    (24) final -> . sentenciaElse final
    (25) final -> . imprimir PUNTOYCOMA
    (26) final -> . imprimir PUNTOYCOMA final
    (27) final -> . funcionStdin PUNTOYCOMA
    (28) final -> . funcionStdin PUNTOYCOMA final
    (29) final -> . funcionStdout PUNTOYCOMA
    (30) final -> . funcionStdout PUNTOYCOMA final
    (31) final -> . negacionBool PUNTOYCOMA
    (32) final -> . negacionBool PUNTOYCOMA final
    (33) final -> . comparacionBool PUNTOYCOMA final
    (34) final -> . comparacionBool PUNTOYCOMA
    (35) final -> . sentenciaElseIf PUNTOYCOMA final
    (36) final -> . sentenciaElseIf final
    (37) final -> . sentenciaElseIf PUNTOYCOMA
    (38) final -> . sentenciaElseIf
    (39) final -> . sentenciaSubstring PUNTOYCOMA final
    (40) final -> . sentenciaSubstring PUNTOYCOMA
    (41) asignacion -> . INT VARIABLE IGUAL expresionInt
    (42) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (43) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (44) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (45) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (46) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (47) asignacion -> . VAR VARIABLE IGUAL expresion
    (48) asignacion -> . asignacionSimple
    (100) expresionInt -> . valorInt operadorMat expresionInt
    (101) expresionInt -> . valorInt
    (104) expresionDouble -> . valorDouble operadorMat expresionDouble
    (105) expresionDouble -> . valorDouble
    (93) expresionString -> . valorString SUMA expresionString
    (94) expresionString -> . valorString
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (71) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (72) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (73) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (55) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (56) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (57) sentenciaElse -> . ELSE final
    (58) sentenciaElse -> . ELSE LIZQ final LDER
    (50) imprimir -> . PRINT PIZQ expresion PDER
    (51) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (52) funcionStdin -> . FUNCIONSTDIN
    (53) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (54) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (59) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (60) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (96) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (97) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (49) asignacionSimple -> . VARIABLE IGUAL expresion
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (88) valorString -> . STRING
    (89) valorString -> . VARIABLE
    (90) valorString -> . FUNCIONSTDIN
    (91) valorString -> . expresionIndexString
    (92) valorString -> . sentenciaSubstring
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (95) expresionIndexString -> . valorString CIZQ ENTERO CDER

    INT             shift and go to state 18
    DOUBLER         shift and go to state 20
    NUM             shift and go to state 21
    STRINGR         shift and go to state 22
    BOOLR           shift and go to state 23
    DYNAMIC         shift and go to state 24
    VAR             shift and go to state 25
    VARIABLE        shift and go to state 19
    WHILE           shift and go to state 32
    DO              shift and go to state 33
    IF              shift and go to state 34
    ELSE            shift and go to state 35
    PRINT           shift and go to state 36
    FUNCIONSTDIN    shift and go to state 37
    FUNCIONSTDOUT   shift and go to state 38
    NOT             shift and go to state 39
    ELSEIF          shift and go to state 40
    ENTERO          shift and go to state 41
    DOUBLE          shift and go to state 42
    STRING          shift and go to state 43
    BOOL            shift and go to state 45

    expresionBool                  shift and go to state 6
    final                          shift and go to state 223
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    sentenciaWhile                 shift and go to state 7
    sentenciaDoWhile               shift and go to state 8
    sentenciaIf                    shift and go to state 9
    sentenciaElse                  shift and go to state 10
    imprimir                       shift and go to state 11
    funcionStdin                   shift and go to state 12
    funcionStdout                  shift and go to state 13
    negacionBool                   shift and go to state 14
    comparacionBool                shift and go to state 15
    sentenciaElseIf                shift and go to state 16
    sentenciaSubstring             shift and go to state 17
    asignacionSimple               shift and go to state 26
    valorInt                       shift and go to state 27
    valorDouble                    shift and go to state 28
    valorString                    shift and go to state 29
    valorBool                      shift and go to state 30
    valor                          shift and go to state 31
    expresionIndexString           shift and go to state 44

state 219

    (97) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO . PDER

    PDER            shift and go to state 224


state 220

    (71) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 225


state 221

    (73) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ . expresionBool PDER
    (76) expresionBool -> . valorDouble comparadorMat expresionDouble
    (77) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (78) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (79) expresionBool -> . valorDouble comparadorMat VARIABLE
    (80) expresionBool -> . valorBool
    (81) expresionBool -> . negacionBool
    (82) expresionBool -> . comparacionBool
    (83) expresionBool -> . valor IS objeto
    (84) expresionBool -> . valor ISNEGADO objeto
    (102) valorDouble -> . DOUBLE
    (103) valorDouble -> . valorInt
    (74) valorBool -> . BOOL
    (75) valorBool -> . VARIABLE
    (85) negacionBool -> . NOT PIZQ expresionBool PDER
    (86) comparacionBool -> . expresionBool operadorLogico expresionBool
    (87) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (61) valor -> . ENTERO
    (62) valor -> . VARIABLE
    (63) valor -> . DOUBLE
    (64) valor -> . STRING
    (98) valorInt -> . ENTERO
    (99) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 115
    DOUBLE          shift and go to state 42
    BOOL            shift and go to state 45
    NOT             shift and go to state 39
    ENTERO          shift and go to state 118
    STRING          shift and go to state 119

    expresionBool                  shift and go to state 226
    valorDouble                    shift and go to state 114
    valorBool                      shift and go to state 30
    negacionBool                   shift and go to state 116
    comparacionBool                shift and go to state 147
    valor                          shift and go to state 31
    valorInt                       shift and go to state 117

state 222

    (56) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 227


state 223

    (60) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 228


state 224

    (97) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .

    PUNTOYCOMA      reduce using rule 97 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    SUMA            reduce using rule 97 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    CIZQ            reduce using rule 97 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    PDER            reduce using rule 97 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)


state 225

    (71) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 71 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)


state 226

    (73) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool . PDER
    (86) comparacionBool -> expresionBool . operadorLogico expresionBool
    (87) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (118) operadorLogico -> . AND
    (119) operadorLogico -> . OR

    PDER            shift and go to state 229
    AND             shift and go to state 52
    OR              shift and go to state 53

    operadorLogico                 shift and go to state 51

state 227

    (56) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 56 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)


state 228

    (60) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 60 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)


state 229

    (73) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 73 (sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 7 resolved as shift
WARNING: shift/reduce conflict for INT in state 7 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 7 resolved as shift
WARNING: shift/reduce conflict for NUM in state 7 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 7 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 7 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 7 resolved as shift
WARNING: shift/reduce conflict for VAR in state 7 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 7 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 7 resolved as shift
WARNING: shift/reduce conflict for DO in state 7 resolved as shift
WARNING: shift/reduce conflict for IF in state 7 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 7 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 7 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 7 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 7 resolved as shift
WARNING: shift/reduce conflict for NOT in state 7 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 7 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 7 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 7 resolved as shift
WARNING: shift/reduce conflict for STRING in state 7 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 7 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 9 resolved as shift
WARNING: shift/reduce conflict for INT in state 9 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 9 resolved as shift
WARNING: shift/reduce conflict for NUM in state 9 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 9 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 9 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 9 resolved as shift
WARNING: shift/reduce conflict for VAR in state 9 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 9 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 9 resolved as shift
WARNING: shift/reduce conflict for DO in state 9 resolved as shift
WARNING: shift/reduce conflict for IF in state 9 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 9 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 9 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 9 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 9 resolved as shift
WARNING: shift/reduce conflict for NOT in state 9 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 9 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 9 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 9 resolved as shift
WARNING: shift/reduce conflict for STRING in state 9 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 9 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 10 resolved as shift
WARNING: shift/reduce conflict for INT in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 10 resolved as shift
WARNING: shift/reduce conflict for NUM in state 10 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 10 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 10 resolved as shift
WARNING: shift/reduce conflict for VAR in state 10 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 10 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 10 resolved as shift
WARNING: shift/reduce conflict for DO in state 10 resolved as shift
WARNING: shift/reduce conflict for IF in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 10 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 10 resolved as shift
WARNING: shift/reduce conflict for NOT in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 10 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 10 resolved as shift
WARNING: shift/reduce conflict for STRING in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 10 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 14 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for INT in state 16 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 16 resolved as shift
WARNING: shift/reduce conflict for NUM in state 16 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 16 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 16 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 16 resolved as shift
WARNING: shift/reduce conflict for VAR in state 16 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 16 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 16 resolved as shift
WARNING: shift/reduce conflict for DO in state 16 resolved as shift
WARNING: shift/reduce conflict for IF in state 16 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 16 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 16 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 16 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 16 resolved as shift
WARNING: shift/reduce conflict for NOT in state 16 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 16 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 16 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 16 resolved as shift
WARNING: shift/reduce conflict for STRING in state 16 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 17 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 19 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 19 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 27 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 27 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 27 resolved as shift
WARNING: shift/reduce conflict for DIV in state 27 resolved as shift
WARNING: shift/reduce conflict for DIVENTERO in state 27 resolved as shift
WARNING: shift/reduce conflict for MOD in state 27 resolved as shift
WARNING: shift/reduce conflict for INT in state 46 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 46 resolved as shift
WARNING: shift/reduce conflict for NUM in state 46 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 46 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 46 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 46 resolved as shift
WARNING: shift/reduce conflict for VAR in state 46 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 46 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 46 resolved as shift
WARNING: shift/reduce conflict for DO in state 46 resolved as shift
WARNING: shift/reduce conflict for IF in state 46 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 46 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 46 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 46 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 46 resolved as shift
WARNING: shift/reduce conflict for NOT in state 46 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 46 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 46 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 46 resolved as shift
WARNING: shift/reduce conflict for STRING in state 46 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 46 resolved as shift
WARNING: shift/reduce conflict for INT in state 47 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 47 resolved as shift
WARNING: shift/reduce conflict for NUM in state 47 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 47 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 47 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 47 resolved as shift
WARNING: shift/reduce conflict for VAR in state 47 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 47 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 47 resolved as shift
WARNING: shift/reduce conflict for DO in state 47 resolved as shift
WARNING: shift/reduce conflict for IF in state 47 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 47 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 47 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 47 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 47 resolved as shift
WARNING: shift/reduce conflict for NOT in state 47 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 47 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 47 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 47 resolved as shift
WARNING: shift/reduce conflict for STRING in state 47 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 47 resolved as shift
WARNING: shift/reduce conflict for INT in state 48 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 48 resolved as shift
WARNING: shift/reduce conflict for NUM in state 48 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 48 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 48 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 48 resolved as shift
WARNING: shift/reduce conflict for VAR in state 48 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 48 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 48 resolved as shift
WARNING: shift/reduce conflict for DO in state 48 resolved as shift
WARNING: shift/reduce conflict for IF in state 48 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 48 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 48 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 48 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 48 resolved as shift
WARNING: shift/reduce conflict for NOT in state 48 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 48 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 48 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 48 resolved as shift
WARNING: shift/reduce conflict for STRING in state 48 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 48 resolved as shift
WARNING: shift/reduce conflict for INT in state 49 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 49 resolved as shift
WARNING: shift/reduce conflict for NUM in state 49 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 49 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 49 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 49 resolved as shift
WARNING: shift/reduce conflict for VAR in state 49 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 49 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 49 resolved as shift
WARNING: shift/reduce conflict for DO in state 49 resolved as shift
WARNING: shift/reduce conflict for IF in state 49 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 49 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 49 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 49 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 49 resolved as shift
WARNING: shift/reduce conflict for NOT in state 49 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 49 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 49 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 49 resolved as shift
WARNING: shift/reduce conflict for STRING in state 49 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 49 resolved as shift
WARNING: shift/reduce conflict for INT in state 50 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 50 resolved as shift
WARNING: shift/reduce conflict for NUM in state 50 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 50 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 50 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 50 resolved as shift
WARNING: shift/reduce conflict for VAR in state 50 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 50 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 50 resolved as shift
WARNING: shift/reduce conflict for DO in state 50 resolved as shift
WARNING: shift/reduce conflict for IF in state 50 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 50 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 50 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 50 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 50 resolved as shift
WARNING: shift/reduce conflict for NOT in state 50 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 50 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 50 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 50 resolved as shift
WARNING: shift/reduce conflict for STRING in state 50 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 50 resolved as shift
WARNING: shift/reduce conflict for INT in state 55 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 55 resolved as shift
WARNING: shift/reduce conflict for NUM in state 55 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 55 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 55 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 55 resolved as shift
WARNING: shift/reduce conflict for VAR in state 55 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 55 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 55 resolved as shift
WARNING: shift/reduce conflict for DO in state 55 resolved as shift
WARNING: shift/reduce conflict for IF in state 55 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 55 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 55 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 55 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 55 resolved as shift
WARNING: shift/reduce conflict for NOT in state 55 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 55 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 55 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 55 resolved as shift
WARNING: shift/reduce conflict for STRING in state 55 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 55 resolved as shift
WARNING: shift/reduce conflict for INT in state 56 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 56 resolved as shift
WARNING: shift/reduce conflict for NUM in state 56 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 56 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 56 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 56 resolved as shift
WARNING: shift/reduce conflict for VAR in state 56 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 56 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 56 resolved as shift
WARNING: shift/reduce conflict for DO in state 56 resolved as shift
WARNING: shift/reduce conflict for IF in state 56 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 56 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 56 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 56 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 56 resolved as shift
WARNING: shift/reduce conflict for NOT in state 56 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 56 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 56 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 56 resolved as shift
WARNING: shift/reduce conflict for STRING in state 56 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 56 resolved as shift
WARNING: shift/reduce conflict for INT in state 57 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 57 resolved as shift
WARNING: shift/reduce conflict for NUM in state 57 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 57 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 57 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 57 resolved as shift
WARNING: shift/reduce conflict for VAR in state 57 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 57 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 57 resolved as shift
WARNING: shift/reduce conflict for DO in state 57 resolved as shift
WARNING: shift/reduce conflict for IF in state 57 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 57 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 57 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 57 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 57 resolved as shift
WARNING: shift/reduce conflict for NOT in state 57 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 57 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 57 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 57 resolved as shift
WARNING: shift/reduce conflict for STRING in state 57 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 57 resolved as shift
WARNING: shift/reduce conflict for INT in state 59 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 59 resolved as shift
WARNING: shift/reduce conflict for NUM in state 59 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 59 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 59 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 59 resolved as shift
WARNING: shift/reduce conflict for VAR in state 59 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 59 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 59 resolved as shift
WARNING: shift/reduce conflict for DO in state 59 resolved as shift
WARNING: shift/reduce conflict for IF in state 59 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 59 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 59 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 59 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 59 resolved as shift
WARNING: shift/reduce conflict for NOT in state 59 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 59 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 59 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 59 resolved as shift
WARNING: shift/reduce conflict for STRING in state 59 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 59 resolved as shift
WARNING: shift/reduce conflict for INT in state 61 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 61 resolved as shift
WARNING: shift/reduce conflict for NUM in state 61 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 61 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 61 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 61 resolved as shift
WARNING: shift/reduce conflict for VAR in state 61 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 61 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 61 resolved as shift
WARNING: shift/reduce conflict for DO in state 61 resolved as shift
WARNING: shift/reduce conflict for IF in state 61 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 61 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 61 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 61 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 61 resolved as shift
WARNING: shift/reduce conflict for NOT in state 61 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 61 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 61 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 61 resolved as shift
WARNING: shift/reduce conflict for STRING in state 61 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 61 resolved as shift
WARNING: shift/reduce conflict for INT in state 62 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 62 resolved as shift
WARNING: shift/reduce conflict for NUM in state 62 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 62 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 62 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 62 resolved as shift
WARNING: shift/reduce conflict for VAR in state 62 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 62 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 62 resolved as shift
WARNING: shift/reduce conflict for DO in state 62 resolved as shift
WARNING: shift/reduce conflict for IF in state 62 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 62 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 62 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 62 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 62 resolved as shift
WARNING: shift/reduce conflict for NOT in state 62 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 62 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 62 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 62 resolved as shift
WARNING: shift/reduce conflict for STRING in state 62 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 62 resolved as shift
WARNING: shift/reduce conflict for INT in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 63 resolved as shift
WARNING: shift/reduce conflict for NUM in state 63 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 63 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 63 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 63 resolved as shift
WARNING: shift/reduce conflict for VAR in state 63 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 63 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 63 resolved as shift
WARNING: shift/reduce conflict for DO in state 63 resolved as shift
WARNING: shift/reduce conflict for IF in state 63 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 63 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 63 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 63 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 63 resolved as shift
WARNING: shift/reduce conflict for NOT in state 63 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 63 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 63 resolved as shift
WARNING: shift/reduce conflict for STRING in state 63 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 63 resolved as shift
WARNING: shift/reduce conflict for INT in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 64 resolved as shift
WARNING: shift/reduce conflict for NUM in state 64 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 64 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 64 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 64 resolved as shift
WARNING: shift/reduce conflict for VAR in state 64 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 64 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 64 resolved as shift
WARNING: shift/reduce conflict for DO in state 64 resolved as shift
WARNING: shift/reduce conflict for IF in state 64 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 64 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 64 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 64 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 64 resolved as shift
WARNING: shift/reduce conflict for NOT in state 64 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 64 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 64 resolved as shift
WARNING: shift/reduce conflict for STRING in state 64 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 64 resolved as shift
WARNING: shift/reduce conflict for INT in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 65 resolved as shift
WARNING: shift/reduce conflict for NUM in state 65 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 65 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 65 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 65 resolved as shift
WARNING: shift/reduce conflict for VAR in state 65 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 65 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 65 resolved as shift
WARNING: shift/reduce conflict for DO in state 65 resolved as shift
WARNING: shift/reduce conflict for IF in state 65 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 65 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 65 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 65 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 65 resolved as shift
WARNING: shift/reduce conflict for NOT in state 65 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 65 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 65 resolved as shift
WARNING: shift/reduce conflict for STRING in state 65 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 65 resolved as shift
WARNING: shift/reduce conflict for INT in state 66 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 66 resolved as shift
WARNING: shift/reduce conflict for NUM in state 66 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 66 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 66 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 66 resolved as shift
WARNING: shift/reduce conflict for VAR in state 66 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 66 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 66 resolved as shift
WARNING: shift/reduce conflict for DO in state 66 resolved as shift
WARNING: shift/reduce conflict for IF in state 66 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 66 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 66 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 66 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 66 resolved as shift
WARNING: shift/reduce conflict for NOT in state 66 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 66 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 66 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 66 resolved as shift
WARNING: shift/reduce conflict for STRING in state 66 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 66 resolved as shift
WARNING: shift/reduce conflict for INT in state 68 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 68 resolved as shift
WARNING: shift/reduce conflict for NUM in state 68 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 68 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 68 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 68 resolved as shift
WARNING: shift/reduce conflict for VAR in state 68 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 68 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 68 resolved as shift
WARNING: shift/reduce conflict for DO in state 68 resolved as shift
WARNING: shift/reduce conflict for IF in state 68 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 68 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 68 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 68 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 68 resolved as shift
WARNING: shift/reduce conflict for NOT in state 68 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 68 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 68 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 68 resolved as shift
WARNING: shift/reduce conflict for STRING in state 68 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 68 resolved as shift
WARNING: shift/reduce conflict for AND in state 112 resolved as shift
WARNING: shift/reduce conflict for OR in state 112 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 115 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 115 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 115 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 115 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 115 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 115 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 138 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 138 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 184 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 184 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 184 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 184 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 184 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 184 resolved as shift
WARNING: reduce/reduce conflict in state 19 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 19
WARNING: reduce/reduce conflict in state 19 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 19
WARNING: reduce/reduce conflict in state 27 resolved using rule (expresionInt -> valorInt)
WARNING: rejected rule (valorDouble -> valorInt) in state 27
WARNING: reduce/reduce conflict in state 37 resolved using rule (funcionStdin -> FUNCIONSTDIN)
WARNING: rejected rule (valorString -> FUNCIONSTDIN) in state 37
WARNING: reduce/reduce conflict in state 113 resolved using rule (expresionBool -> comparacionBool)
WARNING: rejected rule (comparacionBool -> expresionBool operadorLogico comparacionBool) in state 113
WARNING: reduce/reduce conflict in state 118 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 118
WARNING: reduce/reduce conflict in state 132 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 132
WARNING: reduce/reduce conflict in state 138 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 138
WARNING: reduce/reduce conflict in state 138 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 138
WARNING: reduce/reduce conflict in state 138 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 138
WARNING: reduce/reduce conflict in state 145 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 145
WARNING: reduce/reduce conflict in state 146 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 146
WARNING: reduce/reduce conflict in state 161 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 161
WARNING: reduce/reduce conflict in state 184 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 184
WARNING: reduce/reduce conflict in state 184 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 184
WARNING: reduce/reduce conflict in state 184 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 184
WARNING: Rule (comparacionBool -> expresionBool operadorLogico comparacionBool) is never reduced
