Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    BREAK
    CASE
    COMILLAD
    COMILLAS
    FLECHA
    FUNCIONARR
    FUNCIONRANGE
    FUNCIONTAKE
    RETURN
    SWITCH

Grammar

Rule 0     S' -> final
Rule 1     final -> asignacion PUNTOYCOMA
Rule 2     final -> asignacion PUNTOYCOMA final
Rule 3     final -> expresionInt PUNTOYCOMA
Rule 4     final -> expresionInt PUNTOYCOMA final
Rule 5     final -> expresionDouble PUNTOYCOMA
Rule 6     final -> expresionDouble PUNTOYCOMA final
Rule 7     final -> expresionString PUNTOYCOMA
Rule 8     final -> expresionString PUNTOYCOMA final
Rule 9     final -> expresionBool PUNTOYCOMA
Rule 10    final -> expresionBool PUNTOYCOMA final
Rule 11    final -> expresionBoolFor PUNTOYCOMA
Rule 12    final -> expresionBoolFor PUNTOYCOMA final
Rule 13    final -> sentenciaWhile
Rule 14    final -> sentenciaWhile final
Rule 15    final -> sentenciaWhile PUNTOYCOMA
Rule 16    final -> sentenciaWhile PUNTOYCOMA final
Rule 17    final -> sentenciaDoWhile PUNTOYCOMA
Rule 18    final -> sentenciaDoWhile PUNTOYCOMA final
Rule 19    final -> sentenciaIf PUNTOYCOMA
Rule 20    final -> sentenciaIf PUNTOYCOMA final
Rule 21    final -> sentenciaIf
Rule 22    final -> sentenciaIf final
Rule 23    final -> sentenciaElse PUNTOYCOMA
Rule 24    final -> sentenciaElse PUNTOYCOMA final
Rule 25    final -> sentenciaElse
Rule 26    final -> sentenciaElse final
Rule 27    final -> imprimir PUNTOYCOMA
Rule 28    final -> imprimir PUNTOYCOMA final
Rule 29    final -> funcionStdin PUNTOYCOMA
Rule 30    final -> funcionStdin PUNTOYCOMA final
Rule 31    final -> funcionStdout PUNTOYCOMA
Rule 32    final -> funcionStdout PUNTOYCOMA final
Rule 33    final -> negacionBool PUNTOYCOMA
Rule 34    final -> negacionBool PUNTOYCOMA final
Rule 35    final -> comparacionBool PUNTOYCOMA final
Rule 36    final -> comparacionBool PUNTOYCOMA
Rule 37    final -> sentenciaElseIf PUNTOYCOMA final
Rule 38    final -> sentenciaElseIf final
Rule 39    final -> sentenciaElseIf PUNTOYCOMA
Rule 40    final -> sentenciaElseIf
Rule 41    final -> sentenciaFor PUNTOYCOMA final
Rule 42    final -> sentenciaFor PUNTOYCOMA
Rule 43    final -> sentenciaFor final
Rule 44    final -> sentenciaFor
Rule 45    final -> sentenciaSubstring PUNTOYCOMA final
Rule 46    final -> sentenciaSubstring PUNTOYCOMA
Rule 47    final -> VARIABLE DSUMA PUNTOYCOMA final
Rule 48    final -> VARIABLE DSUMA PUNTOYCOMA
Rule 49    final -> VARIABLE DRESTA PUNTOYCOMA final
Rule 50    final -> VARIABLE DRESTA PUNTOYCOMA
Rule 51    final -> expresionLista PUNTOYCOMA
Rule 52    final -> expresionLista PUNTOYCOMA final
Rule 53    final -> expresionNewList PUNTOYCOMA
Rule 54    final -> expresionNewList PUNTOYCOMA final
Rule 55    final -> expresionSet PUNTOYCOMA
Rule 56    final -> expresionSet PUNTOYCOMA final
Rule 57    final -> expresionMap
Rule 58    expresionMap -> MAP VARIABLE
Rule 59    expresionMap -> MAP VARIABLE IGUAL LIZQ LDER
Rule 60    expresionMap -> LIZQ LDER
Rule 61    expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER
Rule 62    expresionMap -> LIZQ expMap LDER
Rule 63    expMap -> claveValor DOSPUNTOS claveValor
Rule 64    expMap -> claveValor DOSPUNTOS claveValor COMA expMap
Rule 65    claveValor -> VARIABLE
Rule 66    claveValor -> STRING
Rule 67    claveValor -> ENTERO
Rule 68    claveValor -> DOUBLE
Rule 69    claveValor -> BOOL
Rule 70    claveValor -> CIZQ expListDynamic CDER
Rule 71    claveValor -> CIZQ expListSet CDER
Rule 72    claveValor -> expresionNewList
Rule 73    claveValor -> SETFROM PIZQ CIZQ CDER PDER
Rule 74    claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 75    claveValor -> LIZQ LDER
Rule 76    claveValor -> LIZQ expMap LDER
Rule 77    expresionSet -> SET VARIABLE
Rule 78    expresionSet -> SETFROM PIZQ CIZQ CDER PDER
Rule 79    expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
Rule 80    expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 81    expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 82    expresionNewList -> NEWLIST PIZQ PDER
Rule 83    expresionNewList -> NEWLIST PIZQ ENTERO PDER
Rule 84    expresionNewList -> CIZQ CDER
Rule 85    expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE
Rule 86    expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
Rule 87    expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
Rule 88    expresionLista -> CIZQ expListString CDER
Rule 89    expresionLista -> LIST MENOR INT MAYOR VARIABLE
Rule 90    expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
Rule 91    expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
Rule 92    expresionLista -> CIZQ expListInt CDER
Rule 93    expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE
Rule 94    expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
Rule 95    expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
Rule 96    expresionLista -> CIZQ expListNum CDER
Rule 97    expresionLista -> LIST MENOR NUM MAYOR VARIABLE
Rule 98    expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
Rule 99    expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
Rule 100   expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE
Rule 101   expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
Rule 102   expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
Rule 103   expresionLista -> CIZQ expListBool CDER
Rule 104   expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE
Rule 105   expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
Rule 106   expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
Rule 107   expresionLista -> CIZQ expListDynamic CDER
Rule 108   expresionLista -> LIST MENOR SET MAYOR VARIABLE
Rule 109   expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
Rule 110   expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
Rule 111   expresionLista -> CIZQ expListSet CDER
Rule 112   expresionLista -> LIST MENOR MAP MAYOR VARIABLE
Rule 113   expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
Rule 114   expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
Rule 115   expresionLista -> CIZQ expListMap CDER
Rule 116   expListString -> STRING
Rule 117   expListString -> STRING COMA expListString
Rule 118   expListString -> VARIABLE
Rule 119   expListString -> VARIABLE COMA expListString
Rule 120   expListInt -> ENTERO
Rule 121   expListInt -> ENTERO COMA expListInt
Rule 122   expListInt -> VARIABLE
Rule 123   expListInt -> VARIABLE COMA expListInt
Rule 124   expListNum -> ENTERO
Rule 125   expListNum -> DOUBLE
Rule 126   expListNum -> ENTERO COMA expListNum
Rule 127   expListNum -> DOUBLE COMA expListNum
Rule 128   expListNum -> VARIABLE
Rule 129   expListNum -> VARIABLE COMA expListNum
Rule 130   expListBool -> BOOL
Rule 131   expListBool -> BOOL COMA expListBool
Rule 132   expListBool -> VARIABLE
Rule 133   expListBool -> VARIABLE COMA expListBool
Rule 134   expListDynamic -> STRING
Rule 135   expListDynamic -> ENTERO
Rule 136   expListDynamic -> DOUBLE
Rule 137   expListDynamic -> BOOL
Rule 138   expListDynamic -> STRING COMA expListDynamic
Rule 139   expListDynamic -> ENTERO COMA expListDynamic
Rule 140   expListDynamic -> DOUBLE COMA expListDynamic
Rule 141   expListDynamic -> BOOL COMA expListDynamic
Rule 142   expListDynamic -> VARIABLE
Rule 143   expListDynamic -> VARIABLE COMA expListDynamic
Rule 144   expListSet -> SETFROM PIZQ CIZQ CDER PDER
Rule 145   expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 146   expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet
Rule 147   expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
Rule 148   expListSet -> VARIABLE
Rule 149   expListSet -> VARIABLE COMA expListSet
Rule 150   expListMap -> LIZQ LDER
Rule 151   expListMap -> LIZQ expMap LDER
Rule 152   expListMap -> LIZQ LDER COMA expListMap
Rule 153   expListMap -> LIZQ expMap LDER COMA expListMap
Rule 154   expListMap -> VARIABLE
Rule 155   expListMap -> VARIABLE COMA expListMap
Rule 156   asignacion -> INT VARIABLE IGUAL expresionInt
Rule 157   asignacion -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 158   asignacion -> NUM VARIABLE IGUAL expresionDouble
Rule 159   asignacion -> STRINGR VARIABLE IGUAL expresionString
Rule 160   asignacion -> BOOLR VARIABLE IGUAL expresionBool
Rule 161   asignacion -> DYNAMIC VARIABLE IGUAL expresion
Rule 162   asignacion -> VAR VARIABLE IGUAL expresion
Rule 163   asignacion -> asignacionSimple
Rule 164   asignacionSimple -> VARIABLE IGUAL expresion
Rule 165   imprimir -> PRINT PIZQ expresion PDER
Rule 166   imprimir -> PRINT PIZQ asignacionSimple PDER
Rule 167   funcionStdin -> FUNCIONSTDIN
Rule 168   funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER
Rule 169   funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER
Rule 170   sentenciaIf -> IF PIZQ expresionBool PDER final
Rule 171   sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER
Rule 172   sentenciaElse -> ELSE final
Rule 173   sentenciaElse -> ELSE LIZQ final LDER
Rule 174   sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final
Rule 175   sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER
Rule 176   valor -> ENTERO
Rule 177   valor -> VARIABLE
Rule 178   valor -> DOUBLE
Rule 179   valor -> STRING
Rule 180   expresion -> valor operadorMat expresion
Rule 181   expresion -> valor
Rule 182   expresion -> expresionString
Rule 183   expresion -> expresionInt
Rule 184   expresion -> expresionDouble
Rule 185   expresion -> expresionBool
Rule 186   asignacionFor -> INT VARIABLE IGUAL expresionInt
Rule 187   asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 188   asignacionFor -> NUM VARIABLE IGUAL expresionDouble
Rule 189   asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt
Rule 190   asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble
Rule 191   asignacionFor -> VAR VARIABLE IGUAL expresionInt
Rule 192   asignacionFor -> VAR VARIABLE IGUAL expresionDouble
Rule 193   asignacionFor -> VARIABLE IGUAL expresionInt
Rule 194   asignacionFor -> VARIABLE IGUAL expresionDouble
Rule 195   expresionBoolFor -> valorDouble comparadorMat expresionDouble
Rule 196   expresionBoolFor -> VARIABLE comparadorMat expresionDouble
Rule 197   expresionBoolFor -> VARIABLE comparadorMat VARIABLE
Rule 198   expresionBoolFor -> valorDouble comparadorMat VARIABLE
Rule 199   expresionBoolFor -> valorBool
Rule 200   expresionBoolFor -> negacionBool
Rule 201   expresionBoolFor -> comparacionBool
Rule 202   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
Rule 203   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
Rule 204   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
Rule 205   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
Rule 206   sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER
Rule 207   sentenciaWhile -> WHILE PIZQ expresionBool PDER final
Rule 208   sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER
Rule 209   valorBool -> BOOL
Rule 210   valorBool -> VARIABLE
Rule 211   expresionBool -> valorDouble comparadorMat expresionDouble
Rule 212   expresionBool -> VARIABLE comparadorMat expresionDouble
Rule 213   expresionBool -> VARIABLE comparadorMat VARIABLE
Rule 214   expresionBool -> valorDouble comparadorMat VARIABLE
Rule 215   expresionBool -> valorBool
Rule 216   expresionBool -> negacionBool
Rule 217   expresionBool -> comparacionBool
Rule 218   expresionBool -> valor IS objeto
Rule 219   expresionBool -> valor ISNEGADO objeto
Rule 220   negacionBool -> NOT PIZQ expresionBool PDER
Rule 221   comparacionBool -> expresionBool operadorLogico expresionBool
Rule 222   comparacionBool -> expresionBool operadorLogico comparacionBool
Rule 223   valorString -> STRING
Rule 224   valorString -> VARIABLE
Rule 225   valorString -> FUNCIONSTDIN
Rule 226   valorString -> expresionIndexString
Rule 227   valorString -> sentenciaSubstring
Rule 228   expresionString -> valorString SUMA expresionString
Rule 229   expresionString -> valorString
Rule 230   expresionIndexString -> valorString CIZQ ENTERO CDER
Rule 231   sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
Rule 232   sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
Rule 233   valorInt -> ENTERO
Rule 234   valorInt -> VARIABLE
Rule 235   expresionInt -> valorInt operadorMat expresionInt
Rule 236   expresionInt -> valorInt
Rule 237   valorDouble -> DOUBLE
Rule 238   valorDouble -> valorInt
Rule 239   expresionDouble -> valorDouble operadorMat expresionDouble
Rule 240   expresionDouble -> valorDouble
Rule 241   operadorMat -> SUMA
Rule 242   operadorMat -> RESTA
Rule 243   operadorMat -> MULTI
Rule 244   operadorMat -> DIV
Rule 245   operadorMat -> DIVENTERO
Rule 246   operadorMat -> MOD
Rule 247   comparadorMat -> DIGUAL
Rule 248   comparadorMat -> NOIGUAL
Rule 249   comparadorMat -> MAYOR
Rule 250   comparadorMat -> MENOR
Rule 251   comparadorMat -> MAYIGUAL
Rule 252   comparadorMat -> MENIGUAL
Rule 253   operadorLogico -> AND
Rule 254   operadorLogico -> OR
Rule 255   objeto -> STRINGR
Rule 256   objeto -> INT
Rule 257   objeto -> DOUBLER
Rule 258   objeto -> NUM
Rule 259   objeto -> VAR
Rule 260   objeto -> DYNAMIC
Rule 261   objeto -> LIST
Rule 262   objeto -> BOOL
Rule 263   objeto -> MAP
Rule 264   objeto -> SET

Terminals, with rules where they appear

AND                  : 253
AS                   : 
BOOL                 : 69 130 131 137 141 209 262
BOOLR                : 100 101 102 160
BREAK                : 
CASE                 : 
CDER                 : 70 71 73 74 78 79 80 81 84 86 88 90 92 94 96 98 101 103 105 107 109 111 113 115 144 145 146 147 230
CIZQ                 : 70 71 73 74 78 79 80 81 84 86 88 90 92 94 96 98 101 103 105 107 109 111 113 115 144 145 146 147 230
COMA                 : 64 117 119 121 123 126 127 129 131 133 138 139 140 141 143 146 147 149 152 153 155 232
COMILLAD             : 
COMILLAS             : 
DIGUAL               : 247
DIV                  : 244
DIVENTERO            : 245
DO                   : 208
DOSPUNTOS            : 63 64
DOUBLE               : 68 125 127 136 140 178 237
DOUBLER              : 93 94 95 157 187 257
DRESTA               : 49 50 204 205
DSUMA                : 47 48 202 203
DYNAMIC              : 104 105 106 161 189 190 260
ELSE                 : 172 173
ELSEIF               : 174 175
ENTERO               : 67 83 120 121 124 126 135 139 176 230 231 232 232 233
FLECHA               : 
FOR                  : 202 203 204 205
FUNCIONARR           : 
FUNCIONRANGE         : 
FUNCIONSTDIN         : 167 225
FUNCIONSTDOUT        : 168 169
FUNCIONSUBSTRING     : 231 232
FUNCIONTAKE          : 
IF                   : 170 171
IGUAL                : 59 61 79 81 86 87 90 91 94 95 98 99 101 102 105 106 109 110 113 114 156 157 158 159 160 161 162 164 186 187 188 189 190 191 192 193 194
INT                  : 89 90 91 156 186 256
IS                   : 218
ISNEGADO             : 219
LDER                 : 59 60 61 62 75 76 150 151 152 153 171 173 175 202 204 206 208
LIST                 : 85 86 87 89 90 91 93 94 95 97 98 99 100 101 102 104 105 106 108 109 110 112 113 114 261
LIZQ                 : 59 60 61 62 75 76 150 151 152 153 171 173 175 202 204 206 208
MAP                  : 58 59 61 112 113 114 263
MAYIGUAL             : 251
MAYOR                : 85 86 87 89 90 91 93 94 95 97 98 99 100 101 102 104 105 106 108 109 110 112 113 114 249
MENIGUAL             : 252
MENOR                : 85 86 87 89 90 91 93 94 95 97 98 99 100 101 102 104 105 106 108 109 110 112 113 114 250
MOD                  : 246
MULTI                : 243
NEWLIST              : 82 83
NOIGUAL              : 248
NOT                  : 220
NUM                  : 97 98 99 158 188 258
OR                   : 254
PDER                 : 73 74 78 79 80 81 82 83 144 145 146 147 165 166 168 169 170 171 174 175 202 203 204 205 206 207 208 220 231 232
PIZQ                 : 73 74 78 79 80 81 82 83 144 145 146 147 165 166 168 169 170 171 174 175 202 203 204 205 206 207 208 220 231 232
PRINT                : 165 166
PUNTOYCOMA           : 1 2 3 4 5 6 7 8 9 10 11 12 15 16 17 18 19 20 23 24 27 28 29 30 31 32 33 34 35 36 37 39 41 42 45 46 47 48 49 50 51 52 53 54 55 56 202 202 203 203 204 204 205 205
RESTA                : 242
RETURN               : 
SET                  : 77 79 81 108 109 110 264
SETFROM              : 73 74 78 79 80 81 144 145 146 147
STRING               : 66 116 117 134 138 179 223
STRINGR              : 85 86 87 159 255
SUMA                 : 228 241
SWITCH               : 
VAR                  : 162 191 192 259
VARIABLE             : 47 48 49 50 58 59 61 65 77 79 81 85 86 87 89 90 91 93 94 95 97 98 99 100 101 102 104 105 106 108 109 110 112 113 114 118 119 122 123 128 129 132 133 142 143 148 149 154 155 156 157 158 159 160 161 162 164 177 186 187 188 189 190 191 192 193 194 196 197 197 198 202 203 204 205 210 212 213 213 214 224 231 232 234
WHILE                : 206 207 208
error                : 

Nonterminals, with rules where they appear

asignacion           : 1 2
asignacionFor        : 202 203 204 205
asignacionSimple     : 163 166 169
claveValor           : 63 63 64 64
comparacionBool      : 35 36 201 217 222
comparadorMat        : 195 196 197 198 211 212 213 214
expListBool          : 101 103 131 133
expListDynamic       : 70 74 80 81 105 107 138 139 140 141 143 145 147
expListInt           : 90 92 121 123
expListMap           : 113 115 152 153 155
expListNum           : 94 96 98 126 127 129
expListSet           : 71 109 111 146 147 149
expListString        : 86 88 117 119
expMap               : 61 62 64 76 151 153
expresion            : 161 162 164 165 168 180
expresionBool        : 9 10 160 170 171 174 175 185 206 207 208 220 221 221 222
expresionBoolFor     : 11 12 202 203 204 205
expresionDouble      : 5 6 157 158 184 187 188 190 192 194 195 196 211 212 239
expresionIndexString : 226
expresionInt         : 3 4 156 183 186 189 191 193 235
expresionLista       : 51 52
expresionMap         : 57
expresionNewList     : 53 54 72 87 91 95 99 102 106 110 114
expresionSet         : 55 56
expresionString      : 7 8 159 182 228
final                : 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 35 37 38 41 43 45 47 49 52 54 56 170 171 172 173 174 175 202 203 204 205 206 207 208 0
funcionStdin         : 29 30
funcionStdout        : 31 32
imprimir             : 27 28
negacionBool         : 33 34 200 216
objeto               : 218 219
operadorLogico       : 221 222
operadorMat          : 180 235 239
sentenciaDoWhile     : 17 18
sentenciaElse        : 23 24 25 26
sentenciaElseIf      : 37 38 39 40
sentenciaFor         : 41 42 43 44
sentenciaIf          : 19 20 21 22
sentenciaSubstring   : 45 46 227
sentenciaWhile       : 13 14 15 16
valor                : 180 181 218 219
valorBool            : 199 215
valorDouble          : 195 198 211 214 239 240
valorInt             : 235 236 238
valorString          : 228 229 230

Parsing method: LALR

state 0

    (0) S' -> . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

    final                          shift and go to state 1
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 1

    (0) S' -> final .



state 2

    (1) final -> asignacion . PUNTOYCOMA
    (2) final -> asignacion . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 60


state 3

    (3) final -> expresionInt . PUNTOYCOMA
    (4) final -> expresionInt . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 61


state 4

    (5) final -> expresionDouble . PUNTOYCOMA
    (6) final -> expresionDouble . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 62


state 5

    (7) final -> expresionString . PUNTOYCOMA
    (8) final -> expresionString . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 63


state 6

    (9) final -> expresionBool . PUNTOYCOMA
    (10) final -> expresionBool . PUNTOYCOMA final
    (221) comparacionBool -> expresionBool . operadorLogico expresionBool
    (222) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (253) operadorLogico -> . AND
    (254) operadorLogico -> . OR

    PUNTOYCOMA      shift and go to state 64
    AND             shift and go to state 66
    OR              shift and go to state 67

    operadorLogico                 shift and go to state 65

state 7

    (11) final -> expresionBoolFor . PUNTOYCOMA
    (12) final -> expresionBoolFor . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 68


state 8

    (13) final -> sentenciaWhile .
    (14) final -> sentenciaWhile . final
    (15) final -> sentenciaWhile . PUNTOYCOMA
    (16) final -> sentenciaWhile . PUNTOYCOMA final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 13 (final -> sentenciaWhile .)
    LDER            reduce using rule 13 (final -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 70
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! PUNTOYCOMA      [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! VARIABLE        [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! INT             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DOUBLER         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NUM             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! STRINGR         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! BOOLR           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DYNAMIC         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! VAR             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! WHILE           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DO              [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! IF              [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ELSE            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! PRINT           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDIN    [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NOT             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ELSEIF          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FOR             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! LIST            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! CIZQ            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NEWLIST         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! SET             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! SETFROM         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! MAP             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! LIZQ            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ENTERO          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DOUBLE          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! STRING          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! BOOL            [ reduce using rule 13 (final -> sentenciaWhile .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 69
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 9

    (17) final -> sentenciaDoWhile . PUNTOYCOMA
    (18) final -> sentenciaDoWhile . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 71


state 10

    (19) final -> sentenciaIf . PUNTOYCOMA
    (20) final -> sentenciaIf . PUNTOYCOMA final
    (21) final -> sentenciaIf .
    (22) final -> sentenciaIf . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 72
    $end            reduce using rule 21 (final -> sentenciaIf .)
    LDER            reduce using rule 21 (final -> sentenciaIf .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! PUNTOYCOMA      [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! VARIABLE        [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! INT             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DOUBLER         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NUM             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! STRINGR         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! BOOLR           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DYNAMIC         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! VAR             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! WHILE           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DO              [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! IF              [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ELSE            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! PRINT           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NOT             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ELSEIF          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FOR             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! LIST            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! CIZQ            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NEWLIST         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! SET             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! SETFROM         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! MAP             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! LIZQ            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ENTERO          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DOUBLE          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! STRING          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! BOOL            [ reduce using rule 21 (final -> sentenciaIf .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 73
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 11

    (23) final -> sentenciaElse . PUNTOYCOMA
    (24) final -> sentenciaElse . PUNTOYCOMA final
    (25) final -> sentenciaElse .
    (26) final -> sentenciaElse . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 74
    $end            reduce using rule 25 (final -> sentenciaElse .)
    LDER            reduce using rule 25 (final -> sentenciaElse .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! PUNTOYCOMA      [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! VARIABLE        [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! INT             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DOUBLER         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NUM             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! STRINGR         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! BOOLR           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DYNAMIC         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! VAR             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! WHILE           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DO              [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! IF              [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ELSE            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! PRINT           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FUNCIONSTDIN    [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NOT             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ELSEIF          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FOR             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! LIST            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! CIZQ            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NEWLIST         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! SET             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! SETFROM         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! MAP             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! LIZQ            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ENTERO          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DOUBLE          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! STRING          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! BOOL            [ reduce using rule 25 (final -> sentenciaElse .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 75
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 12

    (27) final -> imprimir . PUNTOYCOMA
    (28) final -> imprimir . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 76


state 13

    (29) final -> funcionStdin . PUNTOYCOMA
    (30) final -> funcionStdin . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 77


state 14

    (31) final -> funcionStdout . PUNTOYCOMA
    (32) final -> funcionStdout . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 78


state 15

    (33) final -> negacionBool . PUNTOYCOMA
    (34) final -> negacionBool . PUNTOYCOMA final
    (216) expresionBool -> negacionBool .
    (200) expresionBoolFor -> negacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 79
    AND             reduce using rule 216 (expresionBool -> negacionBool .)
    OR              reduce using rule 216 (expresionBool -> negacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 216 (expresionBool -> negacionBool .) ]
  ! PUNTOYCOMA      [ reduce using rule 200 (expresionBoolFor -> negacionBool .) ]


state 16

    (35) final -> comparacionBool . PUNTOYCOMA final
    (36) final -> comparacionBool . PUNTOYCOMA
    (217) expresionBool -> comparacionBool .
    (201) expresionBoolFor -> comparacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 80
    AND             reduce using rule 217 (expresionBool -> comparacionBool .)
    OR              reduce using rule 217 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 217 (expresionBool -> comparacionBool .) ]
  ! PUNTOYCOMA      [ reduce using rule 201 (expresionBoolFor -> comparacionBool .) ]


state 17

    (37) final -> sentenciaElseIf . PUNTOYCOMA final
    (38) final -> sentenciaElseIf . final
    (39) final -> sentenciaElseIf . PUNTOYCOMA
    (40) final -> sentenciaElseIf .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 81
    $end            reduce using rule 40 (final -> sentenciaElseIf .)
    LDER            reduce using rule 40 (final -> sentenciaElseIf .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! PUNTOYCOMA      [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! VARIABLE        [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! INT             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DOUBLER         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NUM             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! STRINGR         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! BOOLR           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DYNAMIC         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! VAR             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! WHILE           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DO              [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! IF              [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ELSE            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! PRINT           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NOT             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ELSEIF          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FOR             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! LIST            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! CIZQ            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NEWLIST         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! SET             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! SETFROM         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! MAP             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! LIZQ            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ENTERO          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DOUBLE          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! STRING          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! BOOL            [ reduce using rule 40 (final -> sentenciaElseIf .) ]

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 82
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 18

    (41) final -> sentenciaFor . PUNTOYCOMA final
    (42) final -> sentenciaFor . PUNTOYCOMA
    (43) final -> sentenciaFor . final
    (44) final -> sentenciaFor .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 83
    $end            reduce using rule 44 (final -> sentenciaFor .)
    LDER            reduce using rule 44 (final -> sentenciaFor .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! PUNTOYCOMA      [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! VARIABLE        [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! INT             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DOUBLER         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NUM             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! STRINGR         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! BOOLR           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DYNAMIC         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! VAR             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! WHILE           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DO              [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! IF              [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ELSE            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! PRINT           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FUNCIONSTDIN    [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NOT             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ELSEIF          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FOR             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! LIST            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! CIZQ            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NEWLIST         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! SET             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! SETFROM         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! MAP             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! LIZQ            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ENTERO          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DOUBLE          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! STRING          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! BOOL            [ reduce using rule 44 (final -> sentenciaFor .) ]

    sentenciaFor                   shift and go to state 18
    final                          shift and go to state 84
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 19

    (45) final -> sentenciaSubstring . PUNTOYCOMA final
    (46) final -> sentenciaSubstring . PUNTOYCOMA
    (227) valorString -> sentenciaSubstring .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 85
    SUMA            reduce using rule 227 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 227 (valorString -> sentenciaSubstring .)

  ! PUNTOYCOMA      [ reduce using rule 227 (valorString -> sentenciaSubstring .) ]


state 20

    (47) final -> VARIABLE . DSUMA PUNTOYCOMA final
    (48) final -> VARIABLE . DSUMA PUNTOYCOMA
    (49) final -> VARIABLE . DRESTA PUNTOYCOMA final
    (50) final -> VARIABLE . DRESTA PUNTOYCOMA
    (212) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (213) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (196) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (197) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (231) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (164) asignacionSimple -> VARIABLE . IGUAL expresion
    (234) valorInt -> VARIABLE .
    (224) valorString -> VARIABLE .
    (210) valorBool -> VARIABLE .
    (177) valor -> VARIABLE .
    (247) comparadorMat -> . DIGUAL
    (248) comparadorMat -> . NOIGUAL
    (249) comparadorMat -> . MAYOR
    (250) comparadorMat -> . MENOR
    (251) comparadorMat -> . MAYIGUAL
    (252) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 224 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 224 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 210 (valorBool -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    DSUMA           shift and go to state 86
    DRESTA          shift and go to state 87
    FUNCIONSUBSTRING shift and go to state 89
    IGUAL           shift and go to state 90
    RESTA           reduce using rule 234 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 234 (valorInt -> VARIABLE .)
    DIV             reduce using rule 234 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 234 (valorInt -> VARIABLE .)
    MOD             reduce using rule 234 (valorInt -> VARIABLE .)
    SUMA            reduce using rule 224 (valorString -> VARIABLE .)
    CIZQ            reduce using rule 224 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 210 (valorBool -> VARIABLE .)
    AND             reduce using rule 210 (valorBool -> VARIABLE .)
    OR              reduce using rule 210 (valorBool -> VARIABLE .)
    IS              reduce using rule 177 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 177 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 91
    NOIGUAL         shift and go to state 92
    MAYOR           shift and go to state 93
    MENOR           shift and go to state 94
    MAYIGUAL        shift and go to state 95
    MENIGUAL        shift and go to state 96

  ! SUMA            [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 224 (valorString -> VARIABLE .) ]

    comparadorMat                  shift and go to state 88

state 21

    (51) final -> expresionLista . PUNTOYCOMA
    (52) final -> expresionLista . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 97


state 22

    (53) final -> expresionNewList . PUNTOYCOMA
    (54) final -> expresionNewList . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 98


state 23

    (55) final -> expresionSet . PUNTOYCOMA
    (56) final -> expresionSet . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 99


state 24

    (57) final -> expresionMap .

    $end            reduce using rule 57 (final -> expresionMap .)
    PUNTOYCOMA      reduce using rule 57 (final -> expresionMap .)
    VARIABLE        reduce using rule 57 (final -> expresionMap .)
    INT             reduce using rule 57 (final -> expresionMap .)
    DOUBLER         reduce using rule 57 (final -> expresionMap .)
    NUM             reduce using rule 57 (final -> expresionMap .)
    STRINGR         reduce using rule 57 (final -> expresionMap .)
    BOOLR           reduce using rule 57 (final -> expresionMap .)
    DYNAMIC         reduce using rule 57 (final -> expresionMap .)
    VAR             reduce using rule 57 (final -> expresionMap .)
    WHILE           reduce using rule 57 (final -> expresionMap .)
    DO              reduce using rule 57 (final -> expresionMap .)
    IF              reduce using rule 57 (final -> expresionMap .)
    ELSE            reduce using rule 57 (final -> expresionMap .)
    PRINT           reduce using rule 57 (final -> expresionMap .)
    FUNCIONSTDIN    reduce using rule 57 (final -> expresionMap .)
    FUNCIONSTDOUT   reduce using rule 57 (final -> expresionMap .)
    NOT             reduce using rule 57 (final -> expresionMap .)
    ELSEIF          reduce using rule 57 (final -> expresionMap .)
    FOR             reduce using rule 57 (final -> expresionMap .)
    LIST            reduce using rule 57 (final -> expresionMap .)
    CIZQ            reduce using rule 57 (final -> expresionMap .)
    NEWLIST         reduce using rule 57 (final -> expresionMap .)
    SET             reduce using rule 57 (final -> expresionMap .)
    SETFROM         reduce using rule 57 (final -> expresionMap .)
    MAP             reduce using rule 57 (final -> expresionMap .)
    LIZQ            reduce using rule 57 (final -> expresionMap .)
    ENTERO          reduce using rule 57 (final -> expresionMap .)
    DOUBLE          reduce using rule 57 (final -> expresionMap .)
    STRING          reduce using rule 57 (final -> expresionMap .)
    BOOL            reduce using rule 57 (final -> expresionMap .)
    LDER            reduce using rule 57 (final -> expresionMap .)


state 25

    (156) asignacion -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 100


state 26

    (157) asignacion -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 101


state 27

    (158) asignacion -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 102


state 28

    (159) asignacion -> STRINGR . VARIABLE IGUAL expresionString

    VARIABLE        shift and go to state 103


state 29

    (160) asignacion -> BOOLR . VARIABLE IGUAL expresionBool

    VARIABLE        shift and go to state 104


state 30

    (161) asignacion -> DYNAMIC . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 105


state 31

    (162) asignacion -> VAR . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 106


state 32

    (163) asignacion -> asignacionSimple .

    PUNTOYCOMA      reduce using rule 163 (asignacion -> asignacionSimple .)


state 33

    (235) expresionInt -> valorInt . operadorMat expresionInt
    (236) expresionInt -> valorInt .
    (238) valorDouble -> valorInt .
    (241) operadorMat -> . SUMA
    (242) operadorMat -> . RESTA
    (243) operadorMat -> . MULTI
    (244) operadorMat -> . DIV
    (245) operadorMat -> . DIVENTERO
    (246) operadorMat -> . MOD

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 236 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PDER resolved using rule 236 (expresionInt -> valorInt .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DIVENTERO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PUNTOYCOMA      reduce using rule 236 (expresionInt -> valorInt .)
    PDER            reduce using rule 236 (expresionInt -> valorInt .)
    DIGUAL          reduce using rule 238 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 238 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 238 (valorDouble -> valorInt .)
    MENOR           reduce using rule 238 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 238 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 238 (valorDouble -> valorInt .)
    SUMA            shift and go to state 108
    RESTA           shift and go to state 109
    MULTI           shift and go to state 110
    DIV             shift and go to state 111
    DIVENTERO       shift and go to state 112
    MOD             shift and go to state 113

  ! SUMA            [ reduce using rule 238 (valorDouble -> valorInt .) ]
  ! RESTA           [ reduce using rule 238 (valorDouble -> valorInt .) ]
  ! MULTI           [ reduce using rule 238 (valorDouble -> valorInt .) ]
  ! DIV             [ reduce using rule 238 (valorDouble -> valorInt .) ]
  ! DIVENTERO       [ reduce using rule 238 (valorDouble -> valorInt .) ]
  ! MOD             [ reduce using rule 238 (valorDouble -> valorInt .) ]
  ! PUNTOYCOMA      [ reduce using rule 238 (valorDouble -> valorInt .) ]
  ! PDER            [ reduce using rule 238 (valorDouble -> valorInt .) ]

    operadorMat                    shift and go to state 107

state 34

    (239) expresionDouble -> valorDouble . operadorMat expresionDouble
    (240) expresionDouble -> valorDouble .
    (211) expresionBool -> valorDouble . comparadorMat expresionDouble
    (214) expresionBool -> valorDouble . comparadorMat VARIABLE
    (195) expresionBoolFor -> valorDouble . comparadorMat expresionDouble
    (198) expresionBoolFor -> valorDouble . comparadorMat VARIABLE
    (241) operadorMat -> . SUMA
    (242) operadorMat -> . RESTA
    (243) operadorMat -> . MULTI
    (244) operadorMat -> . DIV
    (245) operadorMat -> . DIVENTERO
    (246) operadorMat -> . MOD
    (247) comparadorMat -> . DIGUAL
    (248) comparadorMat -> . NOIGUAL
    (249) comparadorMat -> . MAYOR
    (250) comparadorMat -> . MENOR
    (251) comparadorMat -> . MAYIGUAL
    (252) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 240 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 108
    RESTA           shift and go to state 109
    MULTI           shift and go to state 110
    DIV             shift and go to state 111
    DIVENTERO       shift and go to state 112
    MOD             shift and go to state 113
    DIGUAL          shift and go to state 91
    NOIGUAL         shift and go to state 92
    MAYOR           shift and go to state 93
    MENOR           shift and go to state 94
    MAYIGUAL        shift and go to state 95
    MENIGUAL        shift and go to state 96

    operadorMat                    shift and go to state 114
    comparadorMat                  shift and go to state 115

state 35

    (228) expresionString -> valorString . SUMA expresionString
    (229) expresionString -> valorString .
    (230) expresionIndexString -> valorString . CIZQ ENTERO CDER

    SUMA            shift and go to state 116
    PUNTOYCOMA      reduce using rule 229 (expresionString -> valorString .)
    PDER            reduce using rule 229 (expresionString -> valorString .)
    CIZQ            shift and go to state 117


state 36

    (215) expresionBool -> valorBool .
    (199) expresionBoolFor -> valorBool .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 199 (expresionBoolFor -> valorBool .)
    AND             reduce using rule 215 (expresionBool -> valorBool .)
    OR              reduce using rule 215 (expresionBool -> valorBool .)
    PUNTOYCOMA      reduce using rule 199 (expresionBoolFor -> valorBool .)

  ! PUNTOYCOMA      [ reduce using rule 215 (expresionBool -> valorBool .) ]


state 37

    (218) expresionBool -> valor . IS objeto
    (219) expresionBool -> valor . ISNEGADO objeto

    IS              shift and go to state 118
    ISNEGADO        shift and go to state 119


state 38

    (206) sentenciaWhile -> WHILE . PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> WHILE . PIZQ expresionBool PDER final

    PIZQ            shift and go to state 120


state 39

    (60) expresionMap -> LIZQ . LDER
    (62) expresionMap -> LIZQ . expMap LDER
    (63) expMap -> . claveValor DOSPUNTOS claveValor
    (64) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (65) claveValor -> . VARIABLE
    (66) claveValor -> . STRING
    (67) claveValor -> . ENTERO
    (68) claveValor -> . DOUBLE
    (69) claveValor -> . BOOL
    (70) claveValor -> . CIZQ expListDynamic CDER
    (71) claveValor -> . CIZQ expListSet CDER
    (72) claveValor -> . expresionNewList
    (73) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (74) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (75) claveValor -> . LIZQ LDER
    (76) claveValor -> . LIZQ expMap LDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 122
    VARIABLE        shift and go to state 125
    STRING          shift and go to state 126
    ENTERO          shift and go to state 127
    DOUBLE          shift and go to state 128
    BOOL            shift and go to state 129
    CIZQ            shift and go to state 130
    SETFROM         shift and go to state 132
    LIZQ            shift and go to state 121
    NEWLIST         shift and go to state 54

    expMap                         shift and go to state 123
    claveValor                     shift and go to state 124
    expresionNewList               shift and go to state 131

state 40

    (208) sentenciaDoWhile -> DO . LIZQ final LDER WHILE PIZQ expresionBool PDER

    LIZQ            shift and go to state 133


state 41

    (170) sentenciaIf -> IF . PIZQ expresionBool PDER final
    (171) sentenciaIf -> IF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 134


state 42

    (172) sentenciaElse -> ELSE . final
    (173) sentenciaElse -> ELSE . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 136
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

    final                          shift and go to state 135
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 43

    (165) imprimir -> PRINT . PIZQ expresion PDER
    (166) imprimir -> PRINT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 137


state 44

    (167) funcionStdin -> FUNCIONSTDIN .
    (225) valorString -> FUNCIONSTDIN .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 167 (funcionStdin -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 167 (funcionStdin -> FUNCIONSTDIN .)
    SUMA            reduce using rule 225 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 225 (valorString -> FUNCIONSTDIN .)

  ! PUNTOYCOMA      [ reduce using rule 225 (valorString -> FUNCIONSTDIN .) ]


state 45

    (168) funcionStdout -> FUNCIONSTDOUT . PIZQ expresion PDER
    (169) funcionStdout -> FUNCIONSTDOUT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 138


state 46

    (220) negacionBool -> NOT . PIZQ expresionBool PDER

    PIZQ            shift and go to state 139


state 47

    (174) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 140


state 48

    (202) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final

    PIZQ            shift and go to state 141


state 49

    (233) valorInt -> ENTERO .
    (176) valor -> ENTERO .

    SUMA            reduce using rule 233 (valorInt -> ENTERO .)
    RESTA           reduce using rule 233 (valorInt -> ENTERO .)
    MULTI           reduce using rule 233 (valorInt -> ENTERO .)
    DIV             reduce using rule 233 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 233 (valorInt -> ENTERO .)
    MOD             reduce using rule 233 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 233 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 233 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 233 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 233 (valorInt -> ENTERO .)
    MENOR           reduce using rule 233 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 233 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 233 (valorInt -> ENTERO .)
    IS              reduce using rule 176 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 176 (valor -> ENTERO .)


state 50

    (85) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (89) expresionLista -> LIST . MENOR INT MAYOR VARIABLE
    (90) expresionLista -> LIST . MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> LIST . MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (93) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> LIST . MENOR SET MAYOR VARIABLE
    (109) expresionLista -> LIST . MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> LIST . MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> LIST . MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> LIST . MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> LIST . MENOR MAP MAYOR VARIABLE IGUAL expresionNewList

    MENOR           shift and go to state 142


state 51

    (88) expresionLista -> CIZQ . expListString CDER
    (92) expresionLista -> CIZQ . expListInt CDER
    (96) expresionLista -> CIZQ . expListNum CDER
    (103) expresionLista -> CIZQ . expListBool CDER
    (107) expresionLista -> CIZQ . expListDynamic CDER
    (111) expresionLista -> CIZQ . expListSet CDER
    (115) expresionLista -> CIZQ . expListMap CDER
    (84) expresionNewList -> CIZQ . CDER
    (116) expListString -> . STRING
    (117) expListString -> . STRING COMA expListString
    (118) expListString -> . VARIABLE
    (119) expListString -> . VARIABLE COMA expListString
    (120) expListInt -> . ENTERO
    (121) expListInt -> . ENTERO COMA expListInt
    (122) expListInt -> . VARIABLE
    (123) expListInt -> . VARIABLE COMA expListInt
    (124) expListNum -> . ENTERO
    (125) expListNum -> . DOUBLE
    (126) expListNum -> . ENTERO COMA expListNum
    (127) expListNum -> . DOUBLE COMA expListNum
    (128) expListNum -> . VARIABLE
    (129) expListNum -> . VARIABLE COMA expListNum
    (130) expListBool -> . BOOL
    (131) expListBool -> . BOOL COMA expListBool
    (132) expListBool -> . VARIABLE
    (133) expListBool -> . VARIABLE COMA expListBool
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic
    (144) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (145) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (146) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (147) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (148) expListSet -> . VARIABLE
    (149) expListSet -> . VARIABLE COMA expListSet
    (150) expListMap -> . LIZQ LDER
    (151) expListMap -> . LIZQ expMap LDER
    (152) expListMap -> . LIZQ LDER COMA expListMap
    (153) expListMap -> . LIZQ expMap LDER COMA expListMap
    (154) expListMap -> . VARIABLE
    (155) expListMap -> . VARIABLE COMA expListMap

    CDER            shift and go to state 144
    STRING          shift and go to state 151
    VARIABLE        shift and go to state 152
    ENTERO          shift and go to state 153
    DOUBLE          shift and go to state 154
    BOOL            shift and go to state 155
    SETFROM         shift and go to state 156
    LIZQ            shift and go to state 157

    expListString                  shift and go to state 143
    expListInt                     shift and go to state 145
    expListNum                     shift and go to state 146
    expListBool                    shift and go to state 147
    expListDynamic                 shift and go to state 148
    expListSet                     shift and go to state 149
    expListMap                     shift and go to state 150

state 52

    (77) expresionSet -> SET . VARIABLE
    (79) expresionSet -> SET . VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> SET . VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER

    VARIABLE        shift and go to state 158


state 53

    (58) expresionMap -> MAP . VARIABLE
    (59) expresionMap -> MAP . VARIABLE IGUAL LIZQ LDER
    (61) expresionMap -> MAP . VARIABLE IGUAL LIZQ expMap LDER

    VARIABLE        shift and go to state 159


state 54

    (82) expresionNewList -> NEWLIST . PIZQ PDER
    (83) expresionNewList -> NEWLIST . PIZQ ENTERO PDER

    PIZQ            shift and go to state 160


state 55

    (78) expresionSet -> SETFROM . PIZQ CIZQ CDER PDER
    (80) expresionSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 161


state 56

    (237) valorDouble -> DOUBLE .
    (178) valor -> DOUBLE .

    SUMA            reduce using rule 237 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 237 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 237 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 237 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 237 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 237 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 237 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 237 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 237 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 237 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 237 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 237 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 237 (valorDouble -> DOUBLE .)
    IS              reduce using rule 178 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 178 (valor -> DOUBLE .)


state 57

    (223) valorString -> STRING .
    (179) valor -> STRING .

    SUMA            reduce using rule 223 (valorString -> STRING .)
    CIZQ            reduce using rule 223 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 223 (valorString -> STRING .)
    IS              reduce using rule 179 (valor -> STRING .)
    ISNEGADO        reduce using rule 179 (valor -> STRING .)


state 58

    (226) valorString -> expresionIndexString .

    SUMA            reduce using rule 226 (valorString -> expresionIndexString .)
    CIZQ            reduce using rule 226 (valorString -> expresionIndexString .)
    PUNTOYCOMA      reduce using rule 226 (valorString -> expresionIndexString .)
    PDER            reduce using rule 226 (valorString -> expresionIndexString .)


state 59

    (209) valorBool -> BOOL .

    PUNTOYCOMA      reduce using rule 209 (valorBool -> BOOL .)
    AND             reduce using rule 209 (valorBool -> BOOL .)
    OR              reduce using rule 209 (valorBool -> BOOL .)
    PDER            reduce using rule 209 (valorBool -> BOOL .)


state 60

    (1) final -> asignacion PUNTOYCOMA .
    (2) final -> asignacion PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    LDER            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]

    asignacion                     shift and go to state 2
    final                          shift and go to state 162
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 61

    (3) final -> expresionInt PUNTOYCOMA .
    (4) final -> expresionInt PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    LDER            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]

    expresionInt                   shift and go to state 3
    final                          shift and go to state 163
    asignacion                     shift and go to state 2
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 62

    (5) final -> expresionDouble PUNTOYCOMA .
    (6) final -> expresionDouble PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    LDER            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]

    expresionDouble                shift and go to state 4
    final                          shift and go to state 164
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 63

    (7) final -> expresionString PUNTOYCOMA .
    (8) final -> expresionString PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    LDER            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]

    expresionString                shift and go to state 5
    final                          shift and go to state 165
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 64

    (9) final -> expresionBool PUNTOYCOMA .
    (10) final -> expresionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    LDER            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]

    expresionBool                  shift and go to state 6
    final                          shift and go to state 166
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 65

    (221) comparacionBool -> expresionBool operadorLogico . expresionBool
    (222) comparacionBool -> expresionBool operadorLogico . comparacionBool
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 170
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 59
    NOT             shift and go to state 46
    ENTERO          shift and go to state 174
    STRING          shift and go to state 175

    expresionBool                  shift and go to state 167
    comparacionBool                shift and go to state 168
    valorDouble                    shift and go to state 169
    valorBool                      shift and go to state 171
    negacionBool                   shift and go to state 172
    valor                          shift and go to state 37
    valorInt                       shift and go to state 173

state 66

    (253) operadorLogico -> AND .

    VARIABLE        reduce using rule 253 (operadorLogico -> AND .)
    DOUBLE          reduce using rule 253 (operadorLogico -> AND .)
    BOOL            reduce using rule 253 (operadorLogico -> AND .)
    NOT             reduce using rule 253 (operadorLogico -> AND .)
    ENTERO          reduce using rule 253 (operadorLogico -> AND .)
    STRING          reduce using rule 253 (operadorLogico -> AND .)


state 67

    (254) operadorLogico -> OR .

    VARIABLE        reduce using rule 254 (operadorLogico -> OR .)
    DOUBLE          reduce using rule 254 (operadorLogico -> OR .)
    BOOL            reduce using rule 254 (operadorLogico -> OR .)
    NOT             reduce using rule 254 (operadorLogico -> OR .)
    ENTERO          reduce using rule 254 (operadorLogico -> OR .)
    STRING          reduce using rule 254 (operadorLogico -> OR .)


state 68

    (11) final -> expresionBoolFor PUNTOYCOMA .
    (12) final -> expresionBoolFor PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    LDER            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 176
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 69

    (14) final -> sentenciaWhile final .

    $end            reduce using rule 14 (final -> sentenciaWhile final .)
    PUNTOYCOMA      reduce using rule 14 (final -> sentenciaWhile final .)
    VARIABLE        reduce using rule 14 (final -> sentenciaWhile final .)
    INT             reduce using rule 14 (final -> sentenciaWhile final .)
    DOUBLER         reduce using rule 14 (final -> sentenciaWhile final .)
    NUM             reduce using rule 14 (final -> sentenciaWhile final .)
    STRINGR         reduce using rule 14 (final -> sentenciaWhile final .)
    BOOLR           reduce using rule 14 (final -> sentenciaWhile final .)
    DYNAMIC         reduce using rule 14 (final -> sentenciaWhile final .)
    VAR             reduce using rule 14 (final -> sentenciaWhile final .)
    WHILE           reduce using rule 14 (final -> sentenciaWhile final .)
    DO              reduce using rule 14 (final -> sentenciaWhile final .)
    IF              reduce using rule 14 (final -> sentenciaWhile final .)
    ELSE            reduce using rule 14 (final -> sentenciaWhile final .)
    PRINT           reduce using rule 14 (final -> sentenciaWhile final .)
    FUNCIONSTDIN    reduce using rule 14 (final -> sentenciaWhile final .)
    FUNCIONSTDOUT   reduce using rule 14 (final -> sentenciaWhile final .)
    NOT             reduce using rule 14 (final -> sentenciaWhile final .)
    ELSEIF          reduce using rule 14 (final -> sentenciaWhile final .)
    FOR             reduce using rule 14 (final -> sentenciaWhile final .)
    LIST            reduce using rule 14 (final -> sentenciaWhile final .)
    CIZQ            reduce using rule 14 (final -> sentenciaWhile final .)
    NEWLIST         reduce using rule 14 (final -> sentenciaWhile final .)
    SET             reduce using rule 14 (final -> sentenciaWhile final .)
    SETFROM         reduce using rule 14 (final -> sentenciaWhile final .)
    MAP             reduce using rule 14 (final -> sentenciaWhile final .)
    LIZQ            reduce using rule 14 (final -> sentenciaWhile final .)
    ENTERO          reduce using rule 14 (final -> sentenciaWhile final .)
    DOUBLE          reduce using rule 14 (final -> sentenciaWhile final .)
    STRING          reduce using rule 14 (final -> sentenciaWhile final .)
    BOOL            reduce using rule 14 (final -> sentenciaWhile final .)
    LDER            reduce using rule 14 (final -> sentenciaWhile final .)


state 70

    (15) final -> sentenciaWhile PUNTOYCOMA .
    (16) final -> sentenciaWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    LDER            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 177
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 71

    (17) final -> sentenciaDoWhile PUNTOYCOMA .
    (18) final -> sentenciaDoWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    LDER            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]

    sentenciaDoWhile               shift and go to state 9
    final                          shift and go to state 178
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 72

    (19) final -> sentenciaIf PUNTOYCOMA .
    (20) final -> sentenciaIf PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    LDER            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 179
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 73

    (22) final -> sentenciaIf final .

    $end            reduce using rule 22 (final -> sentenciaIf final .)
    PUNTOYCOMA      reduce using rule 22 (final -> sentenciaIf final .)
    VARIABLE        reduce using rule 22 (final -> sentenciaIf final .)
    INT             reduce using rule 22 (final -> sentenciaIf final .)
    DOUBLER         reduce using rule 22 (final -> sentenciaIf final .)
    NUM             reduce using rule 22 (final -> sentenciaIf final .)
    STRINGR         reduce using rule 22 (final -> sentenciaIf final .)
    BOOLR           reduce using rule 22 (final -> sentenciaIf final .)
    DYNAMIC         reduce using rule 22 (final -> sentenciaIf final .)
    VAR             reduce using rule 22 (final -> sentenciaIf final .)
    WHILE           reduce using rule 22 (final -> sentenciaIf final .)
    DO              reduce using rule 22 (final -> sentenciaIf final .)
    IF              reduce using rule 22 (final -> sentenciaIf final .)
    ELSE            reduce using rule 22 (final -> sentenciaIf final .)
    PRINT           reduce using rule 22 (final -> sentenciaIf final .)
    FUNCIONSTDIN    reduce using rule 22 (final -> sentenciaIf final .)
    FUNCIONSTDOUT   reduce using rule 22 (final -> sentenciaIf final .)
    NOT             reduce using rule 22 (final -> sentenciaIf final .)
    ELSEIF          reduce using rule 22 (final -> sentenciaIf final .)
    FOR             reduce using rule 22 (final -> sentenciaIf final .)
    LIST            reduce using rule 22 (final -> sentenciaIf final .)
    CIZQ            reduce using rule 22 (final -> sentenciaIf final .)
    NEWLIST         reduce using rule 22 (final -> sentenciaIf final .)
    SET             reduce using rule 22 (final -> sentenciaIf final .)
    SETFROM         reduce using rule 22 (final -> sentenciaIf final .)
    MAP             reduce using rule 22 (final -> sentenciaIf final .)
    LIZQ            reduce using rule 22 (final -> sentenciaIf final .)
    ENTERO          reduce using rule 22 (final -> sentenciaIf final .)
    DOUBLE          reduce using rule 22 (final -> sentenciaIf final .)
    STRING          reduce using rule 22 (final -> sentenciaIf final .)
    BOOL            reduce using rule 22 (final -> sentenciaIf final .)
    LDER            reduce using rule 22 (final -> sentenciaIf final .)


state 74

    (23) final -> sentenciaElse PUNTOYCOMA .
    (24) final -> sentenciaElse PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    LDER            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 180
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 75

    (26) final -> sentenciaElse final .

    $end            reduce using rule 26 (final -> sentenciaElse final .)
    PUNTOYCOMA      reduce using rule 26 (final -> sentenciaElse final .)
    VARIABLE        reduce using rule 26 (final -> sentenciaElse final .)
    INT             reduce using rule 26 (final -> sentenciaElse final .)
    DOUBLER         reduce using rule 26 (final -> sentenciaElse final .)
    NUM             reduce using rule 26 (final -> sentenciaElse final .)
    STRINGR         reduce using rule 26 (final -> sentenciaElse final .)
    BOOLR           reduce using rule 26 (final -> sentenciaElse final .)
    DYNAMIC         reduce using rule 26 (final -> sentenciaElse final .)
    VAR             reduce using rule 26 (final -> sentenciaElse final .)
    WHILE           reduce using rule 26 (final -> sentenciaElse final .)
    DO              reduce using rule 26 (final -> sentenciaElse final .)
    IF              reduce using rule 26 (final -> sentenciaElse final .)
    ELSE            reduce using rule 26 (final -> sentenciaElse final .)
    PRINT           reduce using rule 26 (final -> sentenciaElse final .)
    FUNCIONSTDIN    reduce using rule 26 (final -> sentenciaElse final .)
    FUNCIONSTDOUT   reduce using rule 26 (final -> sentenciaElse final .)
    NOT             reduce using rule 26 (final -> sentenciaElse final .)
    ELSEIF          reduce using rule 26 (final -> sentenciaElse final .)
    FOR             reduce using rule 26 (final -> sentenciaElse final .)
    LIST            reduce using rule 26 (final -> sentenciaElse final .)
    CIZQ            reduce using rule 26 (final -> sentenciaElse final .)
    NEWLIST         reduce using rule 26 (final -> sentenciaElse final .)
    SET             reduce using rule 26 (final -> sentenciaElse final .)
    SETFROM         reduce using rule 26 (final -> sentenciaElse final .)
    MAP             reduce using rule 26 (final -> sentenciaElse final .)
    LIZQ            reduce using rule 26 (final -> sentenciaElse final .)
    ENTERO          reduce using rule 26 (final -> sentenciaElse final .)
    DOUBLE          reduce using rule 26 (final -> sentenciaElse final .)
    STRING          reduce using rule 26 (final -> sentenciaElse final .)
    BOOL            reduce using rule 26 (final -> sentenciaElse final .)
    LDER            reduce using rule 26 (final -> sentenciaElse final .)


state 76

    (27) final -> imprimir PUNTOYCOMA .
    (28) final -> imprimir PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    LDER            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]

    imprimir                       shift and go to state 12
    final                          shift and go to state 181
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 77

    (29) final -> funcionStdin PUNTOYCOMA .
    (30) final -> funcionStdin PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    LDER            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]

    funcionStdin                   shift and go to state 13
    final                          shift and go to state 182
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 78

    (31) final -> funcionStdout PUNTOYCOMA .
    (32) final -> funcionStdout PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    LDER            reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]

    funcionStdout                  shift and go to state 14
    final                          shift and go to state 183
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 79

    (33) final -> negacionBool PUNTOYCOMA .
    (34) final -> negacionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    LDER            reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]

    negacionBool                   shift and go to state 15
    final                          shift and go to state 184
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 80

    (35) final -> comparacionBool PUNTOYCOMA . final
    (36) final -> comparacionBool PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    LDER            reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]

    comparacionBool                shift and go to state 16
    final                          shift and go to state 185
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 81

    (37) final -> sentenciaElseIf PUNTOYCOMA . final
    (39) final -> sentenciaElseIf PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    LDER            reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 186
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 82

    (38) final -> sentenciaElseIf final .

    $end            reduce using rule 38 (final -> sentenciaElseIf final .)
    PUNTOYCOMA      reduce using rule 38 (final -> sentenciaElseIf final .)
    VARIABLE        reduce using rule 38 (final -> sentenciaElseIf final .)
    INT             reduce using rule 38 (final -> sentenciaElseIf final .)
    DOUBLER         reduce using rule 38 (final -> sentenciaElseIf final .)
    NUM             reduce using rule 38 (final -> sentenciaElseIf final .)
    STRINGR         reduce using rule 38 (final -> sentenciaElseIf final .)
    BOOLR           reduce using rule 38 (final -> sentenciaElseIf final .)
    DYNAMIC         reduce using rule 38 (final -> sentenciaElseIf final .)
    VAR             reduce using rule 38 (final -> sentenciaElseIf final .)
    WHILE           reduce using rule 38 (final -> sentenciaElseIf final .)
    DO              reduce using rule 38 (final -> sentenciaElseIf final .)
    IF              reduce using rule 38 (final -> sentenciaElseIf final .)
    ELSE            reduce using rule 38 (final -> sentenciaElseIf final .)
    PRINT           reduce using rule 38 (final -> sentenciaElseIf final .)
    FUNCIONSTDIN    reduce using rule 38 (final -> sentenciaElseIf final .)
    FUNCIONSTDOUT   reduce using rule 38 (final -> sentenciaElseIf final .)
    NOT             reduce using rule 38 (final -> sentenciaElseIf final .)
    ELSEIF          reduce using rule 38 (final -> sentenciaElseIf final .)
    FOR             reduce using rule 38 (final -> sentenciaElseIf final .)
    LIST            reduce using rule 38 (final -> sentenciaElseIf final .)
    CIZQ            reduce using rule 38 (final -> sentenciaElseIf final .)
    NEWLIST         reduce using rule 38 (final -> sentenciaElseIf final .)
    SET             reduce using rule 38 (final -> sentenciaElseIf final .)
    SETFROM         reduce using rule 38 (final -> sentenciaElseIf final .)
    MAP             reduce using rule 38 (final -> sentenciaElseIf final .)
    LIZQ            reduce using rule 38 (final -> sentenciaElseIf final .)
    ENTERO          reduce using rule 38 (final -> sentenciaElseIf final .)
    DOUBLE          reduce using rule 38 (final -> sentenciaElseIf final .)
    STRING          reduce using rule 38 (final -> sentenciaElseIf final .)
    BOOL            reduce using rule 38 (final -> sentenciaElseIf final .)
    LDER            reduce using rule 38 (final -> sentenciaElseIf final .)


state 83

    (41) final -> sentenciaFor PUNTOYCOMA . final
    (42) final -> sentenciaFor PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    LDER            reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]

    sentenciaFor                   shift and go to state 18
    final                          shift and go to state 187
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 84

    (43) final -> sentenciaFor final .

    $end            reduce using rule 43 (final -> sentenciaFor final .)
    PUNTOYCOMA      reduce using rule 43 (final -> sentenciaFor final .)
    VARIABLE        reduce using rule 43 (final -> sentenciaFor final .)
    INT             reduce using rule 43 (final -> sentenciaFor final .)
    DOUBLER         reduce using rule 43 (final -> sentenciaFor final .)
    NUM             reduce using rule 43 (final -> sentenciaFor final .)
    STRINGR         reduce using rule 43 (final -> sentenciaFor final .)
    BOOLR           reduce using rule 43 (final -> sentenciaFor final .)
    DYNAMIC         reduce using rule 43 (final -> sentenciaFor final .)
    VAR             reduce using rule 43 (final -> sentenciaFor final .)
    WHILE           reduce using rule 43 (final -> sentenciaFor final .)
    DO              reduce using rule 43 (final -> sentenciaFor final .)
    IF              reduce using rule 43 (final -> sentenciaFor final .)
    ELSE            reduce using rule 43 (final -> sentenciaFor final .)
    PRINT           reduce using rule 43 (final -> sentenciaFor final .)
    FUNCIONSTDIN    reduce using rule 43 (final -> sentenciaFor final .)
    FUNCIONSTDOUT   reduce using rule 43 (final -> sentenciaFor final .)
    NOT             reduce using rule 43 (final -> sentenciaFor final .)
    ELSEIF          reduce using rule 43 (final -> sentenciaFor final .)
    FOR             reduce using rule 43 (final -> sentenciaFor final .)
    LIST            reduce using rule 43 (final -> sentenciaFor final .)
    CIZQ            reduce using rule 43 (final -> sentenciaFor final .)
    NEWLIST         reduce using rule 43 (final -> sentenciaFor final .)
    SET             reduce using rule 43 (final -> sentenciaFor final .)
    SETFROM         reduce using rule 43 (final -> sentenciaFor final .)
    MAP             reduce using rule 43 (final -> sentenciaFor final .)
    LIZQ            reduce using rule 43 (final -> sentenciaFor final .)
    ENTERO          reduce using rule 43 (final -> sentenciaFor final .)
    DOUBLE          reduce using rule 43 (final -> sentenciaFor final .)
    STRING          reduce using rule 43 (final -> sentenciaFor final .)
    BOOL            reduce using rule 43 (final -> sentenciaFor final .)
    LDER            reduce using rule 43 (final -> sentenciaFor final .)


state 85

    (45) final -> sentenciaSubstring PUNTOYCOMA . final
    (46) final -> sentenciaSubstring PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    LDER            reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]

    sentenciaSubstring             shift and go to state 19
    final                          shift and go to state 188
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 86

    (47) final -> VARIABLE DSUMA . PUNTOYCOMA final
    (48) final -> VARIABLE DSUMA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 189


state 87

    (49) final -> VARIABLE DRESTA . PUNTOYCOMA final
    (50) final -> VARIABLE DRESTA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 190


state 88

    (212) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (213) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (196) expresionBoolFor -> VARIABLE comparadorMat . expresionDouble
    (197) expresionBoolFor -> VARIABLE comparadorMat . VARIABLE
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 191
    DOUBLE          shift and go to state 194
    ENTERO          shift and go to state 195

    expresionDouble                shift and go to state 192
    valorDouble                    shift and go to state 193
    valorInt                       shift and go to state 173

state 89

    (231) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO PDER
    (232) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO COMA ENTERO PDER

    PIZQ            shift and go to state 196


state 90

    (164) asignacionSimple -> VARIABLE IGUAL . expresion
    (180) expresion -> . valor operadorMat expresion
    (181) expresion -> . valor
    (182) expresion -> . expresionString
    (183) expresion -> . expresionInt
    (184) expresion -> . expresionDouble
    (185) expresion -> . expresionBool
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 174
    VARIABLE        shift and go to state 197
    DOUBLE          shift and go to state 204
    STRING          shift and go to state 205
    FUNCIONSTDIN    shift and go to state 208
    BOOL            shift and go to state 59
    NOT             shift and go to state 46

    expresion                      shift and go to state 198
    valor                          shift and go to state 199
    expresionString                shift and go to state 200
    expresionInt                   shift and go to state 201
    expresionDouble                shift and go to state 202
    expresionBool                  shift and go to state 203
    valorString                    shift and go to state 35
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 206
    valorBool                      shift and go to state 171
    negacionBool                   shift and go to state 172
    comparacionBool                shift and go to state 207
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 209

state 91

    (247) comparadorMat -> DIGUAL .

    VARIABLE        reduce using rule 247 (comparadorMat -> DIGUAL .)
    DOUBLE          reduce using rule 247 (comparadorMat -> DIGUAL .)
    ENTERO          reduce using rule 247 (comparadorMat -> DIGUAL .)


state 92

    (248) comparadorMat -> NOIGUAL .

    VARIABLE        reduce using rule 248 (comparadorMat -> NOIGUAL .)
    DOUBLE          reduce using rule 248 (comparadorMat -> NOIGUAL .)
    ENTERO          reduce using rule 248 (comparadorMat -> NOIGUAL .)


state 93

    (249) comparadorMat -> MAYOR .

    VARIABLE        reduce using rule 249 (comparadorMat -> MAYOR .)
    DOUBLE          reduce using rule 249 (comparadorMat -> MAYOR .)
    ENTERO          reduce using rule 249 (comparadorMat -> MAYOR .)


state 94

    (250) comparadorMat -> MENOR .

    VARIABLE        reduce using rule 250 (comparadorMat -> MENOR .)
    DOUBLE          reduce using rule 250 (comparadorMat -> MENOR .)
    ENTERO          reduce using rule 250 (comparadorMat -> MENOR .)


state 95

    (251) comparadorMat -> MAYIGUAL .

    VARIABLE        reduce using rule 251 (comparadorMat -> MAYIGUAL .)
    DOUBLE          reduce using rule 251 (comparadorMat -> MAYIGUAL .)
    ENTERO          reduce using rule 251 (comparadorMat -> MAYIGUAL .)


state 96

    (252) comparadorMat -> MENIGUAL .

    VARIABLE        reduce using rule 252 (comparadorMat -> MENIGUAL .)
    DOUBLE          reduce using rule 252 (comparadorMat -> MENIGUAL .)
    ENTERO          reduce using rule 252 (comparadorMat -> MENIGUAL .)


state 97

    (51) final -> expresionLista PUNTOYCOMA .
    (52) final -> expresionLista PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    LDER            reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]

    expresionLista                 shift and go to state 21
    final                          shift and go to state 210
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 98

    (53) final -> expresionNewList PUNTOYCOMA .
    (54) final -> expresionNewList PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    LDER            reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]

    expresionNewList               shift and go to state 22
    final                          shift and go to state 211
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 99

    (55) final -> expresionSet PUNTOYCOMA .
    (56) final -> expresionSet PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    LDER            reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]

    expresionSet                   shift and go to state 23
    final                          shift and go to state 212
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 100

    (156) asignacion -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 213


state 101

    (157) asignacion -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 214


state 102

    (158) asignacion -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 215


state 103

    (159) asignacion -> STRINGR VARIABLE . IGUAL expresionString

    IGUAL           shift and go to state 216


state 104

    (160) asignacion -> BOOLR VARIABLE . IGUAL expresionBool

    IGUAL           shift and go to state 217


state 105

    (161) asignacion -> DYNAMIC VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 218


state 106

    (162) asignacion -> VAR VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 219


state 107

    (235) expresionInt -> valorInt operadorMat . expresionInt
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE

    ENTERO          shift and go to state 195
    VARIABLE        shift and go to state 222

    valorInt                       shift and go to state 220
    expresionInt                   shift and go to state 221

state 108

    (241) operadorMat -> SUMA .

    ENTERO          reduce using rule 241 (operadorMat -> SUMA .)
    VARIABLE        reduce using rule 241 (operadorMat -> SUMA .)
    DOUBLE          reduce using rule 241 (operadorMat -> SUMA .)
    STRING          reduce using rule 241 (operadorMat -> SUMA .)
    FUNCIONSTDIN    reduce using rule 241 (operadorMat -> SUMA .)
    BOOL            reduce using rule 241 (operadorMat -> SUMA .)
    NOT             reduce using rule 241 (operadorMat -> SUMA .)


state 109

    (242) operadorMat -> RESTA .

    ENTERO          reduce using rule 242 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 242 (operadorMat -> RESTA .)
    DOUBLE          reduce using rule 242 (operadorMat -> RESTA .)
    STRING          reduce using rule 242 (operadorMat -> RESTA .)
    FUNCIONSTDIN    reduce using rule 242 (operadorMat -> RESTA .)
    BOOL            reduce using rule 242 (operadorMat -> RESTA .)
    NOT             reduce using rule 242 (operadorMat -> RESTA .)


state 110

    (243) operadorMat -> MULTI .

    ENTERO          reduce using rule 243 (operadorMat -> MULTI .)
    VARIABLE        reduce using rule 243 (operadorMat -> MULTI .)
    DOUBLE          reduce using rule 243 (operadorMat -> MULTI .)
    STRING          reduce using rule 243 (operadorMat -> MULTI .)
    FUNCIONSTDIN    reduce using rule 243 (operadorMat -> MULTI .)
    BOOL            reduce using rule 243 (operadorMat -> MULTI .)
    NOT             reduce using rule 243 (operadorMat -> MULTI .)


state 111

    (244) operadorMat -> DIV .

    ENTERO          reduce using rule 244 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 244 (operadorMat -> DIV .)
    DOUBLE          reduce using rule 244 (operadorMat -> DIV .)
    STRING          reduce using rule 244 (operadorMat -> DIV .)
    FUNCIONSTDIN    reduce using rule 244 (operadorMat -> DIV .)
    BOOL            reduce using rule 244 (operadorMat -> DIV .)
    NOT             reduce using rule 244 (operadorMat -> DIV .)


state 112

    (245) operadorMat -> DIVENTERO .

    ENTERO          reduce using rule 245 (operadorMat -> DIVENTERO .)
    VARIABLE        reduce using rule 245 (operadorMat -> DIVENTERO .)
    DOUBLE          reduce using rule 245 (operadorMat -> DIVENTERO .)
    STRING          reduce using rule 245 (operadorMat -> DIVENTERO .)
    FUNCIONSTDIN    reduce using rule 245 (operadorMat -> DIVENTERO .)
    BOOL            reduce using rule 245 (operadorMat -> DIVENTERO .)
    NOT             reduce using rule 245 (operadorMat -> DIVENTERO .)


state 113

    (246) operadorMat -> MOD .

    ENTERO          reduce using rule 246 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 246 (operadorMat -> MOD .)
    DOUBLE          reduce using rule 246 (operadorMat -> MOD .)
    STRING          reduce using rule 246 (operadorMat -> MOD .)
    FUNCIONSTDIN    reduce using rule 246 (operadorMat -> MOD .)
    BOOL            reduce using rule 246 (operadorMat -> MOD .)
    NOT             reduce using rule 246 (operadorMat -> MOD .)


state 114

    (239) expresionDouble -> valorDouble operadorMat . expresionDouble
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 194
    ENTERO          shift and go to state 195
    VARIABLE        shift and go to state 222

    valorDouble                    shift and go to state 193
    expresionDouble                shift and go to state 223
    valorInt                       shift and go to state 173

state 115

    (211) expresionBool -> valorDouble comparadorMat . expresionDouble
    (214) expresionBool -> valorDouble comparadorMat . VARIABLE
    (195) expresionBoolFor -> valorDouble comparadorMat . expresionDouble
    (198) expresionBoolFor -> valorDouble comparadorMat . VARIABLE
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 225
    DOUBLE          shift and go to state 194
    ENTERO          shift and go to state 195

    valorDouble                    shift and go to state 193
    expresionDouble                shift and go to state 224
    valorInt                       shift and go to state 173

state 116

    (228) expresionString -> valorString SUMA . expresionString
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 227
    VARIABLE        shift and go to state 228
    FUNCIONSTDIN    shift and go to state 208

    valorString                    shift and go to state 35
    expresionString                shift and go to state 226
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 209

state 117

    (230) expresionIndexString -> valorString CIZQ . ENTERO CDER

    ENTERO          shift and go to state 229


state 118

    (218) expresionBool -> valor IS . objeto
    (255) objeto -> . STRINGR
    (256) objeto -> . INT
    (257) objeto -> . DOUBLER
    (258) objeto -> . NUM
    (259) objeto -> . VAR
    (260) objeto -> . DYNAMIC
    (261) objeto -> . LIST
    (262) objeto -> . BOOL
    (263) objeto -> . MAP
    (264) objeto -> . SET

    STRINGR         shift and go to state 231
    INT             shift and go to state 232
    DOUBLER         shift and go to state 233
    NUM             shift and go to state 234
    VAR             shift and go to state 235
    DYNAMIC         shift and go to state 236
    LIST            shift and go to state 237
    BOOL            shift and go to state 238
    MAP             shift and go to state 239
    SET             shift and go to state 240

    objeto                         shift and go to state 230

state 119

    (219) expresionBool -> valor ISNEGADO . objeto
    (255) objeto -> . STRINGR
    (256) objeto -> . INT
    (257) objeto -> . DOUBLER
    (258) objeto -> . NUM
    (259) objeto -> . VAR
    (260) objeto -> . DYNAMIC
    (261) objeto -> . LIST
    (262) objeto -> . BOOL
    (263) objeto -> . MAP
    (264) objeto -> . SET

    STRINGR         shift and go to state 231
    INT             shift and go to state 232
    DOUBLER         shift and go to state 233
    NUM             shift and go to state 234
    VAR             shift and go to state 235
    DYNAMIC         shift and go to state 236
    LIST            shift and go to state 237
    BOOL            shift and go to state 238
    MAP             shift and go to state 239
    SET             shift and go to state 240

    objeto                         shift and go to state 241

state 120

    (206) sentenciaWhile -> WHILE PIZQ . expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> WHILE PIZQ . expresionBool PDER final
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 170
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 59
    NOT             shift and go to state 46
    ENTERO          shift and go to state 174
    STRING          shift and go to state 175

    expresionBool                  shift and go to state 242
    valorDouble                    shift and go to state 169
    valorBool                      shift and go to state 171
    negacionBool                   shift and go to state 172
    comparacionBool                shift and go to state 207
    valor                          shift and go to state 37
    valorInt                       shift and go to state 173

state 121

    (75) claveValor -> LIZQ . LDER
    (76) claveValor -> LIZQ . expMap LDER
    (63) expMap -> . claveValor DOSPUNTOS claveValor
    (64) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (65) claveValor -> . VARIABLE
    (66) claveValor -> . STRING
    (67) claveValor -> . ENTERO
    (68) claveValor -> . DOUBLE
    (69) claveValor -> . BOOL
    (70) claveValor -> . CIZQ expListDynamic CDER
    (71) claveValor -> . CIZQ expListSet CDER
    (72) claveValor -> . expresionNewList
    (73) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (74) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (75) claveValor -> . LIZQ LDER
    (76) claveValor -> . LIZQ expMap LDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 243
    VARIABLE        shift and go to state 125
    STRING          shift and go to state 126
    ENTERO          shift and go to state 127
    DOUBLE          shift and go to state 128
    BOOL            shift and go to state 129
    CIZQ            shift and go to state 130
    SETFROM         shift and go to state 132
    LIZQ            shift and go to state 121
    NEWLIST         shift and go to state 54

    expMap                         shift and go to state 244
    claveValor                     shift and go to state 124
    expresionNewList               shift and go to state 131

state 122

    (60) expresionMap -> LIZQ LDER .

    $end            reduce using rule 60 (expresionMap -> LIZQ LDER .)
    PUNTOYCOMA      reduce using rule 60 (expresionMap -> LIZQ LDER .)
    VARIABLE        reduce using rule 60 (expresionMap -> LIZQ LDER .)
    INT             reduce using rule 60 (expresionMap -> LIZQ LDER .)
    DOUBLER         reduce using rule 60 (expresionMap -> LIZQ LDER .)
    NUM             reduce using rule 60 (expresionMap -> LIZQ LDER .)
    STRINGR         reduce using rule 60 (expresionMap -> LIZQ LDER .)
    BOOLR           reduce using rule 60 (expresionMap -> LIZQ LDER .)
    DYNAMIC         reduce using rule 60 (expresionMap -> LIZQ LDER .)
    VAR             reduce using rule 60 (expresionMap -> LIZQ LDER .)
    WHILE           reduce using rule 60 (expresionMap -> LIZQ LDER .)
    DO              reduce using rule 60 (expresionMap -> LIZQ LDER .)
    IF              reduce using rule 60 (expresionMap -> LIZQ LDER .)
    ELSE            reduce using rule 60 (expresionMap -> LIZQ LDER .)
    PRINT           reduce using rule 60 (expresionMap -> LIZQ LDER .)
    FUNCIONSTDIN    reduce using rule 60 (expresionMap -> LIZQ LDER .)
    FUNCIONSTDOUT   reduce using rule 60 (expresionMap -> LIZQ LDER .)
    NOT             reduce using rule 60 (expresionMap -> LIZQ LDER .)
    ELSEIF          reduce using rule 60 (expresionMap -> LIZQ LDER .)
    FOR             reduce using rule 60 (expresionMap -> LIZQ LDER .)
    LIST            reduce using rule 60 (expresionMap -> LIZQ LDER .)
    CIZQ            reduce using rule 60 (expresionMap -> LIZQ LDER .)
    NEWLIST         reduce using rule 60 (expresionMap -> LIZQ LDER .)
    SET             reduce using rule 60 (expresionMap -> LIZQ LDER .)
    SETFROM         reduce using rule 60 (expresionMap -> LIZQ LDER .)
    MAP             reduce using rule 60 (expresionMap -> LIZQ LDER .)
    LIZQ            reduce using rule 60 (expresionMap -> LIZQ LDER .)
    ENTERO          reduce using rule 60 (expresionMap -> LIZQ LDER .)
    DOUBLE          reduce using rule 60 (expresionMap -> LIZQ LDER .)
    STRING          reduce using rule 60 (expresionMap -> LIZQ LDER .)
    BOOL            reduce using rule 60 (expresionMap -> LIZQ LDER .)
    LDER            reduce using rule 60 (expresionMap -> LIZQ LDER .)


state 123

    (62) expresionMap -> LIZQ expMap . LDER

    LDER            shift and go to state 245


state 124

    (63) expMap -> claveValor . DOSPUNTOS claveValor
    (64) expMap -> claveValor . DOSPUNTOS claveValor COMA expMap

    DOSPUNTOS       shift and go to state 246


state 125

    (65) claveValor -> VARIABLE .

    DOSPUNTOS       reduce using rule 65 (claveValor -> VARIABLE .)
    COMA            reduce using rule 65 (claveValor -> VARIABLE .)
    LDER            reduce using rule 65 (claveValor -> VARIABLE .)


state 126

    (66) claveValor -> STRING .

    DOSPUNTOS       reduce using rule 66 (claveValor -> STRING .)
    COMA            reduce using rule 66 (claveValor -> STRING .)
    LDER            reduce using rule 66 (claveValor -> STRING .)


state 127

    (67) claveValor -> ENTERO .

    DOSPUNTOS       reduce using rule 67 (claveValor -> ENTERO .)
    COMA            reduce using rule 67 (claveValor -> ENTERO .)
    LDER            reduce using rule 67 (claveValor -> ENTERO .)


state 128

    (68) claveValor -> DOUBLE .

    DOSPUNTOS       reduce using rule 68 (claveValor -> DOUBLE .)
    COMA            reduce using rule 68 (claveValor -> DOUBLE .)
    LDER            reduce using rule 68 (claveValor -> DOUBLE .)


state 129

    (69) claveValor -> BOOL .

    DOSPUNTOS       reduce using rule 69 (claveValor -> BOOL .)
    COMA            reduce using rule 69 (claveValor -> BOOL .)
    LDER            reduce using rule 69 (claveValor -> BOOL .)


state 130

    (70) claveValor -> CIZQ . expListDynamic CDER
    (71) claveValor -> CIZQ . expListSet CDER
    (84) expresionNewList -> CIZQ . CDER
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic
    (144) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (145) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (146) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (147) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (148) expListSet -> . VARIABLE
    (149) expListSet -> . VARIABLE COMA expListSet

    CDER            shift and go to state 144
    STRING          shift and go to state 249
    ENTERO          shift and go to state 250
    DOUBLE          shift and go to state 251
    BOOL            shift and go to state 252
    VARIABLE        shift and go to state 253
    SETFROM         shift and go to state 156

    expListDynamic                 shift and go to state 247
    expListSet                     shift and go to state 248

state 131

    (72) claveValor -> expresionNewList .

    DOSPUNTOS       reduce using rule 72 (claveValor -> expresionNewList .)
    COMA            reduce using rule 72 (claveValor -> expresionNewList .)
    LDER            reduce using rule 72 (claveValor -> expresionNewList .)


state 132

    (73) claveValor -> SETFROM . PIZQ CIZQ CDER PDER
    (74) claveValor -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 254


state 133

    (208) sentenciaDoWhile -> DO LIZQ . final LDER WHILE PIZQ expresionBool PDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

    final                          shift and go to state 255
    expresionBool                  shift and go to state 6
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 134

    (170) sentenciaIf -> IF PIZQ . expresionBool PDER final
    (171) sentenciaIf -> IF PIZQ . expresionBool PDER LIZQ final LDER
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 170
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 59
    NOT             shift and go to state 46
    ENTERO          shift and go to state 174
    STRING          shift and go to state 175

    expresionBool                  shift and go to state 256
    valorDouble                    shift and go to state 169
    valorBool                      shift and go to state 171
    negacionBool                   shift and go to state 172
    comparacionBool                shift and go to state 207
    valor                          shift and go to state 37
    valorInt                       shift and go to state 173

state 135

    (172) sentenciaElse -> ELSE final .

    PUNTOYCOMA      reduce using rule 172 (sentenciaElse -> ELSE final .)
    VARIABLE        reduce using rule 172 (sentenciaElse -> ELSE final .)
    INT             reduce using rule 172 (sentenciaElse -> ELSE final .)
    DOUBLER         reduce using rule 172 (sentenciaElse -> ELSE final .)
    NUM             reduce using rule 172 (sentenciaElse -> ELSE final .)
    STRINGR         reduce using rule 172 (sentenciaElse -> ELSE final .)
    BOOLR           reduce using rule 172 (sentenciaElse -> ELSE final .)
    DYNAMIC         reduce using rule 172 (sentenciaElse -> ELSE final .)
    VAR             reduce using rule 172 (sentenciaElse -> ELSE final .)
    WHILE           reduce using rule 172 (sentenciaElse -> ELSE final .)
    DO              reduce using rule 172 (sentenciaElse -> ELSE final .)
    IF              reduce using rule 172 (sentenciaElse -> ELSE final .)
    ELSE            reduce using rule 172 (sentenciaElse -> ELSE final .)
    PRINT           reduce using rule 172 (sentenciaElse -> ELSE final .)
    FUNCIONSTDIN    reduce using rule 172 (sentenciaElse -> ELSE final .)
    FUNCIONSTDOUT   reduce using rule 172 (sentenciaElse -> ELSE final .)
    NOT             reduce using rule 172 (sentenciaElse -> ELSE final .)
    ELSEIF          reduce using rule 172 (sentenciaElse -> ELSE final .)
    FOR             reduce using rule 172 (sentenciaElse -> ELSE final .)
    LIST            reduce using rule 172 (sentenciaElse -> ELSE final .)
    CIZQ            reduce using rule 172 (sentenciaElse -> ELSE final .)
    NEWLIST         reduce using rule 172 (sentenciaElse -> ELSE final .)
    SET             reduce using rule 172 (sentenciaElse -> ELSE final .)
    SETFROM         reduce using rule 172 (sentenciaElse -> ELSE final .)
    MAP             reduce using rule 172 (sentenciaElse -> ELSE final .)
    LIZQ            reduce using rule 172 (sentenciaElse -> ELSE final .)
    ENTERO          reduce using rule 172 (sentenciaElse -> ELSE final .)
    DOUBLE          reduce using rule 172 (sentenciaElse -> ELSE final .)
    STRING          reduce using rule 172 (sentenciaElse -> ELSE final .)
    BOOL            reduce using rule 172 (sentenciaElse -> ELSE final .)
    $end            reduce using rule 172 (sentenciaElse -> ELSE final .)
    LDER            reduce using rule 172 (sentenciaElse -> ELSE final .)


state 136

    (173) sentenciaElse -> ELSE LIZQ . final LDER
    (60) expresionMap -> LIZQ . LDER
    (62) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (63) expMap -> . claveValor DOSPUNTOS claveValor
    (64) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (65) claveValor -> . VARIABLE
    (66) claveValor -> . STRING
    (67) claveValor -> . ENTERO
    (68) claveValor -> . DOUBLE
    (69) claveValor -> . BOOL
    (70) claveValor -> . CIZQ expListDynamic CDER
    (71) claveValor -> . CIZQ expListSet CDER
    (72) claveValor -> . expresionNewList
    (73) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (74) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (75) claveValor -> . LIZQ LDER
    (76) claveValor -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 122
    VARIABLE        shift and go to state 259
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 262
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 263
    MAP             shift and go to state 53
    LIZQ            shift and go to state 257
    STRING          shift and go to state 264
    ENTERO          shift and go to state 261
    DOUBLE          shift and go to state 265
    BOOL            shift and go to state 266

    final                          shift and go to state 258
    expMap                         shift and go to state 123
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 260
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    claveValor                     shift and go to state 124
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 137

    (165) imprimir -> PRINT PIZQ . expresion PDER
    (166) imprimir -> PRINT PIZQ . asignacionSimple PDER
    (180) expresion -> . valor operadorMat expresion
    (181) expresion -> . valor
    (182) expresion -> . expresionString
    (183) expresion -> . expresionInt
    (184) expresion -> . expresionDouble
    (185) expresion -> . expresionBool
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 269
    ENTERO          shift and go to state 174
    DOUBLE          shift and go to state 204
    STRING          shift and go to state 205
    FUNCIONSTDIN    shift and go to state 208
    BOOL            shift and go to state 59
    NOT             shift and go to state 46

    expresion                      shift and go to state 267
    asignacionSimple               shift and go to state 268
    valor                          shift and go to state 199
    expresionString                shift and go to state 200
    expresionInt                   shift and go to state 201
    expresionDouble                shift and go to state 202
    expresionBool                  shift and go to state 203
    valorString                    shift and go to state 35
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 206
    valorBool                      shift and go to state 171
    negacionBool                   shift and go to state 172
    comparacionBool                shift and go to state 207
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 209

state 138

    (168) funcionStdout -> FUNCIONSTDOUT PIZQ . expresion PDER
    (169) funcionStdout -> FUNCIONSTDOUT PIZQ . asignacionSimple PDER
    (180) expresion -> . valor operadorMat expresion
    (181) expresion -> . valor
    (182) expresion -> . expresionString
    (183) expresion -> . expresionInt
    (184) expresion -> . expresionDouble
    (185) expresion -> . expresionBool
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 269
    ENTERO          shift and go to state 174
    DOUBLE          shift and go to state 204
    STRING          shift and go to state 205
    FUNCIONSTDIN    shift and go to state 208
    BOOL            shift and go to state 59
    NOT             shift and go to state 46

    expresion                      shift and go to state 270
    asignacionSimple               shift and go to state 271
    valor                          shift and go to state 199
    expresionString                shift and go to state 200
    expresionInt                   shift and go to state 201
    expresionDouble                shift and go to state 202
    expresionBool                  shift and go to state 203
    valorString                    shift and go to state 35
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 206
    valorBool                      shift and go to state 171
    negacionBool                   shift and go to state 172
    comparacionBool                shift and go to state 207
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 209

state 139

    (220) negacionBool -> NOT PIZQ . expresionBool PDER
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 170
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 59
    NOT             shift and go to state 46
    ENTERO          shift and go to state 174
    STRING          shift and go to state 175

    expresionBool                  shift and go to state 272
    valorDouble                    shift and go to state 169
    valorBool                      shift and go to state 171
    negacionBool                   shift and go to state 172
    comparacionBool                shift and go to state 207
    valor                          shift and go to state 37
    valorInt                       shift and go to state 173

state 140

    (174) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER final
    (175) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER LIZQ final LDER
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 170
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 59
    NOT             shift and go to state 46
    ENTERO          shift and go to state 174
    STRING          shift and go to state 175

    expresionBool                  shift and go to state 273
    valorDouble                    shift and go to state 169
    valorBool                      shift and go to state 171
    negacionBool                   shift and go to state 172
    comparacionBool                shift and go to state 207
    valor                          shift and go to state 37
    valorInt                       shift and go to state 173

state 141

    (202) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (186) asignacionFor -> . INT VARIABLE IGUAL expresionInt
    (187) asignacionFor -> . DOUBLER VARIABLE IGUAL expresionDouble
    (188) asignacionFor -> . NUM VARIABLE IGUAL expresionDouble
    (189) asignacionFor -> . DYNAMIC VARIABLE IGUAL expresionInt
    (190) asignacionFor -> . DYNAMIC VARIABLE IGUAL expresionDouble
    (191) asignacionFor -> . VAR VARIABLE IGUAL expresionInt
    (192) asignacionFor -> . VAR VARIABLE IGUAL expresionDouble
    (193) asignacionFor -> . VARIABLE IGUAL expresionInt
    (194) asignacionFor -> . VARIABLE IGUAL expresionDouble

    INT             shift and go to state 276
    DOUBLER         shift and go to state 277
    NUM             shift and go to state 278
    DYNAMIC         shift and go to state 279
    VAR             shift and go to state 280
    VARIABLE        shift and go to state 275

    asignacionFor                  shift and go to state 274

state 142

    (85) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE
    (86) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (89) expresionLista -> LIST MENOR . INT MAYOR VARIABLE
    (90) expresionLista -> LIST MENOR . INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> LIST MENOR . INT MAYOR VARIABLE IGUAL expresionNewList
    (93) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE
    (94) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE
    (98) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE
    (101) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> LIST MENOR . SET MAYOR VARIABLE
    (109) expresionLista -> LIST MENOR . SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> LIST MENOR . SET MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> LIST MENOR . MAP MAYOR VARIABLE
    (113) expresionLista -> LIST MENOR . MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> LIST MENOR . MAP MAYOR VARIABLE IGUAL expresionNewList

    STRINGR         shift and go to state 281
    INT             shift and go to state 282
    DOUBLER         shift and go to state 283
    NUM             shift and go to state 284
    BOOLR           shift and go to state 285
    DYNAMIC         shift and go to state 286
    SET             shift and go to state 287
    MAP             shift and go to state 288


state 143

    (88) expresionLista -> CIZQ expListString . CDER

    CDER            shift and go to state 289


state 144

    (84) expresionNewList -> CIZQ CDER .

    PUNTOYCOMA      reduce using rule 84 (expresionNewList -> CIZQ CDER .)
    DOSPUNTOS       reduce using rule 84 (expresionNewList -> CIZQ CDER .)
    COMA            reduce using rule 84 (expresionNewList -> CIZQ CDER .)
    LDER            reduce using rule 84 (expresionNewList -> CIZQ CDER .)


state 145

    (92) expresionLista -> CIZQ expListInt . CDER

    CDER            shift and go to state 290


state 146

    (96) expresionLista -> CIZQ expListNum . CDER

    CDER            shift and go to state 291


state 147

    (103) expresionLista -> CIZQ expListBool . CDER

    CDER            shift and go to state 292


state 148

    (107) expresionLista -> CIZQ expListDynamic . CDER

    CDER            shift and go to state 293


state 149

    (111) expresionLista -> CIZQ expListSet . CDER

    CDER            shift and go to state 294


state 150

    (115) expresionLista -> CIZQ expListMap . CDER

    CDER            shift and go to state 295


state 151

    (116) expListString -> STRING .
    (117) expListString -> STRING . COMA expListString
    (134) expListDynamic -> STRING .
    (138) expListDynamic -> STRING . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 116 (expListString -> STRING .)
    CDER            reduce using rule 116 (expListString -> STRING .)
    COMA            shift and go to state 296

  ! CDER            [ reduce using rule 134 (expListDynamic -> STRING .) ]


state 152

    (118) expListString -> VARIABLE .
    (119) expListString -> VARIABLE . COMA expListString
    (122) expListInt -> VARIABLE .
    (123) expListInt -> VARIABLE . COMA expListInt
    (128) expListNum -> VARIABLE .
    (129) expListNum -> VARIABLE . COMA expListNum
    (132) expListBool -> VARIABLE .
    (133) expListBool -> VARIABLE . COMA expListBool
    (142) expListDynamic -> VARIABLE .
    (143) expListDynamic -> VARIABLE . COMA expListDynamic
    (148) expListSet -> VARIABLE .
    (149) expListSet -> VARIABLE . COMA expListSet
    (154) expListMap -> VARIABLE .
    (155) expListMap -> VARIABLE . COMA expListMap

  ! reduce/reduce conflict for CDER resolved using rule 118 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 118 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 118 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 118 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 118 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 118 (expListString -> VARIABLE .)
    CDER            reduce using rule 118 (expListString -> VARIABLE .)
    COMA            shift and go to state 297

  ! CDER            [ reduce using rule 122 (expListInt -> VARIABLE .) ]
  ! CDER            [ reduce using rule 128 (expListNum -> VARIABLE .) ]
  ! CDER            [ reduce using rule 132 (expListBool -> VARIABLE .) ]
  ! CDER            [ reduce using rule 142 (expListDynamic -> VARIABLE .) ]
  ! CDER            [ reduce using rule 148 (expListSet -> VARIABLE .) ]
  ! CDER            [ reduce using rule 154 (expListMap -> VARIABLE .) ]


state 153

    (120) expListInt -> ENTERO .
    (121) expListInt -> ENTERO . COMA expListInt
    (124) expListNum -> ENTERO .
    (126) expListNum -> ENTERO . COMA expListNum
    (135) expListDynamic -> ENTERO .
    (139) expListDynamic -> ENTERO . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 120 (expListInt -> ENTERO .)
  ! reduce/reduce conflict for CDER resolved using rule 120 (expListInt -> ENTERO .)
    CDER            reduce using rule 120 (expListInt -> ENTERO .)
    COMA            shift and go to state 298

  ! CDER            [ reduce using rule 124 (expListNum -> ENTERO .) ]
  ! CDER            [ reduce using rule 135 (expListDynamic -> ENTERO .) ]


state 154

    (125) expListNum -> DOUBLE .
    (127) expListNum -> DOUBLE . COMA expListNum
    (136) expListDynamic -> DOUBLE .
    (140) expListDynamic -> DOUBLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 125 (expListNum -> DOUBLE .)
    CDER            reduce using rule 125 (expListNum -> DOUBLE .)
    COMA            shift and go to state 299

  ! CDER            [ reduce using rule 136 (expListDynamic -> DOUBLE .) ]


state 155

    (130) expListBool -> BOOL .
    (131) expListBool -> BOOL . COMA expListBool
    (137) expListDynamic -> BOOL .
    (141) expListDynamic -> BOOL . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 130 (expListBool -> BOOL .)
    CDER            reduce using rule 130 (expListBool -> BOOL .)
    COMA            shift and go to state 300

  ! CDER            [ reduce using rule 137 (expListDynamic -> BOOL .) ]


state 156

    (144) expListSet -> SETFROM . PIZQ CIZQ CDER PDER
    (145) expListSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER
    (146) expListSet -> SETFROM . PIZQ CIZQ CDER PDER COMA expListSet
    (147) expListSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER COMA expListSet

    PIZQ            shift and go to state 301


state 157

    (150) expListMap -> LIZQ . LDER
    (151) expListMap -> LIZQ . expMap LDER
    (152) expListMap -> LIZQ . LDER COMA expListMap
    (153) expListMap -> LIZQ . expMap LDER COMA expListMap
    (63) expMap -> . claveValor DOSPUNTOS claveValor
    (64) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (65) claveValor -> . VARIABLE
    (66) claveValor -> . STRING
    (67) claveValor -> . ENTERO
    (68) claveValor -> . DOUBLE
    (69) claveValor -> . BOOL
    (70) claveValor -> . CIZQ expListDynamic CDER
    (71) claveValor -> . CIZQ expListSet CDER
    (72) claveValor -> . expresionNewList
    (73) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (74) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (75) claveValor -> . LIZQ LDER
    (76) claveValor -> . LIZQ expMap LDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 302
    VARIABLE        shift and go to state 125
    STRING          shift and go to state 126
    ENTERO          shift and go to state 127
    DOUBLE          shift and go to state 128
    BOOL            shift and go to state 129
    CIZQ            shift and go to state 130
    SETFROM         shift and go to state 132
    LIZQ            shift and go to state 121
    NEWLIST         shift and go to state 54

    expMap                         shift and go to state 303
    claveValor                     shift and go to state 124
    expresionNewList               shift and go to state 131

state 158

    (77) expresionSet -> SET VARIABLE .
    (79) expresionSet -> SET VARIABLE . IGUAL SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> SET VARIABLE . IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER

    PUNTOYCOMA      reduce using rule 77 (expresionSet -> SET VARIABLE .)
    IGUAL           shift and go to state 304


state 159

    (58) expresionMap -> MAP VARIABLE .
    (59) expresionMap -> MAP VARIABLE . IGUAL LIZQ LDER
    (61) expresionMap -> MAP VARIABLE . IGUAL LIZQ expMap LDER

    $end            reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    PUNTOYCOMA      reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    VARIABLE        reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    INT             reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    DOUBLER         reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    NUM             reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    STRINGR         reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    BOOLR           reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    DYNAMIC         reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    VAR             reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    WHILE           reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    DO              reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    IF              reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    ELSE            reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    PRINT           reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    FUNCIONSTDIN    reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    FUNCIONSTDOUT   reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    NOT             reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    ELSEIF          reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    FOR             reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    LIST            reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    CIZQ            reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    NEWLIST         reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    SET             reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    SETFROM         reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    MAP             reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    LIZQ            reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    ENTERO          reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    DOUBLE          reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    STRING          reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    BOOL            reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    LDER            reduce using rule 58 (expresionMap -> MAP VARIABLE .)
    IGUAL           shift and go to state 305


state 160

    (82) expresionNewList -> NEWLIST PIZQ . PDER
    (83) expresionNewList -> NEWLIST PIZQ . ENTERO PDER

    PDER            shift and go to state 306
    ENTERO          shift and go to state 307


state 161

    (78) expresionSet -> SETFROM PIZQ . CIZQ CDER PDER
    (80) expresionSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 308


state 162

    (2) final -> asignacion PUNTOYCOMA final .

    $end            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VARIABLE        reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    INT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLER         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NUM             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRINGR         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOLR           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VAR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    WHILE           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DO              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    IF              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSE            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PRINT           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NOT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSEIF          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FOR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LIST            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    CIZQ            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NEWLIST         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    SET             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    SETFROM         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    MAP             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LIZQ            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ENTERO          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLE          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRING          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOL            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LDER            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)


state 163

    (4) final -> expresionInt PUNTOYCOMA final .

    $end            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VARIABLE        reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    INT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLER         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NUM             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRINGR         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOLR           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VAR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    WHILE           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DO              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    IF              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSE            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PRINT           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NOT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSEIF          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FOR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LIST            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    CIZQ            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NEWLIST         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    SET             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    SETFROM         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    MAP             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LIZQ            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ENTERO          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLE          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRING          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOL            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LDER            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)


state 164

    (6) final -> expresionDouble PUNTOYCOMA final .

    $end            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VARIABLE        reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    INT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLER         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NUM             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRINGR         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOLR           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VAR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    WHILE           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DO              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    IF              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSE            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PRINT           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NOT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSEIF          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FOR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LIST            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    CIZQ            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NEWLIST         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    SET             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    SETFROM         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    MAP             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LIZQ            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ENTERO          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLE          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRING          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOL            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LDER            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)


state 165

    (8) final -> expresionString PUNTOYCOMA final .

    $end            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VARIABLE        reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    INT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLER         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NUM             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRINGR         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOLR           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VAR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    WHILE           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DO              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    IF              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSE            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PRINT           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NOT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSEIF          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FOR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LIST            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    CIZQ            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NEWLIST         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    SET             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    SETFROM         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    MAP             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LIZQ            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ENTERO          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLE          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRING          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOL            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LDER            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)


state 166

    (10) final -> expresionBool PUNTOYCOMA final .

    $end            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    INT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NUM             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VAR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DO              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    IF              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NOT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FOR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LIST            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    SET             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    MAP             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LIZQ            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRING          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LDER            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)


state 167

    (221) comparacionBool -> expresionBool operadorLogico expresionBool .
    (221) comparacionBool -> expresionBool . operadorLogico expresionBool
    (222) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (253) operadorLogico -> . AND
    (254) operadorLogico -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNTOYCOMA      reduce using rule 221 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    PDER            reduce using rule 221 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    AND             shift and go to state 66
    OR              shift and go to state 67

  ! AND             [ reduce using rule 221 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]
  ! OR              [ reduce using rule 221 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]

    operadorLogico                 shift and go to state 65

state 168

    (222) comparacionBool -> expresionBool operadorLogico comparacionBool .
    (217) expresionBool -> comparacionBool .

  ! reduce/reduce conflict for AND resolved using rule 217 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for OR resolved using rule 217 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 217 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PDER resolved using rule 217 (expresionBool -> comparacionBool .)
    AND             reduce using rule 217 (expresionBool -> comparacionBool .)
    OR              reduce using rule 217 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 217 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 217 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 222 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! AND             [ reduce using rule 222 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! OR              [ reduce using rule 222 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! PDER            [ reduce using rule 222 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]


state 169

    (211) expresionBool -> valorDouble . comparadorMat expresionDouble
    (214) expresionBool -> valorDouble . comparadorMat VARIABLE
    (247) comparadorMat -> . DIGUAL
    (248) comparadorMat -> . NOIGUAL
    (249) comparadorMat -> . MAYOR
    (250) comparadorMat -> . MENOR
    (251) comparadorMat -> . MAYIGUAL
    (252) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 91
    NOIGUAL         shift and go to state 92
    MAYOR           shift and go to state 93
    MENOR           shift and go to state 94
    MAYIGUAL        shift and go to state 95
    MENIGUAL        shift and go to state 96

    comparadorMat                  shift and go to state 309

state 170

    (212) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (213) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (210) valorBool -> VARIABLE .
    (177) valor -> VARIABLE .
    (234) valorInt -> VARIABLE .
    (247) comparadorMat -> . DIGUAL
    (248) comparadorMat -> . NOIGUAL
    (249) comparadorMat -> . MAYOR
    (250) comparadorMat -> . MENOR
    (251) comparadorMat -> . MAYIGUAL
    (252) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    AND             reduce using rule 210 (valorBool -> VARIABLE .)
    OR              reduce using rule 210 (valorBool -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 210 (valorBool -> VARIABLE .)
    PDER            reduce using rule 210 (valorBool -> VARIABLE .)
    IS              reduce using rule 177 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 177 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 91
    NOIGUAL         shift and go to state 92
    MAYOR           shift and go to state 93
    MENOR           shift and go to state 94
    MAYIGUAL        shift and go to state 95
    MENIGUAL        shift and go to state 96

  ! DIGUAL          [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 234 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 310

state 171

    (215) expresionBool -> valorBool .

    AND             reduce using rule 215 (expresionBool -> valorBool .)
    OR              reduce using rule 215 (expresionBool -> valorBool .)
    PUNTOYCOMA      reduce using rule 215 (expresionBool -> valorBool .)
    PDER            reduce using rule 215 (expresionBool -> valorBool .)


state 172

    (216) expresionBool -> negacionBool .

    AND             reduce using rule 216 (expresionBool -> negacionBool .)
    OR              reduce using rule 216 (expresionBool -> negacionBool .)
    PUNTOYCOMA      reduce using rule 216 (expresionBool -> negacionBool .)
    PDER            reduce using rule 216 (expresionBool -> negacionBool .)


state 173

    (238) valorDouble -> valorInt .

    DIGUAL          reduce using rule 238 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 238 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 238 (valorDouble -> valorInt .)
    MENOR           reduce using rule 238 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 238 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 238 (valorDouble -> valorInt .)
    SUMA            reduce using rule 238 (valorDouble -> valorInt .)
    RESTA           reduce using rule 238 (valorDouble -> valorInt .)
    MULTI           reduce using rule 238 (valorDouble -> valorInt .)
    DIV             reduce using rule 238 (valorDouble -> valorInt .)
    DIVENTERO       reduce using rule 238 (valorDouble -> valorInt .)
    MOD             reduce using rule 238 (valorDouble -> valorInt .)
    PUNTOYCOMA      reduce using rule 238 (valorDouble -> valorInt .)
    AND             reduce using rule 238 (valorDouble -> valorInt .)
    OR              reduce using rule 238 (valorDouble -> valorInt .)
    PDER            reduce using rule 238 (valorDouble -> valorInt .)


state 174

    (176) valor -> ENTERO .
    (233) valorInt -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 176 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 176 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 176 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 176 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 176 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 176 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 176 (valor -> ENTERO .)
  ! reduce/reduce conflict for PDER resolved using rule 176 (valor -> ENTERO .)
    IS              reduce using rule 176 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 176 (valor -> ENTERO .)
    SUMA            reduce using rule 176 (valor -> ENTERO .)
    RESTA           reduce using rule 176 (valor -> ENTERO .)
    MULTI           reduce using rule 176 (valor -> ENTERO .)
    DIV             reduce using rule 176 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 176 (valor -> ENTERO .)
    MOD             reduce using rule 176 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 176 (valor -> ENTERO .)
    PDER            reduce using rule 176 (valor -> ENTERO .)
    DIGUAL          reduce using rule 233 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 233 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 233 (valorInt -> ENTERO .)
    MENOR           reduce using rule 233 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 233 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 233 (valorInt -> ENTERO .)

  ! SUMA            [ reduce using rule 233 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 233 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 233 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 233 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 233 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 233 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 233 (valorInt -> ENTERO .) ]
  ! PDER            [ reduce using rule 233 (valorInt -> ENTERO .) ]


state 175

    (179) valor -> STRING .

    IS              reduce using rule 179 (valor -> STRING .)
    ISNEGADO        reduce using rule 179 (valor -> STRING .)


state 176

    (12) final -> expresionBoolFor PUNTOYCOMA final .

    $end            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    VARIABLE        reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    INT             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DOUBLER         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NUM             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    STRINGR         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BOOLR           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    VAR             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    WHILE           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DO              reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    IF              reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ELSE            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    PRINT           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NOT             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ELSEIF          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FOR             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LIST            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    CIZQ            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NEWLIST         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    SET             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    SETFROM         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    MAP             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LIZQ            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ENTERO          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DOUBLE          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    STRING          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BOOL            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LDER            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)


state 177

    (16) final -> sentenciaWhile PUNTOYCOMA final .

    $end            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    INT             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NUM             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    VAR             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DO              reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    IF              reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NOT             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FOR             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LIST            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    CIZQ            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NEWLIST         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    SET             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    SETFROM         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    MAP             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LIZQ            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRING          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LDER            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)


state 178

    (18) final -> sentenciaDoWhile PUNTOYCOMA final .

    $end            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    INT             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NUM             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VAR             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DO              reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    IF              reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NOT             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FOR             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LIST            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    CIZQ            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NEWLIST         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    SET             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    SETFROM         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    MAP             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LIZQ            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRING          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LDER            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)


state 179

    (20) final -> sentenciaIf PUNTOYCOMA final .

    $end            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    INT             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NUM             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    VAR             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    WHILE           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DO              reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    IF              reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSE            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    PRINT           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NOT             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FOR             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LIST            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    CIZQ            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NEWLIST         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    SET             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    SETFROM         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    MAP             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LIZQ            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    STRING          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOL            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LDER            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)


state 180

    (24) final -> sentenciaElse PUNTOYCOMA final .

    $end            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    VARIABLE        reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    INT             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DOUBLER         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NUM             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    STRINGR         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    BOOLR           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    VAR             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    WHILE           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DO              reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    IF              reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ELSE            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    PRINT           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NOT             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ELSEIF          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FOR             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LIST            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    CIZQ            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NEWLIST         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    SET             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    SETFROM         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    MAP             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LIZQ            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ENTERO          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DOUBLE          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    STRING          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    BOOL            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LDER            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)


state 181

    (28) final -> imprimir PUNTOYCOMA final .

    $end            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    VARIABLE        reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    INT             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DOUBLER         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NUM             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    STRINGR         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    BOOLR           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    VAR             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    WHILE           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DO              reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    IF              reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ELSE            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    PRINT           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NOT             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ELSEIF          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FOR             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LIST            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    CIZQ            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NEWLIST         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    SET             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    SETFROM         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    MAP             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LIZQ            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ENTERO          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DOUBLE          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    STRING          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    BOOL            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LDER            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)


state 182

    (30) final -> funcionStdin PUNTOYCOMA final .

    $end            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    VARIABLE        reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    INT             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLER         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NUM             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    STRINGR         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    BOOLR           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    VAR             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    WHILE           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DO              reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    IF              reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ELSE            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    PRINT           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NOT             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ELSEIF          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FOR             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LIST            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    CIZQ            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NEWLIST         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    SET             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    SETFROM         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    MAP             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LIZQ            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ENTERO          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLE          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    STRING          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    BOOL            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LDER            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)


state 183

    (32) final -> funcionStdout PUNTOYCOMA final .

    $end            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    VARIABLE        reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    INT             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLER         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NUM             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    STRINGR         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    BOOLR           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    VAR             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    WHILE           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DO              reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    IF              reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ELSE            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    PRINT           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NOT             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ELSEIF          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FOR             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LIST            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    CIZQ            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NEWLIST         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    SET             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    SETFROM         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    MAP             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LIZQ            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ENTERO          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLE          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    STRING          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    BOOL            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LDER            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)


state 184

    (34) final -> negacionBool PUNTOYCOMA final .

    $end            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    INT             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DO              reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    IF              reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FOR             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LIST            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    SET             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    MAP             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LIZQ            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)


state 185

    (35) final -> comparacionBool PUNTOYCOMA final .

    $end            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    INT             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DO              reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    IF              reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FOR             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LIST            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    SET             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    MAP             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LIZQ            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)


state 186

    (37) final -> sentenciaElseIf PUNTOYCOMA final .

    $end            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    INT             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NUM             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    VAR             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    WHILE           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DO              reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    IF              reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ELSE            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    PRINT           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NOT             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FOR             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LIST            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    CIZQ            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NEWLIST         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    SET             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    SETFROM         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    MAP             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LIZQ            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    STRING          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BOOL            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LDER            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)


state 187

    (41) final -> sentenciaFor PUNTOYCOMA final .

    $end            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    VARIABLE        reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    INT             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DOUBLER         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NUM             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    STRINGR         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    BOOLR           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    VAR             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    WHILE           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DO              reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    IF              reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ELSE            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    PRINT           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NOT             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ELSEIF          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FOR             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LIST            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    CIZQ            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NEWLIST         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    SET             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    SETFROM         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    MAP             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LIZQ            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ENTERO          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DOUBLE          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    STRING          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    BOOL            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LDER            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)


state 188

    (45) final -> sentenciaSubstring PUNTOYCOMA final .

    $end            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VARIABLE        reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    INT             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLER         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NUM             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRINGR         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOLR           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VAR             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    WHILE           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DO              reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    IF              reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSE            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PRINT           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NOT             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSEIF          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FOR             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LIST            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    CIZQ            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NEWLIST         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    SET             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    SETFROM         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    MAP             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LIZQ            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ENTERO          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLE          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRING          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOL            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LDER            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)


state 189

    (47) final -> VARIABLE DSUMA PUNTOYCOMA . final
    (48) final -> VARIABLE DSUMA PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    LDER            reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]

    final                          shift and go to state 311
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 190

    (49) final -> VARIABLE DRESTA PUNTOYCOMA . final
    (50) final -> VARIABLE DRESTA PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    LDER            reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    LIZQ            shift and go to state 39
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

  ! VARIABLE        [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]

    final                          shift and go to state 312
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 191

    (213) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (197) expresionBoolFor -> VARIABLE comparadorMat VARIABLE .
    (234) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 197 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 197 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 213 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 213 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 213 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 213 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 197 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 234 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 234 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 234 (valorInt -> VARIABLE .)
    DIV             reduce using rule 234 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 234 (valorInt -> VARIABLE .)
    MOD             reduce using rule 234 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 213 (expresionBool -> VARIABLE comparadorMat VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 234 (valorInt -> VARIABLE .) ]


state 192

    (212) expresionBool -> VARIABLE comparadorMat expresionDouble .
    (196) expresionBoolFor -> VARIABLE comparadorMat expresionDouble .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 196 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 212 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 212 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 196 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 212 (expresionBool -> VARIABLE comparadorMat expresionDouble .) ]


state 193

    (239) expresionDouble -> valorDouble . operadorMat expresionDouble
    (240) expresionDouble -> valorDouble .
    (241) operadorMat -> . SUMA
    (242) operadorMat -> . RESTA
    (243) operadorMat -> . MULTI
    (244) operadorMat -> . DIV
    (245) operadorMat -> . DIVENTERO
    (246) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 240 (expresionDouble -> valorDouble .)
    AND             reduce using rule 240 (expresionDouble -> valorDouble .)
    OR              reduce using rule 240 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 240 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 108
    RESTA           shift and go to state 109
    MULTI           shift and go to state 110
    DIV             shift and go to state 111
    DIVENTERO       shift and go to state 112
    MOD             shift and go to state 113

    operadorMat                    shift and go to state 114

state 194

    (237) valorDouble -> DOUBLE .

    SUMA            reduce using rule 237 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 237 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 237 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 237 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 237 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 237 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 237 (valorDouble -> DOUBLE .)
    AND             reduce using rule 237 (valorDouble -> DOUBLE .)
    OR              reduce using rule 237 (valorDouble -> DOUBLE .)
    PDER            reduce using rule 237 (valorDouble -> DOUBLE .)


state 195

    (233) valorInt -> ENTERO .

    SUMA            reduce using rule 233 (valorInt -> ENTERO .)
    RESTA           reduce using rule 233 (valorInt -> ENTERO .)
    MULTI           reduce using rule 233 (valorInt -> ENTERO .)
    DIV             reduce using rule 233 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 233 (valorInt -> ENTERO .)
    MOD             reduce using rule 233 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 233 (valorInt -> ENTERO .)
    AND             reduce using rule 233 (valorInt -> ENTERO .)
    OR              reduce using rule 233 (valorInt -> ENTERO .)
    PDER            reduce using rule 233 (valorInt -> ENTERO .)


state 196

    (231) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO PDER
    (232) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 313


state 197

    (177) valor -> VARIABLE .
    (212) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (213) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (224) valorString -> VARIABLE .
    (234) valorInt -> VARIABLE .
    (210) valorBool -> VARIABLE .
    (231) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (247) comparadorMat -> . DIGUAL
    (248) comparadorMat -> . NOIGUAL
    (249) comparadorMat -> . MAYOR
    (250) comparadorMat -> . MENOR
    (251) comparadorMat -> . MAYIGUAL
    (252) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 177 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 177 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 177 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 177 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 177 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 177 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 177 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 177 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 177 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 177 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 177 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 177 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 177 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IS              reduce using rule 177 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 177 (valor -> VARIABLE .)
    SUMA            reduce using rule 177 (valor -> VARIABLE .)
    RESTA           reduce using rule 177 (valor -> VARIABLE .)
    MULTI           reduce using rule 177 (valor -> VARIABLE .)
    DIV             reduce using rule 177 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 177 (valor -> VARIABLE .)
    MOD             reduce using rule 177 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 177 (valor -> VARIABLE .)
    PDER            reduce using rule 177 (valor -> VARIABLE .)
    CIZQ            reduce using rule 224 (valorString -> VARIABLE .)
    AND             reduce using rule 210 (valorBool -> VARIABLE .)
    OR              reduce using rule 210 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 89
    DIGUAL          shift and go to state 91
    NOIGUAL         shift and go to state 92
    MAYOR           shift and go to state 93
    MENOR           shift and go to state 94
    MAYIGUAL        shift and go to state 95
    MENIGUAL        shift and go to state 96

  ! SUMA            [ reduce using rule 224 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 224 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 224 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 210 (valorBool -> VARIABLE .) ]
  ! PDER            [ reduce using rule 210 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 310

state 198

    (164) asignacionSimple -> VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 164 (asignacionSimple -> VARIABLE IGUAL expresion .)
    PDER            reduce using rule 164 (asignacionSimple -> VARIABLE IGUAL expresion .)


state 199

    (180) expresion -> valor . operadorMat expresion
    (181) expresion -> valor .
    (218) expresionBool -> valor . IS objeto
    (219) expresionBool -> valor . ISNEGADO objeto
    (241) operadorMat -> . SUMA
    (242) operadorMat -> . RESTA
    (243) operadorMat -> . MULTI
    (244) operadorMat -> . DIV
    (245) operadorMat -> . DIVENTERO
    (246) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 181 (expresion -> valor .)
    PDER            reduce using rule 181 (expresion -> valor .)
    IS              shift and go to state 118
    ISNEGADO        shift and go to state 119
    SUMA            shift and go to state 108
    RESTA           shift and go to state 109
    MULTI           shift and go to state 110
    DIV             shift and go to state 111
    DIVENTERO       shift and go to state 112
    MOD             shift and go to state 113

    operadorMat                    shift and go to state 314

state 200

    (182) expresion -> expresionString .

    PUNTOYCOMA      reduce using rule 182 (expresion -> expresionString .)
    PDER            reduce using rule 182 (expresion -> expresionString .)


state 201

    (183) expresion -> expresionInt .

    PUNTOYCOMA      reduce using rule 183 (expresion -> expresionInt .)
    PDER            reduce using rule 183 (expresion -> expresionInt .)


state 202

    (184) expresion -> expresionDouble .

    PUNTOYCOMA      reduce using rule 184 (expresion -> expresionDouble .)
    PDER            reduce using rule 184 (expresion -> expresionDouble .)


state 203

    (185) expresion -> expresionBool .
    (221) comparacionBool -> expresionBool . operadorLogico expresionBool
    (222) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (253) operadorLogico -> . AND
    (254) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 185 (expresion -> expresionBool .)
    PDER            reduce using rule 185 (expresion -> expresionBool .)
    AND             shift and go to state 66
    OR              shift and go to state 67

    operadorLogico                 shift and go to state 65

state 204

    (178) valor -> DOUBLE .
    (237) valorDouble -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 178 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 178 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 178 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 178 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 178 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 178 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 178 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PDER resolved using rule 178 (valor -> DOUBLE .)
    IS              reduce using rule 178 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 178 (valor -> DOUBLE .)
    SUMA            reduce using rule 178 (valor -> DOUBLE .)
    RESTA           reduce using rule 178 (valor -> DOUBLE .)
    MULTI           reduce using rule 178 (valor -> DOUBLE .)
    DIV             reduce using rule 178 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 178 (valor -> DOUBLE .)
    MOD             reduce using rule 178 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 178 (valor -> DOUBLE .)
    PDER            reduce using rule 178 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 237 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 237 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 237 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 237 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 237 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 237 (valorDouble -> DOUBLE .)

  ! SUMA            [ reduce using rule 237 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 237 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 237 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 237 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 237 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 237 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 237 (valorDouble -> DOUBLE .) ]
  ! PDER            [ reduce using rule 237 (valorDouble -> DOUBLE .) ]


state 205

    (179) valor -> STRING .
    (223) valorString -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 179 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 179 (valor -> STRING .)
  ! reduce/reduce conflict for PDER resolved using rule 179 (valor -> STRING .)
    IS              reduce using rule 179 (valor -> STRING .)
    ISNEGADO        reduce using rule 179 (valor -> STRING .)
    SUMA            reduce using rule 179 (valor -> STRING .)
    RESTA           reduce using rule 179 (valor -> STRING .)
    MULTI           reduce using rule 179 (valor -> STRING .)
    DIV             reduce using rule 179 (valor -> STRING .)
    DIVENTERO       reduce using rule 179 (valor -> STRING .)
    MOD             reduce using rule 179 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 179 (valor -> STRING .)
    PDER            reduce using rule 179 (valor -> STRING .)
    CIZQ            reduce using rule 223 (valorString -> STRING .)

  ! SUMA            [ reduce using rule 223 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 223 (valorString -> STRING .) ]
  ! PDER            [ reduce using rule 223 (valorString -> STRING .) ]


state 206

    (239) expresionDouble -> valorDouble . operadorMat expresionDouble
    (240) expresionDouble -> valorDouble .
    (211) expresionBool -> valorDouble . comparadorMat expresionDouble
    (214) expresionBool -> valorDouble . comparadorMat VARIABLE
    (241) operadorMat -> . SUMA
    (242) operadorMat -> . RESTA
    (243) operadorMat -> . MULTI
    (244) operadorMat -> . DIV
    (245) operadorMat -> . DIVENTERO
    (246) operadorMat -> . MOD
    (247) comparadorMat -> . DIGUAL
    (248) comparadorMat -> . NOIGUAL
    (249) comparadorMat -> . MAYOR
    (250) comparadorMat -> . MENOR
    (251) comparadorMat -> . MAYIGUAL
    (252) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 240 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 240 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 108
    RESTA           shift and go to state 109
    MULTI           shift and go to state 110
    DIV             shift and go to state 111
    DIVENTERO       shift and go to state 112
    MOD             shift and go to state 113
    DIGUAL          shift and go to state 91
    NOIGUAL         shift and go to state 92
    MAYOR           shift and go to state 93
    MENOR           shift and go to state 94
    MAYIGUAL        shift and go to state 95
    MENIGUAL        shift and go to state 96

    operadorMat                    shift and go to state 114
    comparadorMat                  shift and go to state 309

state 207

    (217) expresionBool -> comparacionBool .

    AND             reduce using rule 217 (expresionBool -> comparacionBool .)
    OR              reduce using rule 217 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 217 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 217 (expresionBool -> comparacionBool .)


state 208

    (225) valorString -> FUNCIONSTDIN .

    SUMA            reduce using rule 225 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 225 (valorString -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 225 (valorString -> FUNCIONSTDIN .)
    PDER            reduce using rule 225 (valorString -> FUNCIONSTDIN .)


state 209

    (227) valorString -> sentenciaSubstring .

    SUMA            reduce using rule 227 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 227 (valorString -> sentenciaSubstring .)
    PUNTOYCOMA      reduce using rule 227 (valorString -> sentenciaSubstring .)
    PDER            reduce using rule 227 (valorString -> sentenciaSubstring .)


state 210

    (52) final -> expresionLista PUNTOYCOMA final .

    $end            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    VARIABLE        reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    INT             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DOUBLER         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NUM             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    STRINGR         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    BOOLR           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    VAR             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    WHILE           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DO              reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    IF              reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ELSE            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    PRINT           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NOT             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ELSEIF          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FOR             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LIST            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    CIZQ            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NEWLIST         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    SET             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    SETFROM         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    MAP             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LIZQ            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ENTERO          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DOUBLE          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    STRING          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    BOOL            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LDER            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)


state 211

    (54) final -> expresionNewList PUNTOYCOMA final .

    $end            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    VARIABLE        reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    INT             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DOUBLER         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NUM             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    STRINGR         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    BOOLR           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    VAR             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    WHILE           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DO              reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    IF              reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ELSE            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    PRINT           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NOT             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ELSEIF          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FOR             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LIST            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    CIZQ            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NEWLIST         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    SET             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    SETFROM         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    MAP             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LIZQ            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ENTERO          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DOUBLE          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    STRING          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    BOOL            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LDER            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)


state 212

    (56) final -> expresionSet PUNTOYCOMA final .

    $end            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    VARIABLE        reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    INT             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DOUBLER         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    NUM             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    STRINGR         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    BOOLR           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    VAR             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    WHILE           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DO              reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    IF              reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    ELSE            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    PRINT           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    NOT             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    ELSEIF          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    FOR             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    LIST            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    CIZQ            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    NEWLIST         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    SET             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    SETFROM         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    MAP             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    LIZQ            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    ENTERO          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DOUBLE          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    STRING          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    BOOL            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    LDER            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)


state 213

    (156) asignacion -> INT VARIABLE IGUAL . expresionInt
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE

    ENTERO          shift and go to state 195
    VARIABLE        shift and go to state 222

    expresionInt                   shift and go to state 315
    valorInt                       shift and go to state 220

state 214

    (157) asignacion -> DOUBLER VARIABLE IGUAL . expresionDouble
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 194
    ENTERO          shift and go to state 195
    VARIABLE        shift and go to state 222

    expresionDouble                shift and go to state 316
    valorDouble                    shift and go to state 193
    valorInt                       shift and go to state 173

state 215

    (158) asignacion -> NUM VARIABLE IGUAL . expresionDouble
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 194
    ENTERO          shift and go to state 195
    VARIABLE        shift and go to state 222

    expresionDouble                shift and go to state 317
    valorDouble                    shift and go to state 193
    valorInt                       shift and go to state 173

state 216

    (159) asignacion -> STRINGR VARIABLE IGUAL . expresionString
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 227
    VARIABLE        shift and go to state 228
    FUNCIONSTDIN    shift and go to state 208

    expresionString                shift and go to state 318
    valorString                    shift and go to state 35
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 209

state 217

    (160) asignacion -> BOOLR VARIABLE IGUAL . expresionBool
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 170
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 59
    NOT             shift and go to state 46
    ENTERO          shift and go to state 174
    STRING          shift and go to state 175

    expresionBool                  shift and go to state 319
    valorDouble                    shift and go to state 169
    valorBool                      shift and go to state 171
    negacionBool                   shift and go to state 172
    comparacionBool                shift and go to state 207
    valor                          shift and go to state 37
    valorInt                       shift and go to state 173

state 218

    (161) asignacion -> DYNAMIC VARIABLE IGUAL . expresion
    (180) expresion -> . valor operadorMat expresion
    (181) expresion -> . valor
    (182) expresion -> . expresionString
    (183) expresion -> . expresionInt
    (184) expresion -> . expresionDouble
    (185) expresion -> . expresionBool
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 174
    VARIABLE        shift and go to state 197
    DOUBLE          shift and go to state 204
    STRING          shift and go to state 205
    FUNCIONSTDIN    shift and go to state 208
    BOOL            shift and go to state 59
    NOT             shift and go to state 46

    expresion                      shift and go to state 320
    valor                          shift and go to state 199
    expresionString                shift and go to state 200
    expresionInt                   shift and go to state 201
    expresionDouble                shift and go to state 202
    expresionBool                  shift and go to state 203
    valorString                    shift and go to state 35
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 206
    valorBool                      shift and go to state 171
    negacionBool                   shift and go to state 172
    comparacionBool                shift and go to state 207
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 209

state 219

    (162) asignacion -> VAR VARIABLE IGUAL . expresion
    (180) expresion -> . valor operadorMat expresion
    (181) expresion -> . valor
    (182) expresion -> . expresionString
    (183) expresion -> . expresionInt
    (184) expresion -> . expresionDouble
    (185) expresion -> . expresionBool
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 174
    VARIABLE        shift and go to state 197
    DOUBLE          shift and go to state 204
    STRING          shift and go to state 205
    FUNCIONSTDIN    shift and go to state 208
    BOOL            shift and go to state 59
    NOT             shift and go to state 46

    expresion                      shift and go to state 321
    valor                          shift and go to state 199
    expresionString                shift and go to state 200
    expresionInt                   shift and go to state 201
    expresionDouble                shift and go to state 202
    expresionBool                  shift and go to state 203
    valorString                    shift and go to state 35
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 206
    valorBool                      shift and go to state 171
    negacionBool                   shift and go to state 172
    comparacionBool                shift and go to state 207
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 209

state 220

    (235) expresionInt -> valorInt . operadorMat expresionInt
    (236) expresionInt -> valorInt .
    (241) operadorMat -> . SUMA
    (242) operadorMat -> . RESTA
    (243) operadorMat -> . MULTI
    (244) operadorMat -> . DIV
    (245) operadorMat -> . DIVENTERO
    (246) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 236 (expresionInt -> valorInt .)
    PDER            reduce using rule 236 (expresionInt -> valorInt .)
    SUMA            shift and go to state 108
    RESTA           shift and go to state 109
    MULTI           shift and go to state 110
    DIV             shift and go to state 111
    DIVENTERO       shift and go to state 112
    MOD             shift and go to state 113

    operadorMat                    shift and go to state 107

state 221

    (235) expresionInt -> valorInt operadorMat expresionInt .

    PUNTOYCOMA      reduce using rule 235 (expresionInt -> valorInt operadorMat expresionInt .)
    PDER            reduce using rule 235 (expresionInt -> valorInt operadorMat expresionInt .)


state 222

    (234) valorInt -> VARIABLE .

    SUMA            reduce using rule 234 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 234 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 234 (valorInt -> VARIABLE .)
    DIV             reduce using rule 234 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 234 (valorInt -> VARIABLE .)
    MOD             reduce using rule 234 (valorInt -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 234 (valorInt -> VARIABLE .)
    PDER            reduce using rule 234 (valorInt -> VARIABLE .)
    AND             reduce using rule 234 (valorInt -> VARIABLE .)
    OR              reduce using rule 234 (valorInt -> VARIABLE .)


state 223

    (239) expresionDouble -> valorDouble operadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 239 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    AND             reduce using rule 239 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    OR              reduce using rule 239 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PDER            reduce using rule 239 (expresionDouble -> valorDouble operadorMat expresionDouble .)


state 224

    (211) expresionBool -> valorDouble comparadorMat expresionDouble .
    (195) expresionBoolFor -> valorDouble comparadorMat expresionDouble .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 195 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 211 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 211 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 195 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 211 (expresionBool -> valorDouble comparadorMat expresionDouble .) ]


state 225

    (214) expresionBool -> valorDouble comparadorMat VARIABLE .
    (198) expresionBoolFor -> valorDouble comparadorMat VARIABLE .
    (234) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 198 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 198 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 214 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 214 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 214 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 214 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 198 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 234 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 234 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 234 (valorInt -> VARIABLE .)
    DIV             reduce using rule 234 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 234 (valorInt -> VARIABLE .)
    MOD             reduce using rule 234 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 214 (expresionBool -> valorDouble comparadorMat VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 234 (valorInt -> VARIABLE .) ]


state 226

    (228) expresionString -> valorString SUMA expresionString .

    PUNTOYCOMA      reduce using rule 228 (expresionString -> valorString SUMA expresionString .)
    PDER            reduce using rule 228 (expresionString -> valorString SUMA expresionString .)


state 227

    (223) valorString -> STRING .

    SUMA            reduce using rule 223 (valorString -> STRING .)
    CIZQ            reduce using rule 223 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 223 (valorString -> STRING .)
    PDER            reduce using rule 223 (valorString -> STRING .)


state 228

    (224) valorString -> VARIABLE .
    (231) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    SUMA            reduce using rule 224 (valorString -> VARIABLE .)
    CIZQ            reduce using rule 224 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 224 (valorString -> VARIABLE .)
    PDER            reduce using rule 224 (valorString -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 89


state 229

    (230) expresionIndexString -> valorString CIZQ ENTERO . CDER

    CDER            shift and go to state 322


state 230

    (218) expresionBool -> valor IS objeto .

    PUNTOYCOMA      reduce using rule 218 (expresionBool -> valor IS objeto .)
    AND             reduce using rule 218 (expresionBool -> valor IS objeto .)
    OR              reduce using rule 218 (expresionBool -> valor IS objeto .)
    PDER            reduce using rule 218 (expresionBool -> valor IS objeto .)


state 231

    (255) objeto -> STRINGR .

    PUNTOYCOMA      reduce using rule 255 (objeto -> STRINGR .)
    AND             reduce using rule 255 (objeto -> STRINGR .)
    OR              reduce using rule 255 (objeto -> STRINGR .)
    PDER            reduce using rule 255 (objeto -> STRINGR .)


state 232

    (256) objeto -> INT .

    PUNTOYCOMA      reduce using rule 256 (objeto -> INT .)
    AND             reduce using rule 256 (objeto -> INT .)
    OR              reduce using rule 256 (objeto -> INT .)
    PDER            reduce using rule 256 (objeto -> INT .)


state 233

    (257) objeto -> DOUBLER .

    PUNTOYCOMA      reduce using rule 257 (objeto -> DOUBLER .)
    AND             reduce using rule 257 (objeto -> DOUBLER .)
    OR              reduce using rule 257 (objeto -> DOUBLER .)
    PDER            reduce using rule 257 (objeto -> DOUBLER .)


state 234

    (258) objeto -> NUM .

    PUNTOYCOMA      reduce using rule 258 (objeto -> NUM .)
    AND             reduce using rule 258 (objeto -> NUM .)
    OR              reduce using rule 258 (objeto -> NUM .)
    PDER            reduce using rule 258 (objeto -> NUM .)


state 235

    (259) objeto -> VAR .

    PUNTOYCOMA      reduce using rule 259 (objeto -> VAR .)
    AND             reduce using rule 259 (objeto -> VAR .)
    OR              reduce using rule 259 (objeto -> VAR .)
    PDER            reduce using rule 259 (objeto -> VAR .)


state 236

    (260) objeto -> DYNAMIC .

    PUNTOYCOMA      reduce using rule 260 (objeto -> DYNAMIC .)
    AND             reduce using rule 260 (objeto -> DYNAMIC .)
    OR              reduce using rule 260 (objeto -> DYNAMIC .)
    PDER            reduce using rule 260 (objeto -> DYNAMIC .)


state 237

    (261) objeto -> LIST .

    PUNTOYCOMA      reduce using rule 261 (objeto -> LIST .)
    AND             reduce using rule 261 (objeto -> LIST .)
    OR              reduce using rule 261 (objeto -> LIST .)
    PDER            reduce using rule 261 (objeto -> LIST .)


state 238

    (262) objeto -> BOOL .

    PUNTOYCOMA      reduce using rule 262 (objeto -> BOOL .)
    AND             reduce using rule 262 (objeto -> BOOL .)
    OR              reduce using rule 262 (objeto -> BOOL .)
    PDER            reduce using rule 262 (objeto -> BOOL .)


state 239

    (263) objeto -> MAP .

    PUNTOYCOMA      reduce using rule 263 (objeto -> MAP .)
    AND             reduce using rule 263 (objeto -> MAP .)
    OR              reduce using rule 263 (objeto -> MAP .)
    PDER            reduce using rule 263 (objeto -> MAP .)


state 240

    (264) objeto -> SET .

    PUNTOYCOMA      reduce using rule 264 (objeto -> SET .)
    AND             reduce using rule 264 (objeto -> SET .)
    OR              reduce using rule 264 (objeto -> SET .)
    PDER            reduce using rule 264 (objeto -> SET .)


state 241

    (219) expresionBool -> valor ISNEGADO objeto .

    PUNTOYCOMA      reduce using rule 219 (expresionBool -> valor ISNEGADO objeto .)
    AND             reduce using rule 219 (expresionBool -> valor ISNEGADO objeto .)
    OR              reduce using rule 219 (expresionBool -> valor ISNEGADO objeto .)
    PDER            reduce using rule 219 (expresionBool -> valor ISNEGADO objeto .)


state 242

    (206) sentenciaWhile -> WHILE PIZQ expresionBool . PDER LIZQ final LDER
    (207) sentenciaWhile -> WHILE PIZQ expresionBool . PDER final
    (221) comparacionBool -> expresionBool . operadorLogico expresionBool
    (222) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (253) operadorLogico -> . AND
    (254) operadorLogico -> . OR

    PDER            shift and go to state 323
    AND             shift and go to state 66
    OR              shift and go to state 67

    operadorLogico                 shift and go to state 65

state 243

    (75) claveValor -> LIZQ LDER .

    DOSPUNTOS       reduce using rule 75 (claveValor -> LIZQ LDER .)
    COMA            reduce using rule 75 (claveValor -> LIZQ LDER .)
    LDER            reduce using rule 75 (claveValor -> LIZQ LDER .)


state 244

    (76) claveValor -> LIZQ expMap . LDER

    LDER            shift and go to state 324


state 245

    (62) expresionMap -> LIZQ expMap LDER .

    $end            reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    PUNTOYCOMA      reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    VARIABLE        reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    INT             reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    DOUBLER         reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    NUM             reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    STRINGR         reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    BOOLR           reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    DYNAMIC         reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    VAR             reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    WHILE           reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    DO              reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    IF              reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    ELSE            reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    PRINT           reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    FUNCIONSTDIN    reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    FUNCIONSTDOUT   reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    NOT             reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    ELSEIF          reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    FOR             reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    LIST            reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    CIZQ            reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    NEWLIST         reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    SET             reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    SETFROM         reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    MAP             reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    LIZQ            reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    ENTERO          reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    DOUBLE          reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    STRING          reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    BOOL            reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    LDER            reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)


state 246

    (63) expMap -> claveValor DOSPUNTOS . claveValor
    (64) expMap -> claveValor DOSPUNTOS . claveValor COMA expMap
    (65) claveValor -> . VARIABLE
    (66) claveValor -> . STRING
    (67) claveValor -> . ENTERO
    (68) claveValor -> . DOUBLE
    (69) claveValor -> . BOOL
    (70) claveValor -> . CIZQ expListDynamic CDER
    (71) claveValor -> . CIZQ expListSet CDER
    (72) claveValor -> . expresionNewList
    (73) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (74) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (75) claveValor -> . LIZQ LDER
    (76) claveValor -> . LIZQ expMap LDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER

    VARIABLE        shift and go to state 125
    STRING          shift and go to state 126
    ENTERO          shift and go to state 127
    DOUBLE          shift and go to state 128
    BOOL            shift and go to state 129
    CIZQ            shift and go to state 130
    SETFROM         shift and go to state 132
    LIZQ            shift and go to state 121
    NEWLIST         shift and go to state 54

    claveValor                     shift and go to state 325
    expresionNewList               shift and go to state 131

state 247

    (70) claveValor -> CIZQ expListDynamic . CDER

    CDER            shift and go to state 326


state 248

    (71) claveValor -> CIZQ expListSet . CDER

    CDER            shift and go to state 327


state 249

    (134) expListDynamic -> STRING .
    (138) expListDynamic -> STRING . COMA expListDynamic

    CDER            reduce using rule 134 (expListDynamic -> STRING .)
    COMA            shift and go to state 328


state 250

    (135) expListDynamic -> ENTERO .
    (139) expListDynamic -> ENTERO . COMA expListDynamic

    CDER            reduce using rule 135 (expListDynamic -> ENTERO .)
    COMA            shift and go to state 329


state 251

    (136) expListDynamic -> DOUBLE .
    (140) expListDynamic -> DOUBLE . COMA expListDynamic

    CDER            reduce using rule 136 (expListDynamic -> DOUBLE .)
    COMA            shift and go to state 330


state 252

    (137) expListDynamic -> BOOL .
    (141) expListDynamic -> BOOL . COMA expListDynamic

    CDER            reduce using rule 137 (expListDynamic -> BOOL .)
    COMA            shift and go to state 331


state 253

    (142) expListDynamic -> VARIABLE .
    (143) expListDynamic -> VARIABLE . COMA expListDynamic
    (148) expListSet -> VARIABLE .
    (149) expListSet -> VARIABLE . COMA expListSet

  ! reduce/reduce conflict for CDER resolved using rule 142 (expListDynamic -> VARIABLE .)
    CDER            reduce using rule 142 (expListDynamic -> VARIABLE .)
    COMA            shift and go to state 332

  ! CDER            [ reduce using rule 148 (expListSet -> VARIABLE .) ]


state 254

    (73) claveValor -> SETFROM PIZQ . CIZQ CDER PDER
    (74) claveValor -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 333


state 255

    (208) sentenciaDoWhile -> DO LIZQ final . LDER WHILE PIZQ expresionBool PDER

    LDER            shift and go to state 334


state 256

    (170) sentenciaIf -> IF PIZQ expresionBool . PDER final
    (171) sentenciaIf -> IF PIZQ expresionBool . PDER LIZQ final LDER
    (221) comparacionBool -> expresionBool . operadorLogico expresionBool
    (222) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (253) operadorLogico -> . AND
    (254) operadorLogico -> . OR

    PDER            shift and go to state 335
    AND             shift and go to state 66
    OR              shift and go to state 67

    operadorLogico                 shift and go to state 65

state 257

    (60) expresionMap -> LIZQ . LDER
    (62) expresionMap -> LIZQ . expMap LDER
    (75) claveValor -> LIZQ . LDER
    (76) claveValor -> LIZQ . expMap LDER
    (63) expMap -> . claveValor DOSPUNTOS claveValor
    (64) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (65) claveValor -> . VARIABLE
    (66) claveValor -> . STRING
    (67) claveValor -> . ENTERO
    (68) claveValor -> . DOUBLE
    (69) claveValor -> . BOOL
    (70) claveValor -> . CIZQ expListDynamic CDER
    (71) claveValor -> . CIZQ expListSet CDER
    (72) claveValor -> . expresionNewList
    (73) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (74) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (75) claveValor -> . LIZQ LDER
    (76) claveValor -> . LIZQ expMap LDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 336
    VARIABLE        shift and go to state 125
    STRING          shift and go to state 126
    ENTERO          shift and go to state 127
    DOUBLE          shift and go to state 128
    BOOL            shift and go to state 129
    CIZQ            shift and go to state 130
    SETFROM         shift and go to state 132
    LIZQ            shift and go to state 121
    NEWLIST         shift and go to state 54

    expMap                         shift and go to state 337
    claveValor                     shift and go to state 124
    expresionNewList               shift and go to state 131

state 258

    (173) sentenciaElse -> ELSE LIZQ final . LDER

    LDER            shift and go to state 338


state 259

    (47) final -> VARIABLE . DSUMA PUNTOYCOMA final
    (48) final -> VARIABLE . DSUMA PUNTOYCOMA
    (49) final -> VARIABLE . DRESTA PUNTOYCOMA final
    (50) final -> VARIABLE . DRESTA PUNTOYCOMA
    (212) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (213) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (196) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (197) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (231) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) claveValor -> VARIABLE .
    (164) asignacionSimple -> VARIABLE . IGUAL expresion
    (234) valorInt -> VARIABLE .
    (224) valorString -> VARIABLE .
    (210) valorBool -> VARIABLE .
    (177) valor -> VARIABLE .
    (247) comparadorMat -> . DIGUAL
    (248) comparadorMat -> . NOIGUAL
    (249) comparadorMat -> . MAYOR
    (250) comparadorMat -> . MENOR
    (251) comparadorMat -> . MAYIGUAL
    (252) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 224 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 224 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 210 (valorBool -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    DSUMA           shift and go to state 86
    DRESTA          shift and go to state 87
    FUNCIONSUBSTRING shift and go to state 89
    DOSPUNTOS       reduce using rule 65 (claveValor -> VARIABLE .)
    IGUAL           shift and go to state 90
    RESTA           reduce using rule 234 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 234 (valorInt -> VARIABLE .)
    DIV             reduce using rule 234 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 234 (valorInt -> VARIABLE .)
    MOD             reduce using rule 234 (valorInt -> VARIABLE .)
    SUMA            reduce using rule 224 (valorString -> VARIABLE .)
    CIZQ            reduce using rule 224 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 210 (valorBool -> VARIABLE .)
    AND             reduce using rule 210 (valorBool -> VARIABLE .)
    OR              reduce using rule 210 (valorBool -> VARIABLE .)
    IS              reduce using rule 177 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 177 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 91
    NOIGUAL         shift and go to state 92
    MAYOR           shift and go to state 93
    MENOR           shift and go to state 94
    MAYIGUAL        shift and go to state 95
    MENIGUAL        shift and go to state 96

  ! SUMA            [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 224 (valorString -> VARIABLE .) ]

    comparadorMat                  shift and go to state 88

state 260

    (53) final -> expresionNewList . PUNTOYCOMA
    (54) final -> expresionNewList . PUNTOYCOMA final
    (72) claveValor -> expresionNewList .

    PUNTOYCOMA      shift and go to state 98
    DOSPUNTOS       reduce using rule 72 (claveValor -> expresionNewList .)


state 261

    (67) claveValor -> ENTERO .
    (233) valorInt -> ENTERO .
    (176) valor -> ENTERO .

    DOSPUNTOS       reduce using rule 67 (claveValor -> ENTERO .)
    SUMA            reduce using rule 233 (valorInt -> ENTERO .)
    RESTA           reduce using rule 233 (valorInt -> ENTERO .)
    MULTI           reduce using rule 233 (valorInt -> ENTERO .)
    DIV             reduce using rule 233 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 233 (valorInt -> ENTERO .)
    MOD             reduce using rule 233 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 233 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 233 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 233 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 233 (valorInt -> ENTERO .)
    MENOR           reduce using rule 233 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 233 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 233 (valorInt -> ENTERO .)
    IS              reduce using rule 176 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 176 (valor -> ENTERO .)


state 262

    (88) expresionLista -> CIZQ . expListString CDER
    (92) expresionLista -> CIZQ . expListInt CDER
    (96) expresionLista -> CIZQ . expListNum CDER
    (103) expresionLista -> CIZQ . expListBool CDER
    (107) expresionLista -> CIZQ . expListDynamic CDER
    (111) expresionLista -> CIZQ . expListSet CDER
    (115) expresionLista -> CIZQ . expListMap CDER
    (84) expresionNewList -> CIZQ . CDER
    (70) claveValor -> CIZQ . expListDynamic CDER
    (71) claveValor -> CIZQ . expListSet CDER
    (116) expListString -> . STRING
    (117) expListString -> . STRING COMA expListString
    (118) expListString -> . VARIABLE
    (119) expListString -> . VARIABLE COMA expListString
    (120) expListInt -> . ENTERO
    (121) expListInt -> . ENTERO COMA expListInt
    (122) expListInt -> . VARIABLE
    (123) expListInt -> . VARIABLE COMA expListInt
    (124) expListNum -> . ENTERO
    (125) expListNum -> . DOUBLE
    (126) expListNum -> . ENTERO COMA expListNum
    (127) expListNum -> . DOUBLE COMA expListNum
    (128) expListNum -> . VARIABLE
    (129) expListNum -> . VARIABLE COMA expListNum
    (130) expListBool -> . BOOL
    (131) expListBool -> . BOOL COMA expListBool
    (132) expListBool -> . VARIABLE
    (133) expListBool -> . VARIABLE COMA expListBool
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic
    (144) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (145) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (146) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (147) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (148) expListSet -> . VARIABLE
    (149) expListSet -> . VARIABLE COMA expListSet
    (150) expListMap -> . LIZQ LDER
    (151) expListMap -> . LIZQ expMap LDER
    (152) expListMap -> . LIZQ LDER COMA expListMap
    (153) expListMap -> . LIZQ expMap LDER COMA expListMap
    (154) expListMap -> . VARIABLE
    (155) expListMap -> . VARIABLE COMA expListMap

    CDER            shift and go to state 144
    STRING          shift and go to state 151
    VARIABLE        shift and go to state 152
    ENTERO          shift and go to state 153
    DOUBLE          shift and go to state 154
    BOOL            shift and go to state 155
    SETFROM         shift and go to state 156
    LIZQ            shift and go to state 157

    expListString                  shift and go to state 143
    expListInt                     shift and go to state 145
    expListNum                     shift and go to state 146
    expListBool                    shift and go to state 147
    expListDynamic                 shift and go to state 339
    expListSet                     shift and go to state 340
    expListMap                     shift and go to state 150

state 263

    (78) expresionSet -> SETFROM . PIZQ CIZQ CDER PDER
    (80) expresionSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER
    (73) claveValor -> SETFROM . PIZQ CIZQ CDER PDER
    (74) claveValor -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 341


state 264

    (66) claveValor -> STRING .
    (223) valorString -> STRING .
    (179) valor -> STRING .

    DOSPUNTOS       reduce using rule 66 (claveValor -> STRING .)
    SUMA            reduce using rule 223 (valorString -> STRING .)
    CIZQ            reduce using rule 223 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 223 (valorString -> STRING .)
    IS              reduce using rule 179 (valor -> STRING .)
    ISNEGADO        reduce using rule 179 (valor -> STRING .)


state 265

    (68) claveValor -> DOUBLE .
    (237) valorDouble -> DOUBLE .
    (178) valor -> DOUBLE .

    DOSPUNTOS       reduce using rule 68 (claveValor -> DOUBLE .)
    SUMA            reduce using rule 237 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 237 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 237 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 237 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 237 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 237 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 237 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 237 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 237 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 237 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 237 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 237 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 237 (valorDouble -> DOUBLE .)
    IS              reduce using rule 178 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 178 (valor -> DOUBLE .)


state 266

    (69) claveValor -> BOOL .
    (209) valorBool -> BOOL .

    DOSPUNTOS       reduce using rule 69 (claveValor -> BOOL .)
    PUNTOYCOMA      reduce using rule 209 (valorBool -> BOOL .)
    AND             reduce using rule 209 (valorBool -> BOOL .)
    OR              reduce using rule 209 (valorBool -> BOOL .)


state 267

    (165) imprimir -> PRINT PIZQ expresion . PDER

    PDER            shift and go to state 342


state 268

    (166) imprimir -> PRINT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 343


state 269

    (164) asignacionSimple -> VARIABLE . IGUAL expresion
    (177) valor -> VARIABLE .
    (212) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (213) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (224) valorString -> VARIABLE .
    (234) valorInt -> VARIABLE .
    (210) valorBool -> VARIABLE .
    (231) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (247) comparadorMat -> . DIGUAL
    (248) comparadorMat -> . NOIGUAL
    (249) comparadorMat -> . MAYOR
    (250) comparadorMat -> . MENOR
    (251) comparadorMat -> . MAYIGUAL
    (252) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 177 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 177 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 177 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 177 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 177 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 177 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 177 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 177 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 177 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 177 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 90
    IS              reduce using rule 177 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 177 (valor -> VARIABLE .)
    SUMA            reduce using rule 177 (valor -> VARIABLE .)
    RESTA           reduce using rule 177 (valor -> VARIABLE .)
    MULTI           reduce using rule 177 (valor -> VARIABLE .)
    DIV             reduce using rule 177 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 177 (valor -> VARIABLE .)
    MOD             reduce using rule 177 (valor -> VARIABLE .)
    PDER            reduce using rule 177 (valor -> VARIABLE .)
    CIZQ            reduce using rule 224 (valorString -> VARIABLE .)
    AND             reduce using rule 210 (valorBool -> VARIABLE .)
    OR              reduce using rule 210 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 89
    DIGUAL          shift and go to state 91
    NOIGUAL         shift and go to state 92
    MAYOR           shift and go to state 93
    MENOR           shift and go to state 94
    MAYIGUAL        shift and go to state 95
    MENIGUAL        shift and go to state 96

  ! SUMA            [ reduce using rule 224 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 224 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 210 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 310

state 270

    (168) funcionStdout -> FUNCIONSTDOUT PIZQ expresion . PDER

    PDER            shift and go to state 344


state 271

    (169) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 345


state 272

    (220) negacionBool -> NOT PIZQ expresionBool . PDER
    (221) comparacionBool -> expresionBool . operadorLogico expresionBool
    (222) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (253) operadorLogico -> . AND
    (254) operadorLogico -> . OR

    PDER            shift and go to state 346
    AND             shift and go to state 66
    OR              shift and go to state 67

    operadorLogico                 shift and go to state 65

state 273

    (174) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER final
    (175) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER LIZQ final LDER
    (221) comparacionBool -> expresionBool . operadorLogico expresionBool
    (222) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (253) operadorLogico -> . AND
    (254) operadorLogico -> . OR

    PDER            shift and go to state 347
    AND             shift and go to state 66
    OR              shift and go to state 67

    operadorLogico                 shift and go to state 65

state 274

    (202) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final

    PUNTOYCOMA      shift and go to state 348


state 275

    (193) asignacionFor -> VARIABLE . IGUAL expresionInt
    (194) asignacionFor -> VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 349


state 276

    (186) asignacionFor -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 350


state 277

    (187) asignacionFor -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 351


state 278

    (188) asignacionFor -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 352


state 279

    (189) asignacionFor -> DYNAMIC . VARIABLE IGUAL expresionInt
    (190) asignacionFor -> DYNAMIC . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 353


state 280

    (191) asignacionFor -> VAR . VARIABLE IGUAL expresionInt
    (192) asignacionFor -> VAR . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 354


state 281

    (85) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE
    (86) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 355


state 282

    (89) expresionLista -> LIST MENOR INT . MAYOR VARIABLE
    (90) expresionLista -> LIST MENOR INT . MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> LIST MENOR INT . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 356


state 283

    (93) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE
    (94) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 357


state 284

    (97) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE
    (98) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 358


state 285

    (100) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE
    (101) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 359


state 286

    (104) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE
    (105) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 360


state 287

    (108) expresionLista -> LIST MENOR SET . MAYOR VARIABLE
    (109) expresionLista -> LIST MENOR SET . MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> LIST MENOR SET . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 361


state 288

    (112) expresionLista -> LIST MENOR MAP . MAYOR VARIABLE
    (113) expresionLista -> LIST MENOR MAP . MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> LIST MENOR MAP . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 362


state 289

    (88) expresionLista -> CIZQ expListString CDER .

    PUNTOYCOMA      reduce using rule 88 (expresionLista -> CIZQ expListString CDER .)


state 290

    (92) expresionLista -> CIZQ expListInt CDER .

    PUNTOYCOMA      reduce using rule 92 (expresionLista -> CIZQ expListInt CDER .)


state 291

    (96) expresionLista -> CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 96 (expresionLista -> CIZQ expListNum CDER .)


state 292

    (103) expresionLista -> CIZQ expListBool CDER .

    PUNTOYCOMA      reduce using rule 103 (expresionLista -> CIZQ expListBool CDER .)


state 293

    (107) expresionLista -> CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 107 (expresionLista -> CIZQ expListDynamic CDER .)


state 294

    (111) expresionLista -> CIZQ expListSet CDER .

    PUNTOYCOMA      reduce using rule 111 (expresionLista -> CIZQ expListSet CDER .)


state 295

    (115) expresionLista -> CIZQ expListMap CDER .

    PUNTOYCOMA      reduce using rule 115 (expresionLista -> CIZQ expListMap CDER .)


state 296

    (117) expListString -> STRING COMA . expListString
    (138) expListDynamic -> STRING COMA . expListDynamic
    (116) expListString -> . STRING
    (117) expListString -> . STRING COMA expListString
    (118) expListString -> . VARIABLE
    (119) expListString -> . VARIABLE COMA expListString
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 151
    VARIABLE        shift and go to state 365
    ENTERO          shift and go to state 250
    DOUBLE          shift and go to state 251
    BOOL            shift and go to state 252

    expListString                  shift and go to state 363
    expListDynamic                 shift and go to state 364

state 297

    (119) expListString -> VARIABLE COMA . expListString
    (123) expListInt -> VARIABLE COMA . expListInt
    (129) expListNum -> VARIABLE COMA . expListNum
    (133) expListBool -> VARIABLE COMA . expListBool
    (143) expListDynamic -> VARIABLE COMA . expListDynamic
    (149) expListSet -> VARIABLE COMA . expListSet
    (155) expListMap -> VARIABLE COMA . expListMap
    (116) expListString -> . STRING
    (117) expListString -> . STRING COMA expListString
    (118) expListString -> . VARIABLE
    (119) expListString -> . VARIABLE COMA expListString
    (120) expListInt -> . ENTERO
    (121) expListInt -> . ENTERO COMA expListInt
    (122) expListInt -> . VARIABLE
    (123) expListInt -> . VARIABLE COMA expListInt
    (124) expListNum -> . ENTERO
    (125) expListNum -> . DOUBLE
    (126) expListNum -> . ENTERO COMA expListNum
    (127) expListNum -> . DOUBLE COMA expListNum
    (128) expListNum -> . VARIABLE
    (129) expListNum -> . VARIABLE COMA expListNum
    (130) expListBool -> . BOOL
    (131) expListBool -> . BOOL COMA expListBool
    (132) expListBool -> . VARIABLE
    (133) expListBool -> . VARIABLE COMA expListBool
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic
    (144) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (145) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (146) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (147) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (148) expListSet -> . VARIABLE
    (149) expListSet -> . VARIABLE COMA expListSet
    (150) expListMap -> . LIZQ LDER
    (151) expListMap -> . LIZQ expMap LDER
    (152) expListMap -> . LIZQ LDER COMA expListMap
    (153) expListMap -> . LIZQ expMap LDER COMA expListMap
    (154) expListMap -> . VARIABLE
    (155) expListMap -> . VARIABLE COMA expListMap

    STRING          shift and go to state 151
    VARIABLE        shift and go to state 152
    ENTERO          shift and go to state 153
    DOUBLE          shift and go to state 154
    BOOL            shift and go to state 155
    SETFROM         shift and go to state 156
    LIZQ            shift and go to state 157

    expListString                  shift and go to state 366
    expListInt                     shift and go to state 367
    expListNum                     shift and go to state 368
    expListBool                    shift and go to state 369
    expListDynamic                 shift and go to state 370
    expListSet                     shift and go to state 371
    expListMap                     shift and go to state 372

state 298

    (121) expListInt -> ENTERO COMA . expListInt
    (126) expListNum -> ENTERO COMA . expListNum
    (139) expListDynamic -> ENTERO COMA . expListDynamic
    (120) expListInt -> . ENTERO
    (121) expListInt -> . ENTERO COMA expListInt
    (122) expListInt -> . VARIABLE
    (123) expListInt -> . VARIABLE COMA expListInt
    (124) expListNum -> . ENTERO
    (125) expListNum -> . DOUBLE
    (126) expListNum -> . ENTERO COMA expListNum
    (127) expListNum -> . DOUBLE COMA expListNum
    (128) expListNum -> . VARIABLE
    (129) expListNum -> . VARIABLE COMA expListNum
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 153
    VARIABLE        shift and go to state 376
    DOUBLE          shift and go to state 154
    STRING          shift and go to state 249
    BOOL            shift and go to state 252

    expListInt                     shift and go to state 373
    expListNum                     shift and go to state 374
    expListDynamic                 shift and go to state 375

state 299

    (127) expListNum -> DOUBLE COMA . expListNum
    (140) expListDynamic -> DOUBLE COMA . expListDynamic
    (124) expListNum -> . ENTERO
    (125) expListNum -> . DOUBLE
    (126) expListNum -> . ENTERO COMA expListNum
    (127) expListNum -> . DOUBLE COMA expListNum
    (128) expListNum -> . VARIABLE
    (129) expListNum -> . VARIABLE COMA expListNum
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 379
    DOUBLE          shift and go to state 154
    VARIABLE        shift and go to state 380
    STRING          shift and go to state 249
    BOOL            shift and go to state 252

    expListNum                     shift and go to state 377
    expListDynamic                 shift and go to state 378

state 300

    (131) expListBool -> BOOL COMA . expListBool
    (141) expListDynamic -> BOOL COMA . expListDynamic
    (130) expListBool -> . BOOL
    (131) expListBool -> . BOOL COMA expListBool
    (132) expListBool -> . VARIABLE
    (133) expListBool -> . VARIABLE COMA expListBool
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic

    BOOL            shift and go to state 155
    VARIABLE        shift and go to state 383
    STRING          shift and go to state 249
    ENTERO          shift and go to state 250
    DOUBLE          shift and go to state 251

    expListBool                    shift and go to state 381
    expListDynamic                 shift and go to state 382

state 301

    (144) expListSet -> SETFROM PIZQ . CIZQ CDER PDER
    (145) expListSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER
    (146) expListSet -> SETFROM PIZQ . CIZQ CDER PDER COMA expListSet
    (147) expListSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER COMA expListSet

    CIZQ            shift and go to state 384


state 302

    (150) expListMap -> LIZQ LDER .
    (152) expListMap -> LIZQ LDER . COMA expListMap

    CDER            reduce using rule 150 (expListMap -> LIZQ LDER .)
    COMA            shift and go to state 385


state 303

    (151) expListMap -> LIZQ expMap . LDER
    (153) expListMap -> LIZQ expMap . LDER COMA expListMap

    LDER            shift and go to state 386


state 304

    (79) expresionSet -> SET VARIABLE IGUAL . SETFROM PIZQ CIZQ CDER PDER
    (81) expresionSet -> SET VARIABLE IGUAL . SETFROM PIZQ CIZQ expListDynamic CDER PDER

    SETFROM         shift and go to state 387


state 305

    (59) expresionMap -> MAP VARIABLE IGUAL . LIZQ LDER
    (61) expresionMap -> MAP VARIABLE IGUAL . LIZQ expMap LDER

    LIZQ            shift and go to state 388


state 306

    (82) expresionNewList -> NEWLIST PIZQ PDER .

    PUNTOYCOMA      reduce using rule 82 (expresionNewList -> NEWLIST PIZQ PDER .)
    DOSPUNTOS       reduce using rule 82 (expresionNewList -> NEWLIST PIZQ PDER .)
    COMA            reduce using rule 82 (expresionNewList -> NEWLIST PIZQ PDER .)
    LDER            reduce using rule 82 (expresionNewList -> NEWLIST PIZQ PDER .)


state 307

    (83) expresionNewList -> NEWLIST PIZQ ENTERO . PDER

    PDER            shift and go to state 389


state 308

    (78) expresionSet -> SETFROM PIZQ CIZQ . CDER PDER
    (80) expresionSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 390
    STRING          shift and go to state 249
    ENTERO          shift and go to state 250
    DOUBLE          shift and go to state 251
    BOOL            shift and go to state 252
    VARIABLE        shift and go to state 392

    expListDynamic                 shift and go to state 391

state 309

    (211) expresionBool -> valorDouble comparadorMat . expresionDouble
    (214) expresionBool -> valorDouble comparadorMat . VARIABLE
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 394
    DOUBLE          shift and go to state 194
    ENTERO          shift and go to state 195

    valorDouble                    shift and go to state 193
    expresionDouble                shift and go to state 393
    valorInt                       shift and go to state 173

state 310

    (212) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (213) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 395
    DOUBLE          shift and go to state 194
    ENTERO          shift and go to state 195

    expresionDouble                shift and go to state 396
    valorDouble                    shift and go to state 193
    valorInt                       shift and go to state 173

state 311

    (47) final -> VARIABLE DSUMA PUNTOYCOMA final .

    $end            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    VARIABLE        reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    INT             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DOUBLER         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NUM             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    STRINGR         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BOOLR           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    VAR             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    WHILE           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DO              reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    IF              reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ELSE            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    PRINT           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NOT             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ELSEIF          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FOR             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LIST            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    CIZQ            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NEWLIST         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    SET             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    SETFROM         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    MAP             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LIZQ            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ENTERO          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DOUBLE          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    STRING          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BOOL            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LDER            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)


state 312

    (49) final -> VARIABLE DRESTA PUNTOYCOMA final .

    $end            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    VARIABLE        reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    INT             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DOUBLER         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NUM             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    STRINGR         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BOOLR           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    VAR             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    WHILE           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DO              reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    IF              reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ELSE            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    PRINT           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NOT             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ELSEIF          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FOR             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LIST            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    CIZQ            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NEWLIST         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    SET             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    SETFROM         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    MAP             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LIZQ            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ENTERO          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DOUBLE          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    STRING          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BOOL            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LDER            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)


state 313

    (231) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . PDER
    (232) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . COMA ENTERO PDER

    PDER            shift and go to state 397
    COMA            shift and go to state 398


state 314

    (180) expresion -> valor operadorMat . expresion
    (180) expresion -> . valor operadorMat expresion
    (181) expresion -> . valor
    (182) expresion -> . expresionString
    (183) expresion -> . expresionInt
    (184) expresion -> . expresionDouble
    (185) expresion -> . expresionBool
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 174
    VARIABLE        shift and go to state 197
    DOUBLE          shift and go to state 204
    STRING          shift and go to state 205
    FUNCIONSTDIN    shift and go to state 208
    BOOL            shift and go to state 59
    NOT             shift and go to state 46

    valor                          shift and go to state 199
    expresion                      shift and go to state 399
    expresionString                shift and go to state 200
    expresionInt                   shift and go to state 201
    expresionDouble                shift and go to state 202
    expresionBool                  shift and go to state 203
    valorString                    shift and go to state 35
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 206
    valorBool                      shift and go to state 171
    negacionBool                   shift and go to state 172
    comparacionBool                shift and go to state 207
    expresionIndexString           shift and go to state 58
    sentenciaSubstring             shift and go to state 209

state 315

    (156) asignacion -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 156 (asignacion -> INT VARIABLE IGUAL expresionInt .)


state 316

    (157) asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 157 (asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 317

    (158) asignacion -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 158 (asignacion -> NUM VARIABLE IGUAL expresionDouble .)


state 318

    (159) asignacion -> STRINGR VARIABLE IGUAL expresionString .

    PUNTOYCOMA      reduce using rule 159 (asignacion -> STRINGR VARIABLE IGUAL expresionString .)


state 319

    (160) asignacion -> BOOLR VARIABLE IGUAL expresionBool .
    (221) comparacionBool -> expresionBool . operadorLogico expresionBool
    (222) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (253) operadorLogico -> . AND
    (254) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 160 (asignacion -> BOOLR VARIABLE IGUAL expresionBool .)
    AND             shift and go to state 66
    OR              shift and go to state 67

    operadorLogico                 shift and go to state 65

state 320

    (161) asignacion -> DYNAMIC VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 161 (asignacion -> DYNAMIC VARIABLE IGUAL expresion .)


state 321

    (162) asignacion -> VAR VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 162 (asignacion -> VAR VARIABLE IGUAL expresion .)


state 322

    (230) expresionIndexString -> valorString CIZQ ENTERO CDER .

    SUMA            reduce using rule 230 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    CIZQ            reduce using rule 230 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PUNTOYCOMA      reduce using rule 230 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PDER            reduce using rule 230 (expresionIndexString -> valorString CIZQ ENTERO CDER .)


state 323

    (206) sentenciaWhile -> WHILE PIZQ expresionBool PDER . LIZQ final LDER
    (207) sentenciaWhile -> WHILE PIZQ expresionBool PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 400
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

    expresionBool                  shift and go to state 6
    final                          shift and go to state 401
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 324

    (76) claveValor -> LIZQ expMap LDER .

    DOSPUNTOS       reduce using rule 76 (claveValor -> LIZQ expMap LDER .)
    COMA            reduce using rule 76 (claveValor -> LIZQ expMap LDER .)
    LDER            reduce using rule 76 (claveValor -> LIZQ expMap LDER .)


state 325

    (63) expMap -> claveValor DOSPUNTOS claveValor .
    (64) expMap -> claveValor DOSPUNTOS claveValor . COMA expMap

    LDER            reduce using rule 63 (expMap -> claveValor DOSPUNTOS claveValor .)
    COMA            shift and go to state 402


state 326

    (70) claveValor -> CIZQ expListDynamic CDER .

    DOSPUNTOS       reduce using rule 70 (claveValor -> CIZQ expListDynamic CDER .)
    COMA            reduce using rule 70 (claveValor -> CIZQ expListDynamic CDER .)
    LDER            reduce using rule 70 (claveValor -> CIZQ expListDynamic CDER .)


state 327

    (71) claveValor -> CIZQ expListSet CDER .

    DOSPUNTOS       reduce using rule 71 (claveValor -> CIZQ expListSet CDER .)
    COMA            reduce using rule 71 (claveValor -> CIZQ expListSet CDER .)
    LDER            reduce using rule 71 (claveValor -> CIZQ expListSet CDER .)


state 328

    (138) expListDynamic -> STRING COMA . expListDynamic
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 249
    ENTERO          shift and go to state 250
    DOUBLE          shift and go to state 251
    BOOL            shift and go to state 252
    VARIABLE        shift and go to state 392

    expListDynamic                 shift and go to state 364

state 329

    (139) expListDynamic -> ENTERO COMA . expListDynamic
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 249
    ENTERO          shift and go to state 250
    DOUBLE          shift and go to state 251
    BOOL            shift and go to state 252
    VARIABLE        shift and go to state 392

    expListDynamic                 shift and go to state 375

state 330

    (140) expListDynamic -> DOUBLE COMA . expListDynamic
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 249
    ENTERO          shift and go to state 250
    DOUBLE          shift and go to state 251
    BOOL            shift and go to state 252
    VARIABLE        shift and go to state 392

    expListDynamic                 shift and go to state 378

state 331

    (141) expListDynamic -> BOOL COMA . expListDynamic
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 249
    ENTERO          shift and go to state 250
    DOUBLE          shift and go to state 251
    BOOL            shift and go to state 252
    VARIABLE        shift and go to state 392

    expListDynamic                 shift and go to state 382

state 332

    (143) expListDynamic -> VARIABLE COMA . expListDynamic
    (149) expListSet -> VARIABLE COMA . expListSet
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic
    (144) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (145) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (146) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (147) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (148) expListSet -> . VARIABLE
    (149) expListSet -> . VARIABLE COMA expListSet

    STRING          shift and go to state 249
    ENTERO          shift and go to state 250
    DOUBLE          shift and go to state 251
    BOOL            shift and go to state 252
    VARIABLE        shift and go to state 253
    SETFROM         shift and go to state 156

    expListDynamic                 shift and go to state 370
    expListSet                     shift and go to state 371

state 333

    (73) claveValor -> SETFROM PIZQ CIZQ . CDER PDER
    (74) claveValor -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 403
    STRING          shift and go to state 249
    ENTERO          shift and go to state 250
    DOUBLE          shift and go to state 251
    BOOL            shift and go to state 252
    VARIABLE        shift and go to state 392

    expListDynamic                 shift and go to state 404

state 334

    (208) sentenciaDoWhile -> DO LIZQ final LDER . WHILE PIZQ expresionBool PDER

    WHILE           shift and go to state 405


state 335

    (170) sentenciaIf -> IF PIZQ expresionBool PDER . final
    (171) sentenciaIf -> IF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 407
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

    expresionBool                  shift and go to state 6
    final                          shift and go to state 406
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 336

    (60) expresionMap -> LIZQ LDER .
    (75) claveValor -> LIZQ LDER .

    LDER            reduce using rule 60 (expresionMap -> LIZQ LDER .)
    DOSPUNTOS       reduce using rule 75 (claveValor -> LIZQ LDER .)


state 337

    (62) expresionMap -> LIZQ expMap . LDER
    (76) claveValor -> LIZQ expMap . LDER

    LDER            shift and go to state 408


state 338

    (173) sentenciaElse -> ELSE LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    VARIABLE        reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    INT             reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLER         reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    NUM             reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRINGR         reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOLR           reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    DYNAMIC         reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    VAR             reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    WHILE           reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    DO              reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    IF              reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSE            reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    PRINT           reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    NOT             reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSEIF          reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    FOR             reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    LIST            reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    CIZQ            reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    NEWLIST         reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    SET             reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    SETFROM         reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    MAP             reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    LIZQ            reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    ENTERO          reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLE          reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRING          reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOL            reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    $end            reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)
    LDER            reduce using rule 173 (sentenciaElse -> ELSE LIZQ final LDER .)


state 339

    (107) expresionLista -> CIZQ expListDynamic . CDER
    (70) claveValor -> CIZQ expListDynamic . CDER

    CDER            shift and go to state 409


state 340

    (111) expresionLista -> CIZQ expListSet . CDER
    (71) claveValor -> CIZQ expListSet . CDER

    CDER            shift and go to state 410


state 341

    (78) expresionSet -> SETFROM PIZQ . CIZQ CDER PDER
    (80) expresionSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER
    (73) claveValor -> SETFROM PIZQ . CIZQ CDER PDER
    (74) claveValor -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 411


state 342

    (165) imprimir -> PRINT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 165 (imprimir -> PRINT PIZQ expresion PDER .)


state 343

    (166) imprimir -> PRINT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 166 (imprimir -> PRINT PIZQ asignacionSimple PDER .)


state 344

    (168) funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 168 (funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .)


state 345

    (169) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 169 (funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .)


state 346

    (220) negacionBool -> NOT PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 220 (negacionBool -> NOT PIZQ expresionBool PDER .)
    AND             reduce using rule 220 (negacionBool -> NOT PIZQ expresionBool PDER .)
    OR              reduce using rule 220 (negacionBool -> NOT PIZQ expresionBool PDER .)
    PDER            reduce using rule 220 (negacionBool -> NOT PIZQ expresionBool PDER .)


state 347

    (174) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . final
    (175) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 413
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

    expresionBool                  shift and go to state 6
    final                          shift and go to state 412
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 348

    (202) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING

    VARIABLE        shift and go to state 415
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 59
    NOT             shift and go to state 46
    ENTERO          shift and go to state 49
    STRING          shift and go to state 175

    expresionBoolFor               shift and go to state 414
    valorDouble                    shift and go to state 416
    valorBool                      shift and go to state 417
    negacionBool                   shift and go to state 418
    comparacionBool                shift and go to state 419
    valorInt                       shift and go to state 173
    expresionBool                  shift and go to state 420
    valor                          shift and go to state 37

state 349

    (193) asignacionFor -> VARIABLE IGUAL . expresionInt
    (194) asignacionFor -> VARIABLE IGUAL . expresionDouble
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt

    ENTERO          shift and go to state 195
    VARIABLE        shift and go to state 222
    DOUBLE          shift and go to state 194

    expresionInt                   shift and go to state 421
    expresionDouble                shift and go to state 422
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 193

state 350

    (186) asignacionFor -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 423


state 351

    (187) asignacionFor -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 424


state 352

    (188) asignacionFor -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 425


state 353

    (189) asignacionFor -> DYNAMIC VARIABLE . IGUAL expresionInt
    (190) asignacionFor -> DYNAMIC VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 426


state 354

    (191) asignacionFor -> VAR VARIABLE . IGUAL expresionInt
    (192) asignacionFor -> VAR VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 427


state 355

    (85) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE
    (86) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 428


state 356

    (89) expresionLista -> LIST MENOR INT MAYOR . VARIABLE
    (90) expresionLista -> LIST MENOR INT MAYOR . VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> LIST MENOR INT MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 429


state 357

    (93) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE
    (94) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 430


state 358

    (97) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE
    (98) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 431


state 359

    (100) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE
    (101) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 432


state 360

    (104) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE
    (105) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 433


state 361

    (108) expresionLista -> LIST MENOR SET MAYOR . VARIABLE
    (109) expresionLista -> LIST MENOR SET MAYOR . VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> LIST MENOR SET MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 434


state 362

    (112) expresionLista -> LIST MENOR MAP MAYOR . VARIABLE
    (113) expresionLista -> LIST MENOR MAP MAYOR . VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> LIST MENOR MAP MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 435


state 363

    (117) expListString -> STRING COMA expListString .

    CDER            reduce using rule 117 (expListString -> STRING COMA expListString .)


state 364

    (138) expListDynamic -> STRING COMA expListDynamic .

    CDER            reduce using rule 138 (expListDynamic -> STRING COMA expListDynamic .)


state 365

    (118) expListString -> VARIABLE .
    (119) expListString -> VARIABLE . COMA expListString
    (142) expListDynamic -> VARIABLE .
    (143) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 118 (expListString -> VARIABLE .)
    CDER            reduce using rule 118 (expListString -> VARIABLE .)
    COMA            shift and go to state 436

  ! CDER            [ reduce using rule 142 (expListDynamic -> VARIABLE .) ]


state 366

    (119) expListString -> VARIABLE COMA expListString .

    CDER            reduce using rule 119 (expListString -> VARIABLE COMA expListString .)


state 367

    (123) expListInt -> VARIABLE COMA expListInt .

    CDER            reduce using rule 123 (expListInt -> VARIABLE COMA expListInt .)


state 368

    (129) expListNum -> VARIABLE COMA expListNum .

    CDER            reduce using rule 129 (expListNum -> VARIABLE COMA expListNum .)


state 369

    (133) expListBool -> VARIABLE COMA expListBool .

    CDER            reduce using rule 133 (expListBool -> VARIABLE COMA expListBool .)


state 370

    (143) expListDynamic -> VARIABLE COMA expListDynamic .

    CDER            reduce using rule 143 (expListDynamic -> VARIABLE COMA expListDynamic .)


state 371

    (149) expListSet -> VARIABLE COMA expListSet .

    CDER            reduce using rule 149 (expListSet -> VARIABLE COMA expListSet .)


state 372

    (155) expListMap -> VARIABLE COMA expListMap .

    CDER            reduce using rule 155 (expListMap -> VARIABLE COMA expListMap .)


state 373

    (121) expListInt -> ENTERO COMA expListInt .

    CDER            reduce using rule 121 (expListInt -> ENTERO COMA expListInt .)


state 374

    (126) expListNum -> ENTERO COMA expListNum .

    CDER            reduce using rule 126 (expListNum -> ENTERO COMA expListNum .)


state 375

    (139) expListDynamic -> ENTERO COMA expListDynamic .

    CDER            reduce using rule 139 (expListDynamic -> ENTERO COMA expListDynamic .)


state 376

    (122) expListInt -> VARIABLE .
    (123) expListInt -> VARIABLE . COMA expListInt
    (128) expListNum -> VARIABLE .
    (129) expListNum -> VARIABLE . COMA expListNum
    (142) expListDynamic -> VARIABLE .
    (143) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 122 (expListInt -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 122 (expListInt -> VARIABLE .)
    CDER            reduce using rule 122 (expListInt -> VARIABLE .)
    COMA            shift and go to state 437

  ! CDER            [ reduce using rule 128 (expListNum -> VARIABLE .) ]
  ! CDER            [ reduce using rule 142 (expListDynamic -> VARIABLE .) ]


state 377

    (127) expListNum -> DOUBLE COMA expListNum .

    CDER            reduce using rule 127 (expListNum -> DOUBLE COMA expListNum .)


state 378

    (140) expListDynamic -> DOUBLE COMA expListDynamic .

    CDER            reduce using rule 140 (expListDynamic -> DOUBLE COMA expListDynamic .)


state 379

    (124) expListNum -> ENTERO .
    (126) expListNum -> ENTERO . COMA expListNum
    (135) expListDynamic -> ENTERO .
    (139) expListDynamic -> ENTERO . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 124 (expListNum -> ENTERO .)
    CDER            reduce using rule 124 (expListNum -> ENTERO .)
    COMA            shift and go to state 438

  ! CDER            [ reduce using rule 135 (expListDynamic -> ENTERO .) ]


state 380

    (128) expListNum -> VARIABLE .
    (129) expListNum -> VARIABLE . COMA expListNum
    (142) expListDynamic -> VARIABLE .
    (143) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 128 (expListNum -> VARIABLE .)
    CDER            reduce using rule 128 (expListNum -> VARIABLE .)
    COMA            shift and go to state 439

  ! CDER            [ reduce using rule 142 (expListDynamic -> VARIABLE .) ]


state 381

    (131) expListBool -> BOOL COMA expListBool .

    CDER            reduce using rule 131 (expListBool -> BOOL COMA expListBool .)


state 382

    (141) expListDynamic -> BOOL COMA expListDynamic .

    CDER            reduce using rule 141 (expListDynamic -> BOOL COMA expListDynamic .)


state 383

    (132) expListBool -> VARIABLE .
    (133) expListBool -> VARIABLE . COMA expListBool
    (142) expListDynamic -> VARIABLE .
    (143) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 132 (expListBool -> VARIABLE .)
    CDER            reduce using rule 132 (expListBool -> VARIABLE .)
    COMA            shift and go to state 440

  ! CDER            [ reduce using rule 142 (expListDynamic -> VARIABLE .) ]


state 384

    (144) expListSet -> SETFROM PIZQ CIZQ . CDER PDER
    (145) expListSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (146) expListSet -> SETFROM PIZQ CIZQ . CDER PDER COMA expListSet
    (147) expListSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER COMA expListSet
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 441
    STRING          shift and go to state 249
    ENTERO          shift and go to state 250
    DOUBLE          shift and go to state 251
    BOOL            shift and go to state 252
    VARIABLE        shift and go to state 392

    expListDynamic                 shift and go to state 442

state 385

    (152) expListMap -> LIZQ LDER COMA . expListMap
    (150) expListMap -> . LIZQ LDER
    (151) expListMap -> . LIZQ expMap LDER
    (152) expListMap -> . LIZQ LDER COMA expListMap
    (153) expListMap -> . LIZQ expMap LDER COMA expListMap
    (154) expListMap -> . VARIABLE
    (155) expListMap -> . VARIABLE COMA expListMap

    LIZQ            shift and go to state 157
    VARIABLE        shift and go to state 444

    expListMap                     shift and go to state 443

state 386

    (151) expListMap -> LIZQ expMap LDER .
    (153) expListMap -> LIZQ expMap LDER . COMA expListMap

    CDER            reduce using rule 151 (expListMap -> LIZQ expMap LDER .)
    COMA            shift and go to state 445


state 387

    (79) expresionSet -> SET VARIABLE IGUAL SETFROM . PIZQ CIZQ CDER PDER
    (81) expresionSet -> SET VARIABLE IGUAL SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 446


state 388

    (59) expresionMap -> MAP VARIABLE IGUAL LIZQ . LDER
    (61) expresionMap -> MAP VARIABLE IGUAL LIZQ . expMap LDER
    (63) expMap -> . claveValor DOSPUNTOS claveValor
    (64) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (65) claveValor -> . VARIABLE
    (66) claveValor -> . STRING
    (67) claveValor -> . ENTERO
    (68) claveValor -> . DOUBLE
    (69) claveValor -> . BOOL
    (70) claveValor -> . CIZQ expListDynamic CDER
    (71) claveValor -> . CIZQ expListSet CDER
    (72) claveValor -> . expresionNewList
    (73) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (74) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (75) claveValor -> . LIZQ LDER
    (76) claveValor -> . LIZQ expMap LDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 447
    VARIABLE        shift and go to state 125
    STRING          shift and go to state 126
    ENTERO          shift and go to state 127
    DOUBLE          shift and go to state 128
    BOOL            shift and go to state 129
    CIZQ            shift and go to state 130
    SETFROM         shift and go to state 132
    LIZQ            shift and go to state 121
    NEWLIST         shift and go to state 54

    expMap                         shift and go to state 448
    claveValor                     shift and go to state 124
    expresionNewList               shift and go to state 131

state 389

    (83) expresionNewList -> NEWLIST PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 83 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    DOSPUNTOS       reduce using rule 83 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    COMA            reduce using rule 83 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    LDER            reduce using rule 83 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)


state 390

    (78) expresionSet -> SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 449


state 391

    (80) expresionSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 450


state 392

    (142) expListDynamic -> VARIABLE .
    (143) expListDynamic -> VARIABLE . COMA expListDynamic

    CDER            reduce using rule 142 (expListDynamic -> VARIABLE .)
    COMA            shift and go to state 451


state 393

    (211) expresionBool -> valorDouble comparadorMat expresionDouble .

    AND             reduce using rule 211 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 211 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 211 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PDER            reduce using rule 211 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 394

    (214) expresionBool -> valorDouble comparadorMat VARIABLE .
    (234) valorInt -> VARIABLE .

  ! reduce/reduce conflict for AND resolved using rule 214 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 214 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 214 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 214 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 214 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 214 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 214 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PDER            reduce using rule 214 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 234 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 234 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 234 (valorInt -> VARIABLE .)
    DIV             reduce using rule 234 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 234 (valorInt -> VARIABLE .)
    MOD             reduce using rule 234 (valorInt -> VARIABLE .)

  ! AND             [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 234 (valorInt -> VARIABLE .) ]


state 395

    (213) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (234) valorInt -> VARIABLE .

  ! reduce/reduce conflict for AND resolved using rule 213 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 213 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 213 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 213 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 213 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 213 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 213 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PDER            reduce using rule 213 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 234 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 234 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 234 (valorInt -> VARIABLE .)
    DIV             reduce using rule 234 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 234 (valorInt -> VARIABLE .)
    MOD             reduce using rule 234 (valorInt -> VARIABLE .)

  ! AND             [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 234 (valorInt -> VARIABLE .) ]


state 396

    (212) expresionBool -> VARIABLE comparadorMat expresionDouble .

    AND             reduce using rule 212 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 212 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 212 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PDER            reduce using rule 212 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 397

    (231) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 231 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    SUMA            reduce using rule 231 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    CIZQ            reduce using rule 231 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    PDER            reduce using rule 231 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)


state 398

    (232) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA . ENTERO PDER

    ENTERO          shift and go to state 452


state 399

    (180) expresion -> valor operadorMat expresion .

    PUNTOYCOMA      reduce using rule 180 (expresion -> valor operadorMat expresion .)
    PDER            reduce using rule 180 (expresion -> valor operadorMat expresion .)


state 400

    (206) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ . final LDER
    (60) expresionMap -> LIZQ . LDER
    (62) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (63) expMap -> . claveValor DOSPUNTOS claveValor
    (64) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (65) claveValor -> . VARIABLE
    (66) claveValor -> . STRING
    (67) claveValor -> . ENTERO
    (68) claveValor -> . DOUBLE
    (69) claveValor -> . BOOL
    (70) claveValor -> . CIZQ expListDynamic CDER
    (71) claveValor -> . CIZQ expListSet CDER
    (72) claveValor -> . expresionNewList
    (73) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (74) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (75) claveValor -> . LIZQ LDER
    (76) claveValor -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 122
    VARIABLE        shift and go to state 259
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 262
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 263
    MAP             shift and go to state 53
    LIZQ            shift and go to state 257
    STRING          shift and go to state 264
    ENTERO          shift and go to state 261
    DOUBLE          shift and go to state 265
    BOOL            shift and go to state 266

    expresionBool                  shift and go to state 6
    final                          shift and go to state 453
    expMap                         shift and go to state 123
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 260
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    claveValor                     shift and go to state 124
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 401

    (207) sentenciaWhile -> WHILE PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    INT             reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NUM             reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VAR             reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DO              reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    IF              reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NOT             reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FOR             reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LIST            reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    SET             reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    MAP             reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LIZQ            reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRING          reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    $end            reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LDER            reduce using rule 207 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)


state 402

    (64) expMap -> claveValor DOSPUNTOS claveValor COMA . expMap
    (63) expMap -> . claveValor DOSPUNTOS claveValor
    (64) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (65) claveValor -> . VARIABLE
    (66) claveValor -> . STRING
    (67) claveValor -> . ENTERO
    (68) claveValor -> . DOUBLE
    (69) claveValor -> . BOOL
    (70) claveValor -> . CIZQ expListDynamic CDER
    (71) claveValor -> . CIZQ expListSet CDER
    (72) claveValor -> . expresionNewList
    (73) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (74) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (75) claveValor -> . LIZQ LDER
    (76) claveValor -> . LIZQ expMap LDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER

    VARIABLE        shift and go to state 125
    STRING          shift and go to state 126
    ENTERO          shift and go to state 127
    DOUBLE          shift and go to state 128
    BOOL            shift and go to state 129
    CIZQ            shift and go to state 130
    SETFROM         shift and go to state 132
    LIZQ            shift and go to state 121
    NEWLIST         shift and go to state 54

    claveValor                     shift and go to state 124
    expMap                         shift and go to state 454
    expresionNewList               shift and go to state 131

state 403

    (73) claveValor -> SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 455


state 404

    (74) claveValor -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 456


state 405

    (208) sentenciaDoWhile -> DO LIZQ final LDER WHILE . PIZQ expresionBool PDER

    PIZQ            shift and go to state 457


state 406

    (170) sentenciaIf -> IF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    INT             reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DO              reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    IF              reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FOR             reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LIST            reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    SET             reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    MAP             reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LIZQ            reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    $end            reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 170 (sentenciaIf -> IF PIZQ expresionBool PDER final .)


state 407

    (171) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ . final LDER
    (60) expresionMap -> LIZQ . LDER
    (62) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (63) expMap -> . claveValor DOSPUNTOS claveValor
    (64) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (65) claveValor -> . VARIABLE
    (66) claveValor -> . STRING
    (67) claveValor -> . ENTERO
    (68) claveValor -> . DOUBLE
    (69) claveValor -> . BOOL
    (70) claveValor -> . CIZQ expListDynamic CDER
    (71) claveValor -> . CIZQ expListSet CDER
    (72) claveValor -> . expresionNewList
    (73) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (74) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (75) claveValor -> . LIZQ LDER
    (76) claveValor -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 122
    VARIABLE        shift and go to state 259
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 262
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 263
    MAP             shift and go to state 53
    LIZQ            shift and go to state 257
    STRING          shift and go to state 264
    ENTERO          shift and go to state 261
    DOUBLE          shift and go to state 265
    BOOL            shift and go to state 266

    expresionBool                  shift and go to state 6
    final                          shift and go to state 458
    expMap                         shift and go to state 123
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 260
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    claveValor                     shift and go to state 124
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 408

    (62) expresionMap -> LIZQ expMap LDER .
    (76) claveValor -> LIZQ expMap LDER .

    LDER            reduce using rule 62 (expresionMap -> LIZQ expMap LDER .)
    DOSPUNTOS       reduce using rule 76 (claveValor -> LIZQ expMap LDER .)


state 409

    (107) expresionLista -> CIZQ expListDynamic CDER .
    (70) claveValor -> CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 107 (expresionLista -> CIZQ expListDynamic CDER .)
    DOSPUNTOS       reduce using rule 70 (claveValor -> CIZQ expListDynamic CDER .)


state 410

    (111) expresionLista -> CIZQ expListSet CDER .
    (71) claveValor -> CIZQ expListSet CDER .

    PUNTOYCOMA      reduce using rule 111 (expresionLista -> CIZQ expListSet CDER .)
    DOSPUNTOS       reduce using rule 71 (claveValor -> CIZQ expListSet CDER .)


state 411

    (78) expresionSet -> SETFROM PIZQ CIZQ . CDER PDER
    (80) expresionSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (73) claveValor -> SETFROM PIZQ CIZQ . CDER PDER
    (74) claveValor -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 459
    STRING          shift and go to state 249
    ENTERO          shift and go to state 250
    DOUBLE          shift and go to state 251
    BOOL            shift and go to state 252
    VARIABLE        shift and go to state 392

    expListDynamic                 shift and go to state 460

state 412

    (174) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    INT             reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DO              reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    IF              reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FOR             reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LIST            reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    SET             reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    MAP             reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LIZQ            reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    $end            reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 174 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)


state 413

    (175) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ . final LDER
    (60) expresionMap -> LIZQ . LDER
    (62) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (63) expMap -> . claveValor DOSPUNTOS claveValor
    (64) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (65) claveValor -> . VARIABLE
    (66) claveValor -> . STRING
    (67) claveValor -> . ENTERO
    (68) claveValor -> . DOUBLE
    (69) claveValor -> . BOOL
    (70) claveValor -> . CIZQ expListDynamic CDER
    (71) claveValor -> . CIZQ expListSet CDER
    (72) claveValor -> . expresionNewList
    (73) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (74) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (75) claveValor -> . LIZQ LDER
    (76) claveValor -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 122
    VARIABLE        shift and go to state 259
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 262
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 263
    MAP             shift and go to state 53
    LIZQ            shift and go to state 257
    STRING          shift and go to state 264
    ENTERO          shift and go to state 261
    DOUBLE          shift and go to state 265
    BOOL            shift and go to state 266

    expresionBool                  shift and go to state 6
    final                          shift and go to state 461
    expMap                         shift and go to state 123
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 260
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    claveValor                     shift and go to state 124
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 414

    (202) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DRESTA PDER final

    PUNTOYCOMA      shift and go to state 462


state 415

    (196) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (197) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (210) valorBool -> VARIABLE .
    (234) valorInt -> VARIABLE .
    (212) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (213) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (177) valor -> VARIABLE .
    (247) comparadorMat -> . DIGUAL
    (248) comparadorMat -> . NOIGUAL
    (249) comparadorMat -> . MAYOR
    (250) comparadorMat -> . MENOR
    (251) comparadorMat -> . MAYIGUAL
    (252) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    PUNTOYCOMA      reduce using rule 210 (valorBool -> VARIABLE .)
    AND             reduce using rule 210 (valorBool -> VARIABLE .)
    OR              reduce using rule 210 (valorBool -> VARIABLE .)
    IS              reduce using rule 177 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 177 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 91
    NOIGUAL         shift and go to state 92
    MAYOR           shift and go to state 93
    MENOR           shift and go to state 94
    MAYIGUAL        shift and go to state 95
    MENIGUAL        shift and go to state 96

  ! DIGUAL          [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 234 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 463

state 416

    (195) expresionBoolFor -> valorDouble . comparadorMat expresionDouble
    (198) expresionBoolFor -> valorDouble . comparadorMat VARIABLE
    (211) expresionBool -> valorDouble . comparadorMat expresionDouble
    (214) expresionBool -> valorDouble . comparadorMat VARIABLE
    (247) comparadorMat -> . DIGUAL
    (248) comparadorMat -> . NOIGUAL
    (249) comparadorMat -> . MAYOR
    (250) comparadorMat -> . MENOR
    (251) comparadorMat -> . MAYIGUAL
    (252) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 91
    NOIGUAL         shift and go to state 92
    MAYOR           shift and go to state 93
    MENOR           shift and go to state 94
    MAYIGUAL        shift and go to state 95
    MENIGUAL        shift and go to state 96

    comparadorMat                  shift and go to state 464

state 417

    (199) expresionBoolFor -> valorBool .
    (215) expresionBool -> valorBool .

    PUNTOYCOMA      reduce using rule 199 (expresionBoolFor -> valorBool .)
    AND             reduce using rule 215 (expresionBool -> valorBool .)
    OR              reduce using rule 215 (expresionBool -> valorBool .)


state 418

    (200) expresionBoolFor -> negacionBool .
    (216) expresionBool -> negacionBool .

    PUNTOYCOMA      reduce using rule 200 (expresionBoolFor -> negacionBool .)
    AND             reduce using rule 216 (expresionBool -> negacionBool .)
    OR              reduce using rule 216 (expresionBool -> negacionBool .)


state 419

    (201) expresionBoolFor -> comparacionBool .
    (217) expresionBool -> comparacionBool .

    PUNTOYCOMA      reduce using rule 201 (expresionBoolFor -> comparacionBool .)
    AND             reduce using rule 217 (expresionBool -> comparacionBool .)
    OR              reduce using rule 217 (expresionBool -> comparacionBool .)


state 420

    (221) comparacionBool -> expresionBool . operadorLogico expresionBool
    (222) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (253) operadorLogico -> . AND
    (254) operadorLogico -> . OR

    AND             shift and go to state 66
    OR              shift and go to state 67

    operadorLogico                 shift and go to state 65

state 421

    (193) asignacionFor -> VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 193 (asignacionFor -> VARIABLE IGUAL expresionInt .)


state 422

    (194) asignacionFor -> VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 194 (asignacionFor -> VARIABLE IGUAL expresionDouble .)


state 423

    (186) asignacionFor -> INT VARIABLE IGUAL . expresionInt
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE

    ENTERO          shift and go to state 195
    VARIABLE        shift and go to state 222

    expresionInt                   shift and go to state 465
    valorInt                       shift and go to state 220

state 424

    (187) asignacionFor -> DOUBLER VARIABLE IGUAL . expresionDouble
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 194
    ENTERO          shift and go to state 195
    VARIABLE        shift and go to state 222

    expresionDouble                shift and go to state 466
    valorDouble                    shift and go to state 193
    valorInt                       shift and go to state 173

state 425

    (188) asignacionFor -> NUM VARIABLE IGUAL . expresionDouble
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 194
    ENTERO          shift and go to state 195
    VARIABLE        shift and go to state 222

    expresionDouble                shift and go to state 467
    valorDouble                    shift and go to state 193
    valorInt                       shift and go to state 173

state 426

    (189) asignacionFor -> DYNAMIC VARIABLE IGUAL . expresionInt
    (190) asignacionFor -> DYNAMIC VARIABLE IGUAL . expresionDouble
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt

    ENTERO          shift and go to state 195
    VARIABLE        shift and go to state 222
    DOUBLE          shift and go to state 194

    expresionInt                   shift and go to state 468
    expresionDouble                shift and go to state 469
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 193

state 427

    (191) asignacionFor -> VAR VARIABLE IGUAL . expresionInt
    (192) asignacionFor -> VAR VARIABLE IGUAL . expresionDouble
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt

    ENTERO          shift and go to state 195
    VARIABLE        shift and go to state 222
    DOUBLE          shift and go to state 194

    expresionInt                   shift and go to state 470
    expresionDouble                shift and go to state 471
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 193

state 428

    (85) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE .
    (86) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE . IGUAL CIZQ expListString CDER
    (87) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 85 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE .)
    IGUAL           shift and go to state 472


state 429

    (89) expresionLista -> LIST MENOR INT MAYOR VARIABLE .
    (90) expresionLista -> LIST MENOR INT MAYOR VARIABLE . IGUAL CIZQ expListInt CDER
    (91) expresionLista -> LIST MENOR INT MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 89 (expresionLista -> LIST MENOR INT MAYOR VARIABLE .)
    IGUAL           shift and go to state 473


state 430

    (93) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE .
    (94) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE . IGUAL CIZQ expListNum CDER
    (95) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 93 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE .)
    IGUAL           shift and go to state 474


state 431

    (97) expresionLista -> LIST MENOR NUM MAYOR VARIABLE .
    (98) expresionLista -> LIST MENOR NUM MAYOR VARIABLE . IGUAL CIZQ expListNum CDER
    (99) expresionLista -> LIST MENOR NUM MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 97 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE .)
    IGUAL           shift and go to state 475


state 432

    (100) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE .
    (101) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE . IGUAL CIZQ expListBool CDER
    (102) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 100 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE .)
    IGUAL           shift and go to state 476


state 433

    (104) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE .
    (105) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE . IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 104 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE .)
    IGUAL           shift and go to state 477


state 434

    (108) expresionLista -> LIST MENOR SET MAYOR VARIABLE .
    (109) expresionLista -> LIST MENOR SET MAYOR VARIABLE . IGUAL CIZQ expListSet CDER
    (110) expresionLista -> LIST MENOR SET MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 108 (expresionLista -> LIST MENOR SET MAYOR VARIABLE .)
    IGUAL           shift and go to state 478


state 435

    (112) expresionLista -> LIST MENOR MAP MAYOR VARIABLE .
    (113) expresionLista -> LIST MENOR MAP MAYOR VARIABLE . IGUAL CIZQ expListMap CDER
    (114) expresionLista -> LIST MENOR MAP MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 112 (expresionLista -> LIST MENOR MAP MAYOR VARIABLE .)
    IGUAL           shift and go to state 479


state 436

    (119) expListString -> VARIABLE COMA . expListString
    (143) expListDynamic -> VARIABLE COMA . expListDynamic
    (116) expListString -> . STRING
    (117) expListString -> . STRING COMA expListString
    (118) expListString -> . VARIABLE
    (119) expListString -> . VARIABLE COMA expListString
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 151
    VARIABLE        shift and go to state 365
    ENTERO          shift and go to state 250
    DOUBLE          shift and go to state 251
    BOOL            shift and go to state 252

    expListString                  shift and go to state 366
    expListDynamic                 shift and go to state 370

state 437

    (123) expListInt -> VARIABLE COMA . expListInt
    (129) expListNum -> VARIABLE COMA . expListNum
    (143) expListDynamic -> VARIABLE COMA . expListDynamic
    (120) expListInt -> . ENTERO
    (121) expListInt -> . ENTERO COMA expListInt
    (122) expListInt -> . VARIABLE
    (123) expListInt -> . VARIABLE COMA expListInt
    (124) expListNum -> . ENTERO
    (125) expListNum -> . DOUBLE
    (126) expListNum -> . ENTERO COMA expListNum
    (127) expListNum -> . DOUBLE COMA expListNum
    (128) expListNum -> . VARIABLE
    (129) expListNum -> . VARIABLE COMA expListNum
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 153
    VARIABLE        shift and go to state 376
    DOUBLE          shift and go to state 154
    STRING          shift and go to state 249
    BOOL            shift and go to state 252

    expListInt                     shift and go to state 367
    expListNum                     shift and go to state 368
    expListDynamic                 shift and go to state 370

state 438

    (126) expListNum -> ENTERO COMA . expListNum
    (139) expListDynamic -> ENTERO COMA . expListDynamic
    (124) expListNum -> . ENTERO
    (125) expListNum -> . DOUBLE
    (126) expListNum -> . ENTERO COMA expListNum
    (127) expListNum -> . DOUBLE COMA expListNum
    (128) expListNum -> . VARIABLE
    (129) expListNum -> . VARIABLE COMA expListNum
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 379
    DOUBLE          shift and go to state 154
    VARIABLE        shift and go to state 380
    STRING          shift and go to state 249
    BOOL            shift and go to state 252

    expListNum                     shift and go to state 374
    expListDynamic                 shift and go to state 375

state 439

    (129) expListNum -> VARIABLE COMA . expListNum
    (143) expListDynamic -> VARIABLE COMA . expListDynamic
    (124) expListNum -> . ENTERO
    (125) expListNum -> . DOUBLE
    (126) expListNum -> . ENTERO COMA expListNum
    (127) expListNum -> . DOUBLE COMA expListNum
    (128) expListNum -> . VARIABLE
    (129) expListNum -> . VARIABLE COMA expListNum
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 379
    DOUBLE          shift and go to state 154
    VARIABLE        shift and go to state 380
    STRING          shift and go to state 249
    BOOL            shift and go to state 252

    expListNum                     shift and go to state 368
    expListDynamic                 shift and go to state 370

state 440

    (133) expListBool -> VARIABLE COMA . expListBool
    (143) expListDynamic -> VARIABLE COMA . expListDynamic
    (130) expListBool -> . BOOL
    (131) expListBool -> . BOOL COMA expListBool
    (132) expListBool -> . VARIABLE
    (133) expListBool -> . VARIABLE COMA expListBool
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic

    BOOL            shift and go to state 155
    VARIABLE        shift and go to state 383
    STRING          shift and go to state 249
    ENTERO          shift and go to state 250
    DOUBLE          shift and go to state 251

    expListBool                    shift and go to state 369
    expListDynamic                 shift and go to state 370

state 441

    (144) expListSet -> SETFROM PIZQ CIZQ CDER . PDER
    (146) expListSet -> SETFROM PIZQ CIZQ CDER . PDER COMA expListSet

    PDER            shift and go to state 480


state 442

    (145) expListSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER
    (147) expListSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER COMA expListSet

    CDER            shift and go to state 481


state 443

    (152) expListMap -> LIZQ LDER COMA expListMap .

    CDER            reduce using rule 152 (expListMap -> LIZQ LDER COMA expListMap .)


state 444

    (154) expListMap -> VARIABLE .
    (155) expListMap -> VARIABLE . COMA expListMap

    CDER            reduce using rule 154 (expListMap -> VARIABLE .)
    COMA            shift and go to state 482


state 445

    (153) expListMap -> LIZQ expMap LDER COMA . expListMap
    (150) expListMap -> . LIZQ LDER
    (151) expListMap -> . LIZQ expMap LDER
    (152) expListMap -> . LIZQ LDER COMA expListMap
    (153) expListMap -> . LIZQ expMap LDER COMA expListMap
    (154) expListMap -> . VARIABLE
    (155) expListMap -> . VARIABLE COMA expListMap

    LIZQ            shift and go to state 157
    VARIABLE        shift and go to state 444

    expListMap                     shift and go to state 483

state 446

    (79) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ . CIZQ CDER PDER
    (81) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 484


state 447

    (59) expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .

    $end            reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    PUNTOYCOMA      reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    VARIABLE        reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    INT             reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    DOUBLER         reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    NUM             reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    STRINGR         reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    BOOLR           reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    DYNAMIC         reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    VAR             reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    WHILE           reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    DO              reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    IF              reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    ELSE            reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    PRINT           reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    FUNCIONSTDIN    reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    FUNCIONSTDOUT   reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    NOT             reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    ELSEIF          reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    FOR             reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    LIST            reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    CIZQ            reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    NEWLIST         reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    SET             reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    SETFROM         reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    MAP             reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    LIZQ            reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    ENTERO          reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    DOUBLE          reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    STRING          reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    BOOL            reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)
    LDER            reduce using rule 59 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)


state 448

    (61) expresionMap -> MAP VARIABLE IGUAL LIZQ expMap . LDER

    LDER            shift and go to state 485


state 449

    (78) expresionSet -> SETFROM PIZQ CIZQ CDER PDER .

    PUNTOYCOMA      reduce using rule 78 (expresionSet -> SETFROM PIZQ CIZQ CDER PDER .)


state 450

    (80) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 486


state 451

    (143) expListDynamic -> VARIABLE COMA . expListDynamic
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 249
    ENTERO          shift and go to state 250
    DOUBLE          shift and go to state 251
    BOOL            shift and go to state 252
    VARIABLE        shift and go to state 392

    expListDynamic                 shift and go to state 370

state 452

    (232) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO . PDER

    PDER            shift and go to state 487


state 453

    (206) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 488


state 454

    (64) expMap -> claveValor DOSPUNTOS claveValor COMA expMap .

    LDER            reduce using rule 64 (expMap -> claveValor DOSPUNTOS claveValor COMA expMap .)


state 455

    (73) claveValor -> SETFROM PIZQ CIZQ CDER PDER .

    DOSPUNTOS       reduce using rule 73 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)
    COMA            reduce using rule 73 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)
    LDER            reduce using rule 73 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)


state 456

    (74) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 489


state 457

    (208) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ . expresionBool PDER
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 170
    DOUBLE          shift and go to state 56
    BOOL            shift and go to state 59
    NOT             shift and go to state 46
    ENTERO          shift and go to state 174
    STRING          shift and go to state 175

    expresionBool                  shift and go to state 490
    valorDouble                    shift and go to state 169
    valorBool                      shift and go to state 171
    negacionBool                   shift and go to state 172
    comparacionBool                shift and go to state 207
    valor                          shift and go to state 37
    valorInt                       shift and go to state 173

state 458

    (171) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 491


state 459

    (78) expresionSet -> SETFROM PIZQ CIZQ CDER . PDER
    (73) claveValor -> SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 492


state 460

    (80) expresionSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER
    (74) claveValor -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 493


state 461

    (175) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 494


state 462

    (202) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DSUMA PDER final
    (204) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DRESTA PDER final

    VARIABLE        shift and go to state 495


state 463

    (196) expresionBoolFor -> VARIABLE comparadorMat . expresionDouble
    (197) expresionBoolFor -> VARIABLE comparadorMat . VARIABLE
    (212) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (213) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 496
    DOUBLE          shift and go to state 194
    ENTERO          shift and go to state 195

    expresionDouble                shift and go to state 497
    valorDouble                    shift and go to state 193
    valorInt                       shift and go to state 173

state 464

    (195) expresionBoolFor -> valorDouble comparadorMat . expresionDouble
    (198) expresionBoolFor -> valorDouble comparadorMat . VARIABLE
    (211) expresionBool -> valorDouble comparadorMat . expresionDouble
    (214) expresionBool -> valorDouble comparadorMat . VARIABLE
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 499
    DOUBLE          shift and go to state 194
    ENTERO          shift and go to state 195

    valorDouble                    shift and go to state 193
    expresionDouble                shift and go to state 498
    valorInt                       shift and go to state 173

state 465

    (186) asignacionFor -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 186 (asignacionFor -> INT VARIABLE IGUAL expresionInt .)


state 466

    (187) asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 187 (asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 467

    (188) asignacionFor -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 188 (asignacionFor -> NUM VARIABLE IGUAL expresionDouble .)


state 468

    (189) asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 189 (asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt .)


state 469

    (190) asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 190 (asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble .)


state 470

    (191) asignacionFor -> VAR VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 191 (asignacionFor -> VAR VARIABLE IGUAL expresionInt .)


state 471

    (192) asignacionFor -> VAR VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 192 (asignacionFor -> VAR VARIABLE IGUAL expresionDouble .)


state 472

    (86) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL . CIZQ expListString CDER
    (87) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL . expresionNewList
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 500
    NEWLIST         shift and go to state 54

    expresionNewList               shift and go to state 501

state 473

    (90) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL . CIZQ expListInt CDER
    (91) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL . expresionNewList
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 502
    NEWLIST         shift and go to state 54

    expresionNewList               shift and go to state 503

state 474

    (94) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL . CIZQ expListNum CDER
    (95) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL . expresionNewList
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 504
    NEWLIST         shift and go to state 54

    expresionNewList               shift and go to state 505

state 475

    (98) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL . CIZQ expListNum CDER
    (99) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL . expresionNewList
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 506
    NEWLIST         shift and go to state 54

    expresionNewList               shift and go to state 507

state 476

    (101) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL . CIZQ expListBool CDER
    (102) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL . expresionNewList
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 508
    NEWLIST         shift and go to state 54

    expresionNewList               shift and go to state 509

state 477

    (105) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL . CIZQ expListDynamic CDER
    (106) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL . expresionNewList
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 510
    NEWLIST         shift and go to state 54

    expresionNewList               shift and go to state 511

state 478

    (109) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL . CIZQ expListSet CDER
    (110) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL . expresionNewList
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 512
    NEWLIST         shift and go to state 54

    expresionNewList               shift and go to state 513

state 479

    (113) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL . CIZQ expListMap CDER
    (114) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL . expresionNewList
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 514
    NEWLIST         shift and go to state 54

    expresionNewList               shift and go to state 515

state 480

    (144) expListSet -> SETFROM PIZQ CIZQ CDER PDER .
    (146) expListSet -> SETFROM PIZQ CIZQ CDER PDER . COMA expListSet

    CDER            reduce using rule 144 (expListSet -> SETFROM PIZQ CIZQ CDER PDER .)
    COMA            shift and go to state 516


state 481

    (145) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER
    (147) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER COMA expListSet

    PDER            shift and go to state 517


state 482

    (155) expListMap -> VARIABLE COMA . expListMap
    (150) expListMap -> . LIZQ LDER
    (151) expListMap -> . LIZQ expMap LDER
    (152) expListMap -> . LIZQ LDER COMA expListMap
    (153) expListMap -> . LIZQ expMap LDER COMA expListMap
    (154) expListMap -> . VARIABLE
    (155) expListMap -> . VARIABLE COMA expListMap

    LIZQ            shift and go to state 157
    VARIABLE        shift and go to state 444

    expListMap                     shift and go to state 372

state 483

    (153) expListMap -> LIZQ expMap LDER COMA expListMap .

    CDER            reduce using rule 153 (expListMap -> LIZQ expMap LDER COMA expListMap .)


state 484

    (79) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ . CDER PDER
    (81) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 518
    STRING          shift and go to state 249
    ENTERO          shift and go to state 250
    DOUBLE          shift and go to state 251
    BOOL            shift and go to state 252
    VARIABLE        shift and go to state 392

    expListDynamic                 shift and go to state 519

state 485

    (61) expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .

    $end            reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    PUNTOYCOMA      reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    VARIABLE        reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    INT             reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    DOUBLER         reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    NUM             reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    STRINGR         reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    BOOLR           reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    DYNAMIC         reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    VAR             reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    WHILE           reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    DO              reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    IF              reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    ELSE            reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    PRINT           reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    FUNCIONSTDIN    reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    FUNCIONSTDOUT   reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    NOT             reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    ELSEIF          reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    FOR             reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    LIST            reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    CIZQ            reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    NEWLIST         reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    SET             reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    SETFROM         reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    MAP             reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    LIZQ            reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    ENTERO          reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    DOUBLE          reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    STRING          reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    BOOL            reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)
    LDER            reduce using rule 61 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)


state 486

    (80) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    PUNTOYCOMA      reduce using rule 80 (expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 487

    (232) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .

    PUNTOYCOMA      reduce using rule 232 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    SUMA            reduce using rule 232 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    CIZQ            reduce using rule 232 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    PDER            reduce using rule 232 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)


state 488

    (206) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    MAP             reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LIZQ            reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 206 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)


state 489

    (74) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    DOSPUNTOS       reduce using rule 74 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    COMA            reduce using rule 74 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    LDER            reduce using rule 74 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 490

    (208) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool . PDER
    (221) comparacionBool -> expresionBool . operadorLogico expresionBool
    (222) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (253) operadorLogico -> . AND
    (254) operadorLogico -> . OR

    PDER            shift and go to state 520
    AND             shift and go to state 66
    OR              shift and go to state 67

    operadorLogico                 shift and go to state 65

state 491

    (171) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    MAP             reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LIZQ            reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 171 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)


state 492

    (78) expresionSet -> SETFROM PIZQ CIZQ CDER PDER .
    (73) claveValor -> SETFROM PIZQ CIZQ CDER PDER .

    PUNTOYCOMA      reduce using rule 78 (expresionSet -> SETFROM PIZQ CIZQ CDER PDER .)
    DOSPUNTOS       reduce using rule 73 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)


state 493

    (80) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER
    (74) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 521


state 494

    (175) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    MAP             reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LIZQ            reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 175 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)


state 495

    (202) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DSUMA PDER final
    (204) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DRESTA PDER final

    DSUMA           shift and go to state 522
    DRESTA          shift and go to state 523


state 496

    (197) expresionBoolFor -> VARIABLE comparadorMat VARIABLE .
    (213) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (234) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 197 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 213 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 213 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 197 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 213 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 213 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 234 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 234 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 234 (valorInt -> VARIABLE .)
    DIV             reduce using rule 234 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 234 (valorInt -> VARIABLE .)
    MOD             reduce using rule 234 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 234 (valorInt -> VARIABLE .) ]


state 497

    (196) expresionBoolFor -> VARIABLE comparadorMat expresionDouble .
    (212) expresionBool -> VARIABLE comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 196 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 212 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 212 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 498

    (195) expresionBoolFor -> valorDouble comparadorMat expresionDouble .
    (211) expresionBool -> valorDouble comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 195 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 211 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 211 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 499

    (198) expresionBoolFor -> valorDouble comparadorMat VARIABLE .
    (214) expresionBool -> valorDouble comparadorMat VARIABLE .
    (234) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 198 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 214 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 214 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 198 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 214 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 214 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 234 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 234 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 234 (valorInt -> VARIABLE .)
    DIV             reduce using rule 234 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 234 (valorInt -> VARIABLE .)
    MOD             reduce using rule 234 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 234 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 234 (valorInt -> VARIABLE .) ]


state 500

    (86) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ . expListString CDER
    (84) expresionNewList -> CIZQ . CDER
    (116) expListString -> . STRING
    (117) expListString -> . STRING COMA expListString
    (118) expListString -> . VARIABLE
    (119) expListString -> . VARIABLE COMA expListString

    CDER            shift and go to state 144
    STRING          shift and go to state 526
    VARIABLE        shift and go to state 524

    expListString                  shift and go to state 525

state 501

    (87) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 87 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList .)


state 502

    (90) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ . expListInt CDER
    (84) expresionNewList -> CIZQ . CDER
    (120) expListInt -> . ENTERO
    (121) expListInt -> . ENTERO COMA expListInt
    (122) expListInt -> . VARIABLE
    (123) expListInt -> . VARIABLE COMA expListInt

    CDER            shift and go to state 144
    ENTERO          shift and go to state 529
    VARIABLE        shift and go to state 527

    expListInt                     shift and go to state 528

state 503

    (91) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 91 (expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList .)


state 504

    (94) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ . expListNum CDER
    (84) expresionNewList -> CIZQ . CDER
    (124) expListNum -> . ENTERO
    (125) expListNum -> . DOUBLE
    (126) expListNum -> . ENTERO COMA expListNum
    (127) expListNum -> . DOUBLE COMA expListNum
    (128) expListNum -> . VARIABLE
    (129) expListNum -> . VARIABLE COMA expListNum

    CDER            shift and go to state 144
    ENTERO          shift and go to state 532
    DOUBLE          shift and go to state 533
    VARIABLE        shift and go to state 530

    expListNum                     shift and go to state 531

state 505

    (95) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 95 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList .)


state 506

    (98) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ . expListNum CDER
    (84) expresionNewList -> CIZQ . CDER
    (124) expListNum -> . ENTERO
    (125) expListNum -> . DOUBLE
    (126) expListNum -> . ENTERO COMA expListNum
    (127) expListNum -> . DOUBLE COMA expListNum
    (128) expListNum -> . VARIABLE
    (129) expListNum -> . VARIABLE COMA expListNum

    CDER            shift and go to state 144
    ENTERO          shift and go to state 532
    DOUBLE          shift and go to state 533
    VARIABLE        shift and go to state 530

    expListNum                     shift and go to state 534

state 507

    (99) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 99 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList .)


state 508

    (101) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ . expListBool CDER
    (84) expresionNewList -> CIZQ . CDER
    (130) expListBool -> . BOOL
    (131) expListBool -> . BOOL COMA expListBool
    (132) expListBool -> . VARIABLE
    (133) expListBool -> . VARIABLE COMA expListBool

    CDER            shift and go to state 144
    BOOL            shift and go to state 537
    VARIABLE        shift and go to state 535

    expListBool                    shift and go to state 536

state 509

    (102) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 102 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList .)


state 510

    (105) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ . expListDynamic CDER
    (84) expresionNewList -> CIZQ . CDER
    (134) expListDynamic -> . STRING
    (135) expListDynamic -> . ENTERO
    (136) expListDynamic -> . DOUBLE
    (137) expListDynamic -> . BOOL
    (138) expListDynamic -> . STRING COMA expListDynamic
    (139) expListDynamic -> . ENTERO COMA expListDynamic
    (140) expListDynamic -> . DOUBLE COMA expListDynamic
    (141) expListDynamic -> . BOOL COMA expListDynamic
    (142) expListDynamic -> . VARIABLE
    (143) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 144
    STRING          shift and go to state 249
    ENTERO          shift and go to state 250
    DOUBLE          shift and go to state 251
    BOOL            shift and go to state 252
    VARIABLE        shift and go to state 392

    expListDynamic                 shift and go to state 538

state 511

    (106) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 106 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList .)


state 512

    (109) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ . expListSet CDER
    (84) expresionNewList -> CIZQ . CDER
    (144) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (145) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (146) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (147) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (148) expListSet -> . VARIABLE
    (149) expListSet -> . VARIABLE COMA expListSet

    CDER            shift and go to state 144
    SETFROM         shift and go to state 156
    VARIABLE        shift and go to state 539

    expListSet                     shift and go to state 540

state 513

    (110) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 110 (expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList .)


state 514

    (113) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ . expListMap CDER
    (84) expresionNewList -> CIZQ . CDER
    (150) expListMap -> . LIZQ LDER
    (151) expListMap -> . LIZQ expMap LDER
    (152) expListMap -> . LIZQ LDER COMA expListMap
    (153) expListMap -> . LIZQ expMap LDER COMA expListMap
    (154) expListMap -> . VARIABLE
    (155) expListMap -> . VARIABLE COMA expListMap

    CDER            shift and go to state 144
    LIZQ            shift and go to state 157
    VARIABLE        shift and go to state 444

    expListMap                     shift and go to state 541

state 515

    (114) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 114 (expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList .)


state 516

    (146) expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA . expListSet
    (144) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (145) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (146) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (147) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (148) expListSet -> . VARIABLE
    (149) expListSet -> . VARIABLE COMA expListSet

    SETFROM         shift and go to state 156
    VARIABLE        shift and go to state 539

    expListSet                     shift and go to state 542

state 517

    (145) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .
    (147) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER . COMA expListSet

    CDER            reduce using rule 145 (expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    COMA            shift and go to state 543


state 518

    (79) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 544


state 519

    (81) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 545


state 520

    (208) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 208 (sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .)


state 521

    (80) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .
    (74) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    PUNTOYCOMA      reduce using rule 80 (expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    DOSPUNTOS       reduce using rule 74 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 522

    (202) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA . PDER LIZQ final LDER
    (203) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA . PDER final

    PDER            shift and go to state 546


state 523

    (204) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA . PDER LIZQ final LDER
    (205) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA . PDER final

    PDER            shift and go to state 547


state 524

    (118) expListString -> VARIABLE .
    (119) expListString -> VARIABLE . COMA expListString

    CDER            reduce using rule 118 (expListString -> VARIABLE .)
    COMA            shift and go to state 548


state 525

    (86) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString . CDER

    CDER            shift and go to state 549


state 526

    (116) expListString -> STRING .
    (117) expListString -> STRING . COMA expListString

    CDER            reduce using rule 116 (expListString -> STRING .)
    COMA            shift and go to state 550


state 527

    (122) expListInt -> VARIABLE .
    (123) expListInt -> VARIABLE . COMA expListInt

    CDER            reduce using rule 122 (expListInt -> VARIABLE .)
    COMA            shift and go to state 551


state 528

    (90) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt . CDER

    CDER            shift and go to state 552


state 529

    (120) expListInt -> ENTERO .
    (121) expListInt -> ENTERO . COMA expListInt

    CDER            reduce using rule 120 (expListInt -> ENTERO .)
    COMA            shift and go to state 553


state 530

    (128) expListNum -> VARIABLE .
    (129) expListNum -> VARIABLE . COMA expListNum

    CDER            reduce using rule 128 (expListNum -> VARIABLE .)
    COMA            shift and go to state 554


state 531

    (94) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum . CDER

    CDER            shift and go to state 555


state 532

    (124) expListNum -> ENTERO .
    (126) expListNum -> ENTERO . COMA expListNum

    CDER            reduce using rule 124 (expListNum -> ENTERO .)
    COMA            shift and go to state 556


state 533

    (125) expListNum -> DOUBLE .
    (127) expListNum -> DOUBLE . COMA expListNum

    CDER            reduce using rule 125 (expListNum -> DOUBLE .)
    COMA            shift and go to state 557


state 534

    (98) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum . CDER

    CDER            shift and go to state 558


state 535

    (132) expListBool -> VARIABLE .
    (133) expListBool -> VARIABLE . COMA expListBool

    CDER            reduce using rule 132 (expListBool -> VARIABLE .)
    COMA            shift and go to state 559


state 536

    (101) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool . CDER

    CDER            shift and go to state 560


state 537

    (130) expListBool -> BOOL .
    (131) expListBool -> BOOL . COMA expListBool

    CDER            reduce using rule 130 (expListBool -> BOOL .)
    COMA            shift and go to state 561


state 538

    (105) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic . CDER

    CDER            shift and go to state 562


state 539

    (148) expListSet -> VARIABLE .
    (149) expListSet -> VARIABLE . COMA expListSet

    CDER            reduce using rule 148 (expListSet -> VARIABLE .)
    COMA            shift and go to state 563


state 540

    (109) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet . CDER

    CDER            shift and go to state 564


state 541

    (113) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap . CDER

    CDER            shift and go to state 565


state 542

    (146) expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet .

    CDER            reduce using rule 146 (expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet .)


state 543

    (147) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA . expListSet
    (144) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (145) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (146) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (147) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (148) expListSet -> . VARIABLE
    (149) expListSet -> . VARIABLE COMA expListSet

    SETFROM         shift and go to state 156
    VARIABLE        shift and go to state 539

    expListSet                     shift and go to state 566

state 544

    (79) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER .

    PUNTOYCOMA      reduce using rule 79 (expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER .)


state 545

    (81) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 567


state 546

    (202) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER . LIZQ final LDER
    (203) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 568
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 569
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 547

    (204) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER . LIZQ final LDER
    (205) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 570
    VARIABLE        shift and go to state 20
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 51
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 55
    MAP             shift and go to state 53
    ENTERO          shift and go to state 49
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOL            shift and go to state 59

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 571
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 548

    (119) expListString -> VARIABLE COMA . expListString
    (116) expListString -> . STRING
    (117) expListString -> . STRING COMA expListString
    (118) expListString -> . VARIABLE
    (119) expListString -> . VARIABLE COMA expListString

    STRING          shift and go to state 526
    VARIABLE        shift and go to state 524

    expListString                  shift and go to state 366

state 549

    (86) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER .

    PUNTOYCOMA      reduce using rule 86 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER .)


state 550

    (117) expListString -> STRING COMA . expListString
    (116) expListString -> . STRING
    (117) expListString -> . STRING COMA expListString
    (118) expListString -> . VARIABLE
    (119) expListString -> . VARIABLE COMA expListString

    STRING          shift and go to state 526
    VARIABLE        shift and go to state 524

    expListString                  shift and go to state 363

state 551

    (123) expListInt -> VARIABLE COMA . expListInt
    (120) expListInt -> . ENTERO
    (121) expListInt -> . ENTERO COMA expListInt
    (122) expListInt -> . VARIABLE
    (123) expListInt -> . VARIABLE COMA expListInt

    ENTERO          shift and go to state 529
    VARIABLE        shift and go to state 527

    expListInt                     shift and go to state 367

state 552

    (90) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER .

    PUNTOYCOMA      reduce using rule 90 (expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER .)


state 553

    (121) expListInt -> ENTERO COMA . expListInt
    (120) expListInt -> . ENTERO
    (121) expListInt -> . ENTERO COMA expListInt
    (122) expListInt -> . VARIABLE
    (123) expListInt -> . VARIABLE COMA expListInt

    ENTERO          shift and go to state 529
    VARIABLE        shift and go to state 527

    expListInt                     shift and go to state 373

state 554

    (129) expListNum -> VARIABLE COMA . expListNum
    (124) expListNum -> . ENTERO
    (125) expListNum -> . DOUBLE
    (126) expListNum -> . ENTERO COMA expListNum
    (127) expListNum -> . DOUBLE COMA expListNum
    (128) expListNum -> . VARIABLE
    (129) expListNum -> . VARIABLE COMA expListNum

    ENTERO          shift and go to state 532
    DOUBLE          shift and go to state 533
    VARIABLE        shift and go to state 530

    expListNum                     shift and go to state 368

state 555

    (94) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 94 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER .)


state 556

    (126) expListNum -> ENTERO COMA . expListNum
    (124) expListNum -> . ENTERO
    (125) expListNum -> . DOUBLE
    (126) expListNum -> . ENTERO COMA expListNum
    (127) expListNum -> . DOUBLE COMA expListNum
    (128) expListNum -> . VARIABLE
    (129) expListNum -> . VARIABLE COMA expListNum

    ENTERO          shift and go to state 532
    DOUBLE          shift and go to state 533
    VARIABLE        shift and go to state 530

    expListNum                     shift and go to state 374

state 557

    (127) expListNum -> DOUBLE COMA . expListNum
    (124) expListNum -> . ENTERO
    (125) expListNum -> . DOUBLE
    (126) expListNum -> . ENTERO COMA expListNum
    (127) expListNum -> . DOUBLE COMA expListNum
    (128) expListNum -> . VARIABLE
    (129) expListNum -> . VARIABLE COMA expListNum

    ENTERO          shift and go to state 532
    DOUBLE          shift and go to state 533
    VARIABLE        shift and go to state 530

    expListNum                     shift and go to state 377

state 558

    (98) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 98 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER .)


state 559

    (133) expListBool -> VARIABLE COMA . expListBool
    (130) expListBool -> . BOOL
    (131) expListBool -> . BOOL COMA expListBool
    (132) expListBool -> . VARIABLE
    (133) expListBool -> . VARIABLE COMA expListBool

    BOOL            shift and go to state 537
    VARIABLE        shift and go to state 535

    expListBool                    shift and go to state 369

state 560

    (101) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER .

    PUNTOYCOMA      reduce using rule 101 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER .)


state 561

    (131) expListBool -> BOOL COMA . expListBool
    (130) expListBool -> . BOOL
    (131) expListBool -> . BOOL COMA expListBool
    (132) expListBool -> . VARIABLE
    (133) expListBool -> . VARIABLE COMA expListBool

    BOOL            shift and go to state 537
    VARIABLE        shift and go to state 535

    expListBool                    shift and go to state 381

state 562

    (105) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 105 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER .)


state 563

    (149) expListSet -> VARIABLE COMA . expListSet
    (144) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (145) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (146) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (147) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (148) expListSet -> . VARIABLE
    (149) expListSet -> . VARIABLE COMA expListSet

    SETFROM         shift and go to state 156
    VARIABLE        shift and go to state 539

    expListSet                     shift and go to state 371

state 564

    (109) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER .

    PUNTOYCOMA      reduce using rule 109 (expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER .)


state 565

    (113) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER .

    PUNTOYCOMA      reduce using rule 113 (expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER .)


state 566

    (147) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet .

    CDER            reduce using rule 147 (expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet .)


state 567

    (81) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    PUNTOYCOMA      reduce using rule 81 (expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 568

    (202) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ . final LDER
    (60) expresionMap -> LIZQ . LDER
    (62) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (63) expMap -> . claveValor DOSPUNTOS claveValor
    (64) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (65) claveValor -> . VARIABLE
    (66) claveValor -> . STRING
    (67) claveValor -> . ENTERO
    (68) claveValor -> . DOUBLE
    (69) claveValor -> . BOOL
    (70) claveValor -> . CIZQ expListDynamic CDER
    (71) claveValor -> . CIZQ expListSet CDER
    (72) claveValor -> . expresionNewList
    (73) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (74) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (75) claveValor -> . LIZQ LDER
    (76) claveValor -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 122
    VARIABLE        shift and go to state 259
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 262
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 263
    MAP             shift and go to state 53
    LIZQ            shift and go to state 257
    STRING          shift and go to state 264
    ENTERO          shift and go to state 261
    DOUBLE          shift and go to state 265
    BOOL            shift and go to state 266

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 572
    expMap                         shift and go to state 123
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 260
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    claveValor                     shift and go to state 124
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 569

    (203) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .

    PUNTOYCOMA      reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    VARIABLE        reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    INT             reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DOUBLER         reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NUM             reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    STRINGR         reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BOOLR           reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DYNAMIC         reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    VAR             reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    WHILE           reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DO              reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    IF              reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ELSE            reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    PRINT           reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FUNCIONSTDIN    reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FUNCIONSTDOUT   reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NOT             reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ELSEIF          reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FOR             reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LIST            reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    CIZQ            reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NEWLIST         reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    SET             reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    SETFROM         reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    MAP             reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LIZQ            reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ENTERO          reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DOUBLE          reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    STRING          reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BOOL            reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    $end            reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LDER            reduce using rule 203 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)


state 570

    (204) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ . final LDER
    (60) expresionMap -> LIZQ . LDER
    (62) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap
    (63) expMap -> . claveValor DOSPUNTOS claveValor
    (64) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (156) asignacion -> . INT VARIABLE IGUAL expresionInt
    (157) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (160) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (161) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (162) asignacion -> . VAR VARIABLE IGUAL expresion
    (163) asignacion -> . asignacionSimple
    (235) expresionInt -> . valorInt operadorMat expresionInt
    (236) expresionInt -> . valorInt
    (239) expresionDouble -> . valorDouble operadorMat expresionDouble
    (240) expresionDouble -> . valorDouble
    (228) expresionString -> . valorString SUMA expresionString
    (229) expresionString -> . valorString
    (211) expresionBool -> . valorDouble comparadorMat expresionDouble
    (212) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (213) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (214) expresionBool -> . valorDouble comparadorMat VARIABLE
    (215) expresionBool -> . valorBool
    (216) expresionBool -> . negacionBool
    (217) expresionBool -> . comparacionBool
    (218) expresionBool -> . valor IS objeto
    (219) expresionBool -> . valor ISNEGADO objeto
    (195) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (196) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (197) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (198) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (199) expresionBoolFor -> . valorBool
    (200) expresionBoolFor -> . negacionBool
    (201) expresionBoolFor -> . comparacionBool
    (206) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (207) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (208) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (170) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (171) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaElse -> . ELSE final
    (173) sentenciaElse -> . ELSE LIZQ final LDER
    (165) imprimir -> . PRINT PIZQ expresion PDER
    (166) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (167) funcionStdin -> . FUNCIONSTDIN
    (168) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (169) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (220) negacionBool -> . NOT PIZQ expresionBool PDER
    (221) comparacionBool -> . expresionBool operadorLogico expresionBool
    (222) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (174) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (175) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (202) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (203) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (204) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (205) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (231) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (232) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (85) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (87) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListString CDER
    (89) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (91) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListInt CDER
    (93) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (95) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListNum CDER
    (97) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (101) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (102) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (103) expresionLista -> . CIZQ expListBool CDER
    (104) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (106) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListDynamic CDER
    (108) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (110) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListSet CDER
    (112) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (114) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListMap CDER
    (82) expresionNewList -> . NEWLIST PIZQ PDER
    (83) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (84) expresionNewList -> . CIZQ CDER
    (77) expresionSet -> . SET VARIABLE
    (78) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (79) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (80) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (81) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (58) expresionMap -> . MAP VARIABLE
    (59) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (60) expresionMap -> . LIZQ LDER
    (61) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (62) expresionMap -> . LIZQ expMap LDER
    (65) claveValor -> . VARIABLE
    (66) claveValor -> . STRING
    (67) claveValor -> . ENTERO
    (68) claveValor -> . DOUBLE
    (69) claveValor -> . BOOL
    (70) claveValor -> . CIZQ expListDynamic CDER
    (71) claveValor -> . CIZQ expListSet CDER
    (72) claveValor -> . expresionNewList
    (73) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (74) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (75) claveValor -> . LIZQ LDER
    (76) claveValor -> . LIZQ expMap LDER
    (164) asignacionSimple -> . VARIABLE IGUAL expresion
    (233) valorInt -> . ENTERO
    (234) valorInt -> . VARIABLE
    (237) valorDouble -> . DOUBLE
    (238) valorDouble -> . valorInt
    (223) valorString -> . STRING
    (224) valorString -> . VARIABLE
    (225) valorString -> . FUNCIONSTDIN
    (226) valorString -> . expresionIndexString
    (227) valorString -> . sentenciaSubstring
    (209) valorBool -> . BOOL
    (210) valorBool -> . VARIABLE
    (176) valor -> . ENTERO
    (177) valor -> . VARIABLE
    (178) valor -> . DOUBLE
    (179) valor -> . STRING
    (230) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 122
    VARIABLE        shift and go to state 259
    INT             shift and go to state 25
    DOUBLER         shift and go to state 26
    NUM             shift and go to state 27
    STRINGR         shift and go to state 28
    BOOLR           shift and go to state 29
    DYNAMIC         shift and go to state 30
    VAR             shift and go to state 31
    WHILE           shift and go to state 38
    DO              shift and go to state 40
    IF              shift and go to state 41
    ELSE            shift and go to state 42
    PRINT           shift and go to state 43
    FUNCIONSTDIN    shift and go to state 44
    FUNCIONSTDOUT   shift and go to state 45
    NOT             shift and go to state 46
    ELSEIF          shift and go to state 47
    FOR             shift and go to state 48
    LIST            shift and go to state 50
    CIZQ            shift and go to state 262
    NEWLIST         shift and go to state 54
    SET             shift and go to state 52
    SETFROM         shift and go to state 263
    MAP             shift and go to state 53
    LIZQ            shift and go to state 257
    STRING          shift and go to state 264
    ENTERO          shift and go to state 261
    DOUBLE          shift and go to state 265
    BOOL            shift and go to state 266

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 573
    expMap                         shift and go to state 123
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 260
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    claveValor                     shift and go to state 124
    asignacionSimple               shift and go to state 32
    valorInt                       shift and go to state 33
    valorDouble                    shift and go to state 34
    valorString                    shift and go to state 35
    valorBool                      shift and go to state 36
    valor                          shift and go to state 37
    expresionIndexString           shift and go to state 58

state 571

    (205) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .

    PUNTOYCOMA      reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    VARIABLE        reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    INT             reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DOUBLER         reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NUM             reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    STRINGR         reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BOOLR           reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DYNAMIC         reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    VAR             reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    WHILE           reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DO              reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    IF              reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ELSE            reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    PRINT           reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FUNCIONSTDIN    reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FUNCIONSTDOUT   reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NOT             reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ELSEIF          reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FOR             reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LIST            reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    CIZQ            reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NEWLIST         reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    SET             reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    SETFROM         reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    MAP             reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LIZQ            reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ENTERO          reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DOUBLE          reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    STRING          reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BOOL            reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    $end            reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LDER            reduce using rule 205 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)


state 572

    (202) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final . LDER

    LDER            shift and go to state 574


state 573

    (204) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final . LDER

    LDER            shift and go to state 575


state 574

    (202) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    INT             reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NUM             reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    STRINGR         reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BOOLR           reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    VAR             reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    WHILE           reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DO              reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    IF              reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ELSE            reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    PRINT           reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NOT             reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FOR             reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LIST            reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    CIZQ            reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    SET             reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    SETFROM         reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    MAP             reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LIZQ            reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ENTERO          reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    STRING          reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BOOL            reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    $end            reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LDER            reduce using rule 202 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)


state 575

    (204) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    INT             reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NUM             reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    STRINGR         reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BOOLR           reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    VAR             reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    WHILE           reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DO              reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    IF              reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ELSE            reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    PRINT           reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NOT             reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FOR             reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LIST            reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    CIZQ            reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    SET             reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    SETFROM         reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    MAP             reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LIZQ            reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ENTERO          reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    STRING          reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BOOL            reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    $end            reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LDER            reduce using rule 204 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 8 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 8 resolved as shift
WARNING: shift/reduce conflict for INT in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 8 resolved as shift
WARNING: shift/reduce conflict for NUM in state 8 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 8 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 8 resolved as shift
WARNING: shift/reduce conflict for VAR in state 8 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 8 resolved as shift
WARNING: shift/reduce conflict for DO in state 8 resolved as shift
WARNING: shift/reduce conflict for IF in state 8 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 8 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 8 resolved as shift
WARNING: shift/reduce conflict for NOT in state 8 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 8 resolved as shift
WARNING: shift/reduce conflict for FOR in state 8 resolved as shift
WARNING: shift/reduce conflict for LIST in state 8 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 8 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 8 resolved as shift
WARNING: shift/reduce conflict for SET in state 8 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 8 resolved as shift
WARNING: shift/reduce conflict for MAP in state 8 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 8 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 8 resolved as shift
WARNING: shift/reduce conflict for STRING in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 8 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 10 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 10 resolved as shift
WARNING: shift/reduce conflict for INT in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 10 resolved as shift
WARNING: shift/reduce conflict for NUM in state 10 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 10 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 10 resolved as shift
WARNING: shift/reduce conflict for VAR in state 10 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 10 resolved as shift
WARNING: shift/reduce conflict for DO in state 10 resolved as shift
WARNING: shift/reduce conflict for IF in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 10 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 10 resolved as shift
WARNING: shift/reduce conflict for NOT in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 10 resolved as shift
WARNING: shift/reduce conflict for FOR in state 10 resolved as shift
WARNING: shift/reduce conflict for LIST in state 10 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 10 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 10 resolved as shift
WARNING: shift/reduce conflict for SET in state 10 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 10 resolved as shift
WARNING: shift/reduce conflict for MAP in state 10 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 10 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 10 resolved as shift
WARNING: shift/reduce conflict for STRING in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 10 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 11 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 11 resolved as shift
WARNING: shift/reduce conflict for INT in state 11 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 11 resolved as shift
WARNING: shift/reduce conflict for NUM in state 11 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 11 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 11 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 11 resolved as shift
WARNING: shift/reduce conflict for VAR in state 11 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 11 resolved as shift
WARNING: shift/reduce conflict for DO in state 11 resolved as shift
WARNING: shift/reduce conflict for IF in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 11 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 11 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 11 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 11 resolved as shift
WARNING: shift/reduce conflict for NOT in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 11 resolved as shift
WARNING: shift/reduce conflict for FOR in state 11 resolved as shift
WARNING: shift/reduce conflict for LIST in state 11 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 11 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 11 resolved as shift
WARNING: shift/reduce conflict for SET in state 11 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 11 resolved as shift
WARNING: shift/reduce conflict for MAP in state 11 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 11 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 11 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 11 resolved as shift
WARNING: shift/reduce conflict for STRING in state 11 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 11 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 17 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 17 resolved as shift
WARNING: shift/reduce conflict for INT in state 17 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 17 resolved as shift
WARNING: shift/reduce conflict for NUM in state 17 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 17 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 17 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 17 resolved as shift
WARNING: shift/reduce conflict for VAR in state 17 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 17 resolved as shift
WARNING: shift/reduce conflict for DO in state 17 resolved as shift
WARNING: shift/reduce conflict for IF in state 17 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 17 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 17 resolved as shift
WARNING: shift/reduce conflict for NOT in state 17 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 17 resolved as shift
WARNING: shift/reduce conflict for FOR in state 17 resolved as shift
WARNING: shift/reduce conflict for LIST in state 17 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 17 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 17 resolved as shift
WARNING: shift/reduce conflict for SET in state 17 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 17 resolved as shift
WARNING: shift/reduce conflict for MAP in state 17 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 17 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 17 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 17 resolved as shift
WARNING: shift/reduce conflict for STRING in state 17 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 17 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 18 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 18 resolved as shift
WARNING: shift/reduce conflict for INT in state 18 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 18 resolved as shift
WARNING: shift/reduce conflict for NUM in state 18 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 18 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 18 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 18 resolved as shift
WARNING: shift/reduce conflict for VAR in state 18 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 18 resolved as shift
WARNING: shift/reduce conflict for DO in state 18 resolved as shift
WARNING: shift/reduce conflict for IF in state 18 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 18 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 18 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 18 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 18 resolved as shift
WARNING: shift/reduce conflict for NOT in state 18 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 18 resolved as shift
WARNING: shift/reduce conflict for FOR in state 18 resolved as shift
WARNING: shift/reduce conflict for LIST in state 18 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 18 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 18 resolved as shift
WARNING: shift/reduce conflict for SET in state 18 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 18 resolved as shift
WARNING: shift/reduce conflict for MAP in state 18 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 18 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 18 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 18 resolved as shift
WARNING: shift/reduce conflict for STRING in state 18 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 18 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 19 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 33 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 33 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 33 resolved as shift
WARNING: shift/reduce conflict for DIV in state 33 resolved as shift
WARNING: shift/reduce conflict for DIVENTERO in state 33 resolved as shift
WARNING: shift/reduce conflict for MOD in state 33 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 60 resolved as shift
WARNING: shift/reduce conflict for INT in state 60 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 60 resolved as shift
WARNING: shift/reduce conflict for NUM in state 60 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 60 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 60 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 60 resolved as shift
WARNING: shift/reduce conflict for VAR in state 60 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 60 resolved as shift
WARNING: shift/reduce conflict for DO in state 60 resolved as shift
WARNING: shift/reduce conflict for IF in state 60 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 60 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 60 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 60 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 60 resolved as shift
WARNING: shift/reduce conflict for NOT in state 60 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 60 resolved as shift
WARNING: shift/reduce conflict for FOR in state 60 resolved as shift
WARNING: shift/reduce conflict for LIST in state 60 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 60 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 60 resolved as shift
WARNING: shift/reduce conflict for SET in state 60 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 60 resolved as shift
WARNING: shift/reduce conflict for MAP in state 60 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 60 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 60 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 60 resolved as shift
WARNING: shift/reduce conflict for STRING in state 60 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 60 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 61 resolved as shift
WARNING: shift/reduce conflict for INT in state 61 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 61 resolved as shift
WARNING: shift/reduce conflict for NUM in state 61 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 61 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 61 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 61 resolved as shift
WARNING: shift/reduce conflict for VAR in state 61 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 61 resolved as shift
WARNING: shift/reduce conflict for DO in state 61 resolved as shift
WARNING: shift/reduce conflict for IF in state 61 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 61 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 61 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 61 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 61 resolved as shift
WARNING: shift/reduce conflict for NOT in state 61 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 61 resolved as shift
WARNING: shift/reduce conflict for FOR in state 61 resolved as shift
WARNING: shift/reduce conflict for LIST in state 61 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 61 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 61 resolved as shift
WARNING: shift/reduce conflict for SET in state 61 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 61 resolved as shift
WARNING: shift/reduce conflict for MAP in state 61 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 61 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 61 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 61 resolved as shift
WARNING: shift/reduce conflict for STRING in state 61 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 61 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 62 resolved as shift
WARNING: shift/reduce conflict for INT in state 62 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 62 resolved as shift
WARNING: shift/reduce conflict for NUM in state 62 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 62 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 62 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 62 resolved as shift
WARNING: shift/reduce conflict for VAR in state 62 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 62 resolved as shift
WARNING: shift/reduce conflict for DO in state 62 resolved as shift
WARNING: shift/reduce conflict for IF in state 62 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 62 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 62 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 62 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 62 resolved as shift
WARNING: shift/reduce conflict for NOT in state 62 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 62 resolved as shift
WARNING: shift/reduce conflict for FOR in state 62 resolved as shift
WARNING: shift/reduce conflict for LIST in state 62 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 62 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 62 resolved as shift
WARNING: shift/reduce conflict for SET in state 62 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 62 resolved as shift
WARNING: shift/reduce conflict for MAP in state 62 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 62 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 62 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 62 resolved as shift
WARNING: shift/reduce conflict for STRING in state 62 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 62 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 63 resolved as shift
WARNING: shift/reduce conflict for INT in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 63 resolved as shift
WARNING: shift/reduce conflict for NUM in state 63 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 63 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 63 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 63 resolved as shift
WARNING: shift/reduce conflict for VAR in state 63 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 63 resolved as shift
WARNING: shift/reduce conflict for DO in state 63 resolved as shift
WARNING: shift/reduce conflict for IF in state 63 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 63 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 63 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 63 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 63 resolved as shift
WARNING: shift/reduce conflict for NOT in state 63 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 63 resolved as shift
WARNING: shift/reduce conflict for FOR in state 63 resolved as shift
WARNING: shift/reduce conflict for LIST in state 63 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 63 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 63 resolved as shift
WARNING: shift/reduce conflict for SET in state 63 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 63 resolved as shift
WARNING: shift/reduce conflict for MAP in state 63 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 63 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 63 resolved as shift
WARNING: shift/reduce conflict for STRING in state 63 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 63 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 64 resolved as shift
WARNING: shift/reduce conflict for INT in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 64 resolved as shift
WARNING: shift/reduce conflict for NUM in state 64 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 64 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 64 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 64 resolved as shift
WARNING: shift/reduce conflict for VAR in state 64 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 64 resolved as shift
WARNING: shift/reduce conflict for DO in state 64 resolved as shift
WARNING: shift/reduce conflict for IF in state 64 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 64 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 64 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 64 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 64 resolved as shift
WARNING: shift/reduce conflict for NOT in state 64 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 64 resolved as shift
WARNING: shift/reduce conflict for FOR in state 64 resolved as shift
WARNING: shift/reduce conflict for LIST in state 64 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 64 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 64 resolved as shift
WARNING: shift/reduce conflict for SET in state 64 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 64 resolved as shift
WARNING: shift/reduce conflict for MAP in state 64 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 64 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 64 resolved as shift
WARNING: shift/reduce conflict for STRING in state 64 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 64 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 68 resolved as shift
WARNING: shift/reduce conflict for INT in state 68 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 68 resolved as shift
WARNING: shift/reduce conflict for NUM in state 68 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 68 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 68 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 68 resolved as shift
WARNING: shift/reduce conflict for VAR in state 68 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 68 resolved as shift
WARNING: shift/reduce conflict for DO in state 68 resolved as shift
WARNING: shift/reduce conflict for IF in state 68 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 68 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 68 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 68 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 68 resolved as shift
WARNING: shift/reduce conflict for NOT in state 68 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 68 resolved as shift
WARNING: shift/reduce conflict for FOR in state 68 resolved as shift
WARNING: shift/reduce conflict for LIST in state 68 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 68 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 68 resolved as shift
WARNING: shift/reduce conflict for SET in state 68 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 68 resolved as shift
WARNING: shift/reduce conflict for MAP in state 68 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 68 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 68 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 68 resolved as shift
WARNING: shift/reduce conflict for STRING in state 68 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 68 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 70 resolved as shift
WARNING: shift/reduce conflict for INT in state 70 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 70 resolved as shift
WARNING: shift/reduce conflict for NUM in state 70 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 70 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 70 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 70 resolved as shift
WARNING: shift/reduce conflict for VAR in state 70 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 70 resolved as shift
WARNING: shift/reduce conflict for DO in state 70 resolved as shift
WARNING: shift/reduce conflict for IF in state 70 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 70 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 70 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 70 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 70 resolved as shift
WARNING: shift/reduce conflict for NOT in state 70 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 70 resolved as shift
WARNING: shift/reduce conflict for FOR in state 70 resolved as shift
WARNING: shift/reduce conflict for LIST in state 70 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 70 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 70 resolved as shift
WARNING: shift/reduce conflict for SET in state 70 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 70 resolved as shift
WARNING: shift/reduce conflict for MAP in state 70 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 70 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 70 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 70 resolved as shift
WARNING: shift/reduce conflict for STRING in state 70 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 70 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 71 resolved as shift
WARNING: shift/reduce conflict for INT in state 71 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 71 resolved as shift
WARNING: shift/reduce conflict for NUM in state 71 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 71 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 71 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 71 resolved as shift
WARNING: shift/reduce conflict for VAR in state 71 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 71 resolved as shift
WARNING: shift/reduce conflict for DO in state 71 resolved as shift
WARNING: shift/reduce conflict for IF in state 71 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 71 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 71 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 71 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 71 resolved as shift
WARNING: shift/reduce conflict for NOT in state 71 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 71 resolved as shift
WARNING: shift/reduce conflict for FOR in state 71 resolved as shift
WARNING: shift/reduce conflict for LIST in state 71 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 71 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 71 resolved as shift
WARNING: shift/reduce conflict for SET in state 71 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 71 resolved as shift
WARNING: shift/reduce conflict for MAP in state 71 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 71 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 71 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 71 resolved as shift
WARNING: shift/reduce conflict for STRING in state 71 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 71 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 72 resolved as shift
WARNING: shift/reduce conflict for INT in state 72 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 72 resolved as shift
WARNING: shift/reduce conflict for NUM in state 72 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 72 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 72 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 72 resolved as shift
WARNING: shift/reduce conflict for VAR in state 72 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 72 resolved as shift
WARNING: shift/reduce conflict for DO in state 72 resolved as shift
WARNING: shift/reduce conflict for IF in state 72 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 72 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 72 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 72 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 72 resolved as shift
WARNING: shift/reduce conflict for NOT in state 72 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 72 resolved as shift
WARNING: shift/reduce conflict for FOR in state 72 resolved as shift
WARNING: shift/reduce conflict for LIST in state 72 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 72 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 72 resolved as shift
WARNING: shift/reduce conflict for SET in state 72 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 72 resolved as shift
WARNING: shift/reduce conflict for MAP in state 72 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 72 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 72 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 72 resolved as shift
WARNING: shift/reduce conflict for STRING in state 72 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 72 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 74 resolved as shift
WARNING: shift/reduce conflict for INT in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 74 resolved as shift
WARNING: shift/reduce conflict for NUM in state 74 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 74 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 74 resolved as shift
WARNING: shift/reduce conflict for VAR in state 74 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 74 resolved as shift
WARNING: shift/reduce conflict for DO in state 74 resolved as shift
WARNING: shift/reduce conflict for IF in state 74 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 74 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 74 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 74 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 74 resolved as shift
WARNING: shift/reduce conflict for NOT in state 74 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 74 resolved as shift
WARNING: shift/reduce conflict for FOR in state 74 resolved as shift
WARNING: shift/reduce conflict for LIST in state 74 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 74 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 74 resolved as shift
WARNING: shift/reduce conflict for SET in state 74 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 74 resolved as shift
WARNING: shift/reduce conflict for MAP in state 74 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 74 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 74 resolved as shift
WARNING: shift/reduce conflict for STRING in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 74 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 76 resolved as shift
WARNING: shift/reduce conflict for INT in state 76 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 76 resolved as shift
WARNING: shift/reduce conflict for NUM in state 76 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 76 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 76 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 76 resolved as shift
WARNING: shift/reduce conflict for VAR in state 76 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 76 resolved as shift
WARNING: shift/reduce conflict for DO in state 76 resolved as shift
WARNING: shift/reduce conflict for IF in state 76 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 76 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 76 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 76 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 76 resolved as shift
WARNING: shift/reduce conflict for NOT in state 76 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 76 resolved as shift
WARNING: shift/reduce conflict for FOR in state 76 resolved as shift
WARNING: shift/reduce conflict for LIST in state 76 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 76 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 76 resolved as shift
WARNING: shift/reduce conflict for SET in state 76 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 76 resolved as shift
WARNING: shift/reduce conflict for MAP in state 76 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 76 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 76 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 76 resolved as shift
WARNING: shift/reduce conflict for STRING in state 76 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 76 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 77 resolved as shift
WARNING: shift/reduce conflict for INT in state 77 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 77 resolved as shift
WARNING: shift/reduce conflict for NUM in state 77 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 77 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 77 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 77 resolved as shift
WARNING: shift/reduce conflict for VAR in state 77 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 77 resolved as shift
WARNING: shift/reduce conflict for DO in state 77 resolved as shift
WARNING: shift/reduce conflict for IF in state 77 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 77 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 77 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 77 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 77 resolved as shift
WARNING: shift/reduce conflict for NOT in state 77 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 77 resolved as shift
WARNING: shift/reduce conflict for FOR in state 77 resolved as shift
WARNING: shift/reduce conflict for LIST in state 77 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 77 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 77 resolved as shift
WARNING: shift/reduce conflict for SET in state 77 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 77 resolved as shift
WARNING: shift/reduce conflict for MAP in state 77 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 77 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 77 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 77 resolved as shift
WARNING: shift/reduce conflict for STRING in state 77 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 77 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 78 resolved as shift
WARNING: shift/reduce conflict for INT in state 78 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 78 resolved as shift
WARNING: shift/reduce conflict for NUM in state 78 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 78 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 78 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 78 resolved as shift
WARNING: shift/reduce conflict for VAR in state 78 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 78 resolved as shift
WARNING: shift/reduce conflict for DO in state 78 resolved as shift
WARNING: shift/reduce conflict for IF in state 78 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 78 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 78 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 78 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 78 resolved as shift
WARNING: shift/reduce conflict for NOT in state 78 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 78 resolved as shift
WARNING: shift/reduce conflict for FOR in state 78 resolved as shift
WARNING: shift/reduce conflict for LIST in state 78 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 78 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 78 resolved as shift
WARNING: shift/reduce conflict for SET in state 78 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 78 resolved as shift
WARNING: shift/reduce conflict for MAP in state 78 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 78 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 78 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 78 resolved as shift
WARNING: shift/reduce conflict for STRING in state 78 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 78 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 79 resolved as shift
WARNING: shift/reduce conflict for INT in state 79 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 79 resolved as shift
WARNING: shift/reduce conflict for NUM in state 79 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 79 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 79 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 79 resolved as shift
WARNING: shift/reduce conflict for VAR in state 79 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 79 resolved as shift
WARNING: shift/reduce conflict for DO in state 79 resolved as shift
WARNING: shift/reduce conflict for IF in state 79 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 79 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 79 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 79 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 79 resolved as shift
WARNING: shift/reduce conflict for NOT in state 79 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 79 resolved as shift
WARNING: shift/reduce conflict for FOR in state 79 resolved as shift
WARNING: shift/reduce conflict for LIST in state 79 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 79 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 79 resolved as shift
WARNING: shift/reduce conflict for SET in state 79 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 79 resolved as shift
WARNING: shift/reduce conflict for MAP in state 79 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 79 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 79 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 79 resolved as shift
WARNING: shift/reduce conflict for STRING in state 79 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 79 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 80 resolved as shift
WARNING: shift/reduce conflict for INT in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 80 resolved as shift
WARNING: shift/reduce conflict for NUM in state 80 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 80 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 80 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 80 resolved as shift
WARNING: shift/reduce conflict for VAR in state 80 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 80 resolved as shift
WARNING: shift/reduce conflict for DO in state 80 resolved as shift
WARNING: shift/reduce conflict for IF in state 80 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 80 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 80 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 80 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 80 resolved as shift
WARNING: shift/reduce conflict for NOT in state 80 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 80 resolved as shift
WARNING: shift/reduce conflict for FOR in state 80 resolved as shift
WARNING: shift/reduce conflict for LIST in state 80 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 80 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 80 resolved as shift
WARNING: shift/reduce conflict for SET in state 80 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 80 resolved as shift
WARNING: shift/reduce conflict for MAP in state 80 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 80 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 80 resolved as shift
WARNING: shift/reduce conflict for STRING in state 80 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 80 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 81 resolved as shift
WARNING: shift/reduce conflict for INT in state 81 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 81 resolved as shift
WARNING: shift/reduce conflict for NUM in state 81 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 81 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 81 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 81 resolved as shift
WARNING: shift/reduce conflict for VAR in state 81 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 81 resolved as shift
WARNING: shift/reduce conflict for DO in state 81 resolved as shift
WARNING: shift/reduce conflict for IF in state 81 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 81 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 81 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 81 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 81 resolved as shift
WARNING: shift/reduce conflict for NOT in state 81 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 81 resolved as shift
WARNING: shift/reduce conflict for FOR in state 81 resolved as shift
WARNING: shift/reduce conflict for LIST in state 81 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 81 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 81 resolved as shift
WARNING: shift/reduce conflict for SET in state 81 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 81 resolved as shift
WARNING: shift/reduce conflict for MAP in state 81 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 81 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 81 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 81 resolved as shift
WARNING: shift/reduce conflict for STRING in state 81 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 81 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 83 resolved as shift
WARNING: shift/reduce conflict for INT in state 83 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 83 resolved as shift
WARNING: shift/reduce conflict for NUM in state 83 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 83 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 83 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 83 resolved as shift
WARNING: shift/reduce conflict for VAR in state 83 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 83 resolved as shift
WARNING: shift/reduce conflict for DO in state 83 resolved as shift
WARNING: shift/reduce conflict for IF in state 83 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 83 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 83 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 83 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 83 resolved as shift
WARNING: shift/reduce conflict for NOT in state 83 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 83 resolved as shift
WARNING: shift/reduce conflict for FOR in state 83 resolved as shift
WARNING: shift/reduce conflict for LIST in state 83 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 83 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 83 resolved as shift
WARNING: shift/reduce conflict for SET in state 83 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 83 resolved as shift
WARNING: shift/reduce conflict for MAP in state 83 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 83 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 83 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 83 resolved as shift
WARNING: shift/reduce conflict for STRING in state 83 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 83 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 85 resolved as shift
WARNING: shift/reduce conflict for INT in state 85 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 85 resolved as shift
WARNING: shift/reduce conflict for NUM in state 85 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 85 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 85 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 85 resolved as shift
WARNING: shift/reduce conflict for VAR in state 85 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 85 resolved as shift
WARNING: shift/reduce conflict for DO in state 85 resolved as shift
WARNING: shift/reduce conflict for IF in state 85 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 85 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 85 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 85 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 85 resolved as shift
WARNING: shift/reduce conflict for NOT in state 85 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 85 resolved as shift
WARNING: shift/reduce conflict for FOR in state 85 resolved as shift
WARNING: shift/reduce conflict for LIST in state 85 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 85 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 85 resolved as shift
WARNING: shift/reduce conflict for SET in state 85 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 85 resolved as shift
WARNING: shift/reduce conflict for MAP in state 85 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 85 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 85 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 85 resolved as shift
WARNING: shift/reduce conflict for STRING in state 85 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 85 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 97 resolved as shift
WARNING: shift/reduce conflict for INT in state 97 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 97 resolved as shift
WARNING: shift/reduce conflict for NUM in state 97 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 97 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 97 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 97 resolved as shift
WARNING: shift/reduce conflict for VAR in state 97 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 97 resolved as shift
WARNING: shift/reduce conflict for DO in state 97 resolved as shift
WARNING: shift/reduce conflict for IF in state 97 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 97 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 97 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 97 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 97 resolved as shift
WARNING: shift/reduce conflict for NOT in state 97 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 97 resolved as shift
WARNING: shift/reduce conflict for FOR in state 97 resolved as shift
WARNING: shift/reduce conflict for LIST in state 97 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 97 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 97 resolved as shift
WARNING: shift/reduce conflict for SET in state 97 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 97 resolved as shift
WARNING: shift/reduce conflict for MAP in state 97 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 97 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 97 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 97 resolved as shift
WARNING: shift/reduce conflict for STRING in state 97 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 97 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 98 resolved as shift
WARNING: shift/reduce conflict for INT in state 98 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 98 resolved as shift
WARNING: shift/reduce conflict for NUM in state 98 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 98 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 98 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 98 resolved as shift
WARNING: shift/reduce conflict for VAR in state 98 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 98 resolved as shift
WARNING: shift/reduce conflict for DO in state 98 resolved as shift
WARNING: shift/reduce conflict for IF in state 98 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 98 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 98 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 98 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 98 resolved as shift
WARNING: shift/reduce conflict for NOT in state 98 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 98 resolved as shift
WARNING: shift/reduce conflict for FOR in state 98 resolved as shift
WARNING: shift/reduce conflict for LIST in state 98 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 98 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 98 resolved as shift
WARNING: shift/reduce conflict for SET in state 98 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 98 resolved as shift
WARNING: shift/reduce conflict for MAP in state 98 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 98 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 98 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 98 resolved as shift
WARNING: shift/reduce conflict for STRING in state 98 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 98 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 99 resolved as shift
WARNING: shift/reduce conflict for INT in state 99 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 99 resolved as shift
WARNING: shift/reduce conflict for NUM in state 99 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 99 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 99 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 99 resolved as shift
WARNING: shift/reduce conflict for VAR in state 99 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 99 resolved as shift
WARNING: shift/reduce conflict for DO in state 99 resolved as shift
WARNING: shift/reduce conflict for IF in state 99 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 99 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 99 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 99 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 99 resolved as shift
WARNING: shift/reduce conflict for NOT in state 99 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 99 resolved as shift
WARNING: shift/reduce conflict for FOR in state 99 resolved as shift
WARNING: shift/reduce conflict for LIST in state 99 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 99 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 99 resolved as shift
WARNING: shift/reduce conflict for SET in state 99 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 99 resolved as shift
WARNING: shift/reduce conflict for MAP in state 99 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 99 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 99 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 99 resolved as shift
WARNING: shift/reduce conflict for STRING in state 99 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 99 resolved as shift
WARNING: shift/reduce conflict for AND in state 167 resolved as shift
WARNING: shift/reduce conflict for OR in state 167 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 170 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 170 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 170 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 170 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 170 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 170 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 189 resolved as shift
WARNING: shift/reduce conflict for INT in state 189 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 189 resolved as shift
WARNING: shift/reduce conflict for NUM in state 189 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 189 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 189 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 189 resolved as shift
WARNING: shift/reduce conflict for VAR in state 189 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 189 resolved as shift
WARNING: shift/reduce conflict for DO in state 189 resolved as shift
WARNING: shift/reduce conflict for IF in state 189 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 189 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 189 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 189 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 189 resolved as shift
WARNING: shift/reduce conflict for NOT in state 189 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 189 resolved as shift
WARNING: shift/reduce conflict for FOR in state 189 resolved as shift
WARNING: shift/reduce conflict for LIST in state 189 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 189 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 189 resolved as shift
WARNING: shift/reduce conflict for SET in state 189 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 189 resolved as shift
WARNING: shift/reduce conflict for MAP in state 189 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 189 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 189 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 189 resolved as shift
WARNING: shift/reduce conflict for STRING in state 189 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 189 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 190 resolved as shift
WARNING: shift/reduce conflict for INT in state 190 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 190 resolved as shift
WARNING: shift/reduce conflict for NUM in state 190 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 190 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 190 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 190 resolved as shift
WARNING: shift/reduce conflict for VAR in state 190 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 190 resolved as shift
WARNING: shift/reduce conflict for DO in state 190 resolved as shift
WARNING: shift/reduce conflict for IF in state 190 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 190 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 190 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 190 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 190 resolved as shift
WARNING: shift/reduce conflict for NOT in state 190 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 190 resolved as shift
WARNING: shift/reduce conflict for FOR in state 190 resolved as shift
WARNING: shift/reduce conflict for LIST in state 190 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 190 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 190 resolved as shift
WARNING: shift/reduce conflict for SET in state 190 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 190 resolved as shift
WARNING: shift/reduce conflict for MAP in state 190 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 190 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 190 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 190 resolved as shift
WARNING: shift/reduce conflict for STRING in state 190 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 190 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 197 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 197 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 197 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 197 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 197 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 197 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 259 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 259 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 259 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 259 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 259 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 259 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 269 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 269 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 269 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 269 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 269 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 269 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 415 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 415 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 415 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 415 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 415 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 415 resolved as shift
WARNING: reduce/reduce conflict in state 20 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 33 resolved using rule (expresionInt -> valorInt)
WARNING: rejected rule (valorDouble -> valorInt) in state 33
WARNING: reduce/reduce conflict in state 36 resolved using rule (expresionBoolFor -> valorBool)
WARNING: rejected rule (expresionBool -> valorBool) in state 36
WARNING: reduce/reduce conflict in state 44 resolved using rule (funcionStdin -> FUNCIONSTDIN)
WARNING: rejected rule (valorString -> FUNCIONSTDIN) in state 44
WARNING: reduce/reduce conflict in state 151 resolved using rule (expListString -> STRING)
WARNING: rejected rule (expListDynamic -> STRING) in state 151
WARNING: reduce/reduce conflict in state 152 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListInt -> VARIABLE) in state 152
WARNING: reduce/reduce conflict in state 152 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListNum -> VARIABLE) in state 152
WARNING: reduce/reduce conflict in state 152 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListBool -> VARIABLE) in state 152
WARNING: reduce/reduce conflict in state 152 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 152
WARNING: reduce/reduce conflict in state 152 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListSet -> VARIABLE) in state 152
WARNING: reduce/reduce conflict in state 152 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListMap -> VARIABLE) in state 152
WARNING: reduce/reduce conflict in state 153 resolved using rule (expListInt -> ENTERO)
WARNING: rejected rule (expListNum -> ENTERO) in state 153
WARNING: reduce/reduce conflict in state 153 resolved using rule (expListInt -> ENTERO)
WARNING: rejected rule (expListDynamic -> ENTERO) in state 153
WARNING: reduce/reduce conflict in state 154 resolved using rule (expListNum -> DOUBLE)
WARNING: rejected rule (expListDynamic -> DOUBLE) in state 154
WARNING: reduce/reduce conflict in state 155 resolved using rule (expListBool -> BOOL)
WARNING: rejected rule (expListDynamic -> BOOL) in state 155
WARNING: reduce/reduce conflict in state 168 resolved using rule (expresionBool -> comparacionBool)
WARNING: rejected rule (comparacionBool -> expresionBool operadorLogico comparacionBool) in state 168
WARNING: reduce/reduce conflict in state 174 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 174
WARNING: reduce/reduce conflict in state 191 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (expresionBool -> VARIABLE comparadorMat VARIABLE) in state 191
WARNING: reduce/reduce conflict in state 191 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 191
WARNING: reduce/reduce conflict in state 191 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 191
WARNING: reduce/reduce conflict in state 192 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat expresionDouble)
WARNING: rejected rule (expresionBool -> VARIABLE comparadorMat expresionDouble) in state 192
WARNING: reduce/reduce conflict in state 197 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 197
WARNING: reduce/reduce conflict in state 197 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 197
WARNING: reduce/reduce conflict in state 197 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 197
WARNING: reduce/reduce conflict in state 204 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 204
WARNING: reduce/reduce conflict in state 205 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 205
WARNING: reduce/reduce conflict in state 224 resolved using rule (expresionBoolFor -> valorDouble comparadorMat expresionDouble)
WARNING: rejected rule (expresionBool -> valorDouble comparadorMat expresionDouble) in state 224
WARNING: reduce/reduce conflict in state 225 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (expresionBool -> valorDouble comparadorMat VARIABLE) in state 225
WARNING: reduce/reduce conflict in state 225 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 225
WARNING: reduce/reduce conflict in state 225 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 225
WARNING: reduce/reduce conflict in state 253 resolved using rule (expListDynamic -> VARIABLE)
WARNING: rejected rule (expListSet -> VARIABLE) in state 253
WARNING: reduce/reduce conflict in state 259 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 259
WARNING: reduce/reduce conflict in state 259 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 259
WARNING: reduce/reduce conflict in state 269 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 269
WARNING: reduce/reduce conflict in state 269 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 269
WARNING: reduce/reduce conflict in state 269 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 269
WARNING: reduce/reduce conflict in state 365 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 365
WARNING: reduce/reduce conflict in state 376 resolved using rule (expListInt -> VARIABLE)
WARNING: rejected rule (expListNum -> VARIABLE) in state 376
WARNING: reduce/reduce conflict in state 376 resolved using rule (expListInt -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 376
WARNING: reduce/reduce conflict in state 379 resolved using rule (expListNum -> ENTERO)
WARNING: rejected rule (expListDynamic -> ENTERO) in state 379
WARNING: reduce/reduce conflict in state 380 resolved using rule (expListNum -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 380
WARNING: reduce/reduce conflict in state 383 resolved using rule (expListBool -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 383
WARNING: reduce/reduce conflict in state 394 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 394
WARNING: reduce/reduce conflict in state 395 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 395
WARNING: reduce/reduce conflict in state 496 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 496
WARNING: reduce/reduce conflict in state 496 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 496
WARNING: reduce/reduce conflict in state 499 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 499
WARNING: reduce/reduce conflict in state 499 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 499
WARNING: Rule (comparacionBool -> expresionBool operadorLogico comparacionBool) is never reduced
