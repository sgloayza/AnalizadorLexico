Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    BREAK
    CASE
    COMILLAD
    COMILLAS
    DOSPUNTOS
    FLECHA
    FUNCIONARR
    FUNCIONRANGE
    FUNCIONTAKE
    RETURN
    SWITCH

Grammar

Rule 0     S' -> final
Rule 1     final -> asignacion PUNTOYCOMA
Rule 2     final -> asignacion PUNTOYCOMA final
Rule 3     final -> expresionInt PUNTOYCOMA
Rule 4     final -> expresionInt PUNTOYCOMA final
Rule 5     final -> expresionDouble PUNTOYCOMA
Rule 6     final -> expresionDouble PUNTOYCOMA final
Rule 7     final -> expresionString PUNTOYCOMA
Rule 8     final -> expresionString PUNTOYCOMA final
Rule 9     final -> expresionBool PUNTOYCOMA
Rule 10    final -> expresionBool PUNTOYCOMA final
Rule 11    final -> expresionBoolFor PUNTOYCOMA
Rule 12    final -> expresionBoolFor PUNTOYCOMA final
Rule 13    final -> sentenciaWhile
Rule 14    final -> sentenciaWhile final
Rule 15    final -> sentenciaWhile PUNTOYCOMA
Rule 16    final -> sentenciaWhile PUNTOYCOMA final
Rule 17    final -> sentenciaDoWhile PUNTOYCOMA
Rule 18    final -> sentenciaDoWhile PUNTOYCOMA final
Rule 19    final -> sentenciaIf PUNTOYCOMA
Rule 20    final -> sentenciaIf PUNTOYCOMA final
Rule 21    final -> sentenciaIf
Rule 22    final -> sentenciaIf final
Rule 23    final -> sentenciaElse PUNTOYCOMA
Rule 24    final -> sentenciaElse PUNTOYCOMA final
Rule 25    final -> sentenciaElse
Rule 26    final -> sentenciaElse final
Rule 27    final -> imprimir PUNTOYCOMA
Rule 28    final -> imprimir PUNTOYCOMA final
Rule 29    final -> funcionStdin PUNTOYCOMA
Rule 30    final -> funcionStdin PUNTOYCOMA final
Rule 31    final -> funcionStdout PUNTOYCOMA
Rule 32    final -> funcionStdout PUNTOYCOMA final
Rule 33    final -> negacionBool PUNTOYCOMA
Rule 34    final -> negacionBool PUNTOYCOMA final
Rule 35    final -> comparacionBool PUNTOYCOMA final
Rule 36    final -> comparacionBool PUNTOYCOMA
Rule 37    final -> sentenciaElseIf PUNTOYCOMA final
Rule 38    final -> sentenciaElseIf final
Rule 39    final -> sentenciaElseIf PUNTOYCOMA
Rule 40    final -> sentenciaElseIf
Rule 41    final -> sentenciaFor PUNTOYCOMA final
Rule 42    final -> sentenciaFor PUNTOYCOMA
Rule 43    final -> sentenciaFor final
Rule 44    final -> sentenciaFor
Rule 45    final -> sentenciaSubstring PUNTOYCOMA final
Rule 46    final -> sentenciaSubstring PUNTOYCOMA
Rule 47    final -> VARIABLE DSUMA PUNTOYCOMA final
Rule 48    final -> VARIABLE DSUMA PUNTOYCOMA
Rule 49    final -> VARIABLE DRESTA PUNTOYCOMA final
Rule 50    final -> VARIABLE DRESTA PUNTOYCOMA
Rule 51    asignacion -> INT VARIABLE IGUAL expresionInt
Rule 52    asignacion -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 53    asignacion -> NUM VARIABLE IGUAL expresionDouble
Rule 54    asignacion -> STRINGR VARIABLE IGUAL expresionString
Rule 55    asignacion -> BOOLR VARIABLE IGUAL expresionBool
Rule 56    asignacion -> DYNAMIC VARIABLE IGUAL expresion
Rule 57    asignacion -> VAR VARIABLE IGUAL expresion
Rule 58    asignacion -> asignacionSimple
Rule 59    asignacionSimple -> VARIABLE IGUAL expresion
Rule 60    imprimir -> PRINT PIZQ expresion PDER
Rule 61    imprimir -> PRINT PIZQ asignacionSimple PDER
Rule 62    funcionStdin -> FUNCIONSTDIN
Rule 63    funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER
Rule 64    funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER
Rule 65    sentenciaIf -> IF PIZQ expresionBool PDER final
Rule 66    sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER
Rule 67    sentenciaElse -> ELSE final
Rule 68    sentenciaElse -> ELSE LIZQ final LDER
Rule 69    sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final
Rule 70    sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER
Rule 71    valor -> ENTERO
Rule 72    valor -> VARIABLE
Rule 73    valor -> DOUBLE
Rule 74    valor -> STRING
Rule 75    expresion -> valor operadorMat expresion
Rule 76    expresion -> valor
Rule 77    expresion -> expresionString
Rule 78    expresion -> expresionInt
Rule 79    expresion -> expresionDouble
Rule 80    expresion -> expresionBool
Rule 81    asignacionFor -> INT VARIABLE IGUAL expresionInt
Rule 82    asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 83    asignacionFor -> NUM VARIABLE IGUAL expresionDouble
Rule 84    asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt
Rule 85    asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble
Rule 86    asignacionFor -> VAR VARIABLE IGUAL expresionInt
Rule 87    asignacionFor -> VAR VARIABLE IGUAL expresionDouble
Rule 88    asignacionFor -> VARIABLE IGUAL expresionInt
Rule 89    asignacionFor -> VARIABLE IGUAL expresionDouble
Rule 90    expresionBoolFor -> valorDouble comparadorMat expresionDouble
Rule 91    expresionBoolFor -> VARIABLE comparadorMat expresionDouble
Rule 92    expresionBoolFor -> VARIABLE comparadorMat VARIABLE
Rule 93    expresionBoolFor -> valorDouble comparadorMat VARIABLE
Rule 94    expresionBoolFor -> valorBool
Rule 95    expresionBoolFor -> negacionBool
Rule 96    expresionBoolFor -> comparacionBool
Rule 97    sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
Rule 98    sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
Rule 99    sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
Rule 100   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
Rule 101   sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER
Rule 102   sentenciaWhile -> WHILE PIZQ expresionBool PDER final
Rule 103   sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER
Rule 104   valorBool -> BOOL
Rule 105   valorBool -> VARIABLE
Rule 106   expresionBool -> valorDouble comparadorMat expresionDouble
Rule 107   expresionBool -> VARIABLE comparadorMat expresionDouble
Rule 108   expresionBool -> VARIABLE comparadorMat VARIABLE
Rule 109   expresionBool -> valorDouble comparadorMat VARIABLE
Rule 110   expresionBool -> valorBool
Rule 111   expresionBool -> negacionBool
Rule 112   expresionBool -> comparacionBool
Rule 113   expresionBool -> valor IS objeto
Rule 114   expresionBool -> valor ISNEGADO objeto
Rule 115   negacionBool -> NOT PIZQ expresionBool PDER
Rule 116   comparacionBool -> expresionBool operadorLogico expresionBool
Rule 117   comparacionBool -> expresionBool operadorLogico comparacionBool
Rule 118   valorString -> STRING
Rule 119   valorString -> VARIABLE
Rule 120   valorString -> FUNCIONSTDIN
Rule 121   valorString -> expresionIndexString
Rule 122   valorString -> sentenciaSubstring
Rule 123   expresionString -> valorString SUMA expresionString
Rule 124   expresionString -> valorString
Rule 125   expresionIndexString -> valorString CIZQ ENTERO CDER
Rule 126   sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
Rule 127   sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
Rule 128   valorInt -> ENTERO
Rule 129   valorInt -> VARIABLE
Rule 130   expresionInt -> valorInt operadorMat expresionInt
Rule 131   expresionInt -> valorInt
Rule 132   valorDouble -> DOUBLE
Rule 133   valorDouble -> valorInt
Rule 134   expresionDouble -> valorDouble operadorMat expresionDouble
Rule 135   expresionDouble -> valorDouble
Rule 136   operadorMat -> SUMA
Rule 137   operadorMat -> RESTA
Rule 138   operadorMat -> MULTI
Rule 139   operadorMat -> DIV
Rule 140   operadorMat -> DIVENTERO
Rule 141   operadorMat -> MOD
Rule 142   comparadorMat -> DIGUAL
Rule 143   comparadorMat -> NOIGUAL
Rule 144   comparadorMat -> MAYOR
Rule 145   comparadorMat -> MENOR
Rule 146   comparadorMat -> MAYIGUAL
Rule 147   comparadorMat -> MENIGUAL
Rule 148   operadorLogico -> AND
Rule 149   operadorLogico -> OR
Rule 150   objeto -> STRINGR
Rule 151   objeto -> INT
Rule 152   objeto -> DOUBLER
Rule 153   objeto -> NUM
Rule 154   objeto -> VAR
Rule 155   objeto -> DYNAMIC
Rule 156   objeto -> LIST
Rule 157   objeto -> BOOL
Rule 158   objeto -> MAP
Rule 159   objeto -> SET

Terminals, with rules where they appear

AND                  : 148
AS                   : 
BOOL                 : 104 157
BOOLR                : 55
BREAK                : 
CASE                 : 
CDER                 : 125
CIZQ                 : 125
COMA                 : 127
COMILLAD             : 
COMILLAS             : 
DIGUAL               : 142
DIV                  : 139
DIVENTERO            : 140
DO                   : 103
DOSPUNTOS            : 
DOUBLE               : 73 132
DOUBLER              : 52 82 152
DRESTA               : 49 50 99 100
DSUMA                : 47 48 97 98
DYNAMIC              : 56 84 85 155
ELSE                 : 67 68
ELSEIF               : 69 70
ENTERO               : 71 125 126 127 127 128
FLECHA               : 
FOR                  : 97 98 99 100
FUNCIONARR           : 
FUNCIONRANGE         : 
FUNCIONSTDIN         : 62 120
FUNCIONSTDOUT        : 63 64
FUNCIONSUBSTRING     : 126 127
FUNCIONTAKE          : 
IF                   : 65 66
IGUAL                : 51 52 53 54 55 56 57 59 81 82 83 84 85 86 87 88 89
INT                  : 51 81 151
IS                   : 113
ISNEGADO             : 114
LDER                 : 66 68 70 97 99 101 103
LIST                 : 156
LIZQ                 : 66 68 70 97 99 101 103
MAP                  : 158
MAYIGUAL             : 146
MAYOR                : 144
MENIGUAL             : 147
MENOR                : 145
MOD                  : 141
MULTI                : 138
NOIGUAL              : 143
NOT                  : 115
NUM                  : 53 83 153
OR                   : 149
PDER                 : 60 61 63 64 65 66 69 70 97 98 99 100 101 102 103 115 126 127
PIZQ                 : 60 61 63 64 65 66 69 70 97 98 99 100 101 102 103 115 126 127
PRINT                : 60 61
PUNTOYCOMA           : 1 2 3 4 5 6 7 8 9 10 11 12 15 16 17 18 19 20 23 24 27 28 29 30 31 32 33 34 35 36 37 39 41 42 45 46 47 48 49 50 97 97 98 98 99 99 100 100
RESTA                : 137
RETURN               : 
SET                  : 159
STRING               : 74 118
STRINGR              : 54 150
SUMA                 : 123 136
SWITCH               : 
VAR                  : 57 86 87 154
VARIABLE             : 47 48 49 50 51 52 53 54 55 56 57 59 72 81 82 83 84 85 86 87 88 89 91 92 92 93 97 98 99 100 105 107 108 108 109 119 126 127 129
WHILE                : 101 102 103
error                : 

Nonterminals, with rules where they appear

asignacion           : 1 2
asignacionFor        : 97 98 99 100
asignacionSimple     : 58 61 64
comparacionBool      : 35 36 96 112 117
comparadorMat        : 90 91 92 93 106 107 108 109
expresion            : 56 57 59 60 63 75
expresionBool        : 9 10 55 65 66 69 70 80 101 102 103 115 116 116 117
expresionBoolFor     : 11 12 97 98 99 100
expresionDouble      : 5 6 52 53 79 82 83 85 87 89 90 91 106 107 134
expresionIndexString : 121
expresionInt         : 3 4 51 78 81 84 86 88 130
expresionString      : 7 8 54 77 123
final                : 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 35 37 38 41 43 45 47 49 65 66 67 68 69 70 97 98 99 100 101 102 103 0
funcionStdin         : 29 30
funcionStdout        : 31 32
imprimir             : 27 28
negacionBool         : 33 34 95 111
objeto               : 113 114
operadorLogico       : 116 117
operadorMat          : 75 130 134
sentenciaDoWhile     : 17 18
sentenciaElse        : 23 24 25 26
sentenciaElseIf      : 37 38 39 40
sentenciaFor         : 41 42 43 44
sentenciaIf          : 19 20 21 22
sentenciaSubstring   : 45 46 122
sentenciaWhile       : 13 14 15 16
valor                : 75 76 113 114
valorBool            : 94 110
valorDouble          : 90 93 106 109 134 135
valorInt             : 130 131 133
valorString          : 123 124 125

Parsing method: LALR

state 0

    (0) S' -> . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

    final                          shift and go to state 1
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 1

    (0) S' -> final .



state 2

    (1) final -> asignacion . PUNTOYCOMA
    (2) final -> asignacion . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 49


state 3

    (3) final -> expresionInt . PUNTOYCOMA
    (4) final -> expresionInt . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 50


state 4

    (5) final -> expresionDouble . PUNTOYCOMA
    (6) final -> expresionDouble . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 51


state 5

    (7) final -> expresionString . PUNTOYCOMA
    (8) final -> expresionString . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 52


state 6

    (9) final -> expresionBool . PUNTOYCOMA
    (10) final -> expresionBool . PUNTOYCOMA final
    (116) comparacionBool -> expresionBool . operadorLogico expresionBool
    (117) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (148) operadorLogico -> . AND
    (149) operadorLogico -> . OR

    PUNTOYCOMA      shift and go to state 53
    AND             shift and go to state 55
    OR              shift and go to state 56

    operadorLogico                 shift and go to state 54

state 7

    (11) final -> expresionBoolFor . PUNTOYCOMA
    (12) final -> expresionBoolFor . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 57


state 8

    (13) final -> sentenciaWhile .
    (14) final -> sentenciaWhile . final
    (15) final -> sentenciaWhile . PUNTOYCOMA
    (16) final -> sentenciaWhile . PUNTOYCOMA final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 13 (final -> sentenciaWhile .)
    LDER            reduce using rule 13 (final -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 59
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! PUNTOYCOMA      [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! VARIABLE        [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! INT             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DOUBLER         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NUM             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! STRINGR         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! BOOLR           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DYNAMIC         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! VAR             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! WHILE           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DO              [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! IF              [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ELSE            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! PRINT           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDIN    [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NOT             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ELSEIF          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FOR             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ENTERO          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DOUBLE          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! STRING          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! BOOL            [ reduce using rule 13 (final -> sentenciaWhile .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 58
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 9

    (17) final -> sentenciaDoWhile . PUNTOYCOMA
    (18) final -> sentenciaDoWhile . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 60


state 10

    (19) final -> sentenciaIf . PUNTOYCOMA
    (20) final -> sentenciaIf . PUNTOYCOMA final
    (21) final -> sentenciaIf .
    (22) final -> sentenciaIf . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 61
    $end            reduce using rule 21 (final -> sentenciaIf .)
    LDER            reduce using rule 21 (final -> sentenciaIf .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! PUNTOYCOMA      [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! VARIABLE        [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! INT             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DOUBLER         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NUM             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! STRINGR         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! BOOLR           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DYNAMIC         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! VAR             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! WHILE           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DO              [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! IF              [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ELSE            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! PRINT           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NOT             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ELSEIF          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FOR             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ENTERO          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DOUBLE          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! STRING          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! BOOL            [ reduce using rule 21 (final -> sentenciaIf .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 62
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 11

    (23) final -> sentenciaElse . PUNTOYCOMA
    (24) final -> sentenciaElse . PUNTOYCOMA final
    (25) final -> sentenciaElse .
    (26) final -> sentenciaElse . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 63
    $end            reduce using rule 25 (final -> sentenciaElse .)
    LDER            reduce using rule 25 (final -> sentenciaElse .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! PUNTOYCOMA      [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! VARIABLE        [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! INT             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DOUBLER         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NUM             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! STRINGR         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! BOOLR           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DYNAMIC         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! VAR             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! WHILE           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DO              [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! IF              [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ELSE            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! PRINT           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FUNCIONSTDIN    [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NOT             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ELSEIF          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FOR             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ENTERO          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DOUBLE          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! STRING          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! BOOL            [ reduce using rule 25 (final -> sentenciaElse .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 64
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 12

    (27) final -> imprimir . PUNTOYCOMA
    (28) final -> imprimir . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 65


state 13

    (29) final -> funcionStdin . PUNTOYCOMA
    (30) final -> funcionStdin . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 66


state 14

    (31) final -> funcionStdout . PUNTOYCOMA
    (32) final -> funcionStdout . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 67


state 15

    (33) final -> negacionBool . PUNTOYCOMA
    (34) final -> negacionBool . PUNTOYCOMA final
    (111) expresionBool -> negacionBool .
    (95) expresionBoolFor -> negacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 68
    AND             reduce using rule 111 (expresionBool -> negacionBool .)
    OR              reduce using rule 111 (expresionBool -> negacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 111 (expresionBool -> negacionBool .) ]
  ! PUNTOYCOMA      [ reduce using rule 95 (expresionBoolFor -> negacionBool .) ]


state 16

    (35) final -> comparacionBool . PUNTOYCOMA final
    (36) final -> comparacionBool . PUNTOYCOMA
    (112) expresionBool -> comparacionBool .
    (96) expresionBoolFor -> comparacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 69
    AND             reduce using rule 112 (expresionBool -> comparacionBool .)
    OR              reduce using rule 112 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 112 (expresionBool -> comparacionBool .) ]
  ! PUNTOYCOMA      [ reduce using rule 96 (expresionBoolFor -> comparacionBool .) ]


state 17

    (37) final -> sentenciaElseIf . PUNTOYCOMA final
    (38) final -> sentenciaElseIf . final
    (39) final -> sentenciaElseIf . PUNTOYCOMA
    (40) final -> sentenciaElseIf .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 70
    $end            reduce using rule 40 (final -> sentenciaElseIf .)
    LDER            reduce using rule 40 (final -> sentenciaElseIf .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! PUNTOYCOMA      [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! VARIABLE        [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! INT             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DOUBLER         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NUM             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! STRINGR         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! BOOLR           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DYNAMIC         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! VAR             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! WHILE           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DO              [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! IF              [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ELSE            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! PRINT           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NOT             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ELSEIF          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FOR             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ENTERO          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DOUBLE          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! STRING          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! BOOL            [ reduce using rule 40 (final -> sentenciaElseIf .) ]

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 71
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 18

    (41) final -> sentenciaFor . PUNTOYCOMA final
    (42) final -> sentenciaFor . PUNTOYCOMA
    (43) final -> sentenciaFor . final
    (44) final -> sentenciaFor .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 72
    $end            reduce using rule 44 (final -> sentenciaFor .)
    LDER            reduce using rule 44 (final -> sentenciaFor .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! PUNTOYCOMA      [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! VARIABLE        [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! INT             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DOUBLER         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NUM             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! STRINGR         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! BOOLR           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DYNAMIC         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! VAR             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! WHILE           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DO              [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! IF              [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ELSE            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! PRINT           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FUNCIONSTDIN    [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NOT             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ELSEIF          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FOR             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ENTERO          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DOUBLE          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! STRING          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! BOOL            [ reduce using rule 44 (final -> sentenciaFor .) ]

    sentenciaFor                   shift and go to state 18
    final                          shift and go to state 73
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 19

    (45) final -> sentenciaSubstring . PUNTOYCOMA final
    (46) final -> sentenciaSubstring . PUNTOYCOMA
    (122) valorString -> sentenciaSubstring .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 74
    SUMA            reduce using rule 122 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 122 (valorString -> sentenciaSubstring .)

  ! PUNTOYCOMA      [ reduce using rule 122 (valorString -> sentenciaSubstring .) ]


state 20

    (47) final -> VARIABLE . DSUMA PUNTOYCOMA final
    (48) final -> VARIABLE . DSUMA PUNTOYCOMA
    (49) final -> VARIABLE . DRESTA PUNTOYCOMA final
    (50) final -> VARIABLE . DRESTA PUNTOYCOMA
    (107) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (108) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (91) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (92) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (126) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> VARIABLE . IGUAL expresion
    (129) valorInt -> VARIABLE .
    (119) valorString -> VARIABLE .
    (105) valorBool -> VARIABLE .
    (72) valor -> VARIABLE .
    (142) comparadorMat -> . DIGUAL
    (143) comparadorMat -> . NOIGUAL
    (144) comparadorMat -> . MAYOR
    (145) comparadorMat -> . MENOR
    (146) comparadorMat -> . MAYIGUAL
    (147) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 119 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 119 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 105 (valorBool -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    DSUMA           shift and go to state 75
    DRESTA          shift and go to state 76
    FUNCIONSUBSTRING shift and go to state 78
    IGUAL           shift and go to state 79
    RESTA           reduce using rule 129 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 129 (valorInt -> VARIABLE .)
    DIV             reduce using rule 129 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 129 (valorInt -> VARIABLE .)
    MOD             reduce using rule 129 (valorInt -> VARIABLE .)
    SUMA            reduce using rule 119 (valorString -> VARIABLE .)
    CIZQ            reduce using rule 119 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 105 (valorBool -> VARIABLE .)
    AND             reduce using rule 105 (valorBool -> VARIABLE .)
    OR              reduce using rule 105 (valorBool -> VARIABLE .)
    IS              reduce using rule 72 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 72 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 80
    NOIGUAL         shift and go to state 81
    MAYOR           shift and go to state 82
    MENOR           shift and go to state 83
    MAYIGUAL        shift and go to state 84
    MENIGUAL        shift and go to state 85

  ! SUMA            [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 119 (valorString -> VARIABLE .) ]

    comparadorMat                  shift and go to state 77

state 21

    (51) asignacion -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 86


state 22

    (52) asignacion -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 87


state 23

    (53) asignacion -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 88


state 24

    (54) asignacion -> STRINGR . VARIABLE IGUAL expresionString

    VARIABLE        shift and go to state 89


state 25

    (55) asignacion -> BOOLR . VARIABLE IGUAL expresionBool

    VARIABLE        shift and go to state 90


state 26

    (56) asignacion -> DYNAMIC . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 91


state 27

    (57) asignacion -> VAR . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 92


state 28

    (58) asignacion -> asignacionSimple .

    PUNTOYCOMA      reduce using rule 58 (asignacion -> asignacionSimple .)


state 29

    (130) expresionInt -> valorInt . operadorMat expresionInt
    (131) expresionInt -> valorInt .
    (133) valorDouble -> valorInt .
    (136) operadorMat -> . SUMA
    (137) operadorMat -> . RESTA
    (138) operadorMat -> . MULTI
    (139) operadorMat -> . DIV
    (140) operadorMat -> . DIVENTERO
    (141) operadorMat -> . MOD

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 131 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PDER resolved using rule 131 (expresionInt -> valorInt .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DIVENTERO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PUNTOYCOMA      reduce using rule 131 (expresionInt -> valorInt .)
    PDER            reduce using rule 131 (expresionInt -> valorInt .)
    DIGUAL          reduce using rule 133 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 133 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 133 (valorDouble -> valorInt .)
    MENOR           reduce using rule 133 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 133 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 133 (valorDouble -> valorInt .)
    SUMA            shift and go to state 94
    RESTA           shift and go to state 95
    MULTI           shift and go to state 96
    DIV             shift and go to state 97
    DIVENTERO       shift and go to state 98
    MOD             shift and go to state 99

  ! SUMA            [ reduce using rule 133 (valorDouble -> valorInt .) ]
  ! RESTA           [ reduce using rule 133 (valorDouble -> valorInt .) ]
  ! MULTI           [ reduce using rule 133 (valorDouble -> valorInt .) ]
  ! DIV             [ reduce using rule 133 (valorDouble -> valorInt .) ]
  ! DIVENTERO       [ reduce using rule 133 (valorDouble -> valorInt .) ]
  ! MOD             [ reduce using rule 133 (valorDouble -> valorInt .) ]
  ! PUNTOYCOMA      [ reduce using rule 133 (valorDouble -> valorInt .) ]
  ! PDER            [ reduce using rule 133 (valorDouble -> valorInt .) ]

    operadorMat                    shift and go to state 93

state 30

    (134) expresionDouble -> valorDouble . operadorMat expresionDouble
    (135) expresionDouble -> valorDouble .
    (106) expresionBool -> valorDouble . comparadorMat expresionDouble
    (109) expresionBool -> valorDouble . comparadorMat VARIABLE
    (90) expresionBoolFor -> valorDouble . comparadorMat expresionDouble
    (93) expresionBoolFor -> valorDouble . comparadorMat VARIABLE
    (136) operadorMat -> . SUMA
    (137) operadorMat -> . RESTA
    (138) operadorMat -> . MULTI
    (139) operadorMat -> . DIV
    (140) operadorMat -> . DIVENTERO
    (141) operadorMat -> . MOD
    (142) comparadorMat -> . DIGUAL
    (143) comparadorMat -> . NOIGUAL
    (144) comparadorMat -> . MAYOR
    (145) comparadorMat -> . MENOR
    (146) comparadorMat -> . MAYIGUAL
    (147) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 135 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 94
    RESTA           shift and go to state 95
    MULTI           shift and go to state 96
    DIV             shift and go to state 97
    DIVENTERO       shift and go to state 98
    MOD             shift and go to state 99
    DIGUAL          shift and go to state 80
    NOIGUAL         shift and go to state 81
    MAYOR           shift and go to state 82
    MENOR           shift and go to state 83
    MAYIGUAL        shift and go to state 84
    MENIGUAL        shift and go to state 85

    operadorMat                    shift and go to state 100
    comparadorMat                  shift and go to state 101

state 31

    (123) expresionString -> valorString . SUMA expresionString
    (124) expresionString -> valorString .
    (125) expresionIndexString -> valorString . CIZQ ENTERO CDER

    SUMA            shift and go to state 102
    PUNTOYCOMA      reduce using rule 124 (expresionString -> valorString .)
    PDER            reduce using rule 124 (expresionString -> valorString .)
    CIZQ            shift and go to state 103


state 32

    (110) expresionBool -> valorBool .
    (94) expresionBoolFor -> valorBool .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 94 (expresionBoolFor -> valorBool .)
    AND             reduce using rule 110 (expresionBool -> valorBool .)
    OR              reduce using rule 110 (expresionBool -> valorBool .)
    PUNTOYCOMA      reduce using rule 94 (expresionBoolFor -> valorBool .)

  ! PUNTOYCOMA      [ reduce using rule 110 (expresionBool -> valorBool .) ]


state 33

    (113) expresionBool -> valor . IS objeto
    (114) expresionBool -> valor . ISNEGADO objeto

    IS              shift and go to state 104
    ISNEGADO        shift and go to state 105


state 34

    (101) sentenciaWhile -> WHILE . PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> WHILE . PIZQ expresionBool PDER final

    PIZQ            shift and go to state 106


state 35

    (103) sentenciaDoWhile -> DO . LIZQ final LDER WHILE PIZQ expresionBool PDER

    LIZQ            shift and go to state 107


state 36

    (65) sentenciaIf -> IF . PIZQ expresionBool PDER final
    (66) sentenciaIf -> IF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 108


state 37

    (67) sentenciaElse -> ELSE . final
    (68) sentenciaElse -> ELSE . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 110
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

    final                          shift and go to state 109
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 38

    (60) imprimir -> PRINT . PIZQ expresion PDER
    (61) imprimir -> PRINT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 111


state 39

    (62) funcionStdin -> FUNCIONSTDIN .
    (120) valorString -> FUNCIONSTDIN .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 62 (funcionStdin -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 62 (funcionStdin -> FUNCIONSTDIN .)
    SUMA            reduce using rule 120 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 120 (valorString -> FUNCIONSTDIN .)

  ! PUNTOYCOMA      [ reduce using rule 120 (valorString -> FUNCIONSTDIN .) ]


state 40

    (63) funcionStdout -> FUNCIONSTDOUT . PIZQ expresion PDER
    (64) funcionStdout -> FUNCIONSTDOUT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 112


state 41

    (115) negacionBool -> NOT . PIZQ expresionBool PDER

    PIZQ            shift and go to state 113


state 42

    (69) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 114


state 43

    (97) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final

    PIZQ            shift and go to state 115


state 44

    (128) valorInt -> ENTERO .
    (71) valor -> ENTERO .

    SUMA            reduce using rule 128 (valorInt -> ENTERO .)
    RESTA           reduce using rule 128 (valorInt -> ENTERO .)
    MULTI           reduce using rule 128 (valorInt -> ENTERO .)
    DIV             reduce using rule 128 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 128 (valorInt -> ENTERO .)
    MOD             reduce using rule 128 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 128 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 128 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 128 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 128 (valorInt -> ENTERO .)
    MENOR           reduce using rule 128 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 128 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 128 (valorInt -> ENTERO .)
    IS              reduce using rule 71 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 71 (valor -> ENTERO .)


state 45

    (132) valorDouble -> DOUBLE .
    (73) valor -> DOUBLE .

    SUMA            reduce using rule 132 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 132 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 132 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 132 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 132 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 132 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 132 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 132 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 132 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 132 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 132 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 132 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 132 (valorDouble -> DOUBLE .)
    IS              reduce using rule 73 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 73 (valor -> DOUBLE .)


state 46

    (118) valorString -> STRING .
    (74) valor -> STRING .

    SUMA            reduce using rule 118 (valorString -> STRING .)
    CIZQ            reduce using rule 118 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 118 (valorString -> STRING .)
    IS              reduce using rule 74 (valor -> STRING .)
    ISNEGADO        reduce using rule 74 (valor -> STRING .)


state 47

    (121) valorString -> expresionIndexString .

    SUMA            reduce using rule 121 (valorString -> expresionIndexString .)
    CIZQ            reduce using rule 121 (valorString -> expresionIndexString .)
    PUNTOYCOMA      reduce using rule 121 (valorString -> expresionIndexString .)
    PDER            reduce using rule 121 (valorString -> expresionIndexString .)


state 48

    (104) valorBool -> BOOL .

    PUNTOYCOMA      reduce using rule 104 (valorBool -> BOOL .)
    AND             reduce using rule 104 (valorBool -> BOOL .)
    OR              reduce using rule 104 (valorBool -> BOOL .)
    PDER            reduce using rule 104 (valorBool -> BOOL .)


state 49

    (1) final -> asignacion PUNTOYCOMA .
    (2) final -> asignacion PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    LDER            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! VARIABLE        [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]

    asignacion                     shift and go to state 2
    final                          shift and go to state 116
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 50

    (3) final -> expresionInt PUNTOYCOMA .
    (4) final -> expresionInt PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    LDER            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! VARIABLE        [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]

    expresionInt                   shift and go to state 3
    final                          shift and go to state 117
    asignacion                     shift and go to state 2
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 51

    (5) final -> expresionDouble PUNTOYCOMA .
    (6) final -> expresionDouble PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    LDER            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! VARIABLE        [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]

    expresionDouble                shift and go to state 4
    final                          shift and go to state 118
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 52

    (7) final -> expresionString PUNTOYCOMA .
    (8) final -> expresionString PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    LDER            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! VARIABLE        [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]

    expresionString                shift and go to state 5
    final                          shift and go to state 119
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 53

    (9) final -> expresionBool PUNTOYCOMA .
    (10) final -> expresionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    LDER            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! VARIABLE        [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]

    expresionBool                  shift and go to state 6
    final                          shift and go to state 120
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 54

    (116) comparacionBool -> expresionBool operadorLogico . expresionBool
    (117) comparacionBool -> expresionBool operadorLogico . comparacionBool
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 124
    DOUBLE          shift and go to state 45
    BOOL            shift and go to state 48
    NOT             shift and go to state 41
    ENTERO          shift and go to state 128
    STRING          shift and go to state 129

    expresionBool                  shift and go to state 121
    comparacionBool                shift and go to state 122
    valorDouble                    shift and go to state 123
    valorBool                      shift and go to state 125
    negacionBool                   shift and go to state 126
    valor                          shift and go to state 33
    valorInt                       shift and go to state 127

state 55

    (148) operadorLogico -> AND .

    VARIABLE        reduce using rule 148 (operadorLogico -> AND .)
    DOUBLE          reduce using rule 148 (operadorLogico -> AND .)
    BOOL            reduce using rule 148 (operadorLogico -> AND .)
    NOT             reduce using rule 148 (operadorLogico -> AND .)
    ENTERO          reduce using rule 148 (operadorLogico -> AND .)
    STRING          reduce using rule 148 (operadorLogico -> AND .)


state 56

    (149) operadorLogico -> OR .

    VARIABLE        reduce using rule 149 (operadorLogico -> OR .)
    DOUBLE          reduce using rule 149 (operadorLogico -> OR .)
    BOOL            reduce using rule 149 (operadorLogico -> OR .)
    NOT             reduce using rule 149 (operadorLogico -> OR .)
    ENTERO          reduce using rule 149 (operadorLogico -> OR .)
    STRING          reduce using rule 149 (operadorLogico -> OR .)


state 57

    (11) final -> expresionBoolFor PUNTOYCOMA .
    (12) final -> expresionBoolFor PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    LDER            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! VARIABLE        [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 130
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 58

    (14) final -> sentenciaWhile final .

    $end            reduce using rule 14 (final -> sentenciaWhile final .)
    PUNTOYCOMA      reduce using rule 14 (final -> sentenciaWhile final .)
    VARIABLE        reduce using rule 14 (final -> sentenciaWhile final .)
    INT             reduce using rule 14 (final -> sentenciaWhile final .)
    DOUBLER         reduce using rule 14 (final -> sentenciaWhile final .)
    NUM             reduce using rule 14 (final -> sentenciaWhile final .)
    STRINGR         reduce using rule 14 (final -> sentenciaWhile final .)
    BOOLR           reduce using rule 14 (final -> sentenciaWhile final .)
    DYNAMIC         reduce using rule 14 (final -> sentenciaWhile final .)
    VAR             reduce using rule 14 (final -> sentenciaWhile final .)
    WHILE           reduce using rule 14 (final -> sentenciaWhile final .)
    DO              reduce using rule 14 (final -> sentenciaWhile final .)
    IF              reduce using rule 14 (final -> sentenciaWhile final .)
    ELSE            reduce using rule 14 (final -> sentenciaWhile final .)
    PRINT           reduce using rule 14 (final -> sentenciaWhile final .)
    FUNCIONSTDIN    reduce using rule 14 (final -> sentenciaWhile final .)
    FUNCIONSTDOUT   reduce using rule 14 (final -> sentenciaWhile final .)
    NOT             reduce using rule 14 (final -> sentenciaWhile final .)
    ELSEIF          reduce using rule 14 (final -> sentenciaWhile final .)
    FOR             reduce using rule 14 (final -> sentenciaWhile final .)
    ENTERO          reduce using rule 14 (final -> sentenciaWhile final .)
    DOUBLE          reduce using rule 14 (final -> sentenciaWhile final .)
    STRING          reduce using rule 14 (final -> sentenciaWhile final .)
    BOOL            reduce using rule 14 (final -> sentenciaWhile final .)
    LDER            reduce using rule 14 (final -> sentenciaWhile final .)


state 59

    (15) final -> sentenciaWhile PUNTOYCOMA .
    (16) final -> sentenciaWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    LDER            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! VARIABLE        [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 131
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 60

    (17) final -> sentenciaDoWhile PUNTOYCOMA .
    (18) final -> sentenciaDoWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    LDER            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! VARIABLE        [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]

    sentenciaDoWhile               shift and go to state 9
    final                          shift and go to state 132
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 61

    (19) final -> sentenciaIf PUNTOYCOMA .
    (20) final -> sentenciaIf PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    LDER            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! VARIABLE        [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 133
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 62

    (22) final -> sentenciaIf final .

    $end            reduce using rule 22 (final -> sentenciaIf final .)
    PUNTOYCOMA      reduce using rule 22 (final -> sentenciaIf final .)
    VARIABLE        reduce using rule 22 (final -> sentenciaIf final .)
    INT             reduce using rule 22 (final -> sentenciaIf final .)
    DOUBLER         reduce using rule 22 (final -> sentenciaIf final .)
    NUM             reduce using rule 22 (final -> sentenciaIf final .)
    STRINGR         reduce using rule 22 (final -> sentenciaIf final .)
    BOOLR           reduce using rule 22 (final -> sentenciaIf final .)
    DYNAMIC         reduce using rule 22 (final -> sentenciaIf final .)
    VAR             reduce using rule 22 (final -> sentenciaIf final .)
    WHILE           reduce using rule 22 (final -> sentenciaIf final .)
    DO              reduce using rule 22 (final -> sentenciaIf final .)
    IF              reduce using rule 22 (final -> sentenciaIf final .)
    ELSE            reduce using rule 22 (final -> sentenciaIf final .)
    PRINT           reduce using rule 22 (final -> sentenciaIf final .)
    FUNCIONSTDIN    reduce using rule 22 (final -> sentenciaIf final .)
    FUNCIONSTDOUT   reduce using rule 22 (final -> sentenciaIf final .)
    NOT             reduce using rule 22 (final -> sentenciaIf final .)
    ELSEIF          reduce using rule 22 (final -> sentenciaIf final .)
    FOR             reduce using rule 22 (final -> sentenciaIf final .)
    ENTERO          reduce using rule 22 (final -> sentenciaIf final .)
    DOUBLE          reduce using rule 22 (final -> sentenciaIf final .)
    STRING          reduce using rule 22 (final -> sentenciaIf final .)
    BOOL            reduce using rule 22 (final -> sentenciaIf final .)
    LDER            reduce using rule 22 (final -> sentenciaIf final .)


state 63

    (23) final -> sentenciaElse PUNTOYCOMA .
    (24) final -> sentenciaElse PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    LDER            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! VARIABLE        [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 134
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 64

    (26) final -> sentenciaElse final .

    $end            reduce using rule 26 (final -> sentenciaElse final .)
    PUNTOYCOMA      reduce using rule 26 (final -> sentenciaElse final .)
    VARIABLE        reduce using rule 26 (final -> sentenciaElse final .)
    INT             reduce using rule 26 (final -> sentenciaElse final .)
    DOUBLER         reduce using rule 26 (final -> sentenciaElse final .)
    NUM             reduce using rule 26 (final -> sentenciaElse final .)
    STRINGR         reduce using rule 26 (final -> sentenciaElse final .)
    BOOLR           reduce using rule 26 (final -> sentenciaElse final .)
    DYNAMIC         reduce using rule 26 (final -> sentenciaElse final .)
    VAR             reduce using rule 26 (final -> sentenciaElse final .)
    WHILE           reduce using rule 26 (final -> sentenciaElse final .)
    DO              reduce using rule 26 (final -> sentenciaElse final .)
    IF              reduce using rule 26 (final -> sentenciaElse final .)
    ELSE            reduce using rule 26 (final -> sentenciaElse final .)
    PRINT           reduce using rule 26 (final -> sentenciaElse final .)
    FUNCIONSTDIN    reduce using rule 26 (final -> sentenciaElse final .)
    FUNCIONSTDOUT   reduce using rule 26 (final -> sentenciaElse final .)
    NOT             reduce using rule 26 (final -> sentenciaElse final .)
    ELSEIF          reduce using rule 26 (final -> sentenciaElse final .)
    FOR             reduce using rule 26 (final -> sentenciaElse final .)
    ENTERO          reduce using rule 26 (final -> sentenciaElse final .)
    DOUBLE          reduce using rule 26 (final -> sentenciaElse final .)
    STRING          reduce using rule 26 (final -> sentenciaElse final .)
    BOOL            reduce using rule 26 (final -> sentenciaElse final .)
    LDER            reduce using rule 26 (final -> sentenciaElse final .)


state 65

    (27) final -> imprimir PUNTOYCOMA .
    (28) final -> imprimir PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    LDER            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! VARIABLE        [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]

    imprimir                       shift and go to state 12
    final                          shift and go to state 135
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 66

    (29) final -> funcionStdin PUNTOYCOMA .
    (30) final -> funcionStdin PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    LDER            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! VARIABLE        [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]

    funcionStdin                   shift and go to state 13
    final                          shift and go to state 136
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 67

    (31) final -> funcionStdout PUNTOYCOMA .
    (32) final -> funcionStdout PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    LDER            reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! VARIABLE        [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]

    funcionStdout                  shift and go to state 14
    final                          shift and go to state 137
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 68

    (33) final -> negacionBool PUNTOYCOMA .
    (34) final -> negacionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    LDER            reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! VARIABLE        [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]

    negacionBool                   shift and go to state 15
    final                          shift and go to state 138
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 69

    (35) final -> comparacionBool PUNTOYCOMA . final
    (36) final -> comparacionBool PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    LDER            reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! VARIABLE        [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]

    comparacionBool                shift and go to state 16
    final                          shift and go to state 139
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 70

    (37) final -> sentenciaElseIf PUNTOYCOMA . final
    (39) final -> sentenciaElseIf PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    LDER            reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! VARIABLE        [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 140
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 71

    (38) final -> sentenciaElseIf final .

    $end            reduce using rule 38 (final -> sentenciaElseIf final .)
    PUNTOYCOMA      reduce using rule 38 (final -> sentenciaElseIf final .)
    VARIABLE        reduce using rule 38 (final -> sentenciaElseIf final .)
    INT             reduce using rule 38 (final -> sentenciaElseIf final .)
    DOUBLER         reduce using rule 38 (final -> sentenciaElseIf final .)
    NUM             reduce using rule 38 (final -> sentenciaElseIf final .)
    STRINGR         reduce using rule 38 (final -> sentenciaElseIf final .)
    BOOLR           reduce using rule 38 (final -> sentenciaElseIf final .)
    DYNAMIC         reduce using rule 38 (final -> sentenciaElseIf final .)
    VAR             reduce using rule 38 (final -> sentenciaElseIf final .)
    WHILE           reduce using rule 38 (final -> sentenciaElseIf final .)
    DO              reduce using rule 38 (final -> sentenciaElseIf final .)
    IF              reduce using rule 38 (final -> sentenciaElseIf final .)
    ELSE            reduce using rule 38 (final -> sentenciaElseIf final .)
    PRINT           reduce using rule 38 (final -> sentenciaElseIf final .)
    FUNCIONSTDIN    reduce using rule 38 (final -> sentenciaElseIf final .)
    FUNCIONSTDOUT   reduce using rule 38 (final -> sentenciaElseIf final .)
    NOT             reduce using rule 38 (final -> sentenciaElseIf final .)
    ELSEIF          reduce using rule 38 (final -> sentenciaElseIf final .)
    FOR             reduce using rule 38 (final -> sentenciaElseIf final .)
    ENTERO          reduce using rule 38 (final -> sentenciaElseIf final .)
    DOUBLE          reduce using rule 38 (final -> sentenciaElseIf final .)
    STRING          reduce using rule 38 (final -> sentenciaElseIf final .)
    BOOL            reduce using rule 38 (final -> sentenciaElseIf final .)
    LDER            reduce using rule 38 (final -> sentenciaElseIf final .)


state 72

    (41) final -> sentenciaFor PUNTOYCOMA . final
    (42) final -> sentenciaFor PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    LDER            reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! VARIABLE        [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]

    sentenciaFor                   shift and go to state 18
    final                          shift and go to state 141
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 73

    (43) final -> sentenciaFor final .

    $end            reduce using rule 43 (final -> sentenciaFor final .)
    PUNTOYCOMA      reduce using rule 43 (final -> sentenciaFor final .)
    VARIABLE        reduce using rule 43 (final -> sentenciaFor final .)
    INT             reduce using rule 43 (final -> sentenciaFor final .)
    DOUBLER         reduce using rule 43 (final -> sentenciaFor final .)
    NUM             reduce using rule 43 (final -> sentenciaFor final .)
    STRINGR         reduce using rule 43 (final -> sentenciaFor final .)
    BOOLR           reduce using rule 43 (final -> sentenciaFor final .)
    DYNAMIC         reduce using rule 43 (final -> sentenciaFor final .)
    VAR             reduce using rule 43 (final -> sentenciaFor final .)
    WHILE           reduce using rule 43 (final -> sentenciaFor final .)
    DO              reduce using rule 43 (final -> sentenciaFor final .)
    IF              reduce using rule 43 (final -> sentenciaFor final .)
    ELSE            reduce using rule 43 (final -> sentenciaFor final .)
    PRINT           reduce using rule 43 (final -> sentenciaFor final .)
    FUNCIONSTDIN    reduce using rule 43 (final -> sentenciaFor final .)
    FUNCIONSTDOUT   reduce using rule 43 (final -> sentenciaFor final .)
    NOT             reduce using rule 43 (final -> sentenciaFor final .)
    ELSEIF          reduce using rule 43 (final -> sentenciaFor final .)
    FOR             reduce using rule 43 (final -> sentenciaFor final .)
    ENTERO          reduce using rule 43 (final -> sentenciaFor final .)
    DOUBLE          reduce using rule 43 (final -> sentenciaFor final .)
    STRING          reduce using rule 43 (final -> sentenciaFor final .)
    BOOL            reduce using rule 43 (final -> sentenciaFor final .)
    LDER            reduce using rule 43 (final -> sentenciaFor final .)


state 74

    (45) final -> sentenciaSubstring PUNTOYCOMA . final
    (46) final -> sentenciaSubstring PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    LDER            reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! VARIABLE        [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]

    sentenciaSubstring             shift and go to state 19
    final                          shift and go to state 142
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 75

    (47) final -> VARIABLE DSUMA . PUNTOYCOMA final
    (48) final -> VARIABLE DSUMA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 143


state 76

    (49) final -> VARIABLE DRESTA . PUNTOYCOMA final
    (50) final -> VARIABLE DRESTA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 144


state 77

    (107) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (108) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (91) expresionBoolFor -> VARIABLE comparadorMat . expresionDouble
    (92) expresionBoolFor -> VARIABLE comparadorMat . VARIABLE
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 145
    DOUBLE          shift and go to state 148
    ENTERO          shift and go to state 149

    expresionDouble                shift and go to state 146
    valorDouble                    shift and go to state 147
    valorInt                       shift and go to state 127

state 78

    (126) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO PDER
    (127) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO COMA ENTERO PDER

    PIZQ            shift and go to state 150


state 79

    (59) asignacionSimple -> VARIABLE IGUAL . expresion
    (75) expresion -> . valor operadorMat expresion
    (76) expresion -> . valor
    (77) expresion -> . expresionString
    (78) expresion -> . expresionInt
    (79) expresion -> . expresionDouble
    (80) expresion -> . expresionBool
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 128
    VARIABLE        shift and go to state 151
    DOUBLE          shift and go to state 158
    STRING          shift and go to state 159
    FUNCIONSTDIN    shift and go to state 162
    BOOL            shift and go to state 48
    NOT             shift and go to state 41

    expresion                      shift and go to state 152
    valor                          shift and go to state 153
    expresionString                shift and go to state 154
    expresionInt                   shift and go to state 155
    expresionDouble                shift and go to state 156
    expresionBool                  shift and go to state 157
    valorString                    shift and go to state 31
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 160
    valorBool                      shift and go to state 125
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 161
    expresionIndexString           shift and go to state 47
    sentenciaSubstring             shift and go to state 163

state 80

    (142) comparadorMat -> DIGUAL .

    VARIABLE        reduce using rule 142 (comparadorMat -> DIGUAL .)
    DOUBLE          reduce using rule 142 (comparadorMat -> DIGUAL .)
    ENTERO          reduce using rule 142 (comparadorMat -> DIGUAL .)


state 81

    (143) comparadorMat -> NOIGUAL .

    VARIABLE        reduce using rule 143 (comparadorMat -> NOIGUAL .)
    DOUBLE          reduce using rule 143 (comparadorMat -> NOIGUAL .)
    ENTERO          reduce using rule 143 (comparadorMat -> NOIGUAL .)


state 82

    (144) comparadorMat -> MAYOR .

    VARIABLE        reduce using rule 144 (comparadorMat -> MAYOR .)
    DOUBLE          reduce using rule 144 (comparadorMat -> MAYOR .)
    ENTERO          reduce using rule 144 (comparadorMat -> MAYOR .)


state 83

    (145) comparadorMat -> MENOR .

    VARIABLE        reduce using rule 145 (comparadorMat -> MENOR .)
    DOUBLE          reduce using rule 145 (comparadorMat -> MENOR .)
    ENTERO          reduce using rule 145 (comparadorMat -> MENOR .)


state 84

    (146) comparadorMat -> MAYIGUAL .

    VARIABLE        reduce using rule 146 (comparadorMat -> MAYIGUAL .)
    DOUBLE          reduce using rule 146 (comparadorMat -> MAYIGUAL .)
    ENTERO          reduce using rule 146 (comparadorMat -> MAYIGUAL .)


state 85

    (147) comparadorMat -> MENIGUAL .

    VARIABLE        reduce using rule 147 (comparadorMat -> MENIGUAL .)
    DOUBLE          reduce using rule 147 (comparadorMat -> MENIGUAL .)
    ENTERO          reduce using rule 147 (comparadorMat -> MENIGUAL .)


state 86

    (51) asignacion -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 164


state 87

    (52) asignacion -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 165


state 88

    (53) asignacion -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 166


state 89

    (54) asignacion -> STRINGR VARIABLE . IGUAL expresionString

    IGUAL           shift and go to state 167


state 90

    (55) asignacion -> BOOLR VARIABLE . IGUAL expresionBool

    IGUAL           shift and go to state 168


state 91

    (56) asignacion -> DYNAMIC VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 169


state 92

    (57) asignacion -> VAR VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 170


state 93

    (130) expresionInt -> valorInt operadorMat . expresionInt
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE

    ENTERO          shift and go to state 149
    VARIABLE        shift and go to state 173

    valorInt                       shift and go to state 171
    expresionInt                   shift and go to state 172

state 94

    (136) operadorMat -> SUMA .

    ENTERO          reduce using rule 136 (operadorMat -> SUMA .)
    VARIABLE        reduce using rule 136 (operadorMat -> SUMA .)
    DOUBLE          reduce using rule 136 (operadorMat -> SUMA .)
    STRING          reduce using rule 136 (operadorMat -> SUMA .)
    FUNCIONSTDIN    reduce using rule 136 (operadorMat -> SUMA .)
    BOOL            reduce using rule 136 (operadorMat -> SUMA .)
    NOT             reduce using rule 136 (operadorMat -> SUMA .)


state 95

    (137) operadorMat -> RESTA .

    ENTERO          reduce using rule 137 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 137 (operadorMat -> RESTA .)
    DOUBLE          reduce using rule 137 (operadorMat -> RESTA .)
    STRING          reduce using rule 137 (operadorMat -> RESTA .)
    FUNCIONSTDIN    reduce using rule 137 (operadorMat -> RESTA .)
    BOOL            reduce using rule 137 (operadorMat -> RESTA .)
    NOT             reduce using rule 137 (operadorMat -> RESTA .)


state 96

    (138) operadorMat -> MULTI .

    ENTERO          reduce using rule 138 (operadorMat -> MULTI .)
    VARIABLE        reduce using rule 138 (operadorMat -> MULTI .)
    DOUBLE          reduce using rule 138 (operadorMat -> MULTI .)
    STRING          reduce using rule 138 (operadorMat -> MULTI .)
    FUNCIONSTDIN    reduce using rule 138 (operadorMat -> MULTI .)
    BOOL            reduce using rule 138 (operadorMat -> MULTI .)
    NOT             reduce using rule 138 (operadorMat -> MULTI .)


state 97

    (139) operadorMat -> DIV .

    ENTERO          reduce using rule 139 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 139 (operadorMat -> DIV .)
    DOUBLE          reduce using rule 139 (operadorMat -> DIV .)
    STRING          reduce using rule 139 (operadorMat -> DIV .)
    FUNCIONSTDIN    reduce using rule 139 (operadorMat -> DIV .)
    BOOL            reduce using rule 139 (operadorMat -> DIV .)
    NOT             reduce using rule 139 (operadorMat -> DIV .)


state 98

    (140) operadorMat -> DIVENTERO .

    ENTERO          reduce using rule 140 (operadorMat -> DIVENTERO .)
    VARIABLE        reduce using rule 140 (operadorMat -> DIVENTERO .)
    DOUBLE          reduce using rule 140 (operadorMat -> DIVENTERO .)
    STRING          reduce using rule 140 (operadorMat -> DIVENTERO .)
    FUNCIONSTDIN    reduce using rule 140 (operadorMat -> DIVENTERO .)
    BOOL            reduce using rule 140 (operadorMat -> DIVENTERO .)
    NOT             reduce using rule 140 (operadorMat -> DIVENTERO .)


state 99

    (141) operadorMat -> MOD .

    ENTERO          reduce using rule 141 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 141 (operadorMat -> MOD .)
    DOUBLE          reduce using rule 141 (operadorMat -> MOD .)
    STRING          reduce using rule 141 (operadorMat -> MOD .)
    FUNCIONSTDIN    reduce using rule 141 (operadorMat -> MOD .)
    BOOL            reduce using rule 141 (operadorMat -> MOD .)
    NOT             reduce using rule 141 (operadorMat -> MOD .)


state 100

    (134) expresionDouble -> valorDouble operadorMat . expresionDouble
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 148
    ENTERO          shift and go to state 149
    VARIABLE        shift and go to state 173

    valorDouble                    shift and go to state 147
    expresionDouble                shift and go to state 174
    valorInt                       shift and go to state 127

state 101

    (106) expresionBool -> valorDouble comparadorMat . expresionDouble
    (109) expresionBool -> valorDouble comparadorMat . VARIABLE
    (90) expresionBoolFor -> valorDouble comparadorMat . expresionDouble
    (93) expresionBoolFor -> valorDouble comparadorMat . VARIABLE
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 176
    DOUBLE          shift and go to state 148
    ENTERO          shift and go to state 149

    valorDouble                    shift and go to state 147
    expresionDouble                shift and go to state 175
    valorInt                       shift and go to state 127

state 102

    (123) expresionString -> valorString SUMA . expresionString
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 178
    VARIABLE        shift and go to state 179
    FUNCIONSTDIN    shift and go to state 162

    valorString                    shift and go to state 31
    expresionString                shift and go to state 177
    expresionIndexString           shift and go to state 47
    sentenciaSubstring             shift and go to state 163

state 103

    (125) expresionIndexString -> valorString CIZQ . ENTERO CDER

    ENTERO          shift and go to state 180


state 104

    (113) expresionBool -> valor IS . objeto
    (150) objeto -> . STRINGR
    (151) objeto -> . INT
    (152) objeto -> . DOUBLER
    (153) objeto -> . NUM
    (154) objeto -> . VAR
    (155) objeto -> . DYNAMIC
    (156) objeto -> . LIST
    (157) objeto -> . BOOL
    (158) objeto -> . MAP
    (159) objeto -> . SET

    STRINGR         shift and go to state 182
    INT             shift and go to state 183
    DOUBLER         shift and go to state 184
    NUM             shift and go to state 185
    VAR             shift and go to state 186
    DYNAMIC         shift and go to state 187
    LIST            shift and go to state 188
    BOOL            shift and go to state 189
    MAP             shift and go to state 190
    SET             shift and go to state 191

    objeto                         shift and go to state 181

state 105

    (114) expresionBool -> valor ISNEGADO . objeto
    (150) objeto -> . STRINGR
    (151) objeto -> . INT
    (152) objeto -> . DOUBLER
    (153) objeto -> . NUM
    (154) objeto -> . VAR
    (155) objeto -> . DYNAMIC
    (156) objeto -> . LIST
    (157) objeto -> . BOOL
    (158) objeto -> . MAP
    (159) objeto -> . SET

    STRINGR         shift and go to state 182
    INT             shift and go to state 183
    DOUBLER         shift and go to state 184
    NUM             shift and go to state 185
    VAR             shift and go to state 186
    DYNAMIC         shift and go to state 187
    LIST            shift and go to state 188
    BOOL            shift and go to state 189
    MAP             shift and go to state 190
    SET             shift and go to state 191

    objeto                         shift and go to state 192

state 106

    (101) sentenciaWhile -> WHILE PIZQ . expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> WHILE PIZQ . expresionBool PDER final
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 124
    DOUBLE          shift and go to state 45
    BOOL            shift and go to state 48
    NOT             shift and go to state 41
    ENTERO          shift and go to state 128
    STRING          shift and go to state 129

    expresionBool                  shift and go to state 193
    valorDouble                    shift and go to state 123
    valorBool                      shift and go to state 125
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 161
    valor                          shift and go to state 33
    valorInt                       shift and go to state 127

state 107

    (103) sentenciaDoWhile -> DO LIZQ . final LDER WHILE PIZQ expresionBool PDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

    final                          shift and go to state 194
    expresionBool                  shift and go to state 6
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 108

    (65) sentenciaIf -> IF PIZQ . expresionBool PDER final
    (66) sentenciaIf -> IF PIZQ . expresionBool PDER LIZQ final LDER
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 124
    DOUBLE          shift and go to state 45
    BOOL            shift and go to state 48
    NOT             shift and go to state 41
    ENTERO          shift and go to state 128
    STRING          shift and go to state 129

    expresionBool                  shift and go to state 195
    valorDouble                    shift and go to state 123
    valorBool                      shift and go to state 125
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 161
    valor                          shift and go to state 33
    valorInt                       shift and go to state 127

state 109

    (67) sentenciaElse -> ELSE final .

    PUNTOYCOMA      reduce using rule 67 (sentenciaElse -> ELSE final .)
    VARIABLE        reduce using rule 67 (sentenciaElse -> ELSE final .)
    INT             reduce using rule 67 (sentenciaElse -> ELSE final .)
    DOUBLER         reduce using rule 67 (sentenciaElse -> ELSE final .)
    NUM             reduce using rule 67 (sentenciaElse -> ELSE final .)
    STRINGR         reduce using rule 67 (sentenciaElse -> ELSE final .)
    BOOLR           reduce using rule 67 (sentenciaElse -> ELSE final .)
    DYNAMIC         reduce using rule 67 (sentenciaElse -> ELSE final .)
    VAR             reduce using rule 67 (sentenciaElse -> ELSE final .)
    WHILE           reduce using rule 67 (sentenciaElse -> ELSE final .)
    DO              reduce using rule 67 (sentenciaElse -> ELSE final .)
    IF              reduce using rule 67 (sentenciaElse -> ELSE final .)
    ELSE            reduce using rule 67 (sentenciaElse -> ELSE final .)
    PRINT           reduce using rule 67 (sentenciaElse -> ELSE final .)
    FUNCIONSTDIN    reduce using rule 67 (sentenciaElse -> ELSE final .)
    FUNCIONSTDOUT   reduce using rule 67 (sentenciaElse -> ELSE final .)
    NOT             reduce using rule 67 (sentenciaElse -> ELSE final .)
    ELSEIF          reduce using rule 67 (sentenciaElse -> ELSE final .)
    FOR             reduce using rule 67 (sentenciaElse -> ELSE final .)
    ENTERO          reduce using rule 67 (sentenciaElse -> ELSE final .)
    DOUBLE          reduce using rule 67 (sentenciaElse -> ELSE final .)
    STRING          reduce using rule 67 (sentenciaElse -> ELSE final .)
    BOOL            reduce using rule 67 (sentenciaElse -> ELSE final .)
    $end            reduce using rule 67 (sentenciaElse -> ELSE final .)
    LDER            reduce using rule 67 (sentenciaElse -> ELSE final .)


state 110

    (68) sentenciaElse -> ELSE LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

    final                          shift and go to state 196
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 111

    (60) imprimir -> PRINT PIZQ . expresion PDER
    (61) imprimir -> PRINT PIZQ . asignacionSimple PDER
    (75) expresion -> . valor operadorMat expresion
    (76) expresion -> . valor
    (77) expresion -> . expresionString
    (78) expresion -> . expresionInt
    (79) expresion -> . expresionDouble
    (80) expresion -> . expresionBool
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 199
    ENTERO          shift and go to state 128
    DOUBLE          shift and go to state 158
    STRING          shift and go to state 159
    FUNCIONSTDIN    shift and go to state 162
    BOOL            shift and go to state 48
    NOT             shift and go to state 41

    expresion                      shift and go to state 197
    asignacionSimple               shift and go to state 198
    valor                          shift and go to state 153
    expresionString                shift and go to state 154
    expresionInt                   shift and go to state 155
    expresionDouble                shift and go to state 156
    expresionBool                  shift and go to state 157
    valorString                    shift and go to state 31
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 160
    valorBool                      shift and go to state 125
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 161
    expresionIndexString           shift and go to state 47
    sentenciaSubstring             shift and go to state 163

state 112

    (63) funcionStdout -> FUNCIONSTDOUT PIZQ . expresion PDER
    (64) funcionStdout -> FUNCIONSTDOUT PIZQ . asignacionSimple PDER
    (75) expresion -> . valor operadorMat expresion
    (76) expresion -> . valor
    (77) expresion -> . expresionString
    (78) expresion -> . expresionInt
    (79) expresion -> . expresionDouble
    (80) expresion -> . expresionBool
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 199
    ENTERO          shift and go to state 128
    DOUBLE          shift and go to state 158
    STRING          shift and go to state 159
    FUNCIONSTDIN    shift and go to state 162
    BOOL            shift and go to state 48
    NOT             shift and go to state 41

    expresion                      shift and go to state 200
    asignacionSimple               shift and go to state 201
    valor                          shift and go to state 153
    expresionString                shift and go to state 154
    expresionInt                   shift and go to state 155
    expresionDouble                shift and go to state 156
    expresionBool                  shift and go to state 157
    valorString                    shift and go to state 31
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 160
    valorBool                      shift and go to state 125
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 161
    expresionIndexString           shift and go to state 47
    sentenciaSubstring             shift and go to state 163

state 113

    (115) negacionBool -> NOT PIZQ . expresionBool PDER
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 124
    DOUBLE          shift and go to state 45
    BOOL            shift and go to state 48
    NOT             shift and go to state 41
    ENTERO          shift and go to state 128
    STRING          shift and go to state 129

    expresionBool                  shift and go to state 202
    valorDouble                    shift and go to state 123
    valorBool                      shift and go to state 125
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 161
    valor                          shift and go to state 33
    valorInt                       shift and go to state 127

state 114

    (69) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER final
    (70) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER LIZQ final LDER
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 124
    DOUBLE          shift and go to state 45
    BOOL            shift and go to state 48
    NOT             shift and go to state 41
    ENTERO          shift and go to state 128
    STRING          shift and go to state 129

    expresionBool                  shift and go to state 203
    valorDouble                    shift and go to state 123
    valorBool                      shift and go to state 125
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 161
    valor                          shift and go to state 33
    valorInt                       shift and go to state 127

state 115

    (97) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (81) asignacionFor -> . INT VARIABLE IGUAL expresionInt
    (82) asignacionFor -> . DOUBLER VARIABLE IGUAL expresionDouble
    (83) asignacionFor -> . NUM VARIABLE IGUAL expresionDouble
    (84) asignacionFor -> . DYNAMIC VARIABLE IGUAL expresionInt
    (85) asignacionFor -> . DYNAMIC VARIABLE IGUAL expresionDouble
    (86) asignacionFor -> . VAR VARIABLE IGUAL expresionInt
    (87) asignacionFor -> . VAR VARIABLE IGUAL expresionDouble
    (88) asignacionFor -> . VARIABLE IGUAL expresionInt
    (89) asignacionFor -> . VARIABLE IGUAL expresionDouble

    INT             shift and go to state 206
    DOUBLER         shift and go to state 207
    NUM             shift and go to state 208
    DYNAMIC         shift and go to state 209
    VAR             shift and go to state 210
    VARIABLE        shift and go to state 205

    asignacionFor                  shift and go to state 204

state 116

    (2) final -> asignacion PUNTOYCOMA final .

    $end            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VARIABLE        reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    INT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLER         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NUM             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRINGR         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOLR           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VAR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    WHILE           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DO              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    IF              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSE            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PRINT           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NOT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSEIF          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FOR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ENTERO          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLE          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRING          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOL            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LDER            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)


state 117

    (4) final -> expresionInt PUNTOYCOMA final .

    $end            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VARIABLE        reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    INT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLER         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NUM             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRINGR         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOLR           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VAR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    WHILE           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DO              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    IF              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSE            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PRINT           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NOT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSEIF          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FOR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ENTERO          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLE          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRING          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOL            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LDER            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)


state 118

    (6) final -> expresionDouble PUNTOYCOMA final .

    $end            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VARIABLE        reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    INT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLER         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NUM             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRINGR         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOLR           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VAR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    WHILE           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DO              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    IF              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSE            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PRINT           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NOT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSEIF          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FOR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ENTERO          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLE          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRING          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOL            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LDER            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)


state 119

    (8) final -> expresionString PUNTOYCOMA final .

    $end            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VARIABLE        reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    INT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLER         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NUM             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRINGR         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOLR           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VAR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    WHILE           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DO              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    IF              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSE            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PRINT           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NOT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSEIF          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FOR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ENTERO          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLE          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRING          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOL            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LDER            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)


state 120

    (10) final -> expresionBool PUNTOYCOMA final .

    $end            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    INT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NUM             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VAR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DO              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    IF              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NOT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FOR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRING          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LDER            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)


state 121

    (116) comparacionBool -> expresionBool operadorLogico expresionBool .
    (116) comparacionBool -> expresionBool . operadorLogico expresionBool
    (117) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (148) operadorLogico -> . AND
    (149) operadorLogico -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNTOYCOMA      reduce using rule 116 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    PDER            reduce using rule 116 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    AND             shift and go to state 55
    OR              shift and go to state 56

  ! AND             [ reduce using rule 116 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]
  ! OR              [ reduce using rule 116 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]

    operadorLogico                 shift and go to state 54

state 122

    (117) comparacionBool -> expresionBool operadorLogico comparacionBool .
    (112) expresionBool -> comparacionBool .

  ! reduce/reduce conflict for AND resolved using rule 112 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for OR resolved using rule 112 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 112 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PDER resolved using rule 112 (expresionBool -> comparacionBool .)
    AND             reduce using rule 112 (expresionBool -> comparacionBool .)
    OR              reduce using rule 112 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 112 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 112 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 117 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! AND             [ reduce using rule 117 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! OR              [ reduce using rule 117 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! PDER            [ reduce using rule 117 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]


state 123

    (106) expresionBool -> valorDouble . comparadorMat expresionDouble
    (109) expresionBool -> valorDouble . comparadorMat VARIABLE
    (142) comparadorMat -> . DIGUAL
    (143) comparadorMat -> . NOIGUAL
    (144) comparadorMat -> . MAYOR
    (145) comparadorMat -> . MENOR
    (146) comparadorMat -> . MAYIGUAL
    (147) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 80
    NOIGUAL         shift and go to state 81
    MAYOR           shift and go to state 82
    MENOR           shift and go to state 83
    MAYIGUAL        shift and go to state 84
    MENIGUAL        shift and go to state 85

    comparadorMat                  shift and go to state 211

state 124

    (107) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (108) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (105) valorBool -> VARIABLE .
    (72) valor -> VARIABLE .
    (129) valorInt -> VARIABLE .
    (142) comparadorMat -> . DIGUAL
    (143) comparadorMat -> . NOIGUAL
    (144) comparadorMat -> . MAYOR
    (145) comparadorMat -> . MENOR
    (146) comparadorMat -> . MAYIGUAL
    (147) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    AND             reduce using rule 105 (valorBool -> VARIABLE .)
    OR              reduce using rule 105 (valorBool -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 105 (valorBool -> VARIABLE .)
    PDER            reduce using rule 105 (valorBool -> VARIABLE .)
    IS              reduce using rule 72 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 72 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 80
    NOIGUAL         shift and go to state 81
    MAYOR           shift and go to state 82
    MENOR           shift and go to state 83
    MAYIGUAL        shift and go to state 84
    MENIGUAL        shift and go to state 85

  ! DIGUAL          [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 129 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 212

state 125

    (110) expresionBool -> valorBool .

    AND             reduce using rule 110 (expresionBool -> valorBool .)
    OR              reduce using rule 110 (expresionBool -> valorBool .)
    PUNTOYCOMA      reduce using rule 110 (expresionBool -> valorBool .)
    PDER            reduce using rule 110 (expresionBool -> valorBool .)


state 126

    (111) expresionBool -> negacionBool .

    AND             reduce using rule 111 (expresionBool -> negacionBool .)
    OR              reduce using rule 111 (expresionBool -> negacionBool .)
    PUNTOYCOMA      reduce using rule 111 (expresionBool -> negacionBool .)
    PDER            reduce using rule 111 (expresionBool -> negacionBool .)


state 127

    (133) valorDouble -> valorInt .

    DIGUAL          reduce using rule 133 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 133 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 133 (valorDouble -> valorInt .)
    MENOR           reduce using rule 133 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 133 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 133 (valorDouble -> valorInt .)
    SUMA            reduce using rule 133 (valorDouble -> valorInt .)
    RESTA           reduce using rule 133 (valorDouble -> valorInt .)
    MULTI           reduce using rule 133 (valorDouble -> valorInt .)
    DIV             reduce using rule 133 (valorDouble -> valorInt .)
    DIVENTERO       reduce using rule 133 (valorDouble -> valorInt .)
    MOD             reduce using rule 133 (valorDouble -> valorInt .)
    PUNTOYCOMA      reduce using rule 133 (valorDouble -> valorInt .)
    AND             reduce using rule 133 (valorDouble -> valorInt .)
    OR              reduce using rule 133 (valorDouble -> valorInt .)
    PDER            reduce using rule 133 (valorDouble -> valorInt .)


state 128

    (71) valor -> ENTERO .
    (128) valorInt -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 71 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 71 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 71 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 71 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 71 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 71 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 71 (valor -> ENTERO .)
  ! reduce/reduce conflict for PDER resolved using rule 71 (valor -> ENTERO .)
    IS              reduce using rule 71 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 71 (valor -> ENTERO .)
    SUMA            reduce using rule 71 (valor -> ENTERO .)
    RESTA           reduce using rule 71 (valor -> ENTERO .)
    MULTI           reduce using rule 71 (valor -> ENTERO .)
    DIV             reduce using rule 71 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 71 (valor -> ENTERO .)
    MOD             reduce using rule 71 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 71 (valor -> ENTERO .)
    PDER            reduce using rule 71 (valor -> ENTERO .)
    DIGUAL          reduce using rule 128 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 128 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 128 (valorInt -> ENTERO .)
    MENOR           reduce using rule 128 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 128 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 128 (valorInt -> ENTERO .)

  ! SUMA            [ reduce using rule 128 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 128 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 128 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 128 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 128 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 128 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 128 (valorInt -> ENTERO .) ]
  ! PDER            [ reduce using rule 128 (valorInt -> ENTERO .) ]


state 129

    (74) valor -> STRING .

    IS              reduce using rule 74 (valor -> STRING .)
    ISNEGADO        reduce using rule 74 (valor -> STRING .)


state 130

    (12) final -> expresionBoolFor PUNTOYCOMA final .

    $end            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    VARIABLE        reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    INT             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DOUBLER         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NUM             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    STRINGR         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BOOLR           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    VAR             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    WHILE           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DO              reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    IF              reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ELSE            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    PRINT           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NOT             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ELSEIF          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FOR             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ENTERO          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DOUBLE          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    STRING          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BOOL            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LDER            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)


state 131

    (16) final -> sentenciaWhile PUNTOYCOMA final .

    $end            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    INT             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NUM             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    VAR             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DO              reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    IF              reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NOT             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FOR             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRING          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LDER            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)


state 132

    (18) final -> sentenciaDoWhile PUNTOYCOMA final .

    $end            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    INT             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NUM             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VAR             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DO              reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    IF              reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NOT             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FOR             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRING          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LDER            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)


state 133

    (20) final -> sentenciaIf PUNTOYCOMA final .

    $end            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    INT             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NUM             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    VAR             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    WHILE           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DO              reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    IF              reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSE            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    PRINT           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NOT             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FOR             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    STRING          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOL            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LDER            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)


state 134

    (24) final -> sentenciaElse PUNTOYCOMA final .

    $end            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    VARIABLE        reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    INT             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DOUBLER         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NUM             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    STRINGR         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    BOOLR           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    VAR             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    WHILE           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DO              reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    IF              reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ELSE            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    PRINT           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NOT             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ELSEIF          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FOR             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ENTERO          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DOUBLE          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    STRING          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    BOOL            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LDER            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)


state 135

    (28) final -> imprimir PUNTOYCOMA final .

    $end            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    VARIABLE        reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    INT             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DOUBLER         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NUM             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    STRINGR         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    BOOLR           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    VAR             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    WHILE           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DO              reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    IF              reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ELSE            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    PRINT           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NOT             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ELSEIF          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FOR             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ENTERO          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DOUBLE          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    STRING          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    BOOL            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LDER            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)


state 136

    (30) final -> funcionStdin PUNTOYCOMA final .

    $end            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    VARIABLE        reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    INT             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLER         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NUM             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    STRINGR         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    BOOLR           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    VAR             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    WHILE           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DO              reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    IF              reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ELSE            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    PRINT           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NOT             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ELSEIF          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FOR             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ENTERO          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLE          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    STRING          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    BOOL            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LDER            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)


state 137

    (32) final -> funcionStdout PUNTOYCOMA final .

    $end            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    VARIABLE        reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    INT             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLER         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NUM             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    STRINGR         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    BOOLR           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    VAR             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    WHILE           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DO              reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    IF              reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ELSE            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    PRINT           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NOT             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ELSEIF          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FOR             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ENTERO          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLE          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    STRING          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    BOOL            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LDER            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)


state 138

    (34) final -> negacionBool PUNTOYCOMA final .

    $end            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    INT             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DO              reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    IF              reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FOR             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)


state 139

    (35) final -> comparacionBool PUNTOYCOMA final .

    $end            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    INT             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DO              reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    IF              reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FOR             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)


state 140

    (37) final -> sentenciaElseIf PUNTOYCOMA final .

    $end            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    INT             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NUM             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    VAR             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    WHILE           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DO              reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    IF              reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ELSE            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    PRINT           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NOT             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FOR             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    STRING          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BOOL            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LDER            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)


state 141

    (41) final -> sentenciaFor PUNTOYCOMA final .

    $end            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    VARIABLE        reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    INT             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DOUBLER         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NUM             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    STRINGR         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    BOOLR           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    VAR             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    WHILE           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DO              reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    IF              reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ELSE            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    PRINT           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NOT             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ELSEIF          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FOR             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ENTERO          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DOUBLE          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    STRING          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    BOOL            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LDER            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)


state 142

    (45) final -> sentenciaSubstring PUNTOYCOMA final .

    $end            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VARIABLE        reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    INT             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLER         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NUM             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRINGR         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOLR           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VAR             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    WHILE           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DO              reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    IF              reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSE            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PRINT           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NOT             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSEIF          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FOR             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ENTERO          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLE          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRING          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOL            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LDER            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)


state 143

    (47) final -> VARIABLE DSUMA PUNTOYCOMA . final
    (48) final -> VARIABLE DSUMA PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    LDER            reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! VARIABLE        [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]

    final                          shift and go to state 213
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 144

    (49) final -> VARIABLE DRESTA PUNTOYCOMA . final
    (50) final -> VARIABLE DRESTA PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    LDER            reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

  ! VARIABLE        [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]

    final                          shift and go to state 214
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 145

    (108) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (92) expresionBoolFor -> VARIABLE comparadorMat VARIABLE .
    (129) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 92 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 92 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 108 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 108 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 108 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 108 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 92 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 129 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 129 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 129 (valorInt -> VARIABLE .)
    DIV             reduce using rule 129 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 129 (valorInt -> VARIABLE .)
    MOD             reduce using rule 129 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 108 (expresionBool -> VARIABLE comparadorMat VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 129 (valorInt -> VARIABLE .) ]


state 146

    (107) expresionBool -> VARIABLE comparadorMat expresionDouble .
    (91) expresionBoolFor -> VARIABLE comparadorMat expresionDouble .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 91 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 107 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 107 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 91 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 107 (expresionBool -> VARIABLE comparadorMat expresionDouble .) ]


state 147

    (134) expresionDouble -> valorDouble . operadorMat expresionDouble
    (135) expresionDouble -> valorDouble .
    (136) operadorMat -> . SUMA
    (137) operadorMat -> . RESTA
    (138) operadorMat -> . MULTI
    (139) operadorMat -> . DIV
    (140) operadorMat -> . DIVENTERO
    (141) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 135 (expresionDouble -> valorDouble .)
    AND             reduce using rule 135 (expresionDouble -> valorDouble .)
    OR              reduce using rule 135 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 135 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 94
    RESTA           shift and go to state 95
    MULTI           shift and go to state 96
    DIV             shift and go to state 97
    DIVENTERO       shift and go to state 98
    MOD             shift and go to state 99

    operadorMat                    shift and go to state 100

state 148

    (132) valorDouble -> DOUBLE .

    SUMA            reduce using rule 132 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 132 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 132 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 132 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 132 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 132 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 132 (valorDouble -> DOUBLE .)
    AND             reduce using rule 132 (valorDouble -> DOUBLE .)
    OR              reduce using rule 132 (valorDouble -> DOUBLE .)
    PDER            reduce using rule 132 (valorDouble -> DOUBLE .)


state 149

    (128) valorInt -> ENTERO .

    SUMA            reduce using rule 128 (valorInt -> ENTERO .)
    RESTA           reduce using rule 128 (valorInt -> ENTERO .)
    MULTI           reduce using rule 128 (valorInt -> ENTERO .)
    DIV             reduce using rule 128 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 128 (valorInt -> ENTERO .)
    MOD             reduce using rule 128 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 128 (valorInt -> ENTERO .)
    AND             reduce using rule 128 (valorInt -> ENTERO .)
    OR              reduce using rule 128 (valorInt -> ENTERO .)
    PDER            reduce using rule 128 (valorInt -> ENTERO .)


state 150

    (126) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO PDER
    (127) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 215


state 151

    (72) valor -> VARIABLE .
    (107) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (108) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (119) valorString -> VARIABLE .
    (129) valorInt -> VARIABLE .
    (105) valorBool -> VARIABLE .
    (126) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (142) comparadorMat -> . DIGUAL
    (143) comparadorMat -> . NOIGUAL
    (144) comparadorMat -> . MAYOR
    (145) comparadorMat -> . MENOR
    (146) comparadorMat -> . MAYIGUAL
    (147) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 72 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 72 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 72 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 72 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 72 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 72 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 72 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 72 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 72 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 72 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 72 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 72 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 72 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IS              reduce using rule 72 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 72 (valor -> VARIABLE .)
    SUMA            reduce using rule 72 (valor -> VARIABLE .)
    RESTA           reduce using rule 72 (valor -> VARIABLE .)
    MULTI           reduce using rule 72 (valor -> VARIABLE .)
    DIV             reduce using rule 72 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 72 (valor -> VARIABLE .)
    MOD             reduce using rule 72 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 72 (valor -> VARIABLE .)
    PDER            reduce using rule 72 (valor -> VARIABLE .)
    CIZQ            reduce using rule 119 (valorString -> VARIABLE .)
    AND             reduce using rule 105 (valorBool -> VARIABLE .)
    OR              reduce using rule 105 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 78
    DIGUAL          shift and go to state 80
    NOIGUAL         shift and go to state 81
    MAYOR           shift and go to state 82
    MENOR           shift and go to state 83
    MAYIGUAL        shift and go to state 84
    MENIGUAL        shift and go to state 85

  ! SUMA            [ reduce using rule 119 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 119 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 119 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 105 (valorBool -> VARIABLE .) ]
  ! PDER            [ reduce using rule 105 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 212

state 152

    (59) asignacionSimple -> VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 59 (asignacionSimple -> VARIABLE IGUAL expresion .)
    PDER            reduce using rule 59 (asignacionSimple -> VARIABLE IGUAL expresion .)


state 153

    (75) expresion -> valor . operadorMat expresion
    (76) expresion -> valor .
    (113) expresionBool -> valor . IS objeto
    (114) expresionBool -> valor . ISNEGADO objeto
    (136) operadorMat -> . SUMA
    (137) operadorMat -> . RESTA
    (138) operadorMat -> . MULTI
    (139) operadorMat -> . DIV
    (140) operadorMat -> . DIVENTERO
    (141) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 76 (expresion -> valor .)
    PDER            reduce using rule 76 (expresion -> valor .)
    IS              shift and go to state 104
    ISNEGADO        shift and go to state 105
    SUMA            shift and go to state 94
    RESTA           shift and go to state 95
    MULTI           shift and go to state 96
    DIV             shift and go to state 97
    DIVENTERO       shift and go to state 98
    MOD             shift and go to state 99

    operadorMat                    shift and go to state 216

state 154

    (77) expresion -> expresionString .

    PUNTOYCOMA      reduce using rule 77 (expresion -> expresionString .)
    PDER            reduce using rule 77 (expresion -> expresionString .)


state 155

    (78) expresion -> expresionInt .

    PUNTOYCOMA      reduce using rule 78 (expresion -> expresionInt .)
    PDER            reduce using rule 78 (expresion -> expresionInt .)


state 156

    (79) expresion -> expresionDouble .

    PUNTOYCOMA      reduce using rule 79 (expresion -> expresionDouble .)
    PDER            reduce using rule 79 (expresion -> expresionDouble .)


state 157

    (80) expresion -> expresionBool .
    (116) comparacionBool -> expresionBool . operadorLogico expresionBool
    (117) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (148) operadorLogico -> . AND
    (149) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 80 (expresion -> expresionBool .)
    PDER            reduce using rule 80 (expresion -> expresionBool .)
    AND             shift and go to state 55
    OR              shift and go to state 56

    operadorLogico                 shift and go to state 54

state 158

    (73) valor -> DOUBLE .
    (132) valorDouble -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 73 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 73 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 73 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 73 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 73 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 73 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 73 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PDER resolved using rule 73 (valor -> DOUBLE .)
    IS              reduce using rule 73 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 73 (valor -> DOUBLE .)
    SUMA            reduce using rule 73 (valor -> DOUBLE .)
    RESTA           reduce using rule 73 (valor -> DOUBLE .)
    MULTI           reduce using rule 73 (valor -> DOUBLE .)
    DIV             reduce using rule 73 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 73 (valor -> DOUBLE .)
    MOD             reduce using rule 73 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 73 (valor -> DOUBLE .)
    PDER            reduce using rule 73 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 132 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 132 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 132 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 132 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 132 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 132 (valorDouble -> DOUBLE .)

  ! SUMA            [ reduce using rule 132 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 132 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 132 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 132 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 132 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 132 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 132 (valorDouble -> DOUBLE .) ]
  ! PDER            [ reduce using rule 132 (valorDouble -> DOUBLE .) ]


state 159

    (74) valor -> STRING .
    (118) valorString -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 74 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 74 (valor -> STRING .)
  ! reduce/reduce conflict for PDER resolved using rule 74 (valor -> STRING .)
    IS              reduce using rule 74 (valor -> STRING .)
    ISNEGADO        reduce using rule 74 (valor -> STRING .)
    SUMA            reduce using rule 74 (valor -> STRING .)
    RESTA           reduce using rule 74 (valor -> STRING .)
    MULTI           reduce using rule 74 (valor -> STRING .)
    DIV             reduce using rule 74 (valor -> STRING .)
    DIVENTERO       reduce using rule 74 (valor -> STRING .)
    MOD             reduce using rule 74 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 74 (valor -> STRING .)
    PDER            reduce using rule 74 (valor -> STRING .)
    CIZQ            reduce using rule 118 (valorString -> STRING .)

  ! SUMA            [ reduce using rule 118 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 118 (valorString -> STRING .) ]
  ! PDER            [ reduce using rule 118 (valorString -> STRING .) ]


state 160

    (134) expresionDouble -> valorDouble . operadorMat expresionDouble
    (135) expresionDouble -> valorDouble .
    (106) expresionBool -> valorDouble . comparadorMat expresionDouble
    (109) expresionBool -> valorDouble . comparadorMat VARIABLE
    (136) operadorMat -> . SUMA
    (137) operadorMat -> . RESTA
    (138) operadorMat -> . MULTI
    (139) operadorMat -> . DIV
    (140) operadorMat -> . DIVENTERO
    (141) operadorMat -> . MOD
    (142) comparadorMat -> . DIGUAL
    (143) comparadorMat -> . NOIGUAL
    (144) comparadorMat -> . MAYOR
    (145) comparadorMat -> . MENOR
    (146) comparadorMat -> . MAYIGUAL
    (147) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 135 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 135 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 94
    RESTA           shift and go to state 95
    MULTI           shift and go to state 96
    DIV             shift and go to state 97
    DIVENTERO       shift and go to state 98
    MOD             shift and go to state 99
    DIGUAL          shift and go to state 80
    NOIGUAL         shift and go to state 81
    MAYOR           shift and go to state 82
    MENOR           shift and go to state 83
    MAYIGUAL        shift and go to state 84
    MENIGUAL        shift and go to state 85

    operadorMat                    shift and go to state 100
    comparadorMat                  shift and go to state 211

state 161

    (112) expresionBool -> comparacionBool .

    AND             reduce using rule 112 (expresionBool -> comparacionBool .)
    OR              reduce using rule 112 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 112 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 112 (expresionBool -> comparacionBool .)


state 162

    (120) valorString -> FUNCIONSTDIN .

    SUMA            reduce using rule 120 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 120 (valorString -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 120 (valorString -> FUNCIONSTDIN .)
    PDER            reduce using rule 120 (valorString -> FUNCIONSTDIN .)


state 163

    (122) valorString -> sentenciaSubstring .

    SUMA            reduce using rule 122 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 122 (valorString -> sentenciaSubstring .)
    PUNTOYCOMA      reduce using rule 122 (valorString -> sentenciaSubstring .)
    PDER            reduce using rule 122 (valorString -> sentenciaSubstring .)


state 164

    (51) asignacion -> INT VARIABLE IGUAL . expresionInt
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE

    ENTERO          shift and go to state 149
    VARIABLE        shift and go to state 173

    expresionInt                   shift and go to state 217
    valorInt                       shift and go to state 171

state 165

    (52) asignacion -> DOUBLER VARIABLE IGUAL . expresionDouble
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 148
    ENTERO          shift and go to state 149
    VARIABLE        shift and go to state 173

    expresionDouble                shift and go to state 218
    valorDouble                    shift and go to state 147
    valorInt                       shift and go to state 127

state 166

    (53) asignacion -> NUM VARIABLE IGUAL . expresionDouble
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 148
    ENTERO          shift and go to state 149
    VARIABLE        shift and go to state 173

    expresionDouble                shift and go to state 219
    valorDouble                    shift and go to state 147
    valorInt                       shift and go to state 127

state 167

    (54) asignacion -> STRINGR VARIABLE IGUAL . expresionString
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 178
    VARIABLE        shift and go to state 179
    FUNCIONSTDIN    shift and go to state 162

    expresionString                shift and go to state 220
    valorString                    shift and go to state 31
    expresionIndexString           shift and go to state 47
    sentenciaSubstring             shift and go to state 163

state 168

    (55) asignacion -> BOOLR VARIABLE IGUAL . expresionBool
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 124
    DOUBLE          shift and go to state 45
    BOOL            shift and go to state 48
    NOT             shift and go to state 41
    ENTERO          shift and go to state 128
    STRING          shift and go to state 129

    expresionBool                  shift and go to state 221
    valorDouble                    shift and go to state 123
    valorBool                      shift and go to state 125
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 161
    valor                          shift and go to state 33
    valorInt                       shift and go to state 127

state 169

    (56) asignacion -> DYNAMIC VARIABLE IGUAL . expresion
    (75) expresion -> . valor operadorMat expresion
    (76) expresion -> . valor
    (77) expresion -> . expresionString
    (78) expresion -> . expresionInt
    (79) expresion -> . expresionDouble
    (80) expresion -> . expresionBool
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 128
    VARIABLE        shift and go to state 151
    DOUBLE          shift and go to state 158
    STRING          shift and go to state 159
    FUNCIONSTDIN    shift and go to state 162
    BOOL            shift and go to state 48
    NOT             shift and go to state 41

    expresion                      shift and go to state 222
    valor                          shift and go to state 153
    expresionString                shift and go to state 154
    expresionInt                   shift and go to state 155
    expresionDouble                shift and go to state 156
    expresionBool                  shift and go to state 157
    valorString                    shift and go to state 31
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 160
    valorBool                      shift and go to state 125
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 161
    expresionIndexString           shift and go to state 47
    sentenciaSubstring             shift and go to state 163

state 170

    (57) asignacion -> VAR VARIABLE IGUAL . expresion
    (75) expresion -> . valor operadorMat expresion
    (76) expresion -> . valor
    (77) expresion -> . expresionString
    (78) expresion -> . expresionInt
    (79) expresion -> . expresionDouble
    (80) expresion -> . expresionBool
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 128
    VARIABLE        shift and go to state 151
    DOUBLE          shift and go to state 158
    STRING          shift and go to state 159
    FUNCIONSTDIN    shift and go to state 162
    BOOL            shift and go to state 48
    NOT             shift and go to state 41

    expresion                      shift and go to state 223
    valor                          shift and go to state 153
    expresionString                shift and go to state 154
    expresionInt                   shift and go to state 155
    expresionDouble                shift and go to state 156
    expresionBool                  shift and go to state 157
    valorString                    shift and go to state 31
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 160
    valorBool                      shift and go to state 125
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 161
    expresionIndexString           shift and go to state 47
    sentenciaSubstring             shift and go to state 163

state 171

    (130) expresionInt -> valorInt . operadorMat expresionInt
    (131) expresionInt -> valorInt .
    (136) operadorMat -> . SUMA
    (137) operadorMat -> . RESTA
    (138) operadorMat -> . MULTI
    (139) operadorMat -> . DIV
    (140) operadorMat -> . DIVENTERO
    (141) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 131 (expresionInt -> valorInt .)
    PDER            reduce using rule 131 (expresionInt -> valorInt .)
    SUMA            shift and go to state 94
    RESTA           shift and go to state 95
    MULTI           shift and go to state 96
    DIV             shift and go to state 97
    DIVENTERO       shift and go to state 98
    MOD             shift and go to state 99

    operadorMat                    shift and go to state 93

state 172

    (130) expresionInt -> valorInt operadorMat expresionInt .

    PUNTOYCOMA      reduce using rule 130 (expresionInt -> valorInt operadorMat expresionInt .)
    PDER            reduce using rule 130 (expresionInt -> valorInt operadorMat expresionInt .)


state 173

    (129) valorInt -> VARIABLE .

    SUMA            reduce using rule 129 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 129 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 129 (valorInt -> VARIABLE .)
    DIV             reduce using rule 129 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 129 (valorInt -> VARIABLE .)
    MOD             reduce using rule 129 (valorInt -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 129 (valorInt -> VARIABLE .)
    PDER            reduce using rule 129 (valorInt -> VARIABLE .)
    AND             reduce using rule 129 (valorInt -> VARIABLE .)
    OR              reduce using rule 129 (valorInt -> VARIABLE .)


state 174

    (134) expresionDouble -> valorDouble operadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 134 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    AND             reduce using rule 134 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    OR              reduce using rule 134 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PDER            reduce using rule 134 (expresionDouble -> valorDouble operadorMat expresionDouble .)


state 175

    (106) expresionBool -> valorDouble comparadorMat expresionDouble .
    (90) expresionBoolFor -> valorDouble comparadorMat expresionDouble .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 90 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 106 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 106 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 90 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 106 (expresionBool -> valorDouble comparadorMat expresionDouble .) ]


state 176

    (109) expresionBool -> valorDouble comparadorMat VARIABLE .
    (93) expresionBoolFor -> valorDouble comparadorMat VARIABLE .
    (129) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 93 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 93 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 109 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 109 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 109 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 109 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 93 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 129 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 129 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 129 (valorInt -> VARIABLE .)
    DIV             reduce using rule 129 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 129 (valorInt -> VARIABLE .)
    MOD             reduce using rule 129 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 109 (expresionBool -> valorDouble comparadorMat VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 129 (valorInt -> VARIABLE .) ]


state 177

    (123) expresionString -> valorString SUMA expresionString .

    PUNTOYCOMA      reduce using rule 123 (expresionString -> valorString SUMA expresionString .)
    PDER            reduce using rule 123 (expresionString -> valorString SUMA expresionString .)


state 178

    (118) valorString -> STRING .

    SUMA            reduce using rule 118 (valorString -> STRING .)
    CIZQ            reduce using rule 118 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 118 (valorString -> STRING .)
    PDER            reduce using rule 118 (valorString -> STRING .)


state 179

    (119) valorString -> VARIABLE .
    (126) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    SUMA            reduce using rule 119 (valorString -> VARIABLE .)
    CIZQ            reduce using rule 119 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 119 (valorString -> VARIABLE .)
    PDER            reduce using rule 119 (valorString -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 78


state 180

    (125) expresionIndexString -> valorString CIZQ ENTERO . CDER

    CDER            shift and go to state 224


state 181

    (113) expresionBool -> valor IS objeto .

    PUNTOYCOMA      reduce using rule 113 (expresionBool -> valor IS objeto .)
    AND             reduce using rule 113 (expresionBool -> valor IS objeto .)
    OR              reduce using rule 113 (expresionBool -> valor IS objeto .)
    PDER            reduce using rule 113 (expresionBool -> valor IS objeto .)


state 182

    (150) objeto -> STRINGR .

    PUNTOYCOMA      reduce using rule 150 (objeto -> STRINGR .)
    AND             reduce using rule 150 (objeto -> STRINGR .)
    OR              reduce using rule 150 (objeto -> STRINGR .)
    PDER            reduce using rule 150 (objeto -> STRINGR .)


state 183

    (151) objeto -> INT .

    PUNTOYCOMA      reduce using rule 151 (objeto -> INT .)
    AND             reduce using rule 151 (objeto -> INT .)
    OR              reduce using rule 151 (objeto -> INT .)
    PDER            reduce using rule 151 (objeto -> INT .)


state 184

    (152) objeto -> DOUBLER .

    PUNTOYCOMA      reduce using rule 152 (objeto -> DOUBLER .)
    AND             reduce using rule 152 (objeto -> DOUBLER .)
    OR              reduce using rule 152 (objeto -> DOUBLER .)
    PDER            reduce using rule 152 (objeto -> DOUBLER .)


state 185

    (153) objeto -> NUM .

    PUNTOYCOMA      reduce using rule 153 (objeto -> NUM .)
    AND             reduce using rule 153 (objeto -> NUM .)
    OR              reduce using rule 153 (objeto -> NUM .)
    PDER            reduce using rule 153 (objeto -> NUM .)


state 186

    (154) objeto -> VAR .

    PUNTOYCOMA      reduce using rule 154 (objeto -> VAR .)
    AND             reduce using rule 154 (objeto -> VAR .)
    OR              reduce using rule 154 (objeto -> VAR .)
    PDER            reduce using rule 154 (objeto -> VAR .)


state 187

    (155) objeto -> DYNAMIC .

    PUNTOYCOMA      reduce using rule 155 (objeto -> DYNAMIC .)
    AND             reduce using rule 155 (objeto -> DYNAMIC .)
    OR              reduce using rule 155 (objeto -> DYNAMIC .)
    PDER            reduce using rule 155 (objeto -> DYNAMIC .)


state 188

    (156) objeto -> LIST .

    PUNTOYCOMA      reduce using rule 156 (objeto -> LIST .)
    AND             reduce using rule 156 (objeto -> LIST .)
    OR              reduce using rule 156 (objeto -> LIST .)
    PDER            reduce using rule 156 (objeto -> LIST .)


state 189

    (157) objeto -> BOOL .

    PUNTOYCOMA      reduce using rule 157 (objeto -> BOOL .)
    AND             reduce using rule 157 (objeto -> BOOL .)
    OR              reduce using rule 157 (objeto -> BOOL .)
    PDER            reduce using rule 157 (objeto -> BOOL .)


state 190

    (158) objeto -> MAP .

    PUNTOYCOMA      reduce using rule 158 (objeto -> MAP .)
    AND             reduce using rule 158 (objeto -> MAP .)
    OR              reduce using rule 158 (objeto -> MAP .)
    PDER            reduce using rule 158 (objeto -> MAP .)


state 191

    (159) objeto -> SET .

    PUNTOYCOMA      reduce using rule 159 (objeto -> SET .)
    AND             reduce using rule 159 (objeto -> SET .)
    OR              reduce using rule 159 (objeto -> SET .)
    PDER            reduce using rule 159 (objeto -> SET .)


state 192

    (114) expresionBool -> valor ISNEGADO objeto .

    PUNTOYCOMA      reduce using rule 114 (expresionBool -> valor ISNEGADO objeto .)
    AND             reduce using rule 114 (expresionBool -> valor ISNEGADO objeto .)
    OR              reduce using rule 114 (expresionBool -> valor ISNEGADO objeto .)
    PDER            reduce using rule 114 (expresionBool -> valor ISNEGADO objeto .)


state 193

    (101) sentenciaWhile -> WHILE PIZQ expresionBool . PDER LIZQ final LDER
    (102) sentenciaWhile -> WHILE PIZQ expresionBool . PDER final
    (116) comparacionBool -> expresionBool . operadorLogico expresionBool
    (117) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (148) operadorLogico -> . AND
    (149) operadorLogico -> . OR

    PDER            shift and go to state 225
    AND             shift and go to state 55
    OR              shift and go to state 56

    operadorLogico                 shift and go to state 54

state 194

    (103) sentenciaDoWhile -> DO LIZQ final . LDER WHILE PIZQ expresionBool PDER

    LDER            shift and go to state 226


state 195

    (65) sentenciaIf -> IF PIZQ expresionBool . PDER final
    (66) sentenciaIf -> IF PIZQ expresionBool . PDER LIZQ final LDER
    (116) comparacionBool -> expresionBool . operadorLogico expresionBool
    (117) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (148) operadorLogico -> . AND
    (149) operadorLogico -> . OR

    PDER            shift and go to state 227
    AND             shift and go to state 55
    OR              shift and go to state 56

    operadorLogico                 shift and go to state 54

state 196

    (68) sentenciaElse -> ELSE LIZQ final . LDER

    LDER            shift and go to state 228


state 197

    (60) imprimir -> PRINT PIZQ expresion . PDER

    PDER            shift and go to state 229


state 198

    (61) imprimir -> PRINT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 230


state 199

    (59) asignacionSimple -> VARIABLE . IGUAL expresion
    (72) valor -> VARIABLE .
    (107) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (108) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (119) valorString -> VARIABLE .
    (129) valorInt -> VARIABLE .
    (105) valorBool -> VARIABLE .
    (126) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (142) comparadorMat -> . DIGUAL
    (143) comparadorMat -> . NOIGUAL
    (144) comparadorMat -> . MAYOR
    (145) comparadorMat -> . MENOR
    (146) comparadorMat -> . MAYIGUAL
    (147) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 72 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 72 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 72 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 72 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 72 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 72 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 72 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 72 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 72 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 72 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 79
    IS              reduce using rule 72 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 72 (valor -> VARIABLE .)
    SUMA            reduce using rule 72 (valor -> VARIABLE .)
    RESTA           reduce using rule 72 (valor -> VARIABLE .)
    MULTI           reduce using rule 72 (valor -> VARIABLE .)
    DIV             reduce using rule 72 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 72 (valor -> VARIABLE .)
    MOD             reduce using rule 72 (valor -> VARIABLE .)
    PDER            reduce using rule 72 (valor -> VARIABLE .)
    CIZQ            reduce using rule 119 (valorString -> VARIABLE .)
    AND             reduce using rule 105 (valorBool -> VARIABLE .)
    OR              reduce using rule 105 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 78
    DIGUAL          shift and go to state 80
    NOIGUAL         shift and go to state 81
    MAYOR           shift and go to state 82
    MENOR           shift and go to state 83
    MAYIGUAL        shift and go to state 84
    MENIGUAL        shift and go to state 85

  ! SUMA            [ reduce using rule 119 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 119 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 105 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 212

state 200

    (63) funcionStdout -> FUNCIONSTDOUT PIZQ expresion . PDER

    PDER            shift and go to state 231


state 201

    (64) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 232


state 202

    (115) negacionBool -> NOT PIZQ expresionBool . PDER
    (116) comparacionBool -> expresionBool . operadorLogico expresionBool
    (117) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (148) operadorLogico -> . AND
    (149) operadorLogico -> . OR

    PDER            shift and go to state 233
    AND             shift and go to state 55
    OR              shift and go to state 56

    operadorLogico                 shift and go to state 54

state 203

    (69) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER final
    (70) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER LIZQ final LDER
    (116) comparacionBool -> expresionBool . operadorLogico expresionBool
    (117) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (148) operadorLogico -> . AND
    (149) operadorLogico -> . OR

    PDER            shift and go to state 234
    AND             shift and go to state 55
    OR              shift and go to state 56

    operadorLogico                 shift and go to state 54

state 204

    (97) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final

    PUNTOYCOMA      shift and go to state 235


state 205

    (88) asignacionFor -> VARIABLE . IGUAL expresionInt
    (89) asignacionFor -> VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 236


state 206

    (81) asignacionFor -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 237


state 207

    (82) asignacionFor -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 238


state 208

    (83) asignacionFor -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 239


state 209

    (84) asignacionFor -> DYNAMIC . VARIABLE IGUAL expresionInt
    (85) asignacionFor -> DYNAMIC . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 240


state 210

    (86) asignacionFor -> VAR . VARIABLE IGUAL expresionInt
    (87) asignacionFor -> VAR . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 241


state 211

    (106) expresionBool -> valorDouble comparadorMat . expresionDouble
    (109) expresionBool -> valorDouble comparadorMat . VARIABLE
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 243
    DOUBLE          shift and go to state 148
    ENTERO          shift and go to state 149

    valorDouble                    shift and go to state 147
    expresionDouble                shift and go to state 242
    valorInt                       shift and go to state 127

state 212

    (107) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (108) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 244
    DOUBLE          shift and go to state 148
    ENTERO          shift and go to state 149

    expresionDouble                shift and go to state 245
    valorDouble                    shift and go to state 147
    valorInt                       shift and go to state 127

state 213

    (47) final -> VARIABLE DSUMA PUNTOYCOMA final .

    $end            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    VARIABLE        reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    INT             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DOUBLER         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NUM             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    STRINGR         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BOOLR           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    VAR             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    WHILE           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DO              reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    IF              reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ELSE            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    PRINT           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NOT             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ELSEIF          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FOR             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ENTERO          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DOUBLE          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    STRING          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BOOL            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LDER            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)


state 214

    (49) final -> VARIABLE DRESTA PUNTOYCOMA final .

    $end            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    VARIABLE        reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    INT             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DOUBLER         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NUM             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    STRINGR         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BOOLR           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    VAR             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    WHILE           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DO              reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    IF              reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ELSE            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    PRINT           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NOT             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ELSEIF          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FOR             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ENTERO          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DOUBLE          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    STRING          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BOOL            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LDER            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)


state 215

    (126) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . PDER
    (127) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . COMA ENTERO PDER

    PDER            shift and go to state 246
    COMA            shift and go to state 247


state 216

    (75) expresion -> valor operadorMat . expresion
    (75) expresion -> . valor operadorMat expresion
    (76) expresion -> . valor
    (77) expresion -> . expresionString
    (78) expresion -> . expresionInt
    (79) expresion -> . expresionDouble
    (80) expresion -> . expresionBool
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 128
    VARIABLE        shift and go to state 151
    DOUBLE          shift and go to state 158
    STRING          shift and go to state 159
    FUNCIONSTDIN    shift and go to state 162
    BOOL            shift and go to state 48
    NOT             shift and go to state 41

    valor                          shift and go to state 153
    expresion                      shift and go to state 248
    expresionString                shift and go to state 154
    expresionInt                   shift and go to state 155
    expresionDouble                shift and go to state 156
    expresionBool                  shift and go to state 157
    valorString                    shift and go to state 31
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 160
    valorBool                      shift and go to state 125
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 161
    expresionIndexString           shift and go to state 47
    sentenciaSubstring             shift and go to state 163

state 217

    (51) asignacion -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 51 (asignacion -> INT VARIABLE IGUAL expresionInt .)


state 218

    (52) asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 52 (asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 219

    (53) asignacion -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 53 (asignacion -> NUM VARIABLE IGUAL expresionDouble .)


state 220

    (54) asignacion -> STRINGR VARIABLE IGUAL expresionString .

    PUNTOYCOMA      reduce using rule 54 (asignacion -> STRINGR VARIABLE IGUAL expresionString .)


state 221

    (55) asignacion -> BOOLR VARIABLE IGUAL expresionBool .
    (116) comparacionBool -> expresionBool . operadorLogico expresionBool
    (117) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (148) operadorLogico -> . AND
    (149) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 55 (asignacion -> BOOLR VARIABLE IGUAL expresionBool .)
    AND             shift and go to state 55
    OR              shift and go to state 56

    operadorLogico                 shift and go to state 54

state 222

    (56) asignacion -> DYNAMIC VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 56 (asignacion -> DYNAMIC VARIABLE IGUAL expresion .)


state 223

    (57) asignacion -> VAR VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 57 (asignacion -> VAR VARIABLE IGUAL expresion .)


state 224

    (125) expresionIndexString -> valorString CIZQ ENTERO CDER .

    SUMA            reduce using rule 125 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    CIZQ            reduce using rule 125 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PUNTOYCOMA      reduce using rule 125 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PDER            reduce using rule 125 (expresionIndexString -> valorString CIZQ ENTERO CDER .)


state 225

    (101) sentenciaWhile -> WHILE PIZQ expresionBool PDER . LIZQ final LDER
    (102) sentenciaWhile -> WHILE PIZQ expresionBool PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 249
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

    expresionBool                  shift and go to state 6
    final                          shift and go to state 250
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 226

    (103) sentenciaDoWhile -> DO LIZQ final LDER . WHILE PIZQ expresionBool PDER

    WHILE           shift and go to state 251


state 227

    (65) sentenciaIf -> IF PIZQ expresionBool PDER . final
    (66) sentenciaIf -> IF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 253
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

    expresionBool                  shift and go to state 6
    final                          shift and go to state 252
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 228

    (68) sentenciaElse -> ELSE LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    VARIABLE        reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    INT             reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLER         reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    NUM             reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRINGR         reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOLR           reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    DYNAMIC         reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    VAR             reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    WHILE           reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    DO              reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    IF              reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSE            reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    PRINT           reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    NOT             reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSEIF          reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    FOR             reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    ENTERO          reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLE          reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRING          reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOL            reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    $end            reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)
    LDER            reduce using rule 68 (sentenciaElse -> ELSE LIZQ final LDER .)


state 229

    (60) imprimir -> PRINT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 60 (imprimir -> PRINT PIZQ expresion PDER .)


state 230

    (61) imprimir -> PRINT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 61 (imprimir -> PRINT PIZQ asignacionSimple PDER .)


state 231

    (63) funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 63 (funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .)


state 232

    (64) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 64 (funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .)


state 233

    (115) negacionBool -> NOT PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 115 (negacionBool -> NOT PIZQ expresionBool PDER .)
    AND             reduce using rule 115 (negacionBool -> NOT PIZQ expresionBool PDER .)
    OR              reduce using rule 115 (negacionBool -> NOT PIZQ expresionBool PDER .)
    PDER            reduce using rule 115 (negacionBool -> NOT PIZQ expresionBool PDER .)


state 234

    (69) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . final
    (70) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 255
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

    expresionBool                  shift and go to state 6
    final                          shift and go to state 254
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 235

    (97) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING

    VARIABLE        shift and go to state 257
    DOUBLE          shift and go to state 45
    BOOL            shift and go to state 48
    NOT             shift and go to state 41
    ENTERO          shift and go to state 44
    STRING          shift and go to state 129

    expresionBoolFor               shift and go to state 256
    valorDouble                    shift and go to state 258
    valorBool                      shift and go to state 259
    negacionBool                   shift and go to state 260
    comparacionBool                shift and go to state 261
    valorInt                       shift and go to state 127
    expresionBool                  shift and go to state 262
    valor                          shift and go to state 33

state 236

    (88) asignacionFor -> VARIABLE IGUAL . expresionInt
    (89) asignacionFor -> VARIABLE IGUAL . expresionDouble
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt

    ENTERO          shift and go to state 149
    VARIABLE        shift and go to state 173
    DOUBLE          shift and go to state 148

    expresionInt                   shift and go to state 263
    expresionDouble                shift and go to state 264
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 147

state 237

    (81) asignacionFor -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 265


state 238

    (82) asignacionFor -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 266


state 239

    (83) asignacionFor -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 267


state 240

    (84) asignacionFor -> DYNAMIC VARIABLE . IGUAL expresionInt
    (85) asignacionFor -> DYNAMIC VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 268


state 241

    (86) asignacionFor -> VAR VARIABLE . IGUAL expresionInt
    (87) asignacionFor -> VAR VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 269


state 242

    (106) expresionBool -> valorDouble comparadorMat expresionDouble .

    AND             reduce using rule 106 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 106 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 106 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PDER            reduce using rule 106 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 243

    (109) expresionBool -> valorDouble comparadorMat VARIABLE .
    (129) valorInt -> VARIABLE .

  ! reduce/reduce conflict for AND resolved using rule 109 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 109 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 109 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 109 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 109 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 109 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 109 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PDER            reduce using rule 109 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 129 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 129 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 129 (valorInt -> VARIABLE .)
    DIV             reduce using rule 129 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 129 (valorInt -> VARIABLE .)
    MOD             reduce using rule 129 (valorInt -> VARIABLE .)

  ! AND             [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 129 (valorInt -> VARIABLE .) ]


state 244

    (108) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (129) valorInt -> VARIABLE .

  ! reduce/reduce conflict for AND resolved using rule 108 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 108 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 108 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 108 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 108 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 108 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 108 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PDER            reduce using rule 108 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 129 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 129 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 129 (valorInt -> VARIABLE .)
    DIV             reduce using rule 129 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 129 (valorInt -> VARIABLE .)
    MOD             reduce using rule 129 (valorInt -> VARIABLE .)

  ! AND             [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 129 (valorInt -> VARIABLE .) ]


state 245

    (107) expresionBool -> VARIABLE comparadorMat expresionDouble .

    AND             reduce using rule 107 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 107 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 107 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PDER            reduce using rule 107 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 246

    (126) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 126 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    SUMA            reduce using rule 126 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    CIZQ            reduce using rule 126 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    PDER            reduce using rule 126 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)


state 247

    (127) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA . ENTERO PDER

    ENTERO          shift and go to state 270


state 248

    (75) expresion -> valor operadorMat expresion .

    PUNTOYCOMA      reduce using rule 75 (expresion -> valor operadorMat expresion .)
    PDER            reduce using rule 75 (expresion -> valor operadorMat expresion .)


state 249

    (101) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

    expresionBool                  shift and go to state 6
    final                          shift and go to state 271
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 250

    (102) sentenciaWhile -> WHILE PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    INT             reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NUM             reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VAR             reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DO              reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    IF              reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NOT             reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FOR             reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRING          reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    $end            reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LDER            reduce using rule 102 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)


state 251

    (103) sentenciaDoWhile -> DO LIZQ final LDER WHILE . PIZQ expresionBool PDER

    PIZQ            shift and go to state 272


state 252

    (65) sentenciaIf -> IF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    INT             reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DO              reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    IF              reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FOR             reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    $end            reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 65 (sentenciaIf -> IF PIZQ expresionBool PDER final .)


state 253

    (66) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

    expresionBool                  shift and go to state 6
    final                          shift and go to state 273
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 254

    (69) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    INT             reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DO              reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    IF              reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FOR             reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    $end            reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 69 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)


state 255

    (70) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

    expresionBool                  shift and go to state 6
    final                          shift and go to state 274
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 256

    (97) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DRESTA PDER final

    PUNTOYCOMA      shift and go to state 275


state 257

    (91) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (92) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (105) valorBool -> VARIABLE .
    (129) valorInt -> VARIABLE .
    (107) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (108) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (72) valor -> VARIABLE .
    (142) comparadorMat -> . DIGUAL
    (143) comparadorMat -> . NOIGUAL
    (144) comparadorMat -> . MAYOR
    (145) comparadorMat -> . MENOR
    (146) comparadorMat -> . MAYIGUAL
    (147) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    PUNTOYCOMA      reduce using rule 105 (valorBool -> VARIABLE .)
    AND             reduce using rule 105 (valorBool -> VARIABLE .)
    OR              reduce using rule 105 (valorBool -> VARIABLE .)
    IS              reduce using rule 72 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 72 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 80
    NOIGUAL         shift and go to state 81
    MAYOR           shift and go to state 82
    MENOR           shift and go to state 83
    MAYIGUAL        shift and go to state 84
    MENIGUAL        shift and go to state 85

  ! DIGUAL          [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 129 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 276

state 258

    (90) expresionBoolFor -> valorDouble . comparadorMat expresionDouble
    (93) expresionBoolFor -> valorDouble . comparadorMat VARIABLE
    (106) expresionBool -> valorDouble . comparadorMat expresionDouble
    (109) expresionBool -> valorDouble . comparadorMat VARIABLE
    (142) comparadorMat -> . DIGUAL
    (143) comparadorMat -> . NOIGUAL
    (144) comparadorMat -> . MAYOR
    (145) comparadorMat -> . MENOR
    (146) comparadorMat -> . MAYIGUAL
    (147) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 80
    NOIGUAL         shift and go to state 81
    MAYOR           shift and go to state 82
    MENOR           shift and go to state 83
    MAYIGUAL        shift and go to state 84
    MENIGUAL        shift and go to state 85

    comparadorMat                  shift and go to state 277

state 259

    (94) expresionBoolFor -> valorBool .
    (110) expresionBool -> valorBool .

    PUNTOYCOMA      reduce using rule 94 (expresionBoolFor -> valorBool .)
    AND             reduce using rule 110 (expresionBool -> valorBool .)
    OR              reduce using rule 110 (expresionBool -> valorBool .)


state 260

    (95) expresionBoolFor -> negacionBool .
    (111) expresionBool -> negacionBool .

    PUNTOYCOMA      reduce using rule 95 (expresionBoolFor -> negacionBool .)
    AND             reduce using rule 111 (expresionBool -> negacionBool .)
    OR              reduce using rule 111 (expresionBool -> negacionBool .)


state 261

    (96) expresionBoolFor -> comparacionBool .
    (112) expresionBool -> comparacionBool .

    PUNTOYCOMA      reduce using rule 96 (expresionBoolFor -> comparacionBool .)
    AND             reduce using rule 112 (expresionBool -> comparacionBool .)
    OR              reduce using rule 112 (expresionBool -> comparacionBool .)


state 262

    (116) comparacionBool -> expresionBool . operadorLogico expresionBool
    (117) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (148) operadorLogico -> . AND
    (149) operadorLogico -> . OR

    AND             shift and go to state 55
    OR              shift and go to state 56

    operadorLogico                 shift and go to state 54

state 263

    (88) asignacionFor -> VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 88 (asignacionFor -> VARIABLE IGUAL expresionInt .)


state 264

    (89) asignacionFor -> VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 89 (asignacionFor -> VARIABLE IGUAL expresionDouble .)


state 265

    (81) asignacionFor -> INT VARIABLE IGUAL . expresionInt
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE

    ENTERO          shift and go to state 149
    VARIABLE        shift and go to state 173

    expresionInt                   shift and go to state 278
    valorInt                       shift and go to state 171

state 266

    (82) asignacionFor -> DOUBLER VARIABLE IGUAL . expresionDouble
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 148
    ENTERO          shift and go to state 149
    VARIABLE        shift and go to state 173

    expresionDouble                shift and go to state 279
    valorDouble                    shift and go to state 147
    valorInt                       shift and go to state 127

state 267

    (83) asignacionFor -> NUM VARIABLE IGUAL . expresionDouble
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 148
    ENTERO          shift and go to state 149
    VARIABLE        shift and go to state 173

    expresionDouble                shift and go to state 280
    valorDouble                    shift and go to state 147
    valorInt                       shift and go to state 127

state 268

    (84) asignacionFor -> DYNAMIC VARIABLE IGUAL . expresionInt
    (85) asignacionFor -> DYNAMIC VARIABLE IGUAL . expresionDouble
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt

    ENTERO          shift and go to state 149
    VARIABLE        shift and go to state 173
    DOUBLE          shift and go to state 148

    expresionInt                   shift and go to state 281
    expresionDouble                shift and go to state 282
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 147

state 269

    (86) asignacionFor -> VAR VARIABLE IGUAL . expresionInt
    (87) asignacionFor -> VAR VARIABLE IGUAL . expresionDouble
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt

    ENTERO          shift and go to state 149
    VARIABLE        shift and go to state 173
    DOUBLE          shift and go to state 148

    expresionInt                   shift and go to state 283
    expresionDouble                shift and go to state 284
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 147

state 270

    (127) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO . PDER

    PDER            shift and go to state 285


state 271

    (101) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 286


state 272

    (103) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ . expresionBool PDER
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 124
    DOUBLE          shift and go to state 45
    BOOL            shift and go to state 48
    NOT             shift and go to state 41
    ENTERO          shift and go to state 128
    STRING          shift and go to state 129

    expresionBool                  shift and go to state 287
    valorDouble                    shift and go to state 123
    valorBool                      shift and go to state 125
    negacionBool                   shift and go to state 126
    comparacionBool                shift and go to state 161
    valor                          shift and go to state 33
    valorInt                       shift and go to state 127

state 273

    (66) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 288


state 274

    (70) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 289


state 275

    (97) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DSUMA PDER final
    (99) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DRESTA PDER final

    VARIABLE        shift and go to state 290


state 276

    (91) expresionBoolFor -> VARIABLE comparadorMat . expresionDouble
    (92) expresionBoolFor -> VARIABLE comparadorMat . VARIABLE
    (107) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (108) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 291
    DOUBLE          shift and go to state 148
    ENTERO          shift and go to state 149

    expresionDouble                shift and go to state 292
    valorDouble                    shift and go to state 147
    valorInt                       shift and go to state 127

state 277

    (90) expresionBoolFor -> valorDouble comparadorMat . expresionDouble
    (93) expresionBoolFor -> valorDouble comparadorMat . VARIABLE
    (106) expresionBool -> valorDouble comparadorMat . expresionDouble
    (109) expresionBool -> valorDouble comparadorMat . VARIABLE
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 294
    DOUBLE          shift and go to state 148
    ENTERO          shift and go to state 149

    valorDouble                    shift and go to state 147
    expresionDouble                shift and go to state 293
    valorInt                       shift and go to state 127

state 278

    (81) asignacionFor -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 81 (asignacionFor -> INT VARIABLE IGUAL expresionInt .)


state 279

    (82) asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 82 (asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 280

    (83) asignacionFor -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 83 (asignacionFor -> NUM VARIABLE IGUAL expresionDouble .)


state 281

    (84) asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 84 (asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt .)


state 282

    (85) asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 85 (asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble .)


state 283

    (86) asignacionFor -> VAR VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 86 (asignacionFor -> VAR VARIABLE IGUAL expresionInt .)


state 284

    (87) asignacionFor -> VAR VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 87 (asignacionFor -> VAR VARIABLE IGUAL expresionDouble .)


state 285

    (127) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .

    PUNTOYCOMA      reduce using rule 127 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    SUMA            reduce using rule 127 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    CIZQ            reduce using rule 127 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    PDER            reduce using rule 127 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)


state 286

    (101) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 101 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)


state 287

    (103) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool . PDER
    (116) comparacionBool -> expresionBool . operadorLogico expresionBool
    (117) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (148) operadorLogico -> . AND
    (149) operadorLogico -> . OR

    PDER            shift and go to state 295
    AND             shift and go to state 55
    OR              shift and go to state 56

    operadorLogico                 shift and go to state 54

state 288

    (66) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 66 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)


state 289

    (70) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 70 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)


state 290

    (97) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DSUMA PDER final
    (99) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DRESTA PDER final

    DSUMA           shift and go to state 296
    DRESTA          shift and go to state 297


state 291

    (92) expresionBoolFor -> VARIABLE comparadorMat VARIABLE .
    (108) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (129) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 92 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 108 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 108 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 92 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 108 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 108 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 129 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 129 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 129 (valorInt -> VARIABLE .)
    DIV             reduce using rule 129 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 129 (valorInt -> VARIABLE .)
    MOD             reduce using rule 129 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 129 (valorInt -> VARIABLE .) ]


state 292

    (91) expresionBoolFor -> VARIABLE comparadorMat expresionDouble .
    (107) expresionBool -> VARIABLE comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 91 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 107 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 107 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 293

    (90) expresionBoolFor -> valorDouble comparadorMat expresionDouble .
    (106) expresionBool -> valorDouble comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 90 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 106 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 106 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 294

    (93) expresionBoolFor -> valorDouble comparadorMat VARIABLE .
    (109) expresionBool -> valorDouble comparadorMat VARIABLE .
    (129) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 93 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 109 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 109 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 93 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 109 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 109 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 129 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 129 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 129 (valorInt -> VARIABLE .)
    DIV             reduce using rule 129 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 129 (valorInt -> VARIABLE .)
    MOD             reduce using rule 129 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 129 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 129 (valorInt -> VARIABLE .) ]


state 295

    (103) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 103 (sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .)


state 296

    (97) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA . PDER LIZQ final LDER
    (98) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA . PDER final

    PDER            shift and go to state 298


state 297

    (99) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA . PDER LIZQ final LDER
    (100) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA . PDER final

    PDER            shift and go to state 299


state 298

    (97) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER . LIZQ final LDER
    (98) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 300
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 301
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 299

    (99) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER . LIZQ final LDER
    (100) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 302
    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 303
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 300

    (97) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 304
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 301

    (98) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .

    PUNTOYCOMA      reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    VARIABLE        reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    INT             reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DOUBLER         reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NUM             reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    STRINGR         reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BOOLR           reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DYNAMIC         reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    VAR             reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    WHILE           reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DO              reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    IF              reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ELSE            reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    PRINT           reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FUNCIONSTDIN    reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FUNCIONSTDOUT   reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NOT             reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ELSEIF          reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FOR             reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ENTERO          reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DOUBLE          reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    STRING          reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BOOL            reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    $end            reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LDER            reduce using rule 98 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)


state 302

    (99) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) asignacion -> . INT VARIABLE IGUAL expresionInt
    (52) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (53) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (54) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (55) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (56) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (57) asignacion -> . VAR VARIABLE IGUAL expresion
    (58) asignacion -> . asignacionSimple
    (130) expresionInt -> . valorInt operadorMat expresionInt
    (131) expresionInt -> . valorInt
    (134) expresionDouble -> . valorDouble operadorMat expresionDouble
    (135) expresionDouble -> . valorDouble
    (123) expresionString -> . valorString SUMA expresionString
    (124) expresionString -> . valorString
    (106) expresionBool -> . valorDouble comparadorMat expresionDouble
    (107) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (108) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (109) expresionBool -> . valorDouble comparadorMat VARIABLE
    (110) expresionBool -> . valorBool
    (111) expresionBool -> . negacionBool
    (112) expresionBool -> . comparacionBool
    (113) expresionBool -> . valor IS objeto
    (114) expresionBool -> . valor ISNEGADO objeto
    (90) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (91) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (92) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (93) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (94) expresionBoolFor -> . valorBool
    (95) expresionBoolFor -> . negacionBool
    (96) expresionBoolFor -> . comparacionBool
    (101) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (102) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (103) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (65) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (66) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (67) sentenciaElse -> . ELSE final
    (68) sentenciaElse -> . ELSE LIZQ final LDER
    (60) imprimir -> . PRINT PIZQ expresion PDER
    (61) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (62) funcionStdin -> . FUNCIONSTDIN
    (63) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (64) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (115) negacionBool -> . NOT PIZQ expresionBool PDER
    (116) comparacionBool -> . expresionBool operadorLogico expresionBool
    (117) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (69) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (70) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (97) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (98) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (99) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (100) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (126) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (127) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (59) asignacionSimple -> . VARIABLE IGUAL expresion
    (128) valorInt -> . ENTERO
    (129) valorInt -> . VARIABLE
    (132) valorDouble -> . DOUBLE
    (133) valorDouble -> . valorInt
    (118) valorString -> . STRING
    (119) valorString -> . VARIABLE
    (120) valorString -> . FUNCIONSTDIN
    (121) valorString -> . expresionIndexString
    (122) valorString -> . sentenciaSubstring
    (104) valorBool -> . BOOL
    (105) valorBool -> . VARIABLE
    (71) valor -> . ENTERO
    (72) valor -> . VARIABLE
    (73) valor -> . DOUBLE
    (74) valor -> . STRING
    (125) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 21
    DOUBLER         shift and go to state 22
    NUM             shift and go to state 23
    STRINGR         shift and go to state 24
    BOOLR           shift and go to state 25
    DYNAMIC         shift and go to state 26
    VAR             shift and go to state 27
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    IF              shift and go to state 36
    ELSE            shift and go to state 37
    PRINT           shift and go to state 38
    FUNCIONSTDIN    shift and go to state 39
    FUNCIONSTDOUT   shift and go to state 40
    NOT             shift and go to state 41
    ELSEIF          shift and go to state 42
    FOR             shift and go to state 43
    ENTERO          shift and go to state 44
    DOUBLE          shift and go to state 45
    STRING          shift and go to state 46
    BOOL            shift and go to state 48

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 305
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    asignacionSimple               shift and go to state 28
    valorInt                       shift and go to state 29
    valorDouble                    shift and go to state 30
    valorString                    shift and go to state 31
    valorBool                      shift and go to state 32
    valor                          shift and go to state 33
    expresionIndexString           shift and go to state 47

state 303

    (100) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .

    PUNTOYCOMA      reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    VARIABLE        reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    INT             reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DOUBLER         reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NUM             reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    STRINGR         reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BOOLR           reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DYNAMIC         reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    VAR             reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    WHILE           reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DO              reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    IF              reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ELSE            reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    PRINT           reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FUNCIONSTDIN    reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FUNCIONSTDOUT   reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NOT             reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ELSEIF          reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FOR             reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ENTERO          reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DOUBLE          reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    STRING          reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BOOL            reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    $end            reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LDER            reduce using rule 100 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)


state 304

    (97) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final . LDER

    LDER            shift and go to state 306


state 305

    (99) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final . LDER

    LDER            shift and go to state 307


state 306

    (97) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    INT             reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NUM             reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    STRINGR         reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BOOLR           reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    VAR             reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    WHILE           reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DO              reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    IF              reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ELSE            reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    PRINT           reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NOT             reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FOR             reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ENTERO          reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    STRING          reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BOOL            reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    $end            reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LDER            reduce using rule 97 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)


state 307

    (99) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    INT             reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NUM             reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    STRINGR         reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BOOLR           reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    VAR             reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    WHILE           reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DO              reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    IF              reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ELSE            reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    PRINT           reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NOT             reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FOR             reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ENTERO          reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    STRING          reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BOOL            reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    $end            reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LDER            reduce using rule 99 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 8 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 8 resolved as shift
WARNING: shift/reduce conflict for INT in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 8 resolved as shift
WARNING: shift/reduce conflict for NUM in state 8 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 8 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 8 resolved as shift
WARNING: shift/reduce conflict for VAR in state 8 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 8 resolved as shift
WARNING: shift/reduce conflict for DO in state 8 resolved as shift
WARNING: shift/reduce conflict for IF in state 8 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 8 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 8 resolved as shift
WARNING: shift/reduce conflict for NOT in state 8 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 8 resolved as shift
WARNING: shift/reduce conflict for FOR in state 8 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 8 resolved as shift
WARNING: shift/reduce conflict for STRING in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 8 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 10 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 10 resolved as shift
WARNING: shift/reduce conflict for INT in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 10 resolved as shift
WARNING: shift/reduce conflict for NUM in state 10 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 10 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 10 resolved as shift
WARNING: shift/reduce conflict for VAR in state 10 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 10 resolved as shift
WARNING: shift/reduce conflict for DO in state 10 resolved as shift
WARNING: shift/reduce conflict for IF in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 10 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 10 resolved as shift
WARNING: shift/reduce conflict for NOT in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 10 resolved as shift
WARNING: shift/reduce conflict for FOR in state 10 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 10 resolved as shift
WARNING: shift/reduce conflict for STRING in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 10 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 11 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 11 resolved as shift
WARNING: shift/reduce conflict for INT in state 11 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 11 resolved as shift
WARNING: shift/reduce conflict for NUM in state 11 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 11 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 11 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 11 resolved as shift
WARNING: shift/reduce conflict for VAR in state 11 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 11 resolved as shift
WARNING: shift/reduce conflict for DO in state 11 resolved as shift
WARNING: shift/reduce conflict for IF in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 11 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 11 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 11 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 11 resolved as shift
WARNING: shift/reduce conflict for NOT in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 11 resolved as shift
WARNING: shift/reduce conflict for FOR in state 11 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 11 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 11 resolved as shift
WARNING: shift/reduce conflict for STRING in state 11 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 11 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 17 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 17 resolved as shift
WARNING: shift/reduce conflict for INT in state 17 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 17 resolved as shift
WARNING: shift/reduce conflict for NUM in state 17 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 17 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 17 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 17 resolved as shift
WARNING: shift/reduce conflict for VAR in state 17 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 17 resolved as shift
WARNING: shift/reduce conflict for DO in state 17 resolved as shift
WARNING: shift/reduce conflict for IF in state 17 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 17 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 17 resolved as shift
WARNING: shift/reduce conflict for NOT in state 17 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 17 resolved as shift
WARNING: shift/reduce conflict for FOR in state 17 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 17 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 17 resolved as shift
WARNING: shift/reduce conflict for STRING in state 17 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 17 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 18 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 18 resolved as shift
WARNING: shift/reduce conflict for INT in state 18 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 18 resolved as shift
WARNING: shift/reduce conflict for NUM in state 18 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 18 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 18 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 18 resolved as shift
WARNING: shift/reduce conflict for VAR in state 18 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 18 resolved as shift
WARNING: shift/reduce conflict for DO in state 18 resolved as shift
WARNING: shift/reduce conflict for IF in state 18 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 18 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 18 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 18 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 18 resolved as shift
WARNING: shift/reduce conflict for NOT in state 18 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 18 resolved as shift
WARNING: shift/reduce conflict for FOR in state 18 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 18 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 18 resolved as shift
WARNING: shift/reduce conflict for STRING in state 18 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 18 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 19 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 29 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 29 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 29 resolved as shift
WARNING: shift/reduce conflict for DIV in state 29 resolved as shift
WARNING: shift/reduce conflict for DIVENTERO in state 29 resolved as shift
WARNING: shift/reduce conflict for MOD in state 29 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 49 resolved as shift
WARNING: shift/reduce conflict for INT in state 49 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 49 resolved as shift
WARNING: shift/reduce conflict for NUM in state 49 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 49 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 49 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 49 resolved as shift
WARNING: shift/reduce conflict for VAR in state 49 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 49 resolved as shift
WARNING: shift/reduce conflict for DO in state 49 resolved as shift
WARNING: shift/reduce conflict for IF in state 49 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 49 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 49 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 49 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 49 resolved as shift
WARNING: shift/reduce conflict for NOT in state 49 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 49 resolved as shift
WARNING: shift/reduce conflict for FOR in state 49 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 49 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 49 resolved as shift
WARNING: shift/reduce conflict for STRING in state 49 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 49 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 50 resolved as shift
WARNING: shift/reduce conflict for INT in state 50 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 50 resolved as shift
WARNING: shift/reduce conflict for NUM in state 50 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 50 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 50 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 50 resolved as shift
WARNING: shift/reduce conflict for VAR in state 50 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 50 resolved as shift
WARNING: shift/reduce conflict for DO in state 50 resolved as shift
WARNING: shift/reduce conflict for IF in state 50 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 50 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 50 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 50 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 50 resolved as shift
WARNING: shift/reduce conflict for NOT in state 50 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 50 resolved as shift
WARNING: shift/reduce conflict for FOR in state 50 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 50 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 50 resolved as shift
WARNING: shift/reduce conflict for STRING in state 50 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 50 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 51 resolved as shift
WARNING: shift/reduce conflict for INT in state 51 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 51 resolved as shift
WARNING: shift/reduce conflict for NUM in state 51 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 51 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 51 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 51 resolved as shift
WARNING: shift/reduce conflict for VAR in state 51 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 51 resolved as shift
WARNING: shift/reduce conflict for DO in state 51 resolved as shift
WARNING: shift/reduce conflict for IF in state 51 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 51 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 51 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 51 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 51 resolved as shift
WARNING: shift/reduce conflict for NOT in state 51 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 51 resolved as shift
WARNING: shift/reduce conflict for FOR in state 51 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 51 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 51 resolved as shift
WARNING: shift/reduce conflict for STRING in state 51 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 51 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 52 resolved as shift
WARNING: shift/reduce conflict for INT in state 52 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 52 resolved as shift
WARNING: shift/reduce conflict for NUM in state 52 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 52 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 52 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 52 resolved as shift
WARNING: shift/reduce conflict for VAR in state 52 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 52 resolved as shift
WARNING: shift/reduce conflict for DO in state 52 resolved as shift
WARNING: shift/reduce conflict for IF in state 52 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 52 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 52 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 52 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 52 resolved as shift
WARNING: shift/reduce conflict for NOT in state 52 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 52 resolved as shift
WARNING: shift/reduce conflict for FOR in state 52 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 52 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 52 resolved as shift
WARNING: shift/reduce conflict for STRING in state 52 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 52 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 53 resolved as shift
WARNING: shift/reduce conflict for INT in state 53 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 53 resolved as shift
WARNING: shift/reduce conflict for NUM in state 53 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 53 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 53 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 53 resolved as shift
WARNING: shift/reduce conflict for VAR in state 53 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 53 resolved as shift
WARNING: shift/reduce conflict for DO in state 53 resolved as shift
WARNING: shift/reduce conflict for IF in state 53 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 53 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 53 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 53 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 53 resolved as shift
WARNING: shift/reduce conflict for NOT in state 53 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 53 resolved as shift
WARNING: shift/reduce conflict for FOR in state 53 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 53 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 53 resolved as shift
WARNING: shift/reduce conflict for STRING in state 53 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 53 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 57 resolved as shift
WARNING: shift/reduce conflict for INT in state 57 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 57 resolved as shift
WARNING: shift/reduce conflict for NUM in state 57 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 57 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 57 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 57 resolved as shift
WARNING: shift/reduce conflict for VAR in state 57 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 57 resolved as shift
WARNING: shift/reduce conflict for DO in state 57 resolved as shift
WARNING: shift/reduce conflict for IF in state 57 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 57 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 57 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 57 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 57 resolved as shift
WARNING: shift/reduce conflict for NOT in state 57 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 57 resolved as shift
WARNING: shift/reduce conflict for FOR in state 57 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 57 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 57 resolved as shift
WARNING: shift/reduce conflict for STRING in state 57 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 57 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 59 resolved as shift
WARNING: shift/reduce conflict for INT in state 59 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 59 resolved as shift
WARNING: shift/reduce conflict for NUM in state 59 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 59 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 59 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 59 resolved as shift
WARNING: shift/reduce conflict for VAR in state 59 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 59 resolved as shift
WARNING: shift/reduce conflict for DO in state 59 resolved as shift
WARNING: shift/reduce conflict for IF in state 59 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 59 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 59 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 59 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 59 resolved as shift
WARNING: shift/reduce conflict for NOT in state 59 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 59 resolved as shift
WARNING: shift/reduce conflict for FOR in state 59 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 59 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 59 resolved as shift
WARNING: shift/reduce conflict for STRING in state 59 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 59 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 60 resolved as shift
WARNING: shift/reduce conflict for INT in state 60 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 60 resolved as shift
WARNING: shift/reduce conflict for NUM in state 60 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 60 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 60 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 60 resolved as shift
WARNING: shift/reduce conflict for VAR in state 60 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 60 resolved as shift
WARNING: shift/reduce conflict for DO in state 60 resolved as shift
WARNING: shift/reduce conflict for IF in state 60 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 60 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 60 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 60 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 60 resolved as shift
WARNING: shift/reduce conflict for NOT in state 60 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 60 resolved as shift
WARNING: shift/reduce conflict for FOR in state 60 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 60 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 60 resolved as shift
WARNING: shift/reduce conflict for STRING in state 60 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 60 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 61 resolved as shift
WARNING: shift/reduce conflict for INT in state 61 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 61 resolved as shift
WARNING: shift/reduce conflict for NUM in state 61 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 61 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 61 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 61 resolved as shift
WARNING: shift/reduce conflict for VAR in state 61 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 61 resolved as shift
WARNING: shift/reduce conflict for DO in state 61 resolved as shift
WARNING: shift/reduce conflict for IF in state 61 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 61 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 61 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 61 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 61 resolved as shift
WARNING: shift/reduce conflict for NOT in state 61 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 61 resolved as shift
WARNING: shift/reduce conflict for FOR in state 61 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 61 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 61 resolved as shift
WARNING: shift/reduce conflict for STRING in state 61 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 61 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 63 resolved as shift
WARNING: shift/reduce conflict for INT in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 63 resolved as shift
WARNING: shift/reduce conflict for NUM in state 63 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 63 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 63 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 63 resolved as shift
WARNING: shift/reduce conflict for VAR in state 63 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 63 resolved as shift
WARNING: shift/reduce conflict for DO in state 63 resolved as shift
WARNING: shift/reduce conflict for IF in state 63 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 63 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 63 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 63 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 63 resolved as shift
WARNING: shift/reduce conflict for NOT in state 63 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 63 resolved as shift
WARNING: shift/reduce conflict for FOR in state 63 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 63 resolved as shift
WARNING: shift/reduce conflict for STRING in state 63 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 63 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 65 resolved as shift
WARNING: shift/reduce conflict for INT in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 65 resolved as shift
WARNING: shift/reduce conflict for NUM in state 65 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 65 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 65 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 65 resolved as shift
WARNING: shift/reduce conflict for VAR in state 65 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 65 resolved as shift
WARNING: shift/reduce conflict for DO in state 65 resolved as shift
WARNING: shift/reduce conflict for IF in state 65 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 65 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 65 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 65 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 65 resolved as shift
WARNING: shift/reduce conflict for NOT in state 65 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 65 resolved as shift
WARNING: shift/reduce conflict for FOR in state 65 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 65 resolved as shift
WARNING: shift/reduce conflict for STRING in state 65 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 65 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 66 resolved as shift
WARNING: shift/reduce conflict for INT in state 66 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 66 resolved as shift
WARNING: shift/reduce conflict for NUM in state 66 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 66 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 66 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 66 resolved as shift
WARNING: shift/reduce conflict for VAR in state 66 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 66 resolved as shift
WARNING: shift/reduce conflict for DO in state 66 resolved as shift
WARNING: shift/reduce conflict for IF in state 66 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 66 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 66 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 66 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 66 resolved as shift
WARNING: shift/reduce conflict for NOT in state 66 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 66 resolved as shift
WARNING: shift/reduce conflict for FOR in state 66 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 66 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 66 resolved as shift
WARNING: shift/reduce conflict for STRING in state 66 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 66 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 67 resolved as shift
WARNING: shift/reduce conflict for INT in state 67 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 67 resolved as shift
WARNING: shift/reduce conflict for NUM in state 67 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 67 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 67 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 67 resolved as shift
WARNING: shift/reduce conflict for VAR in state 67 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 67 resolved as shift
WARNING: shift/reduce conflict for DO in state 67 resolved as shift
WARNING: shift/reduce conflict for IF in state 67 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 67 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 67 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 67 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 67 resolved as shift
WARNING: shift/reduce conflict for NOT in state 67 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 67 resolved as shift
WARNING: shift/reduce conflict for FOR in state 67 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 67 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 67 resolved as shift
WARNING: shift/reduce conflict for STRING in state 67 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 67 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 68 resolved as shift
WARNING: shift/reduce conflict for INT in state 68 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 68 resolved as shift
WARNING: shift/reduce conflict for NUM in state 68 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 68 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 68 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 68 resolved as shift
WARNING: shift/reduce conflict for VAR in state 68 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 68 resolved as shift
WARNING: shift/reduce conflict for DO in state 68 resolved as shift
WARNING: shift/reduce conflict for IF in state 68 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 68 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 68 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 68 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 68 resolved as shift
WARNING: shift/reduce conflict for NOT in state 68 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 68 resolved as shift
WARNING: shift/reduce conflict for FOR in state 68 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 68 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 68 resolved as shift
WARNING: shift/reduce conflict for STRING in state 68 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 68 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 69 resolved as shift
WARNING: shift/reduce conflict for INT in state 69 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 69 resolved as shift
WARNING: shift/reduce conflict for NUM in state 69 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 69 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 69 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 69 resolved as shift
WARNING: shift/reduce conflict for VAR in state 69 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 69 resolved as shift
WARNING: shift/reduce conflict for DO in state 69 resolved as shift
WARNING: shift/reduce conflict for IF in state 69 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 69 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 69 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 69 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 69 resolved as shift
WARNING: shift/reduce conflict for NOT in state 69 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 69 resolved as shift
WARNING: shift/reduce conflict for FOR in state 69 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 69 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 69 resolved as shift
WARNING: shift/reduce conflict for STRING in state 69 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 69 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 70 resolved as shift
WARNING: shift/reduce conflict for INT in state 70 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 70 resolved as shift
WARNING: shift/reduce conflict for NUM in state 70 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 70 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 70 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 70 resolved as shift
WARNING: shift/reduce conflict for VAR in state 70 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 70 resolved as shift
WARNING: shift/reduce conflict for DO in state 70 resolved as shift
WARNING: shift/reduce conflict for IF in state 70 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 70 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 70 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 70 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 70 resolved as shift
WARNING: shift/reduce conflict for NOT in state 70 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 70 resolved as shift
WARNING: shift/reduce conflict for FOR in state 70 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 70 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 70 resolved as shift
WARNING: shift/reduce conflict for STRING in state 70 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 70 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 72 resolved as shift
WARNING: shift/reduce conflict for INT in state 72 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 72 resolved as shift
WARNING: shift/reduce conflict for NUM in state 72 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 72 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 72 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 72 resolved as shift
WARNING: shift/reduce conflict for VAR in state 72 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 72 resolved as shift
WARNING: shift/reduce conflict for DO in state 72 resolved as shift
WARNING: shift/reduce conflict for IF in state 72 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 72 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 72 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 72 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 72 resolved as shift
WARNING: shift/reduce conflict for NOT in state 72 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 72 resolved as shift
WARNING: shift/reduce conflict for FOR in state 72 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 72 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 72 resolved as shift
WARNING: shift/reduce conflict for STRING in state 72 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 72 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 74 resolved as shift
WARNING: shift/reduce conflict for INT in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 74 resolved as shift
WARNING: shift/reduce conflict for NUM in state 74 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 74 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 74 resolved as shift
WARNING: shift/reduce conflict for VAR in state 74 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 74 resolved as shift
WARNING: shift/reduce conflict for DO in state 74 resolved as shift
WARNING: shift/reduce conflict for IF in state 74 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 74 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 74 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 74 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 74 resolved as shift
WARNING: shift/reduce conflict for NOT in state 74 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 74 resolved as shift
WARNING: shift/reduce conflict for FOR in state 74 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 74 resolved as shift
WARNING: shift/reduce conflict for STRING in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 74 resolved as shift
WARNING: shift/reduce conflict for AND in state 121 resolved as shift
WARNING: shift/reduce conflict for OR in state 121 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 124 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 124 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 143 resolved as shift
WARNING: shift/reduce conflict for INT in state 143 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 143 resolved as shift
WARNING: shift/reduce conflict for NUM in state 143 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 143 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 143 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 143 resolved as shift
WARNING: shift/reduce conflict for VAR in state 143 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 143 resolved as shift
WARNING: shift/reduce conflict for DO in state 143 resolved as shift
WARNING: shift/reduce conflict for IF in state 143 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 143 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 143 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 143 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 143 resolved as shift
WARNING: shift/reduce conflict for NOT in state 143 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 143 resolved as shift
WARNING: shift/reduce conflict for FOR in state 143 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 143 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 143 resolved as shift
WARNING: shift/reduce conflict for STRING in state 143 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 143 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 144 resolved as shift
WARNING: shift/reduce conflict for INT in state 144 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 144 resolved as shift
WARNING: shift/reduce conflict for NUM in state 144 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 144 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 144 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 144 resolved as shift
WARNING: shift/reduce conflict for VAR in state 144 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 144 resolved as shift
WARNING: shift/reduce conflict for DO in state 144 resolved as shift
WARNING: shift/reduce conflict for IF in state 144 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 144 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 144 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 144 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 144 resolved as shift
WARNING: shift/reduce conflict for NOT in state 144 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 144 resolved as shift
WARNING: shift/reduce conflict for FOR in state 144 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 144 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 144 resolved as shift
WARNING: shift/reduce conflict for STRING in state 144 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 144 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 151 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 151 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 151 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 151 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 151 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 151 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 199 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 199 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 199 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 199 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 199 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 199 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 257 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 257 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 257 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 257 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 257 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 257 resolved as shift
WARNING: reduce/reduce conflict in state 20 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 29 resolved using rule (expresionInt -> valorInt)
WARNING: rejected rule (valorDouble -> valorInt) in state 29
WARNING: reduce/reduce conflict in state 32 resolved using rule (expresionBoolFor -> valorBool)
WARNING: rejected rule (expresionBool -> valorBool) in state 32
WARNING: reduce/reduce conflict in state 39 resolved using rule (funcionStdin -> FUNCIONSTDIN)
WARNING: rejected rule (valorString -> FUNCIONSTDIN) in state 39
WARNING: reduce/reduce conflict in state 122 resolved using rule (expresionBool -> comparacionBool)
WARNING: rejected rule (comparacionBool -> expresionBool operadorLogico comparacionBool) in state 122
WARNING: reduce/reduce conflict in state 128 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 128
WARNING: reduce/reduce conflict in state 145 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (expresionBool -> VARIABLE comparadorMat VARIABLE) in state 145
WARNING: reduce/reduce conflict in state 145 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 145
WARNING: reduce/reduce conflict in state 145 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 145
WARNING: reduce/reduce conflict in state 146 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat expresionDouble)
WARNING: rejected rule (expresionBool -> VARIABLE comparadorMat expresionDouble) in state 146
WARNING: reduce/reduce conflict in state 151 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 151
WARNING: reduce/reduce conflict in state 151 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 151
WARNING: reduce/reduce conflict in state 151 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 151
WARNING: reduce/reduce conflict in state 158 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 158
WARNING: reduce/reduce conflict in state 159 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 159
WARNING: reduce/reduce conflict in state 175 resolved using rule (expresionBoolFor -> valorDouble comparadorMat expresionDouble)
WARNING: rejected rule (expresionBool -> valorDouble comparadorMat expresionDouble) in state 175
WARNING: reduce/reduce conflict in state 176 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (expresionBool -> valorDouble comparadorMat VARIABLE) in state 176
WARNING: reduce/reduce conflict in state 176 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 176
WARNING: reduce/reduce conflict in state 176 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 176
WARNING: reduce/reduce conflict in state 199 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 199
WARNING: reduce/reduce conflict in state 199 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 199
WARNING: reduce/reduce conflict in state 199 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 199
WARNING: reduce/reduce conflict in state 243 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 243
WARNING: reduce/reduce conflict in state 244 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 244
WARNING: reduce/reduce conflict in state 291 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 291
WARNING: reduce/reduce conflict in state 291 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 291
WARNING: reduce/reduce conflict in state 294 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 294
WARNING: reduce/reduce conflict in state 294 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 294
WARNING: Rule (comparacionBool -> expresionBool operadorLogico comparacionBool) is never reduced
