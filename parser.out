Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    BREAK
    CASE
    CDER
    CIZQ
    COMA
    COMILLAD
    COMILLAS
    DOSPUNTOS
    DRESTA
    DSUMA
    ELSEIF
    FLECHA
    FOR
    FUNCIONARR
    FUNCIONRANGE
    FUNCIONSTDIN
    FUNCIONSTDOUT
    FUNCIONSTRING
    FUNCIONTAKE
    RETURN
    SWITCH

Grammar

Rule 0     S' -> final
Rule 1     final -> algoritmo PUNTOYCOMA
Rule 2     final -> algoritmo PUNTOYCOMA final
Rule 3     final -> asignacion PUNTOYCOMA
Rule 4     final -> asignacion PUNTOYCOMA final
Rule 5     final -> expresionInt PUNTOYCOMA
Rule 6     final -> expresionInt PUNTOYCOMA final
Rule 7     final -> expresionDouble PUNTOYCOMA
Rule 8     final -> expresionDouble PUNTOYCOMA final
Rule 9     final -> expresionString PUNTOYCOMA
Rule 10    final -> expresionString PUNTOYCOMA final
Rule 11    final -> expresionBool PUNTOYCOMA
Rule 12    final -> expresionBool PUNTOYCOMA final
Rule 13    final -> sentenciaWhile
Rule 14    final -> sentenciaWhile final
Rule 15    final -> sentenciaWhile PUNTOYCOMA
Rule 16    final -> sentenciaWhile PUNTOYCOMA final
Rule 17    final -> sentenciaDoWhile PUNTOYCOMA
Rule 18    final -> sentenciaDoWhile PUNTOYCOMA final
Rule 19    final -> sentenciaIf PUNTOYCOMA
Rule 20    final -> sentenciaIf PUNTOYCOMA final
Rule 21    final -> sentenciaIf
Rule 22    final -> sentenciaIf final
Rule 23    final -> sentenciaElse PUNTOYCOMA
Rule 24    final -> sentenciaElse PUNTOYCOMA final
Rule 25    final -> sentenciaElse
Rule 26    final -> sentenciaElse final
Rule 27    final -> imprimir PUNTOYCOMA
Rule 28    final -> imprimir PUNTOYCOMA final
Rule 29    final -> negacionBool PUNTOYCOMA
Rule 30    final -> negacionBool PUNTOYCOMA final
Rule 31    final -> comparacionBool final
Rule 32    final -> comparacionBool PUNTOYCOMA
Rule 33    algoritmo -> asignacion PUNTOYCOMA
Rule 34    algoritmo -> expresionInt PUNTOYCOMA
Rule 35    algoritmo -> expresionDouble PUNTOYCOMA
Rule 36    algoritmo -> expresionString PUNTOYCOMA
Rule 37    algoritmo -> expresionBool PUNTOYCOMA
Rule 38    algoritmo -> expresion
Rule 39    algoritmo -> sentenciaWhile
Rule 40    algoritmo -> sentenciaWhile PUNTOYCOMA
Rule 41    algoritmo -> sentenciaDoWhile PUNTOYCOMA
Rule 42    algoritmo -> sentenciaIf PUNTOYCOMA
Rule 43    algoritmo -> sentenciaIf
Rule 44    algoritmo -> sentenciaElse PUNTOYCOMA
Rule 45    algoritmo -> sentenciaElse
Rule 46    algoritmo -> imprimir PUNTOYCOMA
Rule 47    algoritmo -> negacionBool PUNTOYCOMA
Rule 48    algoritmo -> comparacionBool PUNTOYCOMA
Rule 49    asignacion -> INT VARIABLE IGUAL expresionInt
Rule 50    asignacion -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 51    asignacion -> NUM VARIABLE IGUAL expresionDouble
Rule 52    asignacion -> STRINGR VARIABLE IGUAL expresionString
Rule 53    asignacion -> BOOLR VARIABLE IGUAL expresionBool
Rule 54    asignacion -> DYNAMIC VARIABLE IGUAL expresion
Rule 55    asignacion -> VAR VARIABLE IGUAL expresion
Rule 56    asignacion -> asignacionSimple
Rule 57    asignacionSimple -> VARIABLE IGUAL expresion
Rule 58    imprimir -> PRINT PIZQ expresion PDER
Rule 59    imprimir -> PRINT PIZQ asignacionSimple PDER
Rule 60    sentenciaIf -> IF PIZQ expresionBool PDER algoritmo
Rule 61    sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER
Rule 62    sentenciaElse -> ELSE algoritmo
Rule 63    sentenciaElse -> ELSE LIZQ algoritmo LDER
Rule 64    valor -> ENTERO
Rule 65    valor -> VARIABLE
Rule 66    valor -> DOUBLE
Rule 67    valor -> STRING
Rule 68    expresion -> valor operadorMat expresion
Rule 69    expresion -> valor
Rule 70    expresion -> expresionString
Rule 71    expresion -> expresionInt
Rule 72    expresion -> expresionDouble
Rule 73    expresion -> expresionBool
Rule 74    sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
Rule 75    sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo
Rule 76    sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
Rule 77    valorBool -> BOOL
Rule 78    valorBool -> VARIABLE
Rule 79    expresionBool -> valorDouble comparadorMat expresionDouble
Rule 80    expresionBool -> VARIABLE comparadorMat expresionDouble
Rule 81    expresionBool -> VARIABLE comparadorMat VARIABLE
Rule 82    expresionBool -> valorDouble comparadorMat VARIABLE
Rule 83    expresionBool -> valorBool
Rule 84    expresionBool -> negacionBool
Rule 85    expresionBool -> comparacionBool
Rule 86    expresionBool -> valor IS objeto
Rule 87    expresionBool -> valor ISNEGADO objeto
Rule 88    negacionBool -> NOT PIZQ expresionBool PDER
Rule 89    comparacionBool -> expresionBool operadorLogico expresionBool
Rule 90    comparacionBool -> expresionBool operadorLogico comparacionBool
Rule 91    objeto -> STRINGR
Rule 92    objeto -> INT
Rule 93    objeto -> DOUBLER
Rule 94    objeto -> NUM
Rule 95    objeto -> VAR
Rule 96    objeto -> DYNAMIC
Rule 97    objeto -> LIST
Rule 98    objeto -> BOOL
Rule 99    objeto -> MAP
Rule 100   objeto -> SET
Rule 101   valorString -> STRING
Rule 102   valorString -> VARIABLE
Rule 103   expresionString -> valorString operadorMat expresionString
Rule 104   expresionString -> valorString
Rule 105   valorInt -> ENTERO
Rule 106   valorInt -> VARIABLE
Rule 107   expresionInt -> valorInt operadorMat expresionInt
Rule 108   expresionInt -> valorInt
Rule 109   valorDouble -> DOUBLE
Rule 110   valorDouble -> valorInt
Rule 111   expresionDouble -> valorDouble operadorMat expresionDouble
Rule 112   expresionDouble -> valorDouble
Rule 113   operadorMat -> SUMA
Rule 114   operadorMat -> RESTA
Rule 115   operadorMat -> MULTI
Rule 116   operadorMat -> DIV
Rule 117   operadorMat -> DIVENTERO
Rule 118   operadorMat -> MOD
Rule 119   comparadorMat -> DIGUAL
Rule 120   comparadorMat -> NOIGUAL
Rule 121   comparadorMat -> MAYOR
Rule 122   comparadorMat -> MENOR
Rule 123   comparadorMat -> MAYIGUAL
Rule 124   comparadorMat -> MENIGUAL
Rule 125   operadorLogico -> AND
Rule 126   operadorLogico -> OR

Terminals, with rules where they appear

AND                  : 125
AS                   : 
BOOL                 : 77 98
BOOLR                : 53
BREAK                : 
CASE                 : 
CDER                 : 
CIZQ                 : 
COMA                 : 
COMILLAD             : 
COMILLAS             : 
DIGUAL               : 119
DIV                  : 116
DIVENTERO            : 117
DO                   : 76
DOSPUNTOS            : 
DOUBLE               : 66 109
DOUBLER              : 50 93
DRESTA               : 
DSUMA                : 
DYNAMIC              : 54 96
ELSE                 : 62 63
ELSEIF               : 
ENTERO               : 64 105
FLECHA               : 
FOR                  : 
FUNCIONARR           : 
FUNCIONRANGE         : 
FUNCIONSTDIN         : 
FUNCIONSTDOUT        : 
FUNCIONSTRING        : 
FUNCIONTAKE          : 
IF                   : 60 61
IGUAL                : 49 50 51 52 53 54 55 57
INT                  : 49 92
IS                   : 86
ISNEGADO             : 87
LDER                 : 61 63 74 76
LIST                 : 97
LIZQ                 : 61 63 74 76
MAP                  : 99
MAYIGUAL             : 123
MAYOR                : 121
MENIGUAL             : 124
MENOR                : 122
MOD                  : 118
MULTI                : 115
NOIGUAL              : 120
NOT                  : 88
NUM                  : 51 94
OR                   : 126
PDER                 : 58 59 60 61 74 75 76 88
PIZQ                 : 58 59 60 61 74 75 76 88
PRINT                : 58 59
PUNTOYCOMA           : 1 2 3 4 5 6 7 8 9 10 11 12 15 16 17 18 19 20 23 24 27 28 29 30 32 33 34 35 36 37 40 41 42 44 46 47 48
RESTA                : 114
RETURN               : 
SET                  : 100
STRING               : 67 101
STRINGR              : 52 91
SUMA                 : 113
SWITCH               : 
VAR                  : 55 95
VARIABLE             : 49 50 51 52 53 54 55 57 65 78 80 81 81 82 102 106
WHILE                : 74 75 76
error                : 

Nonterminals, with rules where they appear

algoritmo            : 1 2 60 61 62 63 74 75 76
asignacion           : 3 4 33
asignacionSimple     : 56 59
comparacionBool      : 31 32 48 85 90
comparadorMat        : 79 80 81 82
expresion            : 38 54 55 57 58 68
expresionBool        : 11 12 37 53 60 61 73 74 75 76 88 89 89 90
expresionDouble      : 7 8 35 50 51 72 79 80 111
expresionInt         : 5 6 34 49 71 107
expresionString      : 9 10 36 52 70 103
final                : 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 31 0
imprimir             : 27 28 46
negacionBool         : 29 30 47 84
objeto               : 86 87
operadorLogico       : 89 90
operadorMat          : 68 103 107 111
sentenciaDoWhile     : 17 18 41
sentenciaElse        : 23 24 25 26 44 45
sentenciaIf          : 19 20 21 22 42 43
sentenciaWhile       : 13 14 15 16 39 40
valor                : 68 69 86 87
valorBool            : 83
valorDouble          : 79 82 111 112
valorInt             : 107 108 110
valorString          : 103 104

Parsing method: LALR

state 0

    (0) S' -> . final
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

    final                          shift and go to state 1
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    comparacionBool                shift and go to state 14
    expresion                      shift and go to state 15
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 1

    (0) S' -> final .



state 2

    (1) final -> algoritmo . PUNTOYCOMA
    (2) final -> algoritmo . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 40


state 3

    (3) final -> asignacion . PUNTOYCOMA
    (4) final -> asignacion . PUNTOYCOMA final
    (33) algoritmo -> asignacion . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 41


state 4

    (5) final -> expresionInt . PUNTOYCOMA
    (6) final -> expresionInt . PUNTOYCOMA final
    (34) algoritmo -> expresionInt . PUNTOYCOMA
    (71) expresion -> expresionInt .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 42

  ! PUNTOYCOMA      [ reduce using rule 71 (expresion -> expresionInt .) ]


state 5

    (7) final -> expresionDouble . PUNTOYCOMA
    (8) final -> expresionDouble . PUNTOYCOMA final
    (35) algoritmo -> expresionDouble . PUNTOYCOMA
    (72) expresion -> expresionDouble .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 43

  ! PUNTOYCOMA      [ reduce using rule 72 (expresion -> expresionDouble .) ]


state 6

    (9) final -> expresionString . PUNTOYCOMA
    (10) final -> expresionString . PUNTOYCOMA final
    (36) algoritmo -> expresionString . PUNTOYCOMA
    (70) expresion -> expresionString .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 44

  ! PUNTOYCOMA      [ reduce using rule 70 (expresion -> expresionString .) ]


state 7

    (11) final -> expresionBool . PUNTOYCOMA
    (12) final -> expresionBool . PUNTOYCOMA final
    (37) algoritmo -> expresionBool . PUNTOYCOMA
    (89) comparacionBool -> expresionBool . operadorLogico expresionBool
    (90) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (73) expresion -> expresionBool .
    (125) operadorLogico -> . AND
    (126) operadorLogico -> . OR

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 45
    AND             shift and go to state 47
    OR              shift and go to state 48

  ! PUNTOYCOMA      [ reduce using rule 73 (expresion -> expresionBool .) ]

    operadorLogico                 shift and go to state 46

state 8

    (13) final -> sentenciaWhile .
    (14) final -> sentenciaWhile . final
    (15) final -> sentenciaWhile . PUNTOYCOMA
    (16) final -> sentenciaWhile . PUNTOYCOMA final
    (39) algoritmo -> sentenciaWhile .
    (40) algoritmo -> sentenciaWhile . PUNTOYCOMA
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    $end            reduce using rule 13 (final -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 50
    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

  ! PUNTOYCOMA      [ reduce using rule 39 (algoritmo -> sentenciaWhile .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 49
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    comparacionBool                shift and go to state 14
    expresion                      shift and go to state 15
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 9

    (17) final -> sentenciaDoWhile . PUNTOYCOMA
    (18) final -> sentenciaDoWhile . PUNTOYCOMA final
    (41) algoritmo -> sentenciaDoWhile . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 51


state 10

    (19) final -> sentenciaIf . PUNTOYCOMA
    (20) final -> sentenciaIf . PUNTOYCOMA final
    (21) final -> sentenciaIf .
    (22) final -> sentenciaIf . final
    (42) algoritmo -> sentenciaIf . PUNTOYCOMA
    (43) algoritmo -> sentenciaIf .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 52
    $end            reduce using rule 21 (final -> sentenciaIf .)
    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

  ! PUNTOYCOMA      [ reduce using rule 43 (algoritmo -> sentenciaIf .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 53
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    comparacionBool                shift and go to state 14
    expresion                      shift and go to state 15
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 11

    (23) final -> sentenciaElse . PUNTOYCOMA
    (24) final -> sentenciaElse . PUNTOYCOMA final
    (25) final -> sentenciaElse .
    (26) final -> sentenciaElse . final
    (44) algoritmo -> sentenciaElse . PUNTOYCOMA
    (45) algoritmo -> sentenciaElse .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 54
    $end            reduce using rule 25 (final -> sentenciaElse .)
    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

  ! PUNTOYCOMA      [ reduce using rule 45 (algoritmo -> sentenciaElse .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 55
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    comparacionBool                shift and go to state 14
    expresion                      shift and go to state 15
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 12

    (27) final -> imprimir . PUNTOYCOMA
    (28) final -> imprimir . PUNTOYCOMA final
    (46) algoritmo -> imprimir . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 56


state 13

    (29) final -> negacionBool . PUNTOYCOMA
    (30) final -> negacionBool . PUNTOYCOMA final
    (47) algoritmo -> negacionBool . PUNTOYCOMA
    (84) expresionBool -> negacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 57
    AND             reduce using rule 84 (expresionBool -> negacionBool .)
    OR              reduce using rule 84 (expresionBool -> negacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 84 (expresionBool -> negacionBool .) ]


state 14

    (31) final -> comparacionBool . final
    (32) final -> comparacionBool . PUNTOYCOMA
    (48) algoritmo -> comparacionBool . PUNTOYCOMA
    (85) expresionBool -> comparacionBool .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 59
    AND             reduce using rule 85 (expresionBool -> comparacionBool .)
    OR              reduce using rule 85 (expresionBool -> comparacionBool .)
    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

  ! PUNTOYCOMA      [ reduce using rule 85 (expresionBool -> comparacionBool .) ]

    comparacionBool                shift and go to state 14
    final                          shift and go to state 58
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    expresion                      shift and go to state 15
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 15

    (38) algoritmo -> expresion .

    PUNTOYCOMA      reduce using rule 38 (algoritmo -> expresion .)
    INT             reduce using rule 38 (algoritmo -> expresion .)
    DOUBLER         reduce using rule 38 (algoritmo -> expresion .)
    NUM             reduce using rule 38 (algoritmo -> expresion .)
    STRINGR         reduce using rule 38 (algoritmo -> expresion .)
    BOOLR           reduce using rule 38 (algoritmo -> expresion .)
    DYNAMIC         reduce using rule 38 (algoritmo -> expresion .)
    VAR             reduce using rule 38 (algoritmo -> expresion .)
    VARIABLE        reduce using rule 38 (algoritmo -> expresion .)
    WHILE           reduce using rule 38 (algoritmo -> expresion .)
    DO              reduce using rule 38 (algoritmo -> expresion .)
    IF              reduce using rule 38 (algoritmo -> expresion .)
    ELSE            reduce using rule 38 (algoritmo -> expresion .)
    PRINT           reduce using rule 38 (algoritmo -> expresion .)
    NOT             reduce using rule 38 (algoritmo -> expresion .)
    ENTERO          reduce using rule 38 (algoritmo -> expresion .)
    DOUBLE          reduce using rule 38 (algoritmo -> expresion .)
    STRING          reduce using rule 38 (algoritmo -> expresion .)
    BOOL            reduce using rule 38 (algoritmo -> expresion .)
    $end            reduce using rule 38 (algoritmo -> expresion .)
    LDER            reduce using rule 38 (algoritmo -> expresion .)


state 16

    (49) asignacion -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 60


state 17

    (80) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (81) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (57) asignacionSimple -> VARIABLE . IGUAL expresion
    (106) valorInt -> VARIABLE .
    (102) valorString -> VARIABLE .
    (78) valorBool -> VARIABLE .
    (65) valor -> VARIABLE .
    (119) comparadorMat -> . DIGUAL
    (120) comparadorMat -> . NOIGUAL
    (121) comparadorMat -> . MAYOR
    (122) comparadorMat -> . MENOR
    (123) comparadorMat -> . MAYIGUAL
    (124) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 102 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 78 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 78 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 78 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 78 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 78 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 78 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 78 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 78 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 78 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 78 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 78 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 78 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 78 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 78 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 78 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 78 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 78 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 78 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 78 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 78 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 78 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 65 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 62
    AND             reduce using rule 78 (valorBool -> VARIABLE .)
    OR              reduce using rule 78 (valorBool -> VARIABLE .)
    IS              reduce using rule 65 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 65 (valor -> VARIABLE .)
    SUMA            reduce using rule 65 (valor -> VARIABLE .)
    RESTA           reduce using rule 65 (valor -> VARIABLE .)
    MULTI           reduce using rule 65 (valor -> VARIABLE .)
    DIV             reduce using rule 65 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 65 (valor -> VARIABLE .)
    MOD             reduce using rule 65 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 65 (valor -> VARIABLE .)
    INT             reduce using rule 65 (valor -> VARIABLE .)
    DOUBLER         reduce using rule 65 (valor -> VARIABLE .)
    NUM             reduce using rule 65 (valor -> VARIABLE .)
    STRINGR         reduce using rule 65 (valor -> VARIABLE .)
    BOOLR           reduce using rule 65 (valor -> VARIABLE .)
    DYNAMIC         reduce using rule 65 (valor -> VARIABLE .)
    VAR             reduce using rule 65 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 65 (valor -> VARIABLE .)
    WHILE           reduce using rule 65 (valor -> VARIABLE .)
    DO              reduce using rule 65 (valor -> VARIABLE .)
    IF              reduce using rule 65 (valor -> VARIABLE .)
    ELSE            reduce using rule 65 (valor -> VARIABLE .)
    PRINT           reduce using rule 65 (valor -> VARIABLE .)
    NOT             reduce using rule 65 (valor -> VARIABLE .)
    ENTERO          reduce using rule 65 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 65 (valor -> VARIABLE .)
    STRING          reduce using rule 65 (valor -> VARIABLE .)
    BOOL            reduce using rule 65 (valor -> VARIABLE .)
    $end            reduce using rule 65 (valor -> VARIABLE .)
    LDER            reduce using rule 65 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 63
    NOIGUAL         shift and go to state 64
    MAYOR           shift and go to state 65
    MENOR           shift and go to state 66
    MAYIGUAL        shift and go to state 67
    MENIGUAL        shift and go to state 68

  ! SUMA            [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! NOT             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! DIV             [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! MOD             [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! INT             [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! NUM             [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! VAR             [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! DO              [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! IF              [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! NOT             [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! STRING          [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! $end            [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! LDER            [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! INT             [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! NUM             [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! VAR             [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! DO              [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! IF              [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! NOT             [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! STRING          [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! $end            [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! LDER            [ reduce using rule 78 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 61

state 18

    (50) asignacion -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 69


state 19

    (51) asignacion -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 70


state 20

    (52) asignacion -> STRINGR . VARIABLE IGUAL expresionString

    VARIABLE        shift and go to state 71


state 21

    (53) asignacion -> BOOLR . VARIABLE IGUAL expresionBool

    VARIABLE        shift and go to state 72


state 22

    (54) asignacion -> DYNAMIC . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 73


state 23

    (55) asignacion -> VAR . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 74


state 24

    (56) asignacion -> asignacionSimple .

    PUNTOYCOMA      reduce using rule 56 (asignacion -> asignacionSimple .)


state 25

    (107) expresionInt -> valorInt . operadorMat expresionInt
    (108) expresionInt -> valorInt .
    (110) valorDouble -> valorInt .
    (113) operadorMat -> . SUMA
    (114) operadorMat -> . RESTA
    (115) operadorMat -> . MULTI
    (116) operadorMat -> . DIV
    (117) operadorMat -> . DIVENTERO
    (118) operadorMat -> . MOD

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 108 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for INT resolved using rule 108 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 108 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for NUM resolved using rule 108 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for STRINGR resolved using rule 108 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for BOOLR resolved using rule 108 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 108 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for VAR resolved using rule 108 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 108 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for WHILE resolved using rule 108 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DO resolved using rule 108 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for IF resolved using rule 108 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for ELSE resolved using rule 108 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PRINT resolved using rule 108 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for NOT resolved using rule 108 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for ENTERO resolved using rule 108 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 108 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for STRING resolved using rule 108 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for BOOL resolved using rule 108 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for $end resolved using rule 108 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for LDER resolved using rule 108 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PDER resolved using rule 108 (expresionInt -> valorInt .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DIVENTERO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PUNTOYCOMA      reduce using rule 108 (expresionInt -> valorInt .)
    INT             reduce using rule 108 (expresionInt -> valorInt .)
    DOUBLER         reduce using rule 108 (expresionInt -> valorInt .)
    NUM             reduce using rule 108 (expresionInt -> valorInt .)
    STRINGR         reduce using rule 108 (expresionInt -> valorInt .)
    BOOLR           reduce using rule 108 (expresionInt -> valorInt .)
    DYNAMIC         reduce using rule 108 (expresionInt -> valorInt .)
    VAR             reduce using rule 108 (expresionInt -> valorInt .)
    VARIABLE        reduce using rule 108 (expresionInt -> valorInt .)
    WHILE           reduce using rule 108 (expresionInt -> valorInt .)
    DO              reduce using rule 108 (expresionInt -> valorInt .)
    IF              reduce using rule 108 (expresionInt -> valorInt .)
    ELSE            reduce using rule 108 (expresionInt -> valorInt .)
    PRINT           reduce using rule 108 (expresionInt -> valorInt .)
    NOT             reduce using rule 108 (expresionInt -> valorInt .)
    ENTERO          reduce using rule 108 (expresionInt -> valorInt .)
    DOUBLE          reduce using rule 108 (expresionInt -> valorInt .)
    STRING          reduce using rule 108 (expresionInt -> valorInt .)
    BOOL            reduce using rule 108 (expresionInt -> valorInt .)
    $end            reduce using rule 108 (expresionInt -> valorInt .)
    LDER            reduce using rule 108 (expresionInt -> valorInt .)
    PDER            reduce using rule 108 (expresionInt -> valorInt .)
    DIGUAL          reduce using rule 110 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 110 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 110 (valorDouble -> valorInt .)
    MENOR           reduce using rule 110 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 110 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 110 (valorDouble -> valorInt .)
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTI           shift and go to state 78
    DIV             shift and go to state 79
    DIVENTERO       shift and go to state 80
    MOD             shift and go to state 81

  ! SUMA            [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! RESTA           [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! MULTI           [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! DIV             [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! DIVENTERO       [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! MOD             [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! PUNTOYCOMA      [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! INT             [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! DOUBLER         [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! NUM             [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! STRINGR         [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! BOOLR           [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! DYNAMIC         [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! VAR             [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! VARIABLE        [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! WHILE           [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! DO              [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! IF              [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! ELSE            [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! PRINT           [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! NOT             [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! ENTERO          [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! DOUBLE          [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! STRING          [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! BOOL            [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! $end            [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! LDER            [ reduce using rule 110 (valorDouble -> valorInt .) ]
  ! PDER            [ reduce using rule 110 (valorDouble -> valorInt .) ]

    operadorMat                    shift and go to state 75

state 26

    (111) expresionDouble -> valorDouble . operadorMat expresionDouble
    (112) expresionDouble -> valorDouble .
    (79) expresionBool -> valorDouble . comparadorMat expresionDouble
    (82) expresionBool -> valorDouble . comparadorMat VARIABLE
    (113) operadorMat -> . SUMA
    (114) operadorMat -> . RESTA
    (115) operadorMat -> . MULTI
    (116) operadorMat -> . DIV
    (117) operadorMat -> . DIVENTERO
    (118) operadorMat -> . MOD
    (119) comparadorMat -> . DIGUAL
    (120) comparadorMat -> . NOIGUAL
    (121) comparadorMat -> . MAYOR
    (122) comparadorMat -> . MENOR
    (123) comparadorMat -> . MAYIGUAL
    (124) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 112 (expresionDouble -> valorDouble .)
    INT             reduce using rule 112 (expresionDouble -> valorDouble .)
    DOUBLER         reduce using rule 112 (expresionDouble -> valorDouble .)
    NUM             reduce using rule 112 (expresionDouble -> valorDouble .)
    STRINGR         reduce using rule 112 (expresionDouble -> valorDouble .)
    BOOLR           reduce using rule 112 (expresionDouble -> valorDouble .)
    DYNAMIC         reduce using rule 112 (expresionDouble -> valorDouble .)
    VAR             reduce using rule 112 (expresionDouble -> valorDouble .)
    VARIABLE        reduce using rule 112 (expresionDouble -> valorDouble .)
    WHILE           reduce using rule 112 (expresionDouble -> valorDouble .)
    DO              reduce using rule 112 (expresionDouble -> valorDouble .)
    IF              reduce using rule 112 (expresionDouble -> valorDouble .)
    ELSE            reduce using rule 112 (expresionDouble -> valorDouble .)
    PRINT           reduce using rule 112 (expresionDouble -> valorDouble .)
    NOT             reduce using rule 112 (expresionDouble -> valorDouble .)
    ENTERO          reduce using rule 112 (expresionDouble -> valorDouble .)
    DOUBLE          reduce using rule 112 (expresionDouble -> valorDouble .)
    STRING          reduce using rule 112 (expresionDouble -> valorDouble .)
    BOOL            reduce using rule 112 (expresionDouble -> valorDouble .)
    $end            reduce using rule 112 (expresionDouble -> valorDouble .)
    LDER            reduce using rule 112 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 112 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTI           shift and go to state 78
    DIV             shift and go to state 79
    DIVENTERO       shift and go to state 80
    MOD             shift and go to state 81
    DIGUAL          shift and go to state 63
    NOIGUAL         shift and go to state 64
    MAYOR           shift and go to state 65
    MENOR           shift and go to state 66
    MAYIGUAL        shift and go to state 67
    MENIGUAL        shift and go to state 68

    operadorMat                    shift and go to state 82
    comparadorMat                  shift and go to state 83

state 27

    (103) expresionString -> valorString . operadorMat expresionString
    (104) expresionString -> valorString .
    (113) operadorMat -> . SUMA
    (114) operadorMat -> . RESTA
    (115) operadorMat -> . MULTI
    (116) operadorMat -> . DIV
    (117) operadorMat -> . DIVENTERO
    (118) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 104 (expresionString -> valorString .)
    INT             reduce using rule 104 (expresionString -> valorString .)
    DOUBLER         reduce using rule 104 (expresionString -> valorString .)
    NUM             reduce using rule 104 (expresionString -> valorString .)
    STRINGR         reduce using rule 104 (expresionString -> valorString .)
    BOOLR           reduce using rule 104 (expresionString -> valorString .)
    DYNAMIC         reduce using rule 104 (expresionString -> valorString .)
    VAR             reduce using rule 104 (expresionString -> valorString .)
    VARIABLE        reduce using rule 104 (expresionString -> valorString .)
    WHILE           reduce using rule 104 (expresionString -> valorString .)
    DO              reduce using rule 104 (expresionString -> valorString .)
    IF              reduce using rule 104 (expresionString -> valorString .)
    ELSE            reduce using rule 104 (expresionString -> valorString .)
    PRINT           reduce using rule 104 (expresionString -> valorString .)
    NOT             reduce using rule 104 (expresionString -> valorString .)
    ENTERO          reduce using rule 104 (expresionString -> valorString .)
    DOUBLE          reduce using rule 104 (expresionString -> valorString .)
    STRING          reduce using rule 104 (expresionString -> valorString .)
    BOOL            reduce using rule 104 (expresionString -> valorString .)
    $end            reduce using rule 104 (expresionString -> valorString .)
    LDER            reduce using rule 104 (expresionString -> valorString .)
    PDER            reduce using rule 104 (expresionString -> valorString .)
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTI           shift and go to state 78
    DIV             shift and go to state 79
    DIVENTERO       shift and go to state 80
    MOD             shift and go to state 81

    operadorMat                    shift and go to state 84

state 28

    (83) expresionBool -> valorBool .

    PUNTOYCOMA      reduce using rule 83 (expresionBool -> valorBool .)
    AND             reduce using rule 83 (expresionBool -> valorBool .)
    OR              reduce using rule 83 (expresionBool -> valorBool .)
    INT             reduce using rule 83 (expresionBool -> valorBool .)
    DOUBLER         reduce using rule 83 (expresionBool -> valorBool .)
    NUM             reduce using rule 83 (expresionBool -> valorBool .)
    STRINGR         reduce using rule 83 (expresionBool -> valorBool .)
    BOOLR           reduce using rule 83 (expresionBool -> valorBool .)
    DYNAMIC         reduce using rule 83 (expresionBool -> valorBool .)
    VAR             reduce using rule 83 (expresionBool -> valorBool .)
    VARIABLE        reduce using rule 83 (expresionBool -> valorBool .)
    WHILE           reduce using rule 83 (expresionBool -> valorBool .)
    DO              reduce using rule 83 (expresionBool -> valorBool .)
    IF              reduce using rule 83 (expresionBool -> valorBool .)
    ELSE            reduce using rule 83 (expresionBool -> valorBool .)
    PRINT           reduce using rule 83 (expresionBool -> valorBool .)
    NOT             reduce using rule 83 (expresionBool -> valorBool .)
    ENTERO          reduce using rule 83 (expresionBool -> valorBool .)
    DOUBLE          reduce using rule 83 (expresionBool -> valorBool .)
    STRING          reduce using rule 83 (expresionBool -> valorBool .)
    BOOL            reduce using rule 83 (expresionBool -> valorBool .)
    $end            reduce using rule 83 (expresionBool -> valorBool .)
    LDER            reduce using rule 83 (expresionBool -> valorBool .)
    PDER            reduce using rule 83 (expresionBool -> valorBool .)


state 29

    (86) expresionBool -> valor . IS objeto
    (87) expresionBool -> valor . ISNEGADO objeto
    (68) expresion -> valor . operadorMat expresion
    (69) expresion -> valor .
    (113) operadorMat -> . SUMA
    (114) operadorMat -> . RESTA
    (115) operadorMat -> . MULTI
    (116) operadorMat -> . DIV
    (117) operadorMat -> . DIVENTERO
    (118) operadorMat -> . MOD

    IS              shift and go to state 85
    ISNEGADO        shift and go to state 86
    PUNTOYCOMA      reduce using rule 69 (expresion -> valor .)
    INT             reduce using rule 69 (expresion -> valor .)
    DOUBLER         reduce using rule 69 (expresion -> valor .)
    NUM             reduce using rule 69 (expresion -> valor .)
    STRINGR         reduce using rule 69 (expresion -> valor .)
    BOOLR           reduce using rule 69 (expresion -> valor .)
    DYNAMIC         reduce using rule 69 (expresion -> valor .)
    VAR             reduce using rule 69 (expresion -> valor .)
    VARIABLE        reduce using rule 69 (expresion -> valor .)
    WHILE           reduce using rule 69 (expresion -> valor .)
    DO              reduce using rule 69 (expresion -> valor .)
    IF              reduce using rule 69 (expresion -> valor .)
    ELSE            reduce using rule 69 (expresion -> valor .)
    PRINT           reduce using rule 69 (expresion -> valor .)
    NOT             reduce using rule 69 (expresion -> valor .)
    ENTERO          reduce using rule 69 (expresion -> valor .)
    DOUBLE          reduce using rule 69 (expresion -> valor .)
    STRING          reduce using rule 69 (expresion -> valor .)
    BOOL            reduce using rule 69 (expresion -> valor .)
    $end            reduce using rule 69 (expresion -> valor .)
    LDER            reduce using rule 69 (expresion -> valor .)
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTI           shift and go to state 78
    DIV             shift and go to state 79
    DIVENTERO       shift and go to state 80
    MOD             shift and go to state 81

    operadorMat                    shift and go to state 87

state 30

    (74) sentenciaWhile -> WHILE . PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> WHILE . PIZQ expresionBool PDER algoritmo

    PIZQ            shift and go to state 88


state 31

    (76) sentenciaDoWhile -> DO . LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER

    LIZQ            shift and go to state 89


state 32

    (60) sentenciaIf -> IF . PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> IF . PIZQ expresionBool PDER LIZQ algoritmo LDER

    PIZQ            shift and go to state 90


state 33

    (62) sentenciaElse -> ELSE . algoritmo
    (63) sentenciaElse -> ELSE . LIZQ algoritmo LDER
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

    LIZQ            shift and go to state 92
    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

    algoritmo                      shift and go to state 91
    asignacion                     shift and go to state 93
    expresionInt                   shift and go to state 94
    expresionDouble                shift and go to state 95
    expresionString                shift and go to state 96
    expresionBool                  shift and go to state 97
    expresion                      shift and go to state 15
    sentenciaWhile                 shift and go to state 98
    sentenciaDoWhile               shift and go to state 99
    sentenciaIf                    shift and go to state 100
    sentenciaElse                  shift and go to state 101
    imprimir                       shift and go to state 102
    negacionBool                   shift and go to state 103
    comparacionBool                shift and go to state 104
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 34

    (58) imprimir -> PRINT . PIZQ expresion PDER
    (59) imprimir -> PRINT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 105


state 35

    (88) negacionBool -> NOT . PIZQ expresionBool PDER

    PIZQ            shift and go to state 106


state 36

    (105) valorInt -> ENTERO .
    (64) valor -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for INT resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for NUM resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRINGR resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOLR resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for VAR resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for WHILE resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for DO resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for IF resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for ELSE resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for PRINT resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for NOT resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for ENTERO resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRING resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOL resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for $end resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for LDER resolved using rule 64 (valor -> ENTERO .)
    DIGUAL          reduce using rule 105 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 105 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 105 (valorInt -> ENTERO .)
    MENOR           reduce using rule 105 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 105 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 105 (valorInt -> ENTERO .)
    IS              reduce using rule 64 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 64 (valor -> ENTERO .)
    SUMA            reduce using rule 64 (valor -> ENTERO .)
    RESTA           reduce using rule 64 (valor -> ENTERO .)
    MULTI           reduce using rule 64 (valor -> ENTERO .)
    DIV             reduce using rule 64 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 64 (valor -> ENTERO .)
    MOD             reduce using rule 64 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 64 (valor -> ENTERO .)
    INT             reduce using rule 64 (valor -> ENTERO .)
    DOUBLER         reduce using rule 64 (valor -> ENTERO .)
    NUM             reduce using rule 64 (valor -> ENTERO .)
    STRINGR         reduce using rule 64 (valor -> ENTERO .)
    BOOLR           reduce using rule 64 (valor -> ENTERO .)
    DYNAMIC         reduce using rule 64 (valor -> ENTERO .)
    VAR             reduce using rule 64 (valor -> ENTERO .)
    VARIABLE        reduce using rule 64 (valor -> ENTERO .)
    WHILE           reduce using rule 64 (valor -> ENTERO .)
    DO              reduce using rule 64 (valor -> ENTERO .)
    IF              reduce using rule 64 (valor -> ENTERO .)
    ELSE            reduce using rule 64 (valor -> ENTERO .)
    PRINT           reduce using rule 64 (valor -> ENTERO .)
    NOT             reduce using rule 64 (valor -> ENTERO .)
    ENTERO          reduce using rule 64 (valor -> ENTERO .)
    DOUBLE          reduce using rule 64 (valor -> ENTERO .)
    STRING          reduce using rule 64 (valor -> ENTERO .)
    BOOL            reduce using rule 64 (valor -> ENTERO .)
    $end            reduce using rule 64 (valor -> ENTERO .)
    LDER            reduce using rule 64 (valor -> ENTERO .)

  ! SUMA            [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! INT             [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! DOUBLER         [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! NUM             [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! STRINGR         [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! BOOLR           [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! DYNAMIC         [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! VAR             [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! VARIABLE        [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! WHILE           [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! DO              [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! IF              [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! ELSE            [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! PRINT           [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! NOT             [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! ENTERO          [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! DOUBLE          [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! STRING          [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! BOOL            [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! $end            [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! LDER            [ reduce using rule 105 (valorInt -> ENTERO .) ]


state 37

    (109) valorDouble -> DOUBLE .
    (66) valor -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for INT resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NUM resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VAR resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DO resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for IF resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NOT resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRING resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for $end resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for LDER resolved using rule 66 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 109 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 109 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 109 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 109 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 109 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 109 (valorDouble -> DOUBLE .)
    IS              reduce using rule 66 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 66 (valor -> DOUBLE .)
    SUMA            reduce using rule 66 (valor -> DOUBLE .)
    RESTA           reduce using rule 66 (valor -> DOUBLE .)
    MULTI           reduce using rule 66 (valor -> DOUBLE .)
    DIV             reduce using rule 66 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 66 (valor -> DOUBLE .)
    MOD             reduce using rule 66 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 66 (valor -> DOUBLE .)
    INT             reduce using rule 66 (valor -> DOUBLE .)
    DOUBLER         reduce using rule 66 (valor -> DOUBLE .)
    NUM             reduce using rule 66 (valor -> DOUBLE .)
    STRINGR         reduce using rule 66 (valor -> DOUBLE .)
    BOOLR           reduce using rule 66 (valor -> DOUBLE .)
    DYNAMIC         reduce using rule 66 (valor -> DOUBLE .)
    VAR             reduce using rule 66 (valor -> DOUBLE .)
    VARIABLE        reduce using rule 66 (valor -> DOUBLE .)
    WHILE           reduce using rule 66 (valor -> DOUBLE .)
    DO              reduce using rule 66 (valor -> DOUBLE .)
    IF              reduce using rule 66 (valor -> DOUBLE .)
    ELSE            reduce using rule 66 (valor -> DOUBLE .)
    PRINT           reduce using rule 66 (valor -> DOUBLE .)
    NOT             reduce using rule 66 (valor -> DOUBLE .)
    ENTERO          reduce using rule 66 (valor -> DOUBLE .)
    DOUBLE          reduce using rule 66 (valor -> DOUBLE .)
    STRING          reduce using rule 66 (valor -> DOUBLE .)
    BOOL            reduce using rule 66 (valor -> DOUBLE .)
    $end            reduce using rule 66 (valor -> DOUBLE .)
    LDER            reduce using rule 66 (valor -> DOUBLE .)

  ! SUMA            [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! INT             [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! DOUBLER         [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! NUM             [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! STRINGR         [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! BOOLR           [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! DYNAMIC         [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! VAR             [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! VARIABLE        [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! WHILE           [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! DO              [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! IF              [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! ELSE            [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! PRINT           [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! NOT             [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! ENTERO          [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! DOUBLE          [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! STRING          [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! BOOL            [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! $end            [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! LDER            [ reduce using rule 109 (valorDouble -> DOUBLE .) ]


state 38

    (101) valorString -> STRING .
    (67) valor -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for RESTA resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for MULTI resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for DIV resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for MOD resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for INT resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for NUM resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for STRINGR resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for BOOLR resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for VAR resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for WHILE resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for DO resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for IF resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for ELSE resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for PRINT resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for NOT resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for ENTERO resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for STRING resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for BOOL resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for $end resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for LDER resolved using rule 67 (valor -> STRING .)
    IS              reduce using rule 67 (valor -> STRING .)
    ISNEGADO        reduce using rule 67 (valor -> STRING .)
    SUMA            reduce using rule 67 (valor -> STRING .)
    RESTA           reduce using rule 67 (valor -> STRING .)
    MULTI           reduce using rule 67 (valor -> STRING .)
    DIV             reduce using rule 67 (valor -> STRING .)
    DIVENTERO       reduce using rule 67 (valor -> STRING .)
    MOD             reduce using rule 67 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 67 (valor -> STRING .)
    INT             reduce using rule 67 (valor -> STRING .)
    DOUBLER         reduce using rule 67 (valor -> STRING .)
    NUM             reduce using rule 67 (valor -> STRING .)
    STRINGR         reduce using rule 67 (valor -> STRING .)
    BOOLR           reduce using rule 67 (valor -> STRING .)
    DYNAMIC         reduce using rule 67 (valor -> STRING .)
    VAR             reduce using rule 67 (valor -> STRING .)
    VARIABLE        reduce using rule 67 (valor -> STRING .)
    WHILE           reduce using rule 67 (valor -> STRING .)
    DO              reduce using rule 67 (valor -> STRING .)
    IF              reduce using rule 67 (valor -> STRING .)
    ELSE            reduce using rule 67 (valor -> STRING .)
    PRINT           reduce using rule 67 (valor -> STRING .)
    NOT             reduce using rule 67 (valor -> STRING .)
    ENTERO          reduce using rule 67 (valor -> STRING .)
    DOUBLE          reduce using rule 67 (valor -> STRING .)
    STRING          reduce using rule 67 (valor -> STRING .)
    BOOL            reduce using rule 67 (valor -> STRING .)
    $end            reduce using rule 67 (valor -> STRING .)
    LDER            reduce using rule 67 (valor -> STRING .)

  ! SUMA            [ reduce using rule 101 (valorString -> STRING .) ]
  ! RESTA           [ reduce using rule 101 (valorString -> STRING .) ]
  ! MULTI           [ reduce using rule 101 (valorString -> STRING .) ]
  ! DIV             [ reduce using rule 101 (valorString -> STRING .) ]
  ! DIVENTERO       [ reduce using rule 101 (valorString -> STRING .) ]
  ! MOD             [ reduce using rule 101 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 101 (valorString -> STRING .) ]
  ! INT             [ reduce using rule 101 (valorString -> STRING .) ]
  ! DOUBLER         [ reduce using rule 101 (valorString -> STRING .) ]
  ! NUM             [ reduce using rule 101 (valorString -> STRING .) ]
  ! STRINGR         [ reduce using rule 101 (valorString -> STRING .) ]
  ! BOOLR           [ reduce using rule 101 (valorString -> STRING .) ]
  ! DYNAMIC         [ reduce using rule 101 (valorString -> STRING .) ]
  ! VAR             [ reduce using rule 101 (valorString -> STRING .) ]
  ! VARIABLE        [ reduce using rule 101 (valorString -> STRING .) ]
  ! WHILE           [ reduce using rule 101 (valorString -> STRING .) ]
  ! DO              [ reduce using rule 101 (valorString -> STRING .) ]
  ! IF              [ reduce using rule 101 (valorString -> STRING .) ]
  ! ELSE            [ reduce using rule 101 (valorString -> STRING .) ]
  ! PRINT           [ reduce using rule 101 (valorString -> STRING .) ]
  ! NOT             [ reduce using rule 101 (valorString -> STRING .) ]
  ! ENTERO          [ reduce using rule 101 (valorString -> STRING .) ]
  ! DOUBLE          [ reduce using rule 101 (valorString -> STRING .) ]
  ! STRING          [ reduce using rule 101 (valorString -> STRING .) ]
  ! BOOL            [ reduce using rule 101 (valorString -> STRING .) ]
  ! $end            [ reduce using rule 101 (valorString -> STRING .) ]
  ! LDER            [ reduce using rule 101 (valorString -> STRING .) ]


state 39

    (77) valorBool -> BOOL .

    PUNTOYCOMA      reduce using rule 77 (valorBool -> BOOL .)
    AND             reduce using rule 77 (valorBool -> BOOL .)
    OR              reduce using rule 77 (valorBool -> BOOL .)
    INT             reduce using rule 77 (valorBool -> BOOL .)
    DOUBLER         reduce using rule 77 (valorBool -> BOOL .)
    NUM             reduce using rule 77 (valorBool -> BOOL .)
    STRINGR         reduce using rule 77 (valorBool -> BOOL .)
    BOOLR           reduce using rule 77 (valorBool -> BOOL .)
    DYNAMIC         reduce using rule 77 (valorBool -> BOOL .)
    VAR             reduce using rule 77 (valorBool -> BOOL .)
    VARIABLE        reduce using rule 77 (valorBool -> BOOL .)
    WHILE           reduce using rule 77 (valorBool -> BOOL .)
    DO              reduce using rule 77 (valorBool -> BOOL .)
    IF              reduce using rule 77 (valorBool -> BOOL .)
    ELSE            reduce using rule 77 (valorBool -> BOOL .)
    PRINT           reduce using rule 77 (valorBool -> BOOL .)
    NOT             reduce using rule 77 (valorBool -> BOOL .)
    ENTERO          reduce using rule 77 (valorBool -> BOOL .)
    DOUBLE          reduce using rule 77 (valorBool -> BOOL .)
    STRING          reduce using rule 77 (valorBool -> BOOL .)
    BOOL            reduce using rule 77 (valorBool -> BOOL .)
    $end            reduce using rule 77 (valorBool -> BOOL .)
    LDER            reduce using rule 77 (valorBool -> BOOL .)
    PDER            reduce using rule 77 (valorBool -> BOOL .)


state 40

    (1) final -> algoritmo PUNTOYCOMA .
    (2) final -> algoritmo PUNTOYCOMA . final
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

    $end            reduce using rule 1 (final -> algoritmo PUNTOYCOMA .)
    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

    algoritmo                      shift and go to state 2
    final                          shift and go to state 107
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    comparacionBool                shift and go to state 14
    expresion                      shift and go to state 15
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 41

    (3) final -> asignacion PUNTOYCOMA .
    (4) final -> asignacion PUNTOYCOMA . final
    (33) algoritmo -> asignacion PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

    $end            reduce using rule 3 (final -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 33 (algoritmo -> asignacion PUNTOYCOMA .)
    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

    asignacion                     shift and go to state 3
    final                          shift and go to state 108
    algoritmo                      shift and go to state 2
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    comparacionBool                shift and go to state 14
    expresion                      shift and go to state 15
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 42

    (5) final -> expresionInt PUNTOYCOMA .
    (6) final -> expresionInt PUNTOYCOMA . final
    (34) algoritmo -> expresionInt PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

    $end            reduce using rule 5 (final -> expresionInt PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 34 (algoritmo -> expresionInt PUNTOYCOMA .)
    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

    expresionInt                   shift and go to state 4
    final                          shift and go to state 109
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    comparacionBool                shift and go to state 14
    expresion                      shift and go to state 15
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 43

    (7) final -> expresionDouble PUNTOYCOMA .
    (8) final -> expresionDouble PUNTOYCOMA . final
    (35) algoritmo -> expresionDouble PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

    $end            reduce using rule 7 (final -> expresionDouble PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 35 (algoritmo -> expresionDouble PUNTOYCOMA .)
    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

    expresionDouble                shift and go to state 5
    final                          shift and go to state 110
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    comparacionBool                shift and go to state 14
    expresion                      shift and go to state 15
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 44

    (9) final -> expresionString PUNTOYCOMA .
    (10) final -> expresionString PUNTOYCOMA . final
    (36) algoritmo -> expresionString PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

    $end            reduce using rule 9 (final -> expresionString PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 36 (algoritmo -> expresionString PUNTOYCOMA .)
    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

    expresionString                shift and go to state 6
    final                          shift and go to state 111
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    comparacionBool                shift and go to state 14
    expresion                      shift and go to state 15
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 45

    (11) final -> expresionBool PUNTOYCOMA .
    (12) final -> expresionBool PUNTOYCOMA . final
    (37) algoritmo -> expresionBool PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

    $end            reduce using rule 11 (final -> expresionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 37 (algoritmo -> expresionBool PUNTOYCOMA .)
    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

    expresionBool                  shift and go to state 7
    final                          shift and go to state 112
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    comparacionBool                shift and go to state 14
    expresion                      shift and go to state 15
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 46

    (89) comparacionBool -> expresionBool operadorLogico . expresionBool
    (90) comparacionBool -> expresionBool operadorLogico . comparacionBool
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 116
    DOUBLE          shift and go to state 37
    BOOL            shift and go to state 39
    NOT             shift and go to state 35
    ENTERO          shift and go to state 120
    STRING          shift and go to state 121

    expresionBool                  shift and go to state 113
    comparacionBool                shift and go to state 114
    valorDouble                    shift and go to state 115
    valorBool                      shift and go to state 28
    negacionBool                   shift and go to state 117
    valor                          shift and go to state 118
    valorInt                       shift and go to state 119

state 47

    (125) operadorLogico -> AND .

    VARIABLE        reduce using rule 125 (operadorLogico -> AND .)
    DOUBLE          reduce using rule 125 (operadorLogico -> AND .)
    BOOL            reduce using rule 125 (operadorLogico -> AND .)
    NOT             reduce using rule 125 (operadorLogico -> AND .)
    ENTERO          reduce using rule 125 (operadorLogico -> AND .)
    STRING          reduce using rule 125 (operadorLogico -> AND .)


state 48

    (126) operadorLogico -> OR .

    VARIABLE        reduce using rule 126 (operadorLogico -> OR .)
    DOUBLE          reduce using rule 126 (operadorLogico -> OR .)
    BOOL            reduce using rule 126 (operadorLogico -> OR .)
    NOT             reduce using rule 126 (operadorLogico -> OR .)
    ENTERO          reduce using rule 126 (operadorLogico -> OR .)
    STRING          reduce using rule 126 (operadorLogico -> OR .)


state 49

    (14) final -> sentenciaWhile final .

    $end            reduce using rule 14 (final -> sentenciaWhile final .)


state 50

    (15) final -> sentenciaWhile PUNTOYCOMA .
    (16) final -> sentenciaWhile PUNTOYCOMA . final
    (40) algoritmo -> sentenciaWhile PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

    $end            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 40 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 122
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    comparacionBool                shift and go to state 14
    expresion                      shift and go to state 15
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 51

    (17) final -> sentenciaDoWhile PUNTOYCOMA .
    (18) final -> sentenciaDoWhile PUNTOYCOMA . final
    (41) algoritmo -> sentenciaDoWhile PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

    $end            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 41 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

    sentenciaDoWhile               shift and go to state 9
    final                          shift and go to state 123
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    comparacionBool                shift and go to state 14
    expresion                      shift and go to state 15
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 52

    (19) final -> sentenciaIf PUNTOYCOMA .
    (20) final -> sentenciaIf PUNTOYCOMA . final
    (42) algoritmo -> sentenciaIf PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

    $end            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 42 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 124
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    comparacionBool                shift and go to state 14
    expresion                      shift and go to state 15
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 53

    (22) final -> sentenciaIf final .

    $end            reduce using rule 22 (final -> sentenciaIf final .)


state 54

    (23) final -> sentenciaElse PUNTOYCOMA .
    (24) final -> sentenciaElse PUNTOYCOMA . final
    (44) algoritmo -> sentenciaElse PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

    $end            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 44 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 125
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    negacionBool                   shift and go to state 13
    comparacionBool                shift and go to state 14
    expresion                      shift and go to state 15
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 55

    (26) final -> sentenciaElse final .

    $end            reduce using rule 26 (final -> sentenciaElse final .)


state 56

    (27) final -> imprimir PUNTOYCOMA .
    (28) final -> imprimir PUNTOYCOMA . final
    (46) algoritmo -> imprimir PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

    $end            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 46 (algoritmo -> imprimir PUNTOYCOMA .)
    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

    imprimir                       shift and go to state 12
    final                          shift and go to state 126
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    negacionBool                   shift and go to state 13
    comparacionBool                shift and go to state 14
    expresion                      shift and go to state 15
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 57

    (29) final -> negacionBool PUNTOYCOMA .
    (30) final -> negacionBool PUNTOYCOMA . final
    (47) algoritmo -> negacionBool PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . negacionBool PUNTOYCOMA
    (30) final -> . negacionBool PUNTOYCOMA final
    (31) final -> . comparacionBool final
    (32) final -> . comparacionBool PUNTOYCOMA
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

    $end            reduce using rule 29 (final -> negacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 47 (algoritmo -> negacionBool PUNTOYCOMA .)
    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

    negacionBool                   shift and go to state 13
    final                          shift and go to state 127
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    comparacionBool                shift and go to state 14
    expresion                      shift and go to state 15
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 58

    (31) final -> comparacionBool final .

    $end            reduce using rule 31 (final -> comparacionBool final .)


state 59

    (32) final -> comparacionBool PUNTOYCOMA .
    (48) algoritmo -> comparacionBool PUNTOYCOMA .

    $end            reduce using rule 32 (final -> comparacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 48 (algoritmo -> comparacionBool PUNTOYCOMA .)


state 60

    (49) asignacion -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 128


state 61

    (80) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (81) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 129
    DOUBLE          shift and go to state 132
    ENTERO          shift and go to state 133

    expresionDouble                shift and go to state 130
    valorDouble                    shift and go to state 131
    valorInt                       shift and go to state 119

state 62

    (57) asignacionSimple -> VARIABLE IGUAL . expresion
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool

    ENTERO          shift and go to state 120
    VARIABLE        shift and go to state 134
    DOUBLE          shift and go to state 141
    STRING          shift and go to state 142
    BOOL            shift and go to state 39
    NOT             shift and go to state 35

    expresion                      shift and go to state 135
    valor                          shift and go to state 136
    expresionString                shift and go to state 137
    expresionInt                   shift and go to state 138
    expresionDouble                shift and go to state 139
    expresionBool                  shift and go to state 140
    valorString                    shift and go to state 27
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorBool                      shift and go to state 28
    negacionBool                   shift and go to state 117
    comparacionBool                shift and go to state 143

state 63

    (119) comparadorMat -> DIGUAL .

    VARIABLE        reduce using rule 119 (comparadorMat -> DIGUAL .)
    DOUBLE          reduce using rule 119 (comparadorMat -> DIGUAL .)
    ENTERO          reduce using rule 119 (comparadorMat -> DIGUAL .)


state 64

    (120) comparadorMat -> NOIGUAL .

    VARIABLE        reduce using rule 120 (comparadorMat -> NOIGUAL .)
    DOUBLE          reduce using rule 120 (comparadorMat -> NOIGUAL .)
    ENTERO          reduce using rule 120 (comparadorMat -> NOIGUAL .)


state 65

    (121) comparadorMat -> MAYOR .

    VARIABLE        reduce using rule 121 (comparadorMat -> MAYOR .)
    DOUBLE          reduce using rule 121 (comparadorMat -> MAYOR .)
    ENTERO          reduce using rule 121 (comparadorMat -> MAYOR .)


state 66

    (122) comparadorMat -> MENOR .

    VARIABLE        reduce using rule 122 (comparadorMat -> MENOR .)
    DOUBLE          reduce using rule 122 (comparadorMat -> MENOR .)
    ENTERO          reduce using rule 122 (comparadorMat -> MENOR .)


state 67

    (123) comparadorMat -> MAYIGUAL .

    VARIABLE        reduce using rule 123 (comparadorMat -> MAYIGUAL .)
    DOUBLE          reduce using rule 123 (comparadorMat -> MAYIGUAL .)
    ENTERO          reduce using rule 123 (comparadorMat -> MAYIGUAL .)


state 68

    (124) comparadorMat -> MENIGUAL .

    VARIABLE        reduce using rule 124 (comparadorMat -> MENIGUAL .)
    DOUBLE          reduce using rule 124 (comparadorMat -> MENIGUAL .)
    ENTERO          reduce using rule 124 (comparadorMat -> MENIGUAL .)


state 69

    (50) asignacion -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 144


state 70

    (51) asignacion -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 145


state 71

    (52) asignacion -> STRINGR VARIABLE . IGUAL expresionString

    IGUAL           shift and go to state 146


state 72

    (53) asignacion -> BOOLR VARIABLE . IGUAL expresionBool

    IGUAL           shift and go to state 147


state 73

    (54) asignacion -> DYNAMIC VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 148


state 74

    (55) asignacion -> VAR VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 149


state 75

    (107) expresionInt -> valorInt operadorMat . expresionInt
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE

    ENTERO          shift and go to state 133
    VARIABLE        shift and go to state 152

    valorInt                       shift and go to state 150
    expresionInt                   shift and go to state 151

state 76

    (113) operadorMat -> SUMA .

    ENTERO          reduce using rule 113 (operadorMat -> SUMA .)
    VARIABLE        reduce using rule 113 (operadorMat -> SUMA .)
    DOUBLE          reduce using rule 113 (operadorMat -> SUMA .)
    STRING          reduce using rule 113 (operadorMat -> SUMA .)
    BOOL            reduce using rule 113 (operadorMat -> SUMA .)
    NOT             reduce using rule 113 (operadorMat -> SUMA .)


state 77

    (114) operadorMat -> RESTA .

    ENTERO          reduce using rule 114 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 114 (operadorMat -> RESTA .)
    DOUBLE          reduce using rule 114 (operadorMat -> RESTA .)
    STRING          reduce using rule 114 (operadorMat -> RESTA .)
    BOOL            reduce using rule 114 (operadorMat -> RESTA .)
    NOT             reduce using rule 114 (operadorMat -> RESTA .)


state 78

    (115) operadorMat -> MULTI .

    ENTERO          reduce using rule 115 (operadorMat -> MULTI .)
    VARIABLE        reduce using rule 115 (operadorMat -> MULTI .)
    DOUBLE          reduce using rule 115 (operadorMat -> MULTI .)
    STRING          reduce using rule 115 (operadorMat -> MULTI .)
    BOOL            reduce using rule 115 (operadorMat -> MULTI .)
    NOT             reduce using rule 115 (operadorMat -> MULTI .)


state 79

    (116) operadorMat -> DIV .

    ENTERO          reduce using rule 116 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 116 (operadorMat -> DIV .)
    DOUBLE          reduce using rule 116 (operadorMat -> DIV .)
    STRING          reduce using rule 116 (operadorMat -> DIV .)
    BOOL            reduce using rule 116 (operadorMat -> DIV .)
    NOT             reduce using rule 116 (operadorMat -> DIV .)


state 80

    (117) operadorMat -> DIVENTERO .

    ENTERO          reduce using rule 117 (operadorMat -> DIVENTERO .)
    VARIABLE        reduce using rule 117 (operadorMat -> DIVENTERO .)
    DOUBLE          reduce using rule 117 (operadorMat -> DIVENTERO .)
    STRING          reduce using rule 117 (operadorMat -> DIVENTERO .)
    BOOL            reduce using rule 117 (operadorMat -> DIVENTERO .)
    NOT             reduce using rule 117 (operadorMat -> DIVENTERO .)


state 81

    (118) operadorMat -> MOD .

    ENTERO          reduce using rule 118 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 118 (operadorMat -> MOD .)
    DOUBLE          reduce using rule 118 (operadorMat -> MOD .)
    STRING          reduce using rule 118 (operadorMat -> MOD .)
    BOOL            reduce using rule 118 (operadorMat -> MOD .)
    NOT             reduce using rule 118 (operadorMat -> MOD .)


state 82

    (111) expresionDouble -> valorDouble operadorMat . expresionDouble
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 132
    ENTERO          shift and go to state 133
    VARIABLE        shift and go to state 152

    valorDouble                    shift and go to state 131
    expresionDouble                shift and go to state 153
    valorInt                       shift and go to state 119

state 83

    (79) expresionBool -> valorDouble comparadorMat . expresionDouble
    (82) expresionBool -> valorDouble comparadorMat . VARIABLE
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 155
    DOUBLE          shift and go to state 132
    ENTERO          shift and go to state 133

    valorDouble                    shift and go to state 131
    expresionDouble                shift and go to state 154
    valorInt                       shift and go to state 119

state 84

    (103) expresionString -> valorString operadorMat . expresionString
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE

    STRING          shift and go to state 157
    VARIABLE        shift and go to state 158

    valorString                    shift and go to state 27
    expresionString                shift and go to state 156

state 85

    (86) expresionBool -> valor IS . objeto
    (91) objeto -> . STRINGR
    (92) objeto -> . INT
    (93) objeto -> . DOUBLER
    (94) objeto -> . NUM
    (95) objeto -> . VAR
    (96) objeto -> . DYNAMIC
    (97) objeto -> . LIST
    (98) objeto -> . BOOL
    (99) objeto -> . MAP
    (100) objeto -> . SET

    STRINGR         shift and go to state 160
    INT             shift and go to state 161
    DOUBLER         shift and go to state 162
    NUM             shift and go to state 163
    VAR             shift and go to state 164
    DYNAMIC         shift and go to state 165
    LIST            shift and go to state 166
    BOOL            shift and go to state 167
    MAP             shift and go to state 168
    SET             shift and go to state 169

    objeto                         shift and go to state 159

state 86

    (87) expresionBool -> valor ISNEGADO . objeto
    (91) objeto -> . STRINGR
    (92) objeto -> . INT
    (93) objeto -> . DOUBLER
    (94) objeto -> . NUM
    (95) objeto -> . VAR
    (96) objeto -> . DYNAMIC
    (97) objeto -> . LIST
    (98) objeto -> . BOOL
    (99) objeto -> . MAP
    (100) objeto -> . SET

    STRINGR         shift and go to state 160
    INT             shift and go to state 161
    DOUBLER         shift and go to state 162
    NUM             shift and go to state 163
    VAR             shift and go to state 164
    DYNAMIC         shift and go to state 165
    LIST            shift and go to state 166
    BOOL            shift and go to state 167
    MAP             shift and go to state 168
    SET             shift and go to state 169

    objeto                         shift and go to state 170

state 87

    (68) expresion -> valor operadorMat . expresion
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool

    ENTERO          shift and go to state 120
    VARIABLE        shift and go to state 134
    DOUBLE          shift and go to state 141
    STRING          shift and go to state 142
    BOOL            shift and go to state 39
    NOT             shift and go to state 35

    valor                          shift and go to state 136
    expresion                      shift and go to state 171
    expresionString                shift and go to state 137
    expresionInt                   shift and go to state 138
    expresionDouble                shift and go to state 139
    expresionBool                  shift and go to state 140
    valorString                    shift and go to state 27
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorBool                      shift and go to state 28
    negacionBool                   shift and go to state 117
    comparacionBool                shift and go to state 143

state 88

    (74) sentenciaWhile -> WHILE PIZQ . expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> WHILE PIZQ . expresionBool PDER algoritmo
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 116
    DOUBLE          shift and go to state 37
    BOOL            shift and go to state 39
    NOT             shift and go to state 35
    ENTERO          shift and go to state 120
    STRING          shift and go to state 121

    expresionBool                  shift and go to state 172
    valorDouble                    shift and go to state 115
    valorBool                      shift and go to state 28
    negacionBool                   shift and go to state 117
    comparacionBool                shift and go to state 143
    valor                          shift and go to state 118
    valorInt                       shift and go to state 119

state 89

    (76) sentenciaDoWhile -> DO LIZQ . algoritmo LDER WHILE PIZQ expresionBool PDER
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

    algoritmo                      shift and go to state 173
    expresionBool                  shift and go to state 97
    asignacion                     shift and go to state 93
    expresionInt                   shift and go to state 94
    expresionDouble                shift and go to state 95
    expresionString                shift and go to state 96
    expresion                      shift and go to state 15
    sentenciaWhile                 shift and go to state 98
    sentenciaDoWhile               shift and go to state 99
    sentenciaIf                    shift and go to state 100
    sentenciaElse                  shift and go to state 101
    imprimir                       shift and go to state 102
    negacionBool                   shift and go to state 103
    comparacionBool                shift and go to state 104
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 90

    (60) sentenciaIf -> IF PIZQ . expresionBool PDER algoritmo
    (61) sentenciaIf -> IF PIZQ . expresionBool PDER LIZQ algoritmo LDER
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 116
    DOUBLE          shift and go to state 37
    BOOL            shift and go to state 39
    NOT             shift and go to state 35
    ENTERO          shift and go to state 120
    STRING          shift and go to state 121

    expresionBool                  shift and go to state 174
    valorDouble                    shift and go to state 115
    valorBool                      shift and go to state 28
    negacionBool                   shift and go to state 117
    comparacionBool                shift and go to state 143
    valor                          shift and go to state 118
    valorInt                       shift and go to state 119

state 91

    (62) sentenciaElse -> ELSE algoritmo .

    PUNTOYCOMA      reduce using rule 62 (sentenciaElse -> ELSE algoritmo .)
    INT             reduce using rule 62 (sentenciaElse -> ELSE algoritmo .)
    DOUBLER         reduce using rule 62 (sentenciaElse -> ELSE algoritmo .)
    NUM             reduce using rule 62 (sentenciaElse -> ELSE algoritmo .)
    STRINGR         reduce using rule 62 (sentenciaElse -> ELSE algoritmo .)
    BOOLR           reduce using rule 62 (sentenciaElse -> ELSE algoritmo .)
    DYNAMIC         reduce using rule 62 (sentenciaElse -> ELSE algoritmo .)
    VAR             reduce using rule 62 (sentenciaElse -> ELSE algoritmo .)
    VARIABLE        reduce using rule 62 (sentenciaElse -> ELSE algoritmo .)
    WHILE           reduce using rule 62 (sentenciaElse -> ELSE algoritmo .)
    DO              reduce using rule 62 (sentenciaElse -> ELSE algoritmo .)
    IF              reduce using rule 62 (sentenciaElse -> ELSE algoritmo .)
    ELSE            reduce using rule 62 (sentenciaElse -> ELSE algoritmo .)
    PRINT           reduce using rule 62 (sentenciaElse -> ELSE algoritmo .)
    NOT             reduce using rule 62 (sentenciaElse -> ELSE algoritmo .)
    ENTERO          reduce using rule 62 (sentenciaElse -> ELSE algoritmo .)
    DOUBLE          reduce using rule 62 (sentenciaElse -> ELSE algoritmo .)
    STRING          reduce using rule 62 (sentenciaElse -> ELSE algoritmo .)
    BOOL            reduce using rule 62 (sentenciaElse -> ELSE algoritmo .)
    $end            reduce using rule 62 (sentenciaElse -> ELSE algoritmo .)
    LDER            reduce using rule 62 (sentenciaElse -> ELSE algoritmo .)


state 92

    (63) sentenciaElse -> ELSE LIZQ . algoritmo LDER
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

    algoritmo                      shift and go to state 175
    asignacion                     shift and go to state 93
    expresionInt                   shift and go to state 94
    expresionDouble                shift and go to state 95
    expresionString                shift and go to state 96
    expresionBool                  shift and go to state 97
    expresion                      shift and go to state 15
    sentenciaWhile                 shift and go to state 98
    sentenciaDoWhile               shift and go to state 99
    sentenciaIf                    shift and go to state 100
    sentenciaElse                  shift and go to state 101
    imprimir                       shift and go to state 102
    negacionBool                   shift and go to state 103
    comparacionBool                shift and go to state 104
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 93

    (33) algoritmo -> asignacion . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 176


state 94

    (34) algoritmo -> expresionInt . PUNTOYCOMA
    (71) expresion -> expresionInt .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 177
    INT             reduce using rule 71 (expresion -> expresionInt .)
    DOUBLER         reduce using rule 71 (expresion -> expresionInt .)
    NUM             reduce using rule 71 (expresion -> expresionInt .)
    STRINGR         reduce using rule 71 (expresion -> expresionInt .)
    BOOLR           reduce using rule 71 (expresion -> expresionInt .)
    DYNAMIC         reduce using rule 71 (expresion -> expresionInt .)
    VAR             reduce using rule 71 (expresion -> expresionInt .)
    VARIABLE        reduce using rule 71 (expresion -> expresionInt .)
    WHILE           reduce using rule 71 (expresion -> expresionInt .)
    DO              reduce using rule 71 (expresion -> expresionInt .)
    IF              reduce using rule 71 (expresion -> expresionInt .)
    ELSE            reduce using rule 71 (expresion -> expresionInt .)
    PRINT           reduce using rule 71 (expresion -> expresionInt .)
    NOT             reduce using rule 71 (expresion -> expresionInt .)
    ENTERO          reduce using rule 71 (expresion -> expresionInt .)
    DOUBLE          reduce using rule 71 (expresion -> expresionInt .)
    STRING          reduce using rule 71 (expresion -> expresionInt .)
    BOOL            reduce using rule 71 (expresion -> expresionInt .)
    $end            reduce using rule 71 (expresion -> expresionInt .)
    LDER            reduce using rule 71 (expresion -> expresionInt .)

  ! PUNTOYCOMA      [ reduce using rule 71 (expresion -> expresionInt .) ]


state 95

    (35) algoritmo -> expresionDouble . PUNTOYCOMA
    (72) expresion -> expresionDouble .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 178
    INT             reduce using rule 72 (expresion -> expresionDouble .)
    DOUBLER         reduce using rule 72 (expresion -> expresionDouble .)
    NUM             reduce using rule 72 (expresion -> expresionDouble .)
    STRINGR         reduce using rule 72 (expresion -> expresionDouble .)
    BOOLR           reduce using rule 72 (expresion -> expresionDouble .)
    DYNAMIC         reduce using rule 72 (expresion -> expresionDouble .)
    VAR             reduce using rule 72 (expresion -> expresionDouble .)
    VARIABLE        reduce using rule 72 (expresion -> expresionDouble .)
    WHILE           reduce using rule 72 (expresion -> expresionDouble .)
    DO              reduce using rule 72 (expresion -> expresionDouble .)
    IF              reduce using rule 72 (expresion -> expresionDouble .)
    ELSE            reduce using rule 72 (expresion -> expresionDouble .)
    PRINT           reduce using rule 72 (expresion -> expresionDouble .)
    NOT             reduce using rule 72 (expresion -> expresionDouble .)
    ENTERO          reduce using rule 72 (expresion -> expresionDouble .)
    DOUBLE          reduce using rule 72 (expresion -> expresionDouble .)
    STRING          reduce using rule 72 (expresion -> expresionDouble .)
    BOOL            reduce using rule 72 (expresion -> expresionDouble .)
    $end            reduce using rule 72 (expresion -> expresionDouble .)
    LDER            reduce using rule 72 (expresion -> expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 72 (expresion -> expresionDouble .) ]


state 96

    (36) algoritmo -> expresionString . PUNTOYCOMA
    (70) expresion -> expresionString .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 179
    INT             reduce using rule 70 (expresion -> expresionString .)
    DOUBLER         reduce using rule 70 (expresion -> expresionString .)
    NUM             reduce using rule 70 (expresion -> expresionString .)
    STRINGR         reduce using rule 70 (expresion -> expresionString .)
    BOOLR           reduce using rule 70 (expresion -> expresionString .)
    DYNAMIC         reduce using rule 70 (expresion -> expresionString .)
    VAR             reduce using rule 70 (expresion -> expresionString .)
    VARIABLE        reduce using rule 70 (expresion -> expresionString .)
    WHILE           reduce using rule 70 (expresion -> expresionString .)
    DO              reduce using rule 70 (expresion -> expresionString .)
    IF              reduce using rule 70 (expresion -> expresionString .)
    ELSE            reduce using rule 70 (expresion -> expresionString .)
    PRINT           reduce using rule 70 (expresion -> expresionString .)
    NOT             reduce using rule 70 (expresion -> expresionString .)
    ENTERO          reduce using rule 70 (expresion -> expresionString .)
    DOUBLE          reduce using rule 70 (expresion -> expresionString .)
    STRING          reduce using rule 70 (expresion -> expresionString .)
    BOOL            reduce using rule 70 (expresion -> expresionString .)
    $end            reduce using rule 70 (expresion -> expresionString .)
    LDER            reduce using rule 70 (expresion -> expresionString .)

  ! PUNTOYCOMA      [ reduce using rule 70 (expresion -> expresionString .) ]


state 97

    (37) algoritmo -> expresionBool . PUNTOYCOMA
    (73) expresion -> expresionBool .
    (89) comparacionBool -> expresionBool . operadorLogico expresionBool
    (90) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (125) operadorLogico -> . AND
    (126) operadorLogico -> . OR

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 180
    INT             reduce using rule 73 (expresion -> expresionBool .)
    DOUBLER         reduce using rule 73 (expresion -> expresionBool .)
    NUM             reduce using rule 73 (expresion -> expresionBool .)
    STRINGR         reduce using rule 73 (expresion -> expresionBool .)
    BOOLR           reduce using rule 73 (expresion -> expresionBool .)
    DYNAMIC         reduce using rule 73 (expresion -> expresionBool .)
    VAR             reduce using rule 73 (expresion -> expresionBool .)
    VARIABLE        reduce using rule 73 (expresion -> expresionBool .)
    WHILE           reduce using rule 73 (expresion -> expresionBool .)
    DO              reduce using rule 73 (expresion -> expresionBool .)
    IF              reduce using rule 73 (expresion -> expresionBool .)
    ELSE            reduce using rule 73 (expresion -> expresionBool .)
    PRINT           reduce using rule 73 (expresion -> expresionBool .)
    NOT             reduce using rule 73 (expresion -> expresionBool .)
    ENTERO          reduce using rule 73 (expresion -> expresionBool .)
    DOUBLE          reduce using rule 73 (expresion -> expresionBool .)
    STRING          reduce using rule 73 (expresion -> expresionBool .)
    BOOL            reduce using rule 73 (expresion -> expresionBool .)
    $end            reduce using rule 73 (expresion -> expresionBool .)
    LDER            reduce using rule 73 (expresion -> expresionBool .)
    AND             shift and go to state 47
    OR              shift and go to state 48

  ! PUNTOYCOMA      [ reduce using rule 73 (expresion -> expresionBool .) ]

    operadorLogico                 shift and go to state 46

state 98

    (39) algoritmo -> sentenciaWhile .
    (40) algoritmo -> sentenciaWhile . PUNTOYCOMA

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    INT             reduce using rule 39 (algoritmo -> sentenciaWhile .)
    DOUBLER         reduce using rule 39 (algoritmo -> sentenciaWhile .)
    NUM             reduce using rule 39 (algoritmo -> sentenciaWhile .)
    STRINGR         reduce using rule 39 (algoritmo -> sentenciaWhile .)
    BOOLR           reduce using rule 39 (algoritmo -> sentenciaWhile .)
    DYNAMIC         reduce using rule 39 (algoritmo -> sentenciaWhile .)
    VAR             reduce using rule 39 (algoritmo -> sentenciaWhile .)
    VARIABLE        reduce using rule 39 (algoritmo -> sentenciaWhile .)
    WHILE           reduce using rule 39 (algoritmo -> sentenciaWhile .)
    DO              reduce using rule 39 (algoritmo -> sentenciaWhile .)
    IF              reduce using rule 39 (algoritmo -> sentenciaWhile .)
    ELSE            reduce using rule 39 (algoritmo -> sentenciaWhile .)
    PRINT           reduce using rule 39 (algoritmo -> sentenciaWhile .)
    NOT             reduce using rule 39 (algoritmo -> sentenciaWhile .)
    ENTERO          reduce using rule 39 (algoritmo -> sentenciaWhile .)
    DOUBLE          reduce using rule 39 (algoritmo -> sentenciaWhile .)
    STRING          reduce using rule 39 (algoritmo -> sentenciaWhile .)
    BOOL            reduce using rule 39 (algoritmo -> sentenciaWhile .)
    $end            reduce using rule 39 (algoritmo -> sentenciaWhile .)
    LDER            reduce using rule 39 (algoritmo -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 181

  ! PUNTOYCOMA      [ reduce using rule 39 (algoritmo -> sentenciaWhile .) ]


state 99

    (41) algoritmo -> sentenciaDoWhile . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 182


state 100

    (42) algoritmo -> sentenciaIf . PUNTOYCOMA
    (43) algoritmo -> sentenciaIf .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 183
    INT             reduce using rule 43 (algoritmo -> sentenciaIf .)
    DOUBLER         reduce using rule 43 (algoritmo -> sentenciaIf .)
    NUM             reduce using rule 43 (algoritmo -> sentenciaIf .)
    STRINGR         reduce using rule 43 (algoritmo -> sentenciaIf .)
    BOOLR           reduce using rule 43 (algoritmo -> sentenciaIf .)
    DYNAMIC         reduce using rule 43 (algoritmo -> sentenciaIf .)
    VAR             reduce using rule 43 (algoritmo -> sentenciaIf .)
    VARIABLE        reduce using rule 43 (algoritmo -> sentenciaIf .)
    WHILE           reduce using rule 43 (algoritmo -> sentenciaIf .)
    DO              reduce using rule 43 (algoritmo -> sentenciaIf .)
    IF              reduce using rule 43 (algoritmo -> sentenciaIf .)
    ELSE            reduce using rule 43 (algoritmo -> sentenciaIf .)
    PRINT           reduce using rule 43 (algoritmo -> sentenciaIf .)
    NOT             reduce using rule 43 (algoritmo -> sentenciaIf .)
    ENTERO          reduce using rule 43 (algoritmo -> sentenciaIf .)
    DOUBLE          reduce using rule 43 (algoritmo -> sentenciaIf .)
    STRING          reduce using rule 43 (algoritmo -> sentenciaIf .)
    BOOL            reduce using rule 43 (algoritmo -> sentenciaIf .)
    $end            reduce using rule 43 (algoritmo -> sentenciaIf .)
    LDER            reduce using rule 43 (algoritmo -> sentenciaIf .)

  ! PUNTOYCOMA      [ reduce using rule 43 (algoritmo -> sentenciaIf .) ]


state 101

    (44) algoritmo -> sentenciaElse . PUNTOYCOMA
    (45) algoritmo -> sentenciaElse .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 184
    INT             reduce using rule 45 (algoritmo -> sentenciaElse .)
    DOUBLER         reduce using rule 45 (algoritmo -> sentenciaElse .)
    NUM             reduce using rule 45 (algoritmo -> sentenciaElse .)
    STRINGR         reduce using rule 45 (algoritmo -> sentenciaElse .)
    BOOLR           reduce using rule 45 (algoritmo -> sentenciaElse .)
    DYNAMIC         reduce using rule 45 (algoritmo -> sentenciaElse .)
    VAR             reduce using rule 45 (algoritmo -> sentenciaElse .)
    VARIABLE        reduce using rule 45 (algoritmo -> sentenciaElse .)
    WHILE           reduce using rule 45 (algoritmo -> sentenciaElse .)
    DO              reduce using rule 45 (algoritmo -> sentenciaElse .)
    IF              reduce using rule 45 (algoritmo -> sentenciaElse .)
    ELSE            reduce using rule 45 (algoritmo -> sentenciaElse .)
    PRINT           reduce using rule 45 (algoritmo -> sentenciaElse .)
    NOT             reduce using rule 45 (algoritmo -> sentenciaElse .)
    ENTERO          reduce using rule 45 (algoritmo -> sentenciaElse .)
    DOUBLE          reduce using rule 45 (algoritmo -> sentenciaElse .)
    STRING          reduce using rule 45 (algoritmo -> sentenciaElse .)
    BOOL            reduce using rule 45 (algoritmo -> sentenciaElse .)
    $end            reduce using rule 45 (algoritmo -> sentenciaElse .)
    LDER            reduce using rule 45 (algoritmo -> sentenciaElse .)

  ! PUNTOYCOMA      [ reduce using rule 45 (algoritmo -> sentenciaElse .) ]


state 102

    (46) algoritmo -> imprimir . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 185


state 103

    (47) algoritmo -> negacionBool . PUNTOYCOMA
    (84) expresionBool -> negacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 186
    AND             reduce using rule 84 (expresionBool -> negacionBool .)
    OR              reduce using rule 84 (expresionBool -> negacionBool .)
    INT             reduce using rule 84 (expresionBool -> negacionBool .)
    DOUBLER         reduce using rule 84 (expresionBool -> negacionBool .)
    NUM             reduce using rule 84 (expresionBool -> negacionBool .)
    STRINGR         reduce using rule 84 (expresionBool -> negacionBool .)
    BOOLR           reduce using rule 84 (expresionBool -> negacionBool .)
    DYNAMIC         reduce using rule 84 (expresionBool -> negacionBool .)
    VAR             reduce using rule 84 (expresionBool -> negacionBool .)
    VARIABLE        reduce using rule 84 (expresionBool -> negacionBool .)
    WHILE           reduce using rule 84 (expresionBool -> negacionBool .)
    DO              reduce using rule 84 (expresionBool -> negacionBool .)
    IF              reduce using rule 84 (expresionBool -> negacionBool .)
    ELSE            reduce using rule 84 (expresionBool -> negacionBool .)
    PRINT           reduce using rule 84 (expresionBool -> negacionBool .)
    NOT             reduce using rule 84 (expresionBool -> negacionBool .)
    ENTERO          reduce using rule 84 (expresionBool -> negacionBool .)
    DOUBLE          reduce using rule 84 (expresionBool -> negacionBool .)
    STRING          reduce using rule 84 (expresionBool -> negacionBool .)
    BOOL            reduce using rule 84 (expresionBool -> negacionBool .)
    $end            reduce using rule 84 (expresionBool -> negacionBool .)
    LDER            reduce using rule 84 (expresionBool -> negacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 84 (expresionBool -> negacionBool .) ]


state 104

    (48) algoritmo -> comparacionBool . PUNTOYCOMA
    (85) expresionBool -> comparacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 187
    AND             reduce using rule 85 (expresionBool -> comparacionBool .)
    OR              reduce using rule 85 (expresionBool -> comparacionBool .)
    INT             reduce using rule 85 (expresionBool -> comparacionBool .)
    DOUBLER         reduce using rule 85 (expresionBool -> comparacionBool .)
    NUM             reduce using rule 85 (expresionBool -> comparacionBool .)
    STRINGR         reduce using rule 85 (expresionBool -> comparacionBool .)
    BOOLR           reduce using rule 85 (expresionBool -> comparacionBool .)
    DYNAMIC         reduce using rule 85 (expresionBool -> comparacionBool .)
    VAR             reduce using rule 85 (expresionBool -> comparacionBool .)
    VARIABLE        reduce using rule 85 (expresionBool -> comparacionBool .)
    WHILE           reduce using rule 85 (expresionBool -> comparacionBool .)
    DO              reduce using rule 85 (expresionBool -> comparacionBool .)
    IF              reduce using rule 85 (expresionBool -> comparacionBool .)
    ELSE            reduce using rule 85 (expresionBool -> comparacionBool .)
    PRINT           reduce using rule 85 (expresionBool -> comparacionBool .)
    NOT             reduce using rule 85 (expresionBool -> comparacionBool .)
    ENTERO          reduce using rule 85 (expresionBool -> comparacionBool .)
    DOUBLE          reduce using rule 85 (expresionBool -> comparacionBool .)
    STRING          reduce using rule 85 (expresionBool -> comparacionBool .)
    BOOL            reduce using rule 85 (expresionBool -> comparacionBool .)
    $end            reduce using rule 85 (expresionBool -> comparacionBool .)
    LDER            reduce using rule 85 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 85 (expresionBool -> comparacionBool .) ]


state 105

    (58) imprimir -> PRINT PIZQ . expresion PDER
    (59) imprimir -> PRINT PIZQ . asignacionSimple PDER
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool

    VARIABLE        shift and go to state 190
    ENTERO          shift and go to state 120
    DOUBLE          shift and go to state 141
    STRING          shift and go to state 142
    BOOL            shift and go to state 39
    NOT             shift and go to state 35

    expresion                      shift and go to state 188
    asignacionSimple               shift and go to state 189
    valor                          shift and go to state 136
    expresionString                shift and go to state 137
    expresionInt                   shift and go to state 138
    expresionDouble                shift and go to state 139
    expresionBool                  shift and go to state 140
    valorString                    shift and go to state 27
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorBool                      shift and go to state 28
    negacionBool                   shift and go to state 117
    comparacionBool                shift and go to state 143

state 106

    (88) negacionBool -> NOT PIZQ . expresionBool PDER
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 116
    DOUBLE          shift and go to state 37
    BOOL            shift and go to state 39
    NOT             shift and go to state 35
    ENTERO          shift and go to state 120
    STRING          shift and go to state 121

    expresionBool                  shift and go to state 191
    valorDouble                    shift and go to state 115
    valorBool                      shift and go to state 28
    negacionBool                   shift and go to state 117
    comparacionBool                shift and go to state 143
    valor                          shift and go to state 118
    valorInt                       shift and go to state 119

state 107

    (2) final -> algoritmo PUNTOYCOMA final .

    $end            reduce using rule 2 (final -> algoritmo PUNTOYCOMA final .)


state 108

    (4) final -> asignacion PUNTOYCOMA final .

    $end            reduce using rule 4 (final -> asignacion PUNTOYCOMA final .)


state 109

    (6) final -> expresionInt PUNTOYCOMA final .

    $end            reduce using rule 6 (final -> expresionInt PUNTOYCOMA final .)


state 110

    (8) final -> expresionDouble PUNTOYCOMA final .

    $end            reduce using rule 8 (final -> expresionDouble PUNTOYCOMA final .)


state 111

    (10) final -> expresionString PUNTOYCOMA final .

    $end            reduce using rule 10 (final -> expresionString PUNTOYCOMA final .)


state 112

    (12) final -> expresionBool PUNTOYCOMA final .

    $end            reduce using rule 12 (final -> expresionBool PUNTOYCOMA final .)


state 113

    (89) comparacionBool -> expresionBool operadorLogico expresionBool .
    (89) comparacionBool -> expresionBool . operadorLogico expresionBool
    (90) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (125) operadorLogico -> . AND
    (126) operadorLogico -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNTOYCOMA      reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    INT             reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    DOUBLER         reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    NUM             reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    STRINGR         reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    BOOLR           reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    DYNAMIC         reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    VAR             reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    VARIABLE        reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    WHILE           reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    DO              reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    IF              reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    ELSE            reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    PRINT           reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    NOT             reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    ENTERO          reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    DOUBLE          reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    STRING          reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    BOOL            reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    $end            reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    LDER            reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    PDER            reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    AND             shift and go to state 47
    OR              shift and go to state 48

  ! AND             [ reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]
  ! OR              [ reduce using rule 89 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]

    operadorLogico                 shift and go to state 46

state 114

    (90) comparacionBool -> expresionBool operadorLogico comparacionBool .
    (85) expresionBool -> comparacionBool .

  ! reduce/reduce conflict for AND resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for OR resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for INT resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for NUM resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for STRINGR resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for BOOLR resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for VAR resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for WHILE resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for DO resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for IF resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for ELSE resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PRINT resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for NOT resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for ENTERO resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for STRING resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for BOOL resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for $end resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for LDER resolved using rule 85 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PDER resolved using rule 85 (expresionBool -> comparacionBool .)
    AND             reduce using rule 85 (expresionBool -> comparacionBool .)
    OR              reduce using rule 85 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 85 (expresionBool -> comparacionBool .)
    INT             reduce using rule 85 (expresionBool -> comparacionBool .)
    DOUBLER         reduce using rule 85 (expresionBool -> comparacionBool .)
    NUM             reduce using rule 85 (expresionBool -> comparacionBool .)
    STRINGR         reduce using rule 85 (expresionBool -> comparacionBool .)
    BOOLR           reduce using rule 85 (expresionBool -> comparacionBool .)
    DYNAMIC         reduce using rule 85 (expresionBool -> comparacionBool .)
    VAR             reduce using rule 85 (expresionBool -> comparacionBool .)
    VARIABLE        reduce using rule 85 (expresionBool -> comparacionBool .)
    WHILE           reduce using rule 85 (expresionBool -> comparacionBool .)
    DO              reduce using rule 85 (expresionBool -> comparacionBool .)
    IF              reduce using rule 85 (expresionBool -> comparacionBool .)
    ELSE            reduce using rule 85 (expresionBool -> comparacionBool .)
    PRINT           reduce using rule 85 (expresionBool -> comparacionBool .)
    NOT             reduce using rule 85 (expresionBool -> comparacionBool .)
    ENTERO          reduce using rule 85 (expresionBool -> comparacionBool .)
    DOUBLE          reduce using rule 85 (expresionBool -> comparacionBool .)
    STRING          reduce using rule 85 (expresionBool -> comparacionBool .)
    BOOL            reduce using rule 85 (expresionBool -> comparacionBool .)
    $end            reduce using rule 85 (expresionBool -> comparacionBool .)
    LDER            reduce using rule 85 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 85 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! INT             [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! DOUBLER         [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! NUM             [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! STRINGR         [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! BOOLR           [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! DYNAMIC         [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! VAR             [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! VARIABLE        [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! WHILE           [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! DO              [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! IF              [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! ELSE            [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! PRINT           [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! NOT             [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! ENTERO          [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! DOUBLE          [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! STRING          [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! BOOL            [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! AND             [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! OR              [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! $end            [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! LDER            [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! PDER            [ reduce using rule 90 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]


state 115

    (79) expresionBool -> valorDouble . comparadorMat expresionDouble
    (82) expresionBool -> valorDouble . comparadorMat VARIABLE
    (119) comparadorMat -> . DIGUAL
    (120) comparadorMat -> . NOIGUAL
    (121) comparadorMat -> . MAYOR
    (122) comparadorMat -> . MENOR
    (123) comparadorMat -> . MAYIGUAL
    (124) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 63
    NOIGUAL         shift and go to state 64
    MAYOR           shift and go to state 65
    MENOR           shift and go to state 66
    MAYIGUAL        shift and go to state 67
    MENIGUAL        shift and go to state 68

    comparadorMat                  shift and go to state 83

state 116

    (80) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (81) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (78) valorBool -> VARIABLE .
    (65) valor -> VARIABLE .
    (106) valorInt -> VARIABLE .
    (119) comparadorMat -> . DIGUAL
    (120) comparadorMat -> . NOIGUAL
    (121) comparadorMat -> . MAYOR
    (122) comparadorMat -> . MENOR
    (123) comparadorMat -> . MAYIGUAL
    (124) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    AND             reduce using rule 78 (valorBool -> VARIABLE .)
    OR              reduce using rule 78 (valorBool -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 78 (valorBool -> VARIABLE .)
    INT             reduce using rule 78 (valorBool -> VARIABLE .)
    DOUBLER         reduce using rule 78 (valorBool -> VARIABLE .)
    NUM             reduce using rule 78 (valorBool -> VARIABLE .)
    STRINGR         reduce using rule 78 (valorBool -> VARIABLE .)
    BOOLR           reduce using rule 78 (valorBool -> VARIABLE .)
    DYNAMIC         reduce using rule 78 (valorBool -> VARIABLE .)
    VAR             reduce using rule 78 (valorBool -> VARIABLE .)
    VARIABLE        reduce using rule 78 (valorBool -> VARIABLE .)
    WHILE           reduce using rule 78 (valorBool -> VARIABLE .)
    DO              reduce using rule 78 (valorBool -> VARIABLE .)
    IF              reduce using rule 78 (valorBool -> VARIABLE .)
    ELSE            reduce using rule 78 (valorBool -> VARIABLE .)
    PRINT           reduce using rule 78 (valorBool -> VARIABLE .)
    NOT             reduce using rule 78 (valorBool -> VARIABLE .)
    ENTERO          reduce using rule 78 (valorBool -> VARIABLE .)
    DOUBLE          reduce using rule 78 (valorBool -> VARIABLE .)
    STRING          reduce using rule 78 (valorBool -> VARIABLE .)
    BOOL            reduce using rule 78 (valorBool -> VARIABLE .)
    $end            reduce using rule 78 (valorBool -> VARIABLE .)
    LDER            reduce using rule 78 (valorBool -> VARIABLE .)
    PDER            reduce using rule 78 (valorBool -> VARIABLE .)
    IS              reduce using rule 65 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 65 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 63
    NOIGUAL         shift and go to state 64
    MAYOR           shift and go to state 65
    MENOR           shift and go to state 66
    MAYIGUAL        shift and go to state 67
    MENIGUAL        shift and go to state 68

  ! DIGUAL          [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 106 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 61

state 117

    (84) expresionBool -> negacionBool .

    AND             reduce using rule 84 (expresionBool -> negacionBool .)
    OR              reduce using rule 84 (expresionBool -> negacionBool .)
    PUNTOYCOMA      reduce using rule 84 (expresionBool -> negacionBool .)
    INT             reduce using rule 84 (expresionBool -> negacionBool .)
    DOUBLER         reduce using rule 84 (expresionBool -> negacionBool .)
    NUM             reduce using rule 84 (expresionBool -> negacionBool .)
    STRINGR         reduce using rule 84 (expresionBool -> negacionBool .)
    BOOLR           reduce using rule 84 (expresionBool -> negacionBool .)
    DYNAMIC         reduce using rule 84 (expresionBool -> negacionBool .)
    VAR             reduce using rule 84 (expresionBool -> negacionBool .)
    VARIABLE        reduce using rule 84 (expresionBool -> negacionBool .)
    WHILE           reduce using rule 84 (expresionBool -> negacionBool .)
    DO              reduce using rule 84 (expresionBool -> negacionBool .)
    IF              reduce using rule 84 (expresionBool -> negacionBool .)
    ELSE            reduce using rule 84 (expresionBool -> negacionBool .)
    PRINT           reduce using rule 84 (expresionBool -> negacionBool .)
    NOT             reduce using rule 84 (expresionBool -> negacionBool .)
    ENTERO          reduce using rule 84 (expresionBool -> negacionBool .)
    DOUBLE          reduce using rule 84 (expresionBool -> negacionBool .)
    STRING          reduce using rule 84 (expresionBool -> negacionBool .)
    BOOL            reduce using rule 84 (expresionBool -> negacionBool .)
    $end            reduce using rule 84 (expresionBool -> negacionBool .)
    LDER            reduce using rule 84 (expresionBool -> negacionBool .)
    PDER            reduce using rule 84 (expresionBool -> negacionBool .)


state 118

    (86) expresionBool -> valor . IS objeto
    (87) expresionBool -> valor . ISNEGADO objeto

    IS              shift and go to state 85
    ISNEGADO        shift and go to state 86


state 119

    (110) valorDouble -> valorInt .

    DIGUAL          reduce using rule 110 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 110 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 110 (valorDouble -> valorInt .)
    MENOR           reduce using rule 110 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 110 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 110 (valorDouble -> valorInt .)
    SUMA            reduce using rule 110 (valorDouble -> valorInt .)
    RESTA           reduce using rule 110 (valorDouble -> valorInt .)
    MULTI           reduce using rule 110 (valorDouble -> valorInt .)
    DIV             reduce using rule 110 (valorDouble -> valorInt .)
    DIVENTERO       reduce using rule 110 (valorDouble -> valorInt .)
    MOD             reduce using rule 110 (valorDouble -> valorInt .)
    PUNTOYCOMA      reduce using rule 110 (valorDouble -> valorInt .)
    AND             reduce using rule 110 (valorDouble -> valorInt .)
    OR              reduce using rule 110 (valorDouble -> valorInt .)
    INT             reduce using rule 110 (valorDouble -> valorInt .)
    DOUBLER         reduce using rule 110 (valorDouble -> valorInt .)
    NUM             reduce using rule 110 (valorDouble -> valorInt .)
    STRINGR         reduce using rule 110 (valorDouble -> valorInt .)
    BOOLR           reduce using rule 110 (valorDouble -> valorInt .)
    DYNAMIC         reduce using rule 110 (valorDouble -> valorInt .)
    VAR             reduce using rule 110 (valorDouble -> valorInt .)
    VARIABLE        reduce using rule 110 (valorDouble -> valorInt .)
    WHILE           reduce using rule 110 (valorDouble -> valorInt .)
    DO              reduce using rule 110 (valorDouble -> valorInt .)
    IF              reduce using rule 110 (valorDouble -> valorInt .)
    ELSE            reduce using rule 110 (valorDouble -> valorInt .)
    PRINT           reduce using rule 110 (valorDouble -> valorInt .)
    NOT             reduce using rule 110 (valorDouble -> valorInt .)
    ENTERO          reduce using rule 110 (valorDouble -> valorInt .)
    DOUBLE          reduce using rule 110 (valorDouble -> valorInt .)
    STRING          reduce using rule 110 (valorDouble -> valorInt .)
    BOOL            reduce using rule 110 (valorDouble -> valorInt .)
    $end            reduce using rule 110 (valorDouble -> valorInt .)
    LDER            reduce using rule 110 (valorDouble -> valorInt .)
    PDER            reduce using rule 110 (valorDouble -> valorInt .)


state 120

    (64) valor -> ENTERO .
    (105) valorInt -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for PDER resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for INT resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for NUM resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRINGR resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOLR resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for VAR resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for WHILE resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for DO resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for IF resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for ELSE resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for PRINT resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for NOT resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for ENTERO resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRING resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOL resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for $end resolved using rule 64 (valor -> ENTERO .)
  ! reduce/reduce conflict for LDER resolved using rule 64 (valor -> ENTERO .)
    IS              reduce using rule 64 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 64 (valor -> ENTERO .)
    SUMA            reduce using rule 64 (valor -> ENTERO .)
    RESTA           reduce using rule 64 (valor -> ENTERO .)
    MULTI           reduce using rule 64 (valor -> ENTERO .)
    DIV             reduce using rule 64 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 64 (valor -> ENTERO .)
    MOD             reduce using rule 64 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 64 (valor -> ENTERO .)
    PDER            reduce using rule 64 (valor -> ENTERO .)
    INT             reduce using rule 64 (valor -> ENTERO .)
    DOUBLER         reduce using rule 64 (valor -> ENTERO .)
    NUM             reduce using rule 64 (valor -> ENTERO .)
    STRINGR         reduce using rule 64 (valor -> ENTERO .)
    BOOLR           reduce using rule 64 (valor -> ENTERO .)
    DYNAMIC         reduce using rule 64 (valor -> ENTERO .)
    VAR             reduce using rule 64 (valor -> ENTERO .)
    VARIABLE        reduce using rule 64 (valor -> ENTERO .)
    WHILE           reduce using rule 64 (valor -> ENTERO .)
    DO              reduce using rule 64 (valor -> ENTERO .)
    IF              reduce using rule 64 (valor -> ENTERO .)
    ELSE            reduce using rule 64 (valor -> ENTERO .)
    PRINT           reduce using rule 64 (valor -> ENTERO .)
    NOT             reduce using rule 64 (valor -> ENTERO .)
    ENTERO          reduce using rule 64 (valor -> ENTERO .)
    DOUBLE          reduce using rule 64 (valor -> ENTERO .)
    STRING          reduce using rule 64 (valor -> ENTERO .)
    BOOL            reduce using rule 64 (valor -> ENTERO .)
    $end            reduce using rule 64 (valor -> ENTERO .)
    LDER            reduce using rule 64 (valor -> ENTERO .)
    DIGUAL          reduce using rule 105 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 105 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 105 (valorInt -> ENTERO .)
    MENOR           reduce using rule 105 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 105 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 105 (valorInt -> ENTERO .)

  ! SUMA            [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! PDER            [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! INT             [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! DOUBLER         [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! NUM             [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! STRINGR         [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! BOOLR           [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! DYNAMIC         [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! VAR             [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! VARIABLE        [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! WHILE           [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! DO              [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! IF              [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! ELSE            [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! PRINT           [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! NOT             [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! ENTERO          [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! DOUBLE          [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! STRING          [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! BOOL            [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! $end            [ reduce using rule 105 (valorInt -> ENTERO .) ]
  ! LDER            [ reduce using rule 105 (valorInt -> ENTERO .) ]


state 121

    (67) valor -> STRING .

    IS              reduce using rule 67 (valor -> STRING .)
    ISNEGADO        reduce using rule 67 (valor -> STRING .)


state 122

    (16) final -> sentenciaWhile PUNTOYCOMA final .

    $end            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)


state 123

    (18) final -> sentenciaDoWhile PUNTOYCOMA final .

    $end            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)


state 124

    (20) final -> sentenciaIf PUNTOYCOMA final .

    $end            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)


state 125

    (24) final -> sentenciaElse PUNTOYCOMA final .

    $end            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)


state 126

    (28) final -> imprimir PUNTOYCOMA final .

    $end            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)


state 127

    (30) final -> negacionBool PUNTOYCOMA final .

    $end            reduce using rule 30 (final -> negacionBool PUNTOYCOMA final .)


state 128

    (49) asignacion -> INT VARIABLE IGUAL . expresionInt
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE

    ENTERO          shift and go to state 133
    VARIABLE        shift and go to state 152

    expresionInt                   shift and go to state 192
    valorInt                       shift and go to state 150

state 129

    (81) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (106) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    INT             reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DOUBLER         reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    NUM             reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    STRINGR         reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    BOOLR           reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DYNAMIC         reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    VAR             reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    VARIABLE        reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    WHILE           reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DO              reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    IF              reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    ELSE            reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PRINT           reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    NOT             reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    ENTERO          reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DOUBLE          reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    STRING          reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    BOOL            reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    $end            reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    LDER            reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PDER            reduce using rule 81 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 106 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 106 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 106 (valorInt -> VARIABLE .)
    DIV             reduce using rule 106 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 106 (valorInt -> VARIABLE .)
    MOD             reduce using rule 106 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! NOT             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 106 (valorInt -> VARIABLE .) ]


state 130

    (80) expresionBool -> VARIABLE comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    INT             reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DOUBLER         reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    NUM             reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    STRINGR         reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    BOOLR           reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DYNAMIC         reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    VAR             reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    VARIABLE        reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    WHILE           reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DO              reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    IF              reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    ELSE            reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PRINT           reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    NOT             reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    ENTERO          reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DOUBLE          reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    STRING          reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    BOOL            reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    $end            reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    LDER            reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PDER            reduce using rule 80 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 131

    (111) expresionDouble -> valorDouble . operadorMat expresionDouble
    (112) expresionDouble -> valorDouble .
    (113) operadorMat -> . SUMA
    (114) operadorMat -> . RESTA
    (115) operadorMat -> . MULTI
    (116) operadorMat -> . DIV
    (117) operadorMat -> . DIVENTERO
    (118) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 112 (expresionDouble -> valorDouble .)
    AND             reduce using rule 112 (expresionDouble -> valorDouble .)
    OR              reduce using rule 112 (expresionDouble -> valorDouble .)
    INT             reduce using rule 112 (expresionDouble -> valorDouble .)
    DOUBLER         reduce using rule 112 (expresionDouble -> valorDouble .)
    NUM             reduce using rule 112 (expresionDouble -> valorDouble .)
    STRINGR         reduce using rule 112 (expresionDouble -> valorDouble .)
    BOOLR           reduce using rule 112 (expresionDouble -> valorDouble .)
    DYNAMIC         reduce using rule 112 (expresionDouble -> valorDouble .)
    VAR             reduce using rule 112 (expresionDouble -> valorDouble .)
    VARIABLE        reduce using rule 112 (expresionDouble -> valorDouble .)
    WHILE           reduce using rule 112 (expresionDouble -> valorDouble .)
    DO              reduce using rule 112 (expresionDouble -> valorDouble .)
    IF              reduce using rule 112 (expresionDouble -> valorDouble .)
    ELSE            reduce using rule 112 (expresionDouble -> valorDouble .)
    PRINT           reduce using rule 112 (expresionDouble -> valorDouble .)
    NOT             reduce using rule 112 (expresionDouble -> valorDouble .)
    ENTERO          reduce using rule 112 (expresionDouble -> valorDouble .)
    DOUBLE          reduce using rule 112 (expresionDouble -> valorDouble .)
    STRING          reduce using rule 112 (expresionDouble -> valorDouble .)
    BOOL            reduce using rule 112 (expresionDouble -> valorDouble .)
    $end            reduce using rule 112 (expresionDouble -> valorDouble .)
    LDER            reduce using rule 112 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 112 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTI           shift and go to state 78
    DIV             shift and go to state 79
    DIVENTERO       shift and go to state 80
    MOD             shift and go to state 81

    operadorMat                    shift and go to state 82

state 132

    (109) valorDouble -> DOUBLE .

    SUMA            reduce using rule 109 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 109 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 109 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 109 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 109 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 109 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 109 (valorDouble -> DOUBLE .)
    AND             reduce using rule 109 (valorDouble -> DOUBLE .)
    OR              reduce using rule 109 (valorDouble -> DOUBLE .)
    INT             reduce using rule 109 (valorDouble -> DOUBLE .)
    DOUBLER         reduce using rule 109 (valorDouble -> DOUBLE .)
    NUM             reduce using rule 109 (valorDouble -> DOUBLE .)
    STRINGR         reduce using rule 109 (valorDouble -> DOUBLE .)
    BOOLR           reduce using rule 109 (valorDouble -> DOUBLE .)
    DYNAMIC         reduce using rule 109 (valorDouble -> DOUBLE .)
    VAR             reduce using rule 109 (valorDouble -> DOUBLE .)
    VARIABLE        reduce using rule 109 (valorDouble -> DOUBLE .)
    WHILE           reduce using rule 109 (valorDouble -> DOUBLE .)
    DO              reduce using rule 109 (valorDouble -> DOUBLE .)
    IF              reduce using rule 109 (valorDouble -> DOUBLE .)
    ELSE            reduce using rule 109 (valorDouble -> DOUBLE .)
    PRINT           reduce using rule 109 (valorDouble -> DOUBLE .)
    NOT             reduce using rule 109 (valorDouble -> DOUBLE .)
    ENTERO          reduce using rule 109 (valorDouble -> DOUBLE .)
    DOUBLE          reduce using rule 109 (valorDouble -> DOUBLE .)
    STRING          reduce using rule 109 (valorDouble -> DOUBLE .)
    BOOL            reduce using rule 109 (valorDouble -> DOUBLE .)
    $end            reduce using rule 109 (valorDouble -> DOUBLE .)
    LDER            reduce using rule 109 (valorDouble -> DOUBLE .)
    PDER            reduce using rule 109 (valorDouble -> DOUBLE .)


state 133

    (105) valorInt -> ENTERO .

    SUMA            reduce using rule 105 (valorInt -> ENTERO .)
    RESTA           reduce using rule 105 (valorInt -> ENTERO .)
    MULTI           reduce using rule 105 (valorInt -> ENTERO .)
    DIV             reduce using rule 105 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 105 (valorInt -> ENTERO .)
    MOD             reduce using rule 105 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 105 (valorInt -> ENTERO .)
    AND             reduce using rule 105 (valorInt -> ENTERO .)
    OR              reduce using rule 105 (valorInt -> ENTERO .)
    INT             reduce using rule 105 (valorInt -> ENTERO .)
    DOUBLER         reduce using rule 105 (valorInt -> ENTERO .)
    NUM             reduce using rule 105 (valorInt -> ENTERO .)
    STRINGR         reduce using rule 105 (valorInt -> ENTERO .)
    BOOLR           reduce using rule 105 (valorInt -> ENTERO .)
    DYNAMIC         reduce using rule 105 (valorInt -> ENTERO .)
    VAR             reduce using rule 105 (valorInt -> ENTERO .)
    VARIABLE        reduce using rule 105 (valorInt -> ENTERO .)
    WHILE           reduce using rule 105 (valorInt -> ENTERO .)
    DO              reduce using rule 105 (valorInt -> ENTERO .)
    IF              reduce using rule 105 (valorInt -> ENTERO .)
    ELSE            reduce using rule 105 (valorInt -> ENTERO .)
    PRINT           reduce using rule 105 (valorInt -> ENTERO .)
    NOT             reduce using rule 105 (valorInt -> ENTERO .)
    ENTERO          reduce using rule 105 (valorInt -> ENTERO .)
    DOUBLE          reduce using rule 105 (valorInt -> ENTERO .)
    STRING          reduce using rule 105 (valorInt -> ENTERO .)
    BOOL            reduce using rule 105 (valorInt -> ENTERO .)
    $end            reduce using rule 105 (valorInt -> ENTERO .)
    LDER            reduce using rule 105 (valorInt -> ENTERO .)
    PDER            reduce using rule 105 (valorInt -> ENTERO .)


state 134

    (65) valor -> VARIABLE .
    (80) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (81) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (102) valorString -> VARIABLE .
    (106) valorInt -> VARIABLE .
    (78) valorBool -> VARIABLE .
    (119) comparadorMat -> . DIGUAL
    (120) comparadorMat -> . NOIGUAL
    (121) comparadorMat -> . MAYOR
    (122) comparadorMat -> . MENOR
    (123) comparadorMat -> . MAYIGUAL
    (124) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 65 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IS              reduce using rule 65 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 65 (valor -> VARIABLE .)
    SUMA            reduce using rule 65 (valor -> VARIABLE .)
    RESTA           reduce using rule 65 (valor -> VARIABLE .)
    MULTI           reduce using rule 65 (valor -> VARIABLE .)
    DIV             reduce using rule 65 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 65 (valor -> VARIABLE .)
    MOD             reduce using rule 65 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 65 (valor -> VARIABLE .)
    PDER            reduce using rule 65 (valor -> VARIABLE .)
    INT             reduce using rule 65 (valor -> VARIABLE .)
    DOUBLER         reduce using rule 65 (valor -> VARIABLE .)
    NUM             reduce using rule 65 (valor -> VARIABLE .)
    STRINGR         reduce using rule 65 (valor -> VARIABLE .)
    BOOLR           reduce using rule 65 (valor -> VARIABLE .)
    DYNAMIC         reduce using rule 65 (valor -> VARIABLE .)
    VAR             reduce using rule 65 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 65 (valor -> VARIABLE .)
    WHILE           reduce using rule 65 (valor -> VARIABLE .)
    DO              reduce using rule 65 (valor -> VARIABLE .)
    IF              reduce using rule 65 (valor -> VARIABLE .)
    ELSE            reduce using rule 65 (valor -> VARIABLE .)
    PRINT           reduce using rule 65 (valor -> VARIABLE .)
    NOT             reduce using rule 65 (valor -> VARIABLE .)
    ENTERO          reduce using rule 65 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 65 (valor -> VARIABLE .)
    STRING          reduce using rule 65 (valor -> VARIABLE .)
    BOOL            reduce using rule 65 (valor -> VARIABLE .)
    $end            reduce using rule 65 (valor -> VARIABLE .)
    LDER            reduce using rule 65 (valor -> VARIABLE .)
    AND             reduce using rule 78 (valorBool -> VARIABLE .)
    OR              reduce using rule 78 (valorBool -> VARIABLE .)
    DIGUAL          shift and go to state 63
    NOIGUAL         shift and go to state 64
    MAYOR           shift and go to state 65
    MENOR           shift and go to state 66
    MAYIGUAL        shift and go to state 67
    MENIGUAL        shift and go to state 68

  ! SUMA            [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! DIV             [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! MOD             [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! INT             [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! NUM             [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! VAR             [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! DO              [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! IF              [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! NOT             [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! STRING          [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! $end            [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! LDER            [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! NOT             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! PDER            [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! INT             [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! NUM             [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! VAR             [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! DO              [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! IF              [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! NOT             [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! STRING          [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! $end            [ reduce using rule 78 (valorBool -> VARIABLE .) ]
  ! LDER            [ reduce using rule 78 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 61

state 135

    (57) asignacionSimple -> VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 57 (asignacionSimple -> VARIABLE IGUAL expresion .)
    PDER            reduce using rule 57 (asignacionSimple -> VARIABLE IGUAL expresion .)


state 136

    (68) expresion -> valor . operadorMat expresion
    (69) expresion -> valor .
    (86) expresionBool -> valor . IS objeto
    (87) expresionBool -> valor . ISNEGADO objeto
    (113) operadorMat -> . SUMA
    (114) operadorMat -> . RESTA
    (115) operadorMat -> . MULTI
    (116) operadorMat -> . DIV
    (117) operadorMat -> . DIVENTERO
    (118) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 69 (expresion -> valor .)
    PDER            reduce using rule 69 (expresion -> valor .)
    INT             reduce using rule 69 (expresion -> valor .)
    DOUBLER         reduce using rule 69 (expresion -> valor .)
    NUM             reduce using rule 69 (expresion -> valor .)
    STRINGR         reduce using rule 69 (expresion -> valor .)
    BOOLR           reduce using rule 69 (expresion -> valor .)
    DYNAMIC         reduce using rule 69 (expresion -> valor .)
    VAR             reduce using rule 69 (expresion -> valor .)
    VARIABLE        reduce using rule 69 (expresion -> valor .)
    WHILE           reduce using rule 69 (expresion -> valor .)
    DO              reduce using rule 69 (expresion -> valor .)
    IF              reduce using rule 69 (expresion -> valor .)
    ELSE            reduce using rule 69 (expresion -> valor .)
    PRINT           reduce using rule 69 (expresion -> valor .)
    NOT             reduce using rule 69 (expresion -> valor .)
    ENTERO          reduce using rule 69 (expresion -> valor .)
    DOUBLE          reduce using rule 69 (expresion -> valor .)
    STRING          reduce using rule 69 (expresion -> valor .)
    BOOL            reduce using rule 69 (expresion -> valor .)
    $end            reduce using rule 69 (expresion -> valor .)
    LDER            reduce using rule 69 (expresion -> valor .)
    IS              shift and go to state 85
    ISNEGADO        shift and go to state 86
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTI           shift and go to state 78
    DIV             shift and go to state 79
    DIVENTERO       shift and go to state 80
    MOD             shift and go to state 81

    operadorMat                    shift and go to state 87

state 137

    (70) expresion -> expresionString .

    PUNTOYCOMA      reduce using rule 70 (expresion -> expresionString .)
    PDER            reduce using rule 70 (expresion -> expresionString .)
    INT             reduce using rule 70 (expresion -> expresionString .)
    DOUBLER         reduce using rule 70 (expresion -> expresionString .)
    NUM             reduce using rule 70 (expresion -> expresionString .)
    STRINGR         reduce using rule 70 (expresion -> expresionString .)
    BOOLR           reduce using rule 70 (expresion -> expresionString .)
    DYNAMIC         reduce using rule 70 (expresion -> expresionString .)
    VAR             reduce using rule 70 (expresion -> expresionString .)
    VARIABLE        reduce using rule 70 (expresion -> expresionString .)
    WHILE           reduce using rule 70 (expresion -> expresionString .)
    DO              reduce using rule 70 (expresion -> expresionString .)
    IF              reduce using rule 70 (expresion -> expresionString .)
    ELSE            reduce using rule 70 (expresion -> expresionString .)
    PRINT           reduce using rule 70 (expresion -> expresionString .)
    NOT             reduce using rule 70 (expresion -> expresionString .)
    ENTERO          reduce using rule 70 (expresion -> expresionString .)
    DOUBLE          reduce using rule 70 (expresion -> expresionString .)
    STRING          reduce using rule 70 (expresion -> expresionString .)
    BOOL            reduce using rule 70 (expresion -> expresionString .)
    $end            reduce using rule 70 (expresion -> expresionString .)
    LDER            reduce using rule 70 (expresion -> expresionString .)


state 138

    (71) expresion -> expresionInt .

    PUNTOYCOMA      reduce using rule 71 (expresion -> expresionInt .)
    PDER            reduce using rule 71 (expresion -> expresionInt .)
    INT             reduce using rule 71 (expresion -> expresionInt .)
    DOUBLER         reduce using rule 71 (expresion -> expresionInt .)
    NUM             reduce using rule 71 (expresion -> expresionInt .)
    STRINGR         reduce using rule 71 (expresion -> expresionInt .)
    BOOLR           reduce using rule 71 (expresion -> expresionInt .)
    DYNAMIC         reduce using rule 71 (expresion -> expresionInt .)
    VAR             reduce using rule 71 (expresion -> expresionInt .)
    VARIABLE        reduce using rule 71 (expresion -> expresionInt .)
    WHILE           reduce using rule 71 (expresion -> expresionInt .)
    DO              reduce using rule 71 (expresion -> expresionInt .)
    IF              reduce using rule 71 (expresion -> expresionInt .)
    ELSE            reduce using rule 71 (expresion -> expresionInt .)
    PRINT           reduce using rule 71 (expresion -> expresionInt .)
    NOT             reduce using rule 71 (expresion -> expresionInt .)
    ENTERO          reduce using rule 71 (expresion -> expresionInt .)
    DOUBLE          reduce using rule 71 (expresion -> expresionInt .)
    STRING          reduce using rule 71 (expresion -> expresionInt .)
    BOOL            reduce using rule 71 (expresion -> expresionInt .)
    $end            reduce using rule 71 (expresion -> expresionInt .)
    LDER            reduce using rule 71 (expresion -> expresionInt .)


state 139

    (72) expresion -> expresionDouble .

    PUNTOYCOMA      reduce using rule 72 (expresion -> expresionDouble .)
    PDER            reduce using rule 72 (expresion -> expresionDouble .)
    INT             reduce using rule 72 (expresion -> expresionDouble .)
    DOUBLER         reduce using rule 72 (expresion -> expresionDouble .)
    NUM             reduce using rule 72 (expresion -> expresionDouble .)
    STRINGR         reduce using rule 72 (expresion -> expresionDouble .)
    BOOLR           reduce using rule 72 (expresion -> expresionDouble .)
    DYNAMIC         reduce using rule 72 (expresion -> expresionDouble .)
    VAR             reduce using rule 72 (expresion -> expresionDouble .)
    VARIABLE        reduce using rule 72 (expresion -> expresionDouble .)
    WHILE           reduce using rule 72 (expresion -> expresionDouble .)
    DO              reduce using rule 72 (expresion -> expresionDouble .)
    IF              reduce using rule 72 (expresion -> expresionDouble .)
    ELSE            reduce using rule 72 (expresion -> expresionDouble .)
    PRINT           reduce using rule 72 (expresion -> expresionDouble .)
    NOT             reduce using rule 72 (expresion -> expresionDouble .)
    ENTERO          reduce using rule 72 (expresion -> expresionDouble .)
    DOUBLE          reduce using rule 72 (expresion -> expresionDouble .)
    STRING          reduce using rule 72 (expresion -> expresionDouble .)
    BOOL            reduce using rule 72 (expresion -> expresionDouble .)
    $end            reduce using rule 72 (expresion -> expresionDouble .)
    LDER            reduce using rule 72 (expresion -> expresionDouble .)


state 140

    (73) expresion -> expresionBool .
    (89) comparacionBool -> expresionBool . operadorLogico expresionBool
    (90) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (125) operadorLogico -> . AND
    (126) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 73 (expresion -> expresionBool .)
    PDER            reduce using rule 73 (expresion -> expresionBool .)
    INT             reduce using rule 73 (expresion -> expresionBool .)
    DOUBLER         reduce using rule 73 (expresion -> expresionBool .)
    NUM             reduce using rule 73 (expresion -> expresionBool .)
    STRINGR         reduce using rule 73 (expresion -> expresionBool .)
    BOOLR           reduce using rule 73 (expresion -> expresionBool .)
    DYNAMIC         reduce using rule 73 (expresion -> expresionBool .)
    VAR             reduce using rule 73 (expresion -> expresionBool .)
    VARIABLE        reduce using rule 73 (expresion -> expresionBool .)
    WHILE           reduce using rule 73 (expresion -> expresionBool .)
    DO              reduce using rule 73 (expresion -> expresionBool .)
    IF              reduce using rule 73 (expresion -> expresionBool .)
    ELSE            reduce using rule 73 (expresion -> expresionBool .)
    PRINT           reduce using rule 73 (expresion -> expresionBool .)
    NOT             reduce using rule 73 (expresion -> expresionBool .)
    ENTERO          reduce using rule 73 (expresion -> expresionBool .)
    DOUBLE          reduce using rule 73 (expresion -> expresionBool .)
    STRING          reduce using rule 73 (expresion -> expresionBool .)
    BOOL            reduce using rule 73 (expresion -> expresionBool .)
    $end            reduce using rule 73 (expresion -> expresionBool .)
    LDER            reduce using rule 73 (expresion -> expresionBool .)
    AND             shift and go to state 47
    OR              shift and go to state 48

    operadorLogico                 shift and go to state 46

state 141

    (66) valor -> DOUBLE .
    (109) valorDouble -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PDER resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for INT resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NUM resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VAR resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DO resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for IF resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NOT resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRING resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for $end resolved using rule 66 (valor -> DOUBLE .)
  ! reduce/reduce conflict for LDER resolved using rule 66 (valor -> DOUBLE .)
    IS              reduce using rule 66 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 66 (valor -> DOUBLE .)
    SUMA            reduce using rule 66 (valor -> DOUBLE .)
    RESTA           reduce using rule 66 (valor -> DOUBLE .)
    MULTI           reduce using rule 66 (valor -> DOUBLE .)
    DIV             reduce using rule 66 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 66 (valor -> DOUBLE .)
    MOD             reduce using rule 66 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 66 (valor -> DOUBLE .)
    PDER            reduce using rule 66 (valor -> DOUBLE .)
    INT             reduce using rule 66 (valor -> DOUBLE .)
    DOUBLER         reduce using rule 66 (valor -> DOUBLE .)
    NUM             reduce using rule 66 (valor -> DOUBLE .)
    STRINGR         reduce using rule 66 (valor -> DOUBLE .)
    BOOLR           reduce using rule 66 (valor -> DOUBLE .)
    DYNAMIC         reduce using rule 66 (valor -> DOUBLE .)
    VAR             reduce using rule 66 (valor -> DOUBLE .)
    VARIABLE        reduce using rule 66 (valor -> DOUBLE .)
    WHILE           reduce using rule 66 (valor -> DOUBLE .)
    DO              reduce using rule 66 (valor -> DOUBLE .)
    IF              reduce using rule 66 (valor -> DOUBLE .)
    ELSE            reduce using rule 66 (valor -> DOUBLE .)
    PRINT           reduce using rule 66 (valor -> DOUBLE .)
    NOT             reduce using rule 66 (valor -> DOUBLE .)
    ENTERO          reduce using rule 66 (valor -> DOUBLE .)
    DOUBLE          reduce using rule 66 (valor -> DOUBLE .)
    STRING          reduce using rule 66 (valor -> DOUBLE .)
    BOOL            reduce using rule 66 (valor -> DOUBLE .)
    $end            reduce using rule 66 (valor -> DOUBLE .)
    LDER            reduce using rule 66 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 109 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 109 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 109 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 109 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 109 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 109 (valorDouble -> DOUBLE .)

  ! SUMA            [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! PDER            [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! INT             [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! DOUBLER         [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! NUM             [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! STRINGR         [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! BOOLR           [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! DYNAMIC         [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! VAR             [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! VARIABLE        [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! WHILE           [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! DO              [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! IF              [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! ELSE            [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! PRINT           [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! NOT             [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! ENTERO          [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! DOUBLE          [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! STRING          [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! BOOL            [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! $end            [ reduce using rule 109 (valorDouble -> DOUBLE .) ]
  ! LDER            [ reduce using rule 109 (valorDouble -> DOUBLE .) ]


state 142

    (67) valor -> STRING .
    (101) valorString -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for RESTA resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for MULTI resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for DIV resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for MOD resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for PDER resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for INT resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for NUM resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for STRINGR resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for BOOLR resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for VAR resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for WHILE resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for DO resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for IF resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for ELSE resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for PRINT resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for NOT resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for ENTERO resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for STRING resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for BOOL resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for $end resolved using rule 67 (valor -> STRING .)
  ! reduce/reduce conflict for LDER resolved using rule 67 (valor -> STRING .)
    IS              reduce using rule 67 (valor -> STRING .)
    ISNEGADO        reduce using rule 67 (valor -> STRING .)
    SUMA            reduce using rule 67 (valor -> STRING .)
    RESTA           reduce using rule 67 (valor -> STRING .)
    MULTI           reduce using rule 67 (valor -> STRING .)
    DIV             reduce using rule 67 (valor -> STRING .)
    DIVENTERO       reduce using rule 67 (valor -> STRING .)
    MOD             reduce using rule 67 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 67 (valor -> STRING .)
    PDER            reduce using rule 67 (valor -> STRING .)
    INT             reduce using rule 67 (valor -> STRING .)
    DOUBLER         reduce using rule 67 (valor -> STRING .)
    NUM             reduce using rule 67 (valor -> STRING .)
    STRINGR         reduce using rule 67 (valor -> STRING .)
    BOOLR           reduce using rule 67 (valor -> STRING .)
    DYNAMIC         reduce using rule 67 (valor -> STRING .)
    VAR             reduce using rule 67 (valor -> STRING .)
    VARIABLE        reduce using rule 67 (valor -> STRING .)
    WHILE           reduce using rule 67 (valor -> STRING .)
    DO              reduce using rule 67 (valor -> STRING .)
    IF              reduce using rule 67 (valor -> STRING .)
    ELSE            reduce using rule 67 (valor -> STRING .)
    PRINT           reduce using rule 67 (valor -> STRING .)
    NOT             reduce using rule 67 (valor -> STRING .)
    ENTERO          reduce using rule 67 (valor -> STRING .)
    DOUBLE          reduce using rule 67 (valor -> STRING .)
    STRING          reduce using rule 67 (valor -> STRING .)
    BOOL            reduce using rule 67 (valor -> STRING .)
    $end            reduce using rule 67 (valor -> STRING .)
    LDER            reduce using rule 67 (valor -> STRING .)

  ! SUMA            [ reduce using rule 101 (valorString -> STRING .) ]
  ! RESTA           [ reduce using rule 101 (valorString -> STRING .) ]
  ! MULTI           [ reduce using rule 101 (valorString -> STRING .) ]
  ! DIV             [ reduce using rule 101 (valorString -> STRING .) ]
  ! DIVENTERO       [ reduce using rule 101 (valorString -> STRING .) ]
  ! MOD             [ reduce using rule 101 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 101 (valorString -> STRING .) ]
  ! PDER            [ reduce using rule 101 (valorString -> STRING .) ]
  ! INT             [ reduce using rule 101 (valorString -> STRING .) ]
  ! DOUBLER         [ reduce using rule 101 (valorString -> STRING .) ]
  ! NUM             [ reduce using rule 101 (valorString -> STRING .) ]
  ! STRINGR         [ reduce using rule 101 (valorString -> STRING .) ]
  ! BOOLR           [ reduce using rule 101 (valorString -> STRING .) ]
  ! DYNAMIC         [ reduce using rule 101 (valorString -> STRING .) ]
  ! VAR             [ reduce using rule 101 (valorString -> STRING .) ]
  ! VARIABLE        [ reduce using rule 101 (valorString -> STRING .) ]
  ! WHILE           [ reduce using rule 101 (valorString -> STRING .) ]
  ! DO              [ reduce using rule 101 (valorString -> STRING .) ]
  ! IF              [ reduce using rule 101 (valorString -> STRING .) ]
  ! ELSE            [ reduce using rule 101 (valorString -> STRING .) ]
  ! PRINT           [ reduce using rule 101 (valorString -> STRING .) ]
  ! NOT             [ reduce using rule 101 (valorString -> STRING .) ]
  ! ENTERO          [ reduce using rule 101 (valorString -> STRING .) ]
  ! DOUBLE          [ reduce using rule 101 (valorString -> STRING .) ]
  ! STRING          [ reduce using rule 101 (valorString -> STRING .) ]
  ! BOOL            [ reduce using rule 101 (valorString -> STRING .) ]
  ! $end            [ reduce using rule 101 (valorString -> STRING .) ]
  ! LDER            [ reduce using rule 101 (valorString -> STRING .) ]


state 143

    (85) expresionBool -> comparacionBool .

    AND             reduce using rule 85 (expresionBool -> comparacionBool .)
    OR              reduce using rule 85 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 85 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 85 (expresionBool -> comparacionBool .)
    INT             reduce using rule 85 (expresionBool -> comparacionBool .)
    DOUBLER         reduce using rule 85 (expresionBool -> comparacionBool .)
    NUM             reduce using rule 85 (expresionBool -> comparacionBool .)
    STRINGR         reduce using rule 85 (expresionBool -> comparacionBool .)
    BOOLR           reduce using rule 85 (expresionBool -> comparacionBool .)
    DYNAMIC         reduce using rule 85 (expresionBool -> comparacionBool .)
    VAR             reduce using rule 85 (expresionBool -> comparacionBool .)
    VARIABLE        reduce using rule 85 (expresionBool -> comparacionBool .)
    WHILE           reduce using rule 85 (expresionBool -> comparacionBool .)
    DO              reduce using rule 85 (expresionBool -> comparacionBool .)
    IF              reduce using rule 85 (expresionBool -> comparacionBool .)
    ELSE            reduce using rule 85 (expresionBool -> comparacionBool .)
    PRINT           reduce using rule 85 (expresionBool -> comparacionBool .)
    NOT             reduce using rule 85 (expresionBool -> comparacionBool .)
    ENTERO          reduce using rule 85 (expresionBool -> comparacionBool .)
    DOUBLE          reduce using rule 85 (expresionBool -> comparacionBool .)
    STRING          reduce using rule 85 (expresionBool -> comparacionBool .)
    BOOL            reduce using rule 85 (expresionBool -> comparacionBool .)
    $end            reduce using rule 85 (expresionBool -> comparacionBool .)
    LDER            reduce using rule 85 (expresionBool -> comparacionBool .)


state 144

    (50) asignacion -> DOUBLER VARIABLE IGUAL . expresionDouble
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 132
    ENTERO          shift and go to state 133
    VARIABLE        shift and go to state 152

    expresionDouble                shift and go to state 193
    valorDouble                    shift and go to state 131
    valorInt                       shift and go to state 119

state 145

    (51) asignacion -> NUM VARIABLE IGUAL . expresionDouble
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 132
    ENTERO          shift and go to state 133
    VARIABLE        shift and go to state 152

    expresionDouble                shift and go to state 194
    valorDouble                    shift and go to state 131
    valorInt                       shift and go to state 119

state 146

    (52) asignacion -> STRINGR VARIABLE IGUAL . expresionString
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE

    STRING          shift and go to state 157
    VARIABLE        shift and go to state 158

    expresionString                shift and go to state 195
    valorString                    shift and go to state 27

state 147

    (53) asignacion -> BOOLR VARIABLE IGUAL . expresionBool
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 116
    DOUBLE          shift and go to state 37
    BOOL            shift and go to state 39
    NOT             shift and go to state 35
    ENTERO          shift and go to state 120
    STRING          shift and go to state 121

    expresionBool                  shift and go to state 196
    valorDouble                    shift and go to state 115
    valorBool                      shift and go to state 28
    negacionBool                   shift and go to state 117
    comparacionBool                shift and go to state 143
    valor                          shift and go to state 118
    valorInt                       shift and go to state 119

state 148

    (54) asignacion -> DYNAMIC VARIABLE IGUAL . expresion
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool

    ENTERO          shift and go to state 120
    VARIABLE        shift and go to state 134
    DOUBLE          shift and go to state 141
    STRING          shift and go to state 142
    BOOL            shift and go to state 39
    NOT             shift and go to state 35

    expresion                      shift and go to state 197
    valor                          shift and go to state 136
    expresionString                shift and go to state 137
    expresionInt                   shift and go to state 138
    expresionDouble                shift and go to state 139
    expresionBool                  shift and go to state 140
    valorString                    shift and go to state 27
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorBool                      shift and go to state 28
    negacionBool                   shift and go to state 117
    comparacionBool                shift and go to state 143

state 149

    (55) asignacion -> VAR VARIABLE IGUAL . expresion
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool

    ENTERO          shift and go to state 120
    VARIABLE        shift and go to state 134
    DOUBLE          shift and go to state 141
    STRING          shift and go to state 142
    BOOL            shift and go to state 39
    NOT             shift and go to state 35

    expresion                      shift and go to state 198
    valor                          shift and go to state 136
    expresionString                shift and go to state 137
    expresionInt                   shift and go to state 138
    expresionDouble                shift and go to state 139
    expresionBool                  shift and go to state 140
    valorString                    shift and go to state 27
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorBool                      shift and go to state 28
    negacionBool                   shift and go to state 117
    comparacionBool                shift and go to state 143

state 150

    (107) expresionInt -> valorInt . operadorMat expresionInt
    (108) expresionInt -> valorInt .
    (113) operadorMat -> . SUMA
    (114) operadorMat -> . RESTA
    (115) operadorMat -> . MULTI
    (116) operadorMat -> . DIV
    (117) operadorMat -> . DIVENTERO
    (118) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 108 (expresionInt -> valorInt .)
    INT             reduce using rule 108 (expresionInt -> valorInt .)
    DOUBLER         reduce using rule 108 (expresionInt -> valorInt .)
    NUM             reduce using rule 108 (expresionInt -> valorInt .)
    STRINGR         reduce using rule 108 (expresionInt -> valorInt .)
    BOOLR           reduce using rule 108 (expresionInt -> valorInt .)
    DYNAMIC         reduce using rule 108 (expresionInt -> valorInt .)
    VAR             reduce using rule 108 (expresionInt -> valorInt .)
    VARIABLE        reduce using rule 108 (expresionInt -> valorInt .)
    WHILE           reduce using rule 108 (expresionInt -> valorInt .)
    DO              reduce using rule 108 (expresionInt -> valorInt .)
    IF              reduce using rule 108 (expresionInt -> valorInt .)
    ELSE            reduce using rule 108 (expresionInt -> valorInt .)
    PRINT           reduce using rule 108 (expresionInt -> valorInt .)
    NOT             reduce using rule 108 (expresionInt -> valorInt .)
    ENTERO          reduce using rule 108 (expresionInt -> valorInt .)
    DOUBLE          reduce using rule 108 (expresionInt -> valorInt .)
    STRING          reduce using rule 108 (expresionInt -> valorInt .)
    BOOL            reduce using rule 108 (expresionInt -> valorInt .)
    $end            reduce using rule 108 (expresionInt -> valorInt .)
    LDER            reduce using rule 108 (expresionInt -> valorInt .)
    PDER            reduce using rule 108 (expresionInt -> valorInt .)
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTI           shift and go to state 78
    DIV             shift and go to state 79
    DIVENTERO       shift and go to state 80
    MOD             shift and go to state 81

    operadorMat                    shift and go to state 75

state 151

    (107) expresionInt -> valorInt operadorMat expresionInt .

    PUNTOYCOMA      reduce using rule 107 (expresionInt -> valorInt operadorMat expresionInt .)
    INT             reduce using rule 107 (expresionInt -> valorInt operadorMat expresionInt .)
    DOUBLER         reduce using rule 107 (expresionInt -> valorInt operadorMat expresionInt .)
    NUM             reduce using rule 107 (expresionInt -> valorInt operadorMat expresionInt .)
    STRINGR         reduce using rule 107 (expresionInt -> valorInt operadorMat expresionInt .)
    BOOLR           reduce using rule 107 (expresionInt -> valorInt operadorMat expresionInt .)
    DYNAMIC         reduce using rule 107 (expresionInt -> valorInt operadorMat expresionInt .)
    VAR             reduce using rule 107 (expresionInt -> valorInt operadorMat expresionInt .)
    VARIABLE        reduce using rule 107 (expresionInt -> valorInt operadorMat expresionInt .)
    WHILE           reduce using rule 107 (expresionInt -> valorInt operadorMat expresionInt .)
    DO              reduce using rule 107 (expresionInt -> valorInt operadorMat expresionInt .)
    IF              reduce using rule 107 (expresionInt -> valorInt operadorMat expresionInt .)
    ELSE            reduce using rule 107 (expresionInt -> valorInt operadorMat expresionInt .)
    PRINT           reduce using rule 107 (expresionInt -> valorInt operadorMat expresionInt .)
    NOT             reduce using rule 107 (expresionInt -> valorInt operadorMat expresionInt .)
    ENTERO          reduce using rule 107 (expresionInt -> valorInt operadorMat expresionInt .)
    DOUBLE          reduce using rule 107 (expresionInt -> valorInt operadorMat expresionInt .)
    STRING          reduce using rule 107 (expresionInt -> valorInt operadorMat expresionInt .)
    BOOL            reduce using rule 107 (expresionInt -> valorInt operadorMat expresionInt .)
    $end            reduce using rule 107 (expresionInt -> valorInt operadorMat expresionInt .)
    LDER            reduce using rule 107 (expresionInt -> valorInt operadorMat expresionInt .)
    PDER            reduce using rule 107 (expresionInt -> valorInt operadorMat expresionInt .)


state 152

    (106) valorInt -> VARIABLE .

    SUMA            reduce using rule 106 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 106 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 106 (valorInt -> VARIABLE .)
    DIV             reduce using rule 106 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 106 (valorInt -> VARIABLE .)
    MOD             reduce using rule 106 (valorInt -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 106 (valorInt -> VARIABLE .)
    INT             reduce using rule 106 (valorInt -> VARIABLE .)
    DOUBLER         reduce using rule 106 (valorInt -> VARIABLE .)
    NUM             reduce using rule 106 (valorInt -> VARIABLE .)
    STRINGR         reduce using rule 106 (valorInt -> VARIABLE .)
    BOOLR           reduce using rule 106 (valorInt -> VARIABLE .)
    DYNAMIC         reduce using rule 106 (valorInt -> VARIABLE .)
    VAR             reduce using rule 106 (valorInt -> VARIABLE .)
    VARIABLE        reduce using rule 106 (valorInt -> VARIABLE .)
    WHILE           reduce using rule 106 (valorInt -> VARIABLE .)
    DO              reduce using rule 106 (valorInt -> VARIABLE .)
    IF              reduce using rule 106 (valorInt -> VARIABLE .)
    ELSE            reduce using rule 106 (valorInt -> VARIABLE .)
    PRINT           reduce using rule 106 (valorInt -> VARIABLE .)
    NOT             reduce using rule 106 (valorInt -> VARIABLE .)
    ENTERO          reduce using rule 106 (valorInt -> VARIABLE .)
    DOUBLE          reduce using rule 106 (valorInt -> VARIABLE .)
    STRING          reduce using rule 106 (valorInt -> VARIABLE .)
    BOOL            reduce using rule 106 (valorInt -> VARIABLE .)
    $end            reduce using rule 106 (valorInt -> VARIABLE .)
    LDER            reduce using rule 106 (valorInt -> VARIABLE .)
    PDER            reduce using rule 106 (valorInt -> VARIABLE .)
    AND             reduce using rule 106 (valorInt -> VARIABLE .)
    OR              reduce using rule 106 (valorInt -> VARIABLE .)


state 153

    (111) expresionDouble -> valorDouble operadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    INT             reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DOUBLER         reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    NUM             reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    STRINGR         reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    BOOLR           reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DYNAMIC         reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    VAR             reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    VARIABLE        reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    WHILE           reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DO              reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    IF              reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    ELSE            reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PRINT           reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    NOT             reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    ENTERO          reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DOUBLE          reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    STRING          reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    BOOL            reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    $end            reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    LDER            reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    AND             reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    OR              reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PDER            reduce using rule 111 (expresionDouble -> valorDouble operadorMat expresionDouble .)


state 154

    (79) expresionBool -> valorDouble comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    INT             reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DOUBLER         reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    NUM             reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    STRINGR         reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    BOOLR           reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DYNAMIC         reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    VAR             reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    VARIABLE        reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    WHILE           reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DO              reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    IF              reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    ELSE            reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PRINT           reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    NOT             reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    ENTERO          reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DOUBLE          reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    STRING          reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    BOOL            reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    $end            reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    LDER            reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PDER            reduce using rule 79 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 155

    (82) expresionBool -> valorDouble comparadorMat VARIABLE .
    (106) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    INT             reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DOUBLER         reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    NUM             reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    STRINGR         reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    BOOLR           reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DYNAMIC         reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    VAR             reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    VARIABLE        reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    WHILE           reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DO              reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    IF              reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    ELSE            reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PRINT           reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    NOT             reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    ENTERO          reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DOUBLE          reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    STRING          reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    BOOL            reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    $end            reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    LDER            reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PDER            reduce using rule 82 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 106 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 106 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 106 (valorInt -> VARIABLE .)
    DIV             reduce using rule 106 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 106 (valorInt -> VARIABLE .)
    MOD             reduce using rule 106 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! NOT             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 106 (valorInt -> VARIABLE .) ]


state 156

    (103) expresionString -> valorString operadorMat expresionString .

    PUNTOYCOMA      reduce using rule 103 (expresionString -> valorString operadorMat expresionString .)
    INT             reduce using rule 103 (expresionString -> valorString operadorMat expresionString .)
    DOUBLER         reduce using rule 103 (expresionString -> valorString operadorMat expresionString .)
    NUM             reduce using rule 103 (expresionString -> valorString operadorMat expresionString .)
    STRINGR         reduce using rule 103 (expresionString -> valorString operadorMat expresionString .)
    BOOLR           reduce using rule 103 (expresionString -> valorString operadorMat expresionString .)
    DYNAMIC         reduce using rule 103 (expresionString -> valorString operadorMat expresionString .)
    VAR             reduce using rule 103 (expresionString -> valorString operadorMat expresionString .)
    VARIABLE        reduce using rule 103 (expresionString -> valorString operadorMat expresionString .)
    WHILE           reduce using rule 103 (expresionString -> valorString operadorMat expresionString .)
    DO              reduce using rule 103 (expresionString -> valorString operadorMat expresionString .)
    IF              reduce using rule 103 (expresionString -> valorString operadorMat expresionString .)
    ELSE            reduce using rule 103 (expresionString -> valorString operadorMat expresionString .)
    PRINT           reduce using rule 103 (expresionString -> valorString operadorMat expresionString .)
    NOT             reduce using rule 103 (expresionString -> valorString operadorMat expresionString .)
    ENTERO          reduce using rule 103 (expresionString -> valorString operadorMat expresionString .)
    DOUBLE          reduce using rule 103 (expresionString -> valorString operadorMat expresionString .)
    STRING          reduce using rule 103 (expresionString -> valorString operadorMat expresionString .)
    BOOL            reduce using rule 103 (expresionString -> valorString operadorMat expresionString .)
    $end            reduce using rule 103 (expresionString -> valorString operadorMat expresionString .)
    LDER            reduce using rule 103 (expresionString -> valorString operadorMat expresionString .)
    PDER            reduce using rule 103 (expresionString -> valorString operadorMat expresionString .)


state 157

    (101) valorString -> STRING .

    SUMA            reduce using rule 101 (valorString -> STRING .)
    RESTA           reduce using rule 101 (valorString -> STRING .)
    MULTI           reduce using rule 101 (valorString -> STRING .)
    DIV             reduce using rule 101 (valorString -> STRING .)
    DIVENTERO       reduce using rule 101 (valorString -> STRING .)
    MOD             reduce using rule 101 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 101 (valorString -> STRING .)
    INT             reduce using rule 101 (valorString -> STRING .)
    DOUBLER         reduce using rule 101 (valorString -> STRING .)
    NUM             reduce using rule 101 (valorString -> STRING .)
    STRINGR         reduce using rule 101 (valorString -> STRING .)
    BOOLR           reduce using rule 101 (valorString -> STRING .)
    DYNAMIC         reduce using rule 101 (valorString -> STRING .)
    VAR             reduce using rule 101 (valorString -> STRING .)
    VARIABLE        reduce using rule 101 (valorString -> STRING .)
    WHILE           reduce using rule 101 (valorString -> STRING .)
    DO              reduce using rule 101 (valorString -> STRING .)
    IF              reduce using rule 101 (valorString -> STRING .)
    ELSE            reduce using rule 101 (valorString -> STRING .)
    PRINT           reduce using rule 101 (valorString -> STRING .)
    NOT             reduce using rule 101 (valorString -> STRING .)
    ENTERO          reduce using rule 101 (valorString -> STRING .)
    DOUBLE          reduce using rule 101 (valorString -> STRING .)
    STRING          reduce using rule 101 (valorString -> STRING .)
    BOOL            reduce using rule 101 (valorString -> STRING .)
    $end            reduce using rule 101 (valorString -> STRING .)
    LDER            reduce using rule 101 (valorString -> STRING .)
    PDER            reduce using rule 101 (valorString -> STRING .)


state 158

    (102) valorString -> VARIABLE .

    SUMA            reduce using rule 102 (valorString -> VARIABLE .)
    RESTA           reduce using rule 102 (valorString -> VARIABLE .)
    MULTI           reduce using rule 102 (valorString -> VARIABLE .)
    DIV             reduce using rule 102 (valorString -> VARIABLE .)
    DIVENTERO       reduce using rule 102 (valorString -> VARIABLE .)
    MOD             reduce using rule 102 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 102 (valorString -> VARIABLE .)
    INT             reduce using rule 102 (valorString -> VARIABLE .)
    DOUBLER         reduce using rule 102 (valorString -> VARIABLE .)
    NUM             reduce using rule 102 (valorString -> VARIABLE .)
    STRINGR         reduce using rule 102 (valorString -> VARIABLE .)
    BOOLR           reduce using rule 102 (valorString -> VARIABLE .)
    DYNAMIC         reduce using rule 102 (valorString -> VARIABLE .)
    VAR             reduce using rule 102 (valorString -> VARIABLE .)
    VARIABLE        reduce using rule 102 (valorString -> VARIABLE .)
    WHILE           reduce using rule 102 (valorString -> VARIABLE .)
    DO              reduce using rule 102 (valorString -> VARIABLE .)
    IF              reduce using rule 102 (valorString -> VARIABLE .)
    ELSE            reduce using rule 102 (valorString -> VARIABLE .)
    PRINT           reduce using rule 102 (valorString -> VARIABLE .)
    NOT             reduce using rule 102 (valorString -> VARIABLE .)
    ENTERO          reduce using rule 102 (valorString -> VARIABLE .)
    DOUBLE          reduce using rule 102 (valorString -> VARIABLE .)
    STRING          reduce using rule 102 (valorString -> VARIABLE .)
    BOOL            reduce using rule 102 (valorString -> VARIABLE .)
    $end            reduce using rule 102 (valorString -> VARIABLE .)
    LDER            reduce using rule 102 (valorString -> VARIABLE .)
    PDER            reduce using rule 102 (valorString -> VARIABLE .)


state 159

    (86) expresionBool -> valor IS objeto .

    PUNTOYCOMA      reduce using rule 86 (expresionBool -> valor IS objeto .)
    AND             reduce using rule 86 (expresionBool -> valor IS objeto .)
    OR              reduce using rule 86 (expresionBool -> valor IS objeto .)
    INT             reduce using rule 86 (expresionBool -> valor IS objeto .)
    DOUBLER         reduce using rule 86 (expresionBool -> valor IS objeto .)
    NUM             reduce using rule 86 (expresionBool -> valor IS objeto .)
    STRINGR         reduce using rule 86 (expresionBool -> valor IS objeto .)
    BOOLR           reduce using rule 86 (expresionBool -> valor IS objeto .)
    DYNAMIC         reduce using rule 86 (expresionBool -> valor IS objeto .)
    VAR             reduce using rule 86 (expresionBool -> valor IS objeto .)
    VARIABLE        reduce using rule 86 (expresionBool -> valor IS objeto .)
    WHILE           reduce using rule 86 (expresionBool -> valor IS objeto .)
    DO              reduce using rule 86 (expresionBool -> valor IS objeto .)
    IF              reduce using rule 86 (expresionBool -> valor IS objeto .)
    ELSE            reduce using rule 86 (expresionBool -> valor IS objeto .)
    PRINT           reduce using rule 86 (expresionBool -> valor IS objeto .)
    NOT             reduce using rule 86 (expresionBool -> valor IS objeto .)
    ENTERO          reduce using rule 86 (expresionBool -> valor IS objeto .)
    DOUBLE          reduce using rule 86 (expresionBool -> valor IS objeto .)
    STRING          reduce using rule 86 (expresionBool -> valor IS objeto .)
    BOOL            reduce using rule 86 (expresionBool -> valor IS objeto .)
    $end            reduce using rule 86 (expresionBool -> valor IS objeto .)
    LDER            reduce using rule 86 (expresionBool -> valor IS objeto .)
    PDER            reduce using rule 86 (expresionBool -> valor IS objeto .)


state 160

    (91) objeto -> STRINGR .

    PUNTOYCOMA      reduce using rule 91 (objeto -> STRINGR .)
    AND             reduce using rule 91 (objeto -> STRINGR .)
    OR              reduce using rule 91 (objeto -> STRINGR .)
    INT             reduce using rule 91 (objeto -> STRINGR .)
    DOUBLER         reduce using rule 91 (objeto -> STRINGR .)
    NUM             reduce using rule 91 (objeto -> STRINGR .)
    STRINGR         reduce using rule 91 (objeto -> STRINGR .)
    BOOLR           reduce using rule 91 (objeto -> STRINGR .)
    DYNAMIC         reduce using rule 91 (objeto -> STRINGR .)
    VAR             reduce using rule 91 (objeto -> STRINGR .)
    VARIABLE        reduce using rule 91 (objeto -> STRINGR .)
    WHILE           reduce using rule 91 (objeto -> STRINGR .)
    DO              reduce using rule 91 (objeto -> STRINGR .)
    IF              reduce using rule 91 (objeto -> STRINGR .)
    ELSE            reduce using rule 91 (objeto -> STRINGR .)
    PRINT           reduce using rule 91 (objeto -> STRINGR .)
    NOT             reduce using rule 91 (objeto -> STRINGR .)
    ENTERO          reduce using rule 91 (objeto -> STRINGR .)
    DOUBLE          reduce using rule 91 (objeto -> STRINGR .)
    STRING          reduce using rule 91 (objeto -> STRINGR .)
    BOOL            reduce using rule 91 (objeto -> STRINGR .)
    $end            reduce using rule 91 (objeto -> STRINGR .)
    LDER            reduce using rule 91 (objeto -> STRINGR .)
    PDER            reduce using rule 91 (objeto -> STRINGR .)


state 161

    (92) objeto -> INT .

    PUNTOYCOMA      reduce using rule 92 (objeto -> INT .)
    AND             reduce using rule 92 (objeto -> INT .)
    OR              reduce using rule 92 (objeto -> INT .)
    INT             reduce using rule 92 (objeto -> INT .)
    DOUBLER         reduce using rule 92 (objeto -> INT .)
    NUM             reduce using rule 92 (objeto -> INT .)
    STRINGR         reduce using rule 92 (objeto -> INT .)
    BOOLR           reduce using rule 92 (objeto -> INT .)
    DYNAMIC         reduce using rule 92 (objeto -> INT .)
    VAR             reduce using rule 92 (objeto -> INT .)
    VARIABLE        reduce using rule 92 (objeto -> INT .)
    WHILE           reduce using rule 92 (objeto -> INT .)
    DO              reduce using rule 92 (objeto -> INT .)
    IF              reduce using rule 92 (objeto -> INT .)
    ELSE            reduce using rule 92 (objeto -> INT .)
    PRINT           reduce using rule 92 (objeto -> INT .)
    NOT             reduce using rule 92 (objeto -> INT .)
    ENTERO          reduce using rule 92 (objeto -> INT .)
    DOUBLE          reduce using rule 92 (objeto -> INT .)
    STRING          reduce using rule 92 (objeto -> INT .)
    BOOL            reduce using rule 92 (objeto -> INT .)
    $end            reduce using rule 92 (objeto -> INT .)
    LDER            reduce using rule 92 (objeto -> INT .)
    PDER            reduce using rule 92 (objeto -> INT .)


state 162

    (93) objeto -> DOUBLER .

    PUNTOYCOMA      reduce using rule 93 (objeto -> DOUBLER .)
    AND             reduce using rule 93 (objeto -> DOUBLER .)
    OR              reduce using rule 93 (objeto -> DOUBLER .)
    INT             reduce using rule 93 (objeto -> DOUBLER .)
    DOUBLER         reduce using rule 93 (objeto -> DOUBLER .)
    NUM             reduce using rule 93 (objeto -> DOUBLER .)
    STRINGR         reduce using rule 93 (objeto -> DOUBLER .)
    BOOLR           reduce using rule 93 (objeto -> DOUBLER .)
    DYNAMIC         reduce using rule 93 (objeto -> DOUBLER .)
    VAR             reduce using rule 93 (objeto -> DOUBLER .)
    VARIABLE        reduce using rule 93 (objeto -> DOUBLER .)
    WHILE           reduce using rule 93 (objeto -> DOUBLER .)
    DO              reduce using rule 93 (objeto -> DOUBLER .)
    IF              reduce using rule 93 (objeto -> DOUBLER .)
    ELSE            reduce using rule 93 (objeto -> DOUBLER .)
    PRINT           reduce using rule 93 (objeto -> DOUBLER .)
    NOT             reduce using rule 93 (objeto -> DOUBLER .)
    ENTERO          reduce using rule 93 (objeto -> DOUBLER .)
    DOUBLE          reduce using rule 93 (objeto -> DOUBLER .)
    STRING          reduce using rule 93 (objeto -> DOUBLER .)
    BOOL            reduce using rule 93 (objeto -> DOUBLER .)
    $end            reduce using rule 93 (objeto -> DOUBLER .)
    LDER            reduce using rule 93 (objeto -> DOUBLER .)
    PDER            reduce using rule 93 (objeto -> DOUBLER .)


state 163

    (94) objeto -> NUM .

    PUNTOYCOMA      reduce using rule 94 (objeto -> NUM .)
    AND             reduce using rule 94 (objeto -> NUM .)
    OR              reduce using rule 94 (objeto -> NUM .)
    INT             reduce using rule 94 (objeto -> NUM .)
    DOUBLER         reduce using rule 94 (objeto -> NUM .)
    NUM             reduce using rule 94 (objeto -> NUM .)
    STRINGR         reduce using rule 94 (objeto -> NUM .)
    BOOLR           reduce using rule 94 (objeto -> NUM .)
    DYNAMIC         reduce using rule 94 (objeto -> NUM .)
    VAR             reduce using rule 94 (objeto -> NUM .)
    VARIABLE        reduce using rule 94 (objeto -> NUM .)
    WHILE           reduce using rule 94 (objeto -> NUM .)
    DO              reduce using rule 94 (objeto -> NUM .)
    IF              reduce using rule 94 (objeto -> NUM .)
    ELSE            reduce using rule 94 (objeto -> NUM .)
    PRINT           reduce using rule 94 (objeto -> NUM .)
    NOT             reduce using rule 94 (objeto -> NUM .)
    ENTERO          reduce using rule 94 (objeto -> NUM .)
    DOUBLE          reduce using rule 94 (objeto -> NUM .)
    STRING          reduce using rule 94 (objeto -> NUM .)
    BOOL            reduce using rule 94 (objeto -> NUM .)
    $end            reduce using rule 94 (objeto -> NUM .)
    LDER            reduce using rule 94 (objeto -> NUM .)
    PDER            reduce using rule 94 (objeto -> NUM .)


state 164

    (95) objeto -> VAR .

    PUNTOYCOMA      reduce using rule 95 (objeto -> VAR .)
    AND             reduce using rule 95 (objeto -> VAR .)
    OR              reduce using rule 95 (objeto -> VAR .)
    INT             reduce using rule 95 (objeto -> VAR .)
    DOUBLER         reduce using rule 95 (objeto -> VAR .)
    NUM             reduce using rule 95 (objeto -> VAR .)
    STRINGR         reduce using rule 95 (objeto -> VAR .)
    BOOLR           reduce using rule 95 (objeto -> VAR .)
    DYNAMIC         reduce using rule 95 (objeto -> VAR .)
    VAR             reduce using rule 95 (objeto -> VAR .)
    VARIABLE        reduce using rule 95 (objeto -> VAR .)
    WHILE           reduce using rule 95 (objeto -> VAR .)
    DO              reduce using rule 95 (objeto -> VAR .)
    IF              reduce using rule 95 (objeto -> VAR .)
    ELSE            reduce using rule 95 (objeto -> VAR .)
    PRINT           reduce using rule 95 (objeto -> VAR .)
    NOT             reduce using rule 95 (objeto -> VAR .)
    ENTERO          reduce using rule 95 (objeto -> VAR .)
    DOUBLE          reduce using rule 95 (objeto -> VAR .)
    STRING          reduce using rule 95 (objeto -> VAR .)
    BOOL            reduce using rule 95 (objeto -> VAR .)
    $end            reduce using rule 95 (objeto -> VAR .)
    LDER            reduce using rule 95 (objeto -> VAR .)
    PDER            reduce using rule 95 (objeto -> VAR .)


state 165

    (96) objeto -> DYNAMIC .

    PUNTOYCOMA      reduce using rule 96 (objeto -> DYNAMIC .)
    AND             reduce using rule 96 (objeto -> DYNAMIC .)
    OR              reduce using rule 96 (objeto -> DYNAMIC .)
    INT             reduce using rule 96 (objeto -> DYNAMIC .)
    DOUBLER         reduce using rule 96 (objeto -> DYNAMIC .)
    NUM             reduce using rule 96 (objeto -> DYNAMIC .)
    STRINGR         reduce using rule 96 (objeto -> DYNAMIC .)
    BOOLR           reduce using rule 96 (objeto -> DYNAMIC .)
    DYNAMIC         reduce using rule 96 (objeto -> DYNAMIC .)
    VAR             reduce using rule 96 (objeto -> DYNAMIC .)
    VARIABLE        reduce using rule 96 (objeto -> DYNAMIC .)
    WHILE           reduce using rule 96 (objeto -> DYNAMIC .)
    DO              reduce using rule 96 (objeto -> DYNAMIC .)
    IF              reduce using rule 96 (objeto -> DYNAMIC .)
    ELSE            reduce using rule 96 (objeto -> DYNAMIC .)
    PRINT           reduce using rule 96 (objeto -> DYNAMIC .)
    NOT             reduce using rule 96 (objeto -> DYNAMIC .)
    ENTERO          reduce using rule 96 (objeto -> DYNAMIC .)
    DOUBLE          reduce using rule 96 (objeto -> DYNAMIC .)
    STRING          reduce using rule 96 (objeto -> DYNAMIC .)
    BOOL            reduce using rule 96 (objeto -> DYNAMIC .)
    $end            reduce using rule 96 (objeto -> DYNAMIC .)
    LDER            reduce using rule 96 (objeto -> DYNAMIC .)
    PDER            reduce using rule 96 (objeto -> DYNAMIC .)


state 166

    (97) objeto -> LIST .

    PUNTOYCOMA      reduce using rule 97 (objeto -> LIST .)
    AND             reduce using rule 97 (objeto -> LIST .)
    OR              reduce using rule 97 (objeto -> LIST .)
    INT             reduce using rule 97 (objeto -> LIST .)
    DOUBLER         reduce using rule 97 (objeto -> LIST .)
    NUM             reduce using rule 97 (objeto -> LIST .)
    STRINGR         reduce using rule 97 (objeto -> LIST .)
    BOOLR           reduce using rule 97 (objeto -> LIST .)
    DYNAMIC         reduce using rule 97 (objeto -> LIST .)
    VAR             reduce using rule 97 (objeto -> LIST .)
    VARIABLE        reduce using rule 97 (objeto -> LIST .)
    WHILE           reduce using rule 97 (objeto -> LIST .)
    DO              reduce using rule 97 (objeto -> LIST .)
    IF              reduce using rule 97 (objeto -> LIST .)
    ELSE            reduce using rule 97 (objeto -> LIST .)
    PRINT           reduce using rule 97 (objeto -> LIST .)
    NOT             reduce using rule 97 (objeto -> LIST .)
    ENTERO          reduce using rule 97 (objeto -> LIST .)
    DOUBLE          reduce using rule 97 (objeto -> LIST .)
    STRING          reduce using rule 97 (objeto -> LIST .)
    BOOL            reduce using rule 97 (objeto -> LIST .)
    $end            reduce using rule 97 (objeto -> LIST .)
    LDER            reduce using rule 97 (objeto -> LIST .)
    PDER            reduce using rule 97 (objeto -> LIST .)


state 167

    (98) objeto -> BOOL .

    PUNTOYCOMA      reduce using rule 98 (objeto -> BOOL .)
    AND             reduce using rule 98 (objeto -> BOOL .)
    OR              reduce using rule 98 (objeto -> BOOL .)
    INT             reduce using rule 98 (objeto -> BOOL .)
    DOUBLER         reduce using rule 98 (objeto -> BOOL .)
    NUM             reduce using rule 98 (objeto -> BOOL .)
    STRINGR         reduce using rule 98 (objeto -> BOOL .)
    BOOLR           reduce using rule 98 (objeto -> BOOL .)
    DYNAMIC         reduce using rule 98 (objeto -> BOOL .)
    VAR             reduce using rule 98 (objeto -> BOOL .)
    VARIABLE        reduce using rule 98 (objeto -> BOOL .)
    WHILE           reduce using rule 98 (objeto -> BOOL .)
    DO              reduce using rule 98 (objeto -> BOOL .)
    IF              reduce using rule 98 (objeto -> BOOL .)
    ELSE            reduce using rule 98 (objeto -> BOOL .)
    PRINT           reduce using rule 98 (objeto -> BOOL .)
    NOT             reduce using rule 98 (objeto -> BOOL .)
    ENTERO          reduce using rule 98 (objeto -> BOOL .)
    DOUBLE          reduce using rule 98 (objeto -> BOOL .)
    STRING          reduce using rule 98 (objeto -> BOOL .)
    BOOL            reduce using rule 98 (objeto -> BOOL .)
    $end            reduce using rule 98 (objeto -> BOOL .)
    LDER            reduce using rule 98 (objeto -> BOOL .)
    PDER            reduce using rule 98 (objeto -> BOOL .)


state 168

    (99) objeto -> MAP .

    PUNTOYCOMA      reduce using rule 99 (objeto -> MAP .)
    AND             reduce using rule 99 (objeto -> MAP .)
    OR              reduce using rule 99 (objeto -> MAP .)
    INT             reduce using rule 99 (objeto -> MAP .)
    DOUBLER         reduce using rule 99 (objeto -> MAP .)
    NUM             reduce using rule 99 (objeto -> MAP .)
    STRINGR         reduce using rule 99 (objeto -> MAP .)
    BOOLR           reduce using rule 99 (objeto -> MAP .)
    DYNAMIC         reduce using rule 99 (objeto -> MAP .)
    VAR             reduce using rule 99 (objeto -> MAP .)
    VARIABLE        reduce using rule 99 (objeto -> MAP .)
    WHILE           reduce using rule 99 (objeto -> MAP .)
    DO              reduce using rule 99 (objeto -> MAP .)
    IF              reduce using rule 99 (objeto -> MAP .)
    ELSE            reduce using rule 99 (objeto -> MAP .)
    PRINT           reduce using rule 99 (objeto -> MAP .)
    NOT             reduce using rule 99 (objeto -> MAP .)
    ENTERO          reduce using rule 99 (objeto -> MAP .)
    DOUBLE          reduce using rule 99 (objeto -> MAP .)
    STRING          reduce using rule 99 (objeto -> MAP .)
    BOOL            reduce using rule 99 (objeto -> MAP .)
    $end            reduce using rule 99 (objeto -> MAP .)
    LDER            reduce using rule 99 (objeto -> MAP .)
    PDER            reduce using rule 99 (objeto -> MAP .)


state 169

    (100) objeto -> SET .

    PUNTOYCOMA      reduce using rule 100 (objeto -> SET .)
    AND             reduce using rule 100 (objeto -> SET .)
    OR              reduce using rule 100 (objeto -> SET .)
    INT             reduce using rule 100 (objeto -> SET .)
    DOUBLER         reduce using rule 100 (objeto -> SET .)
    NUM             reduce using rule 100 (objeto -> SET .)
    STRINGR         reduce using rule 100 (objeto -> SET .)
    BOOLR           reduce using rule 100 (objeto -> SET .)
    DYNAMIC         reduce using rule 100 (objeto -> SET .)
    VAR             reduce using rule 100 (objeto -> SET .)
    VARIABLE        reduce using rule 100 (objeto -> SET .)
    WHILE           reduce using rule 100 (objeto -> SET .)
    DO              reduce using rule 100 (objeto -> SET .)
    IF              reduce using rule 100 (objeto -> SET .)
    ELSE            reduce using rule 100 (objeto -> SET .)
    PRINT           reduce using rule 100 (objeto -> SET .)
    NOT             reduce using rule 100 (objeto -> SET .)
    ENTERO          reduce using rule 100 (objeto -> SET .)
    DOUBLE          reduce using rule 100 (objeto -> SET .)
    STRING          reduce using rule 100 (objeto -> SET .)
    BOOL            reduce using rule 100 (objeto -> SET .)
    $end            reduce using rule 100 (objeto -> SET .)
    LDER            reduce using rule 100 (objeto -> SET .)
    PDER            reduce using rule 100 (objeto -> SET .)


state 170

    (87) expresionBool -> valor ISNEGADO objeto .

    PUNTOYCOMA      reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    AND             reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    OR              reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    INT             reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    DOUBLER         reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    NUM             reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    STRINGR         reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    BOOLR           reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    DYNAMIC         reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    VAR             reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    VARIABLE        reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    WHILE           reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    DO              reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    IF              reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    ELSE            reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    PRINT           reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    NOT             reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    ENTERO          reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    DOUBLE          reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    STRING          reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    BOOL            reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    $end            reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    LDER            reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)
    PDER            reduce using rule 87 (expresionBool -> valor ISNEGADO objeto .)


state 171

    (68) expresion -> valor operadorMat expresion .

    PUNTOYCOMA      reduce using rule 68 (expresion -> valor operadorMat expresion .)
    INT             reduce using rule 68 (expresion -> valor operadorMat expresion .)
    DOUBLER         reduce using rule 68 (expresion -> valor operadorMat expresion .)
    NUM             reduce using rule 68 (expresion -> valor operadorMat expresion .)
    STRINGR         reduce using rule 68 (expresion -> valor operadorMat expresion .)
    BOOLR           reduce using rule 68 (expresion -> valor operadorMat expresion .)
    DYNAMIC         reduce using rule 68 (expresion -> valor operadorMat expresion .)
    VAR             reduce using rule 68 (expresion -> valor operadorMat expresion .)
    VARIABLE        reduce using rule 68 (expresion -> valor operadorMat expresion .)
    WHILE           reduce using rule 68 (expresion -> valor operadorMat expresion .)
    DO              reduce using rule 68 (expresion -> valor operadorMat expresion .)
    IF              reduce using rule 68 (expresion -> valor operadorMat expresion .)
    ELSE            reduce using rule 68 (expresion -> valor operadorMat expresion .)
    PRINT           reduce using rule 68 (expresion -> valor operadorMat expresion .)
    NOT             reduce using rule 68 (expresion -> valor operadorMat expresion .)
    ENTERO          reduce using rule 68 (expresion -> valor operadorMat expresion .)
    DOUBLE          reduce using rule 68 (expresion -> valor operadorMat expresion .)
    STRING          reduce using rule 68 (expresion -> valor operadorMat expresion .)
    BOOL            reduce using rule 68 (expresion -> valor operadorMat expresion .)
    $end            reduce using rule 68 (expresion -> valor operadorMat expresion .)
    LDER            reduce using rule 68 (expresion -> valor operadorMat expresion .)
    PDER            reduce using rule 68 (expresion -> valor operadorMat expresion .)


state 172

    (74) sentenciaWhile -> WHILE PIZQ expresionBool . PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> WHILE PIZQ expresionBool . PDER algoritmo
    (89) comparacionBool -> expresionBool . operadorLogico expresionBool
    (90) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (125) operadorLogico -> . AND
    (126) operadorLogico -> . OR

    PDER            shift and go to state 199
    AND             shift and go to state 47
    OR              shift and go to state 48

    operadorLogico                 shift and go to state 46

state 173

    (76) sentenciaDoWhile -> DO LIZQ algoritmo . LDER WHILE PIZQ expresionBool PDER

    LDER            shift and go to state 200


state 174

    (60) sentenciaIf -> IF PIZQ expresionBool . PDER algoritmo
    (61) sentenciaIf -> IF PIZQ expresionBool . PDER LIZQ algoritmo LDER
    (89) comparacionBool -> expresionBool . operadorLogico expresionBool
    (90) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (125) operadorLogico -> . AND
    (126) operadorLogico -> . OR

    PDER            shift and go to state 201
    AND             shift and go to state 47
    OR              shift and go to state 48

    operadorLogico                 shift and go to state 46

state 175

    (63) sentenciaElse -> ELSE LIZQ algoritmo . LDER

    LDER            shift and go to state 202


state 176

    (33) algoritmo -> asignacion PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 33 (algoritmo -> asignacion PUNTOYCOMA .)
    INT             reduce using rule 33 (algoritmo -> asignacion PUNTOYCOMA .)
    DOUBLER         reduce using rule 33 (algoritmo -> asignacion PUNTOYCOMA .)
    NUM             reduce using rule 33 (algoritmo -> asignacion PUNTOYCOMA .)
    STRINGR         reduce using rule 33 (algoritmo -> asignacion PUNTOYCOMA .)
    BOOLR           reduce using rule 33 (algoritmo -> asignacion PUNTOYCOMA .)
    DYNAMIC         reduce using rule 33 (algoritmo -> asignacion PUNTOYCOMA .)
    VAR             reduce using rule 33 (algoritmo -> asignacion PUNTOYCOMA .)
    VARIABLE        reduce using rule 33 (algoritmo -> asignacion PUNTOYCOMA .)
    WHILE           reduce using rule 33 (algoritmo -> asignacion PUNTOYCOMA .)
    DO              reduce using rule 33 (algoritmo -> asignacion PUNTOYCOMA .)
    IF              reduce using rule 33 (algoritmo -> asignacion PUNTOYCOMA .)
    ELSE            reduce using rule 33 (algoritmo -> asignacion PUNTOYCOMA .)
    PRINT           reduce using rule 33 (algoritmo -> asignacion PUNTOYCOMA .)
    NOT             reduce using rule 33 (algoritmo -> asignacion PUNTOYCOMA .)
    ENTERO          reduce using rule 33 (algoritmo -> asignacion PUNTOYCOMA .)
    DOUBLE          reduce using rule 33 (algoritmo -> asignacion PUNTOYCOMA .)
    STRING          reduce using rule 33 (algoritmo -> asignacion PUNTOYCOMA .)
    BOOL            reduce using rule 33 (algoritmo -> asignacion PUNTOYCOMA .)
    $end            reduce using rule 33 (algoritmo -> asignacion PUNTOYCOMA .)
    LDER            reduce using rule 33 (algoritmo -> asignacion PUNTOYCOMA .)


state 177

    (34) algoritmo -> expresionInt PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 34 (algoritmo -> expresionInt PUNTOYCOMA .)
    INT             reduce using rule 34 (algoritmo -> expresionInt PUNTOYCOMA .)
    DOUBLER         reduce using rule 34 (algoritmo -> expresionInt PUNTOYCOMA .)
    NUM             reduce using rule 34 (algoritmo -> expresionInt PUNTOYCOMA .)
    STRINGR         reduce using rule 34 (algoritmo -> expresionInt PUNTOYCOMA .)
    BOOLR           reduce using rule 34 (algoritmo -> expresionInt PUNTOYCOMA .)
    DYNAMIC         reduce using rule 34 (algoritmo -> expresionInt PUNTOYCOMA .)
    VAR             reduce using rule 34 (algoritmo -> expresionInt PUNTOYCOMA .)
    VARIABLE        reduce using rule 34 (algoritmo -> expresionInt PUNTOYCOMA .)
    WHILE           reduce using rule 34 (algoritmo -> expresionInt PUNTOYCOMA .)
    DO              reduce using rule 34 (algoritmo -> expresionInt PUNTOYCOMA .)
    IF              reduce using rule 34 (algoritmo -> expresionInt PUNTOYCOMA .)
    ELSE            reduce using rule 34 (algoritmo -> expresionInt PUNTOYCOMA .)
    PRINT           reduce using rule 34 (algoritmo -> expresionInt PUNTOYCOMA .)
    NOT             reduce using rule 34 (algoritmo -> expresionInt PUNTOYCOMA .)
    ENTERO          reduce using rule 34 (algoritmo -> expresionInt PUNTOYCOMA .)
    DOUBLE          reduce using rule 34 (algoritmo -> expresionInt PUNTOYCOMA .)
    STRING          reduce using rule 34 (algoritmo -> expresionInt PUNTOYCOMA .)
    BOOL            reduce using rule 34 (algoritmo -> expresionInt PUNTOYCOMA .)
    $end            reduce using rule 34 (algoritmo -> expresionInt PUNTOYCOMA .)
    LDER            reduce using rule 34 (algoritmo -> expresionInt PUNTOYCOMA .)


state 178

    (35) algoritmo -> expresionDouble PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 35 (algoritmo -> expresionDouble PUNTOYCOMA .)
    INT             reduce using rule 35 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DOUBLER         reduce using rule 35 (algoritmo -> expresionDouble PUNTOYCOMA .)
    NUM             reduce using rule 35 (algoritmo -> expresionDouble PUNTOYCOMA .)
    STRINGR         reduce using rule 35 (algoritmo -> expresionDouble PUNTOYCOMA .)
    BOOLR           reduce using rule 35 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DYNAMIC         reduce using rule 35 (algoritmo -> expresionDouble PUNTOYCOMA .)
    VAR             reduce using rule 35 (algoritmo -> expresionDouble PUNTOYCOMA .)
    VARIABLE        reduce using rule 35 (algoritmo -> expresionDouble PUNTOYCOMA .)
    WHILE           reduce using rule 35 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DO              reduce using rule 35 (algoritmo -> expresionDouble PUNTOYCOMA .)
    IF              reduce using rule 35 (algoritmo -> expresionDouble PUNTOYCOMA .)
    ELSE            reduce using rule 35 (algoritmo -> expresionDouble PUNTOYCOMA .)
    PRINT           reduce using rule 35 (algoritmo -> expresionDouble PUNTOYCOMA .)
    NOT             reduce using rule 35 (algoritmo -> expresionDouble PUNTOYCOMA .)
    ENTERO          reduce using rule 35 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DOUBLE          reduce using rule 35 (algoritmo -> expresionDouble PUNTOYCOMA .)
    STRING          reduce using rule 35 (algoritmo -> expresionDouble PUNTOYCOMA .)
    BOOL            reduce using rule 35 (algoritmo -> expresionDouble PUNTOYCOMA .)
    $end            reduce using rule 35 (algoritmo -> expresionDouble PUNTOYCOMA .)
    LDER            reduce using rule 35 (algoritmo -> expresionDouble PUNTOYCOMA .)


state 179

    (36) algoritmo -> expresionString PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 36 (algoritmo -> expresionString PUNTOYCOMA .)
    INT             reduce using rule 36 (algoritmo -> expresionString PUNTOYCOMA .)
    DOUBLER         reduce using rule 36 (algoritmo -> expresionString PUNTOYCOMA .)
    NUM             reduce using rule 36 (algoritmo -> expresionString PUNTOYCOMA .)
    STRINGR         reduce using rule 36 (algoritmo -> expresionString PUNTOYCOMA .)
    BOOLR           reduce using rule 36 (algoritmo -> expresionString PUNTOYCOMA .)
    DYNAMIC         reduce using rule 36 (algoritmo -> expresionString PUNTOYCOMA .)
    VAR             reduce using rule 36 (algoritmo -> expresionString PUNTOYCOMA .)
    VARIABLE        reduce using rule 36 (algoritmo -> expresionString PUNTOYCOMA .)
    WHILE           reduce using rule 36 (algoritmo -> expresionString PUNTOYCOMA .)
    DO              reduce using rule 36 (algoritmo -> expresionString PUNTOYCOMA .)
    IF              reduce using rule 36 (algoritmo -> expresionString PUNTOYCOMA .)
    ELSE            reduce using rule 36 (algoritmo -> expresionString PUNTOYCOMA .)
    PRINT           reduce using rule 36 (algoritmo -> expresionString PUNTOYCOMA .)
    NOT             reduce using rule 36 (algoritmo -> expresionString PUNTOYCOMA .)
    ENTERO          reduce using rule 36 (algoritmo -> expresionString PUNTOYCOMA .)
    DOUBLE          reduce using rule 36 (algoritmo -> expresionString PUNTOYCOMA .)
    STRING          reduce using rule 36 (algoritmo -> expresionString PUNTOYCOMA .)
    BOOL            reduce using rule 36 (algoritmo -> expresionString PUNTOYCOMA .)
    $end            reduce using rule 36 (algoritmo -> expresionString PUNTOYCOMA .)
    LDER            reduce using rule 36 (algoritmo -> expresionString PUNTOYCOMA .)


state 180

    (37) algoritmo -> expresionBool PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 37 (algoritmo -> expresionBool PUNTOYCOMA .)
    INT             reduce using rule 37 (algoritmo -> expresionBool PUNTOYCOMA .)
    DOUBLER         reduce using rule 37 (algoritmo -> expresionBool PUNTOYCOMA .)
    NUM             reduce using rule 37 (algoritmo -> expresionBool PUNTOYCOMA .)
    STRINGR         reduce using rule 37 (algoritmo -> expresionBool PUNTOYCOMA .)
    BOOLR           reduce using rule 37 (algoritmo -> expresionBool PUNTOYCOMA .)
    DYNAMIC         reduce using rule 37 (algoritmo -> expresionBool PUNTOYCOMA .)
    VAR             reduce using rule 37 (algoritmo -> expresionBool PUNTOYCOMA .)
    VARIABLE        reduce using rule 37 (algoritmo -> expresionBool PUNTOYCOMA .)
    WHILE           reduce using rule 37 (algoritmo -> expresionBool PUNTOYCOMA .)
    DO              reduce using rule 37 (algoritmo -> expresionBool PUNTOYCOMA .)
    IF              reduce using rule 37 (algoritmo -> expresionBool PUNTOYCOMA .)
    ELSE            reduce using rule 37 (algoritmo -> expresionBool PUNTOYCOMA .)
    PRINT           reduce using rule 37 (algoritmo -> expresionBool PUNTOYCOMA .)
    NOT             reduce using rule 37 (algoritmo -> expresionBool PUNTOYCOMA .)
    ENTERO          reduce using rule 37 (algoritmo -> expresionBool PUNTOYCOMA .)
    DOUBLE          reduce using rule 37 (algoritmo -> expresionBool PUNTOYCOMA .)
    STRING          reduce using rule 37 (algoritmo -> expresionBool PUNTOYCOMA .)
    BOOL            reduce using rule 37 (algoritmo -> expresionBool PUNTOYCOMA .)
    $end            reduce using rule 37 (algoritmo -> expresionBool PUNTOYCOMA .)
    LDER            reduce using rule 37 (algoritmo -> expresionBool PUNTOYCOMA .)


state 181

    (40) algoritmo -> sentenciaWhile PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 40 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    INT             reduce using rule 40 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DOUBLER         reduce using rule 40 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    NUM             reduce using rule 40 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    STRINGR         reduce using rule 40 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    BOOLR           reduce using rule 40 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DYNAMIC         reduce using rule 40 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    VAR             reduce using rule 40 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    VARIABLE        reduce using rule 40 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    WHILE           reduce using rule 40 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DO              reduce using rule 40 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    IF              reduce using rule 40 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    ELSE            reduce using rule 40 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    PRINT           reduce using rule 40 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    NOT             reduce using rule 40 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    ENTERO          reduce using rule 40 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DOUBLE          reduce using rule 40 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    STRING          reduce using rule 40 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    BOOL            reduce using rule 40 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    $end            reduce using rule 40 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    LDER            reduce using rule 40 (algoritmo -> sentenciaWhile PUNTOYCOMA .)


state 182

    (41) algoritmo -> sentenciaDoWhile PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 41 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    INT             reduce using rule 41 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DOUBLER         reduce using rule 41 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    NUM             reduce using rule 41 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    STRINGR         reduce using rule 41 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    BOOLR           reduce using rule 41 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DYNAMIC         reduce using rule 41 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    VAR             reduce using rule 41 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    VARIABLE        reduce using rule 41 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    WHILE           reduce using rule 41 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DO              reduce using rule 41 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    IF              reduce using rule 41 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    ELSE            reduce using rule 41 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    PRINT           reduce using rule 41 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    NOT             reduce using rule 41 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    ENTERO          reduce using rule 41 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DOUBLE          reduce using rule 41 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    STRING          reduce using rule 41 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    BOOL            reduce using rule 41 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    $end            reduce using rule 41 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    LDER            reduce using rule 41 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)


state 183

    (42) algoritmo -> sentenciaIf PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 42 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    INT             reduce using rule 42 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DOUBLER         reduce using rule 42 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    NUM             reduce using rule 42 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    STRINGR         reduce using rule 42 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    BOOLR           reduce using rule 42 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DYNAMIC         reduce using rule 42 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    VAR             reduce using rule 42 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    VARIABLE        reduce using rule 42 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    WHILE           reduce using rule 42 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DO              reduce using rule 42 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    IF              reduce using rule 42 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    ELSE            reduce using rule 42 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    PRINT           reduce using rule 42 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    NOT             reduce using rule 42 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    ENTERO          reduce using rule 42 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DOUBLE          reduce using rule 42 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    STRING          reduce using rule 42 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    BOOL            reduce using rule 42 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    $end            reduce using rule 42 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    LDER            reduce using rule 42 (algoritmo -> sentenciaIf PUNTOYCOMA .)


state 184

    (44) algoritmo -> sentenciaElse PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 44 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    INT             reduce using rule 44 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DOUBLER         reduce using rule 44 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    NUM             reduce using rule 44 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    STRINGR         reduce using rule 44 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    BOOLR           reduce using rule 44 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DYNAMIC         reduce using rule 44 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    VAR             reduce using rule 44 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    VARIABLE        reduce using rule 44 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    WHILE           reduce using rule 44 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DO              reduce using rule 44 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    IF              reduce using rule 44 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    ELSE            reduce using rule 44 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    PRINT           reduce using rule 44 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    NOT             reduce using rule 44 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    ENTERO          reduce using rule 44 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DOUBLE          reduce using rule 44 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    STRING          reduce using rule 44 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    BOOL            reduce using rule 44 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    $end            reduce using rule 44 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    LDER            reduce using rule 44 (algoritmo -> sentenciaElse PUNTOYCOMA .)


state 185

    (46) algoritmo -> imprimir PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 46 (algoritmo -> imprimir PUNTOYCOMA .)
    INT             reduce using rule 46 (algoritmo -> imprimir PUNTOYCOMA .)
    DOUBLER         reduce using rule 46 (algoritmo -> imprimir PUNTOYCOMA .)
    NUM             reduce using rule 46 (algoritmo -> imprimir PUNTOYCOMA .)
    STRINGR         reduce using rule 46 (algoritmo -> imprimir PUNTOYCOMA .)
    BOOLR           reduce using rule 46 (algoritmo -> imprimir PUNTOYCOMA .)
    DYNAMIC         reduce using rule 46 (algoritmo -> imprimir PUNTOYCOMA .)
    VAR             reduce using rule 46 (algoritmo -> imprimir PUNTOYCOMA .)
    VARIABLE        reduce using rule 46 (algoritmo -> imprimir PUNTOYCOMA .)
    WHILE           reduce using rule 46 (algoritmo -> imprimir PUNTOYCOMA .)
    DO              reduce using rule 46 (algoritmo -> imprimir PUNTOYCOMA .)
    IF              reduce using rule 46 (algoritmo -> imprimir PUNTOYCOMA .)
    ELSE            reduce using rule 46 (algoritmo -> imprimir PUNTOYCOMA .)
    PRINT           reduce using rule 46 (algoritmo -> imprimir PUNTOYCOMA .)
    NOT             reduce using rule 46 (algoritmo -> imprimir PUNTOYCOMA .)
    ENTERO          reduce using rule 46 (algoritmo -> imprimir PUNTOYCOMA .)
    DOUBLE          reduce using rule 46 (algoritmo -> imprimir PUNTOYCOMA .)
    STRING          reduce using rule 46 (algoritmo -> imprimir PUNTOYCOMA .)
    BOOL            reduce using rule 46 (algoritmo -> imprimir PUNTOYCOMA .)
    $end            reduce using rule 46 (algoritmo -> imprimir PUNTOYCOMA .)
    LDER            reduce using rule 46 (algoritmo -> imprimir PUNTOYCOMA .)


state 186

    (47) algoritmo -> negacionBool PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 47 (algoritmo -> negacionBool PUNTOYCOMA .)
    INT             reduce using rule 47 (algoritmo -> negacionBool PUNTOYCOMA .)
    DOUBLER         reduce using rule 47 (algoritmo -> negacionBool PUNTOYCOMA .)
    NUM             reduce using rule 47 (algoritmo -> negacionBool PUNTOYCOMA .)
    STRINGR         reduce using rule 47 (algoritmo -> negacionBool PUNTOYCOMA .)
    BOOLR           reduce using rule 47 (algoritmo -> negacionBool PUNTOYCOMA .)
    DYNAMIC         reduce using rule 47 (algoritmo -> negacionBool PUNTOYCOMA .)
    VAR             reduce using rule 47 (algoritmo -> negacionBool PUNTOYCOMA .)
    VARIABLE        reduce using rule 47 (algoritmo -> negacionBool PUNTOYCOMA .)
    WHILE           reduce using rule 47 (algoritmo -> negacionBool PUNTOYCOMA .)
    DO              reduce using rule 47 (algoritmo -> negacionBool PUNTOYCOMA .)
    IF              reduce using rule 47 (algoritmo -> negacionBool PUNTOYCOMA .)
    ELSE            reduce using rule 47 (algoritmo -> negacionBool PUNTOYCOMA .)
    PRINT           reduce using rule 47 (algoritmo -> negacionBool PUNTOYCOMA .)
    NOT             reduce using rule 47 (algoritmo -> negacionBool PUNTOYCOMA .)
    ENTERO          reduce using rule 47 (algoritmo -> negacionBool PUNTOYCOMA .)
    DOUBLE          reduce using rule 47 (algoritmo -> negacionBool PUNTOYCOMA .)
    STRING          reduce using rule 47 (algoritmo -> negacionBool PUNTOYCOMA .)
    BOOL            reduce using rule 47 (algoritmo -> negacionBool PUNTOYCOMA .)
    $end            reduce using rule 47 (algoritmo -> negacionBool PUNTOYCOMA .)
    LDER            reduce using rule 47 (algoritmo -> negacionBool PUNTOYCOMA .)


state 187

    (48) algoritmo -> comparacionBool PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 48 (algoritmo -> comparacionBool PUNTOYCOMA .)
    INT             reduce using rule 48 (algoritmo -> comparacionBool PUNTOYCOMA .)
    DOUBLER         reduce using rule 48 (algoritmo -> comparacionBool PUNTOYCOMA .)
    NUM             reduce using rule 48 (algoritmo -> comparacionBool PUNTOYCOMA .)
    STRINGR         reduce using rule 48 (algoritmo -> comparacionBool PUNTOYCOMA .)
    BOOLR           reduce using rule 48 (algoritmo -> comparacionBool PUNTOYCOMA .)
    DYNAMIC         reduce using rule 48 (algoritmo -> comparacionBool PUNTOYCOMA .)
    VAR             reduce using rule 48 (algoritmo -> comparacionBool PUNTOYCOMA .)
    VARIABLE        reduce using rule 48 (algoritmo -> comparacionBool PUNTOYCOMA .)
    WHILE           reduce using rule 48 (algoritmo -> comparacionBool PUNTOYCOMA .)
    DO              reduce using rule 48 (algoritmo -> comparacionBool PUNTOYCOMA .)
    IF              reduce using rule 48 (algoritmo -> comparacionBool PUNTOYCOMA .)
    ELSE            reduce using rule 48 (algoritmo -> comparacionBool PUNTOYCOMA .)
    PRINT           reduce using rule 48 (algoritmo -> comparacionBool PUNTOYCOMA .)
    NOT             reduce using rule 48 (algoritmo -> comparacionBool PUNTOYCOMA .)
    ENTERO          reduce using rule 48 (algoritmo -> comparacionBool PUNTOYCOMA .)
    DOUBLE          reduce using rule 48 (algoritmo -> comparacionBool PUNTOYCOMA .)
    STRING          reduce using rule 48 (algoritmo -> comparacionBool PUNTOYCOMA .)
    BOOL            reduce using rule 48 (algoritmo -> comparacionBool PUNTOYCOMA .)
    $end            reduce using rule 48 (algoritmo -> comparacionBool PUNTOYCOMA .)
    LDER            reduce using rule 48 (algoritmo -> comparacionBool PUNTOYCOMA .)


state 188

    (58) imprimir -> PRINT PIZQ expresion . PDER

    PDER            shift and go to state 203


state 189

    (59) imprimir -> PRINT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 204


state 190

    (57) asignacionSimple -> VARIABLE . IGUAL expresion
    (65) valor -> VARIABLE .
    (80) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (81) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (102) valorString -> VARIABLE .
    (106) valorInt -> VARIABLE .
    (78) valorBool -> VARIABLE .
    (119) comparadorMat -> . DIGUAL
    (120) comparadorMat -> . NOIGUAL
    (121) comparadorMat -> . MAYOR
    (122) comparadorMat -> . MENOR
    (123) comparadorMat -> . MAYIGUAL
    (124) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 65 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 65 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 62
    IS              reduce using rule 65 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 65 (valor -> VARIABLE .)
    SUMA            reduce using rule 65 (valor -> VARIABLE .)
    RESTA           reduce using rule 65 (valor -> VARIABLE .)
    MULTI           reduce using rule 65 (valor -> VARIABLE .)
    DIV             reduce using rule 65 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 65 (valor -> VARIABLE .)
    MOD             reduce using rule 65 (valor -> VARIABLE .)
    PDER            reduce using rule 65 (valor -> VARIABLE .)
    AND             reduce using rule 78 (valorBool -> VARIABLE .)
    OR              reduce using rule 78 (valorBool -> VARIABLE .)
    DIGUAL          shift and go to state 63
    NOIGUAL         shift and go to state 64
    MAYOR           shift and go to state 65
    MENOR           shift and go to state 66
    MAYIGUAL        shift and go to state 67
    MENIGUAL        shift and go to state 68

  ! SUMA            [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! DIV             [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! MOD             [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 102 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 106 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 78 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 61

state 191

    (88) negacionBool -> NOT PIZQ expresionBool . PDER
    (89) comparacionBool -> expresionBool . operadorLogico expresionBool
    (90) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (125) operadorLogico -> . AND
    (126) operadorLogico -> . OR

    PDER            shift and go to state 205
    AND             shift and go to state 47
    OR              shift and go to state 48

    operadorLogico                 shift and go to state 46

state 192

    (49) asignacion -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 49 (asignacion -> INT VARIABLE IGUAL expresionInt .)


state 193

    (50) asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 50 (asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 194

    (51) asignacion -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 51 (asignacion -> NUM VARIABLE IGUAL expresionDouble .)


state 195

    (52) asignacion -> STRINGR VARIABLE IGUAL expresionString .

    PUNTOYCOMA      reduce using rule 52 (asignacion -> STRINGR VARIABLE IGUAL expresionString .)


state 196

    (53) asignacion -> BOOLR VARIABLE IGUAL expresionBool .
    (89) comparacionBool -> expresionBool . operadorLogico expresionBool
    (90) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (125) operadorLogico -> . AND
    (126) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 53 (asignacion -> BOOLR VARIABLE IGUAL expresionBool .)
    AND             shift and go to state 47
    OR              shift and go to state 48

    operadorLogico                 shift and go to state 46

state 197

    (54) asignacion -> DYNAMIC VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 54 (asignacion -> DYNAMIC VARIABLE IGUAL expresion .)


state 198

    (55) asignacion -> VAR VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 55 (asignacion -> VAR VARIABLE IGUAL expresion .)


state 199

    (74) sentenciaWhile -> WHILE PIZQ expresionBool PDER . LIZQ algoritmo LDER
    (75) sentenciaWhile -> WHILE PIZQ expresionBool PDER . algoritmo
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

    LIZQ            shift and go to state 206
    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

    expresionBool                  shift and go to state 97
    algoritmo                      shift and go to state 207
    asignacion                     shift and go to state 93
    expresionInt                   shift and go to state 94
    expresionDouble                shift and go to state 95
    expresionString                shift and go to state 96
    expresion                      shift and go to state 15
    sentenciaWhile                 shift and go to state 98
    sentenciaDoWhile               shift and go to state 99
    sentenciaIf                    shift and go to state 100
    sentenciaElse                  shift and go to state 101
    imprimir                       shift and go to state 102
    negacionBool                   shift and go to state 103
    comparacionBool                shift and go to state 104
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 200

    (76) sentenciaDoWhile -> DO LIZQ algoritmo LDER . WHILE PIZQ expresionBool PDER

    WHILE           shift and go to state 208


state 201

    (60) sentenciaIf -> IF PIZQ expresionBool PDER . algoritmo
    (61) sentenciaIf -> IF PIZQ expresionBool PDER . LIZQ algoritmo LDER
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

    LIZQ            shift and go to state 210
    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

    expresionBool                  shift and go to state 97
    algoritmo                      shift and go to state 209
    asignacion                     shift and go to state 93
    expresionInt                   shift and go to state 94
    expresionDouble                shift and go to state 95
    expresionString                shift and go to state 96
    expresion                      shift and go to state 15
    sentenciaWhile                 shift and go to state 98
    sentenciaDoWhile               shift and go to state 99
    sentenciaIf                    shift and go to state 100
    sentenciaElse                  shift and go to state 101
    imprimir                       shift and go to state 102
    negacionBool                   shift and go to state 103
    comparacionBool                shift and go to state 104
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 202

    (63) sentenciaElse -> ELSE LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 63 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    INT             reduce using rule 63 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 63 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    NUM             reduce using rule 63 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 63 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 63 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 63 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    VAR             reduce using rule 63 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 63 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    WHILE           reduce using rule 63 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DO              reduce using rule 63 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    IF              reduce using rule 63 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    ELSE            reduce using rule 63 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    PRINT           reduce using rule 63 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    NOT             reduce using rule 63 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 63 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 63 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    STRING          reduce using rule 63 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    BOOL            reduce using rule 63 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    $end            reduce using rule 63 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    LDER            reduce using rule 63 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)


state 203

    (58) imprimir -> PRINT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 58 (imprimir -> PRINT PIZQ expresion PDER .)


state 204

    (59) imprimir -> PRINT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 59 (imprimir -> PRINT PIZQ asignacionSimple PDER .)


state 205

    (88) negacionBool -> NOT PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    AND             reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    OR              reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    INT             reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    DOUBLER         reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    NUM             reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    STRINGR         reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    BOOLR           reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    DYNAMIC         reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    VAR             reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    VARIABLE        reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    WHILE           reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    DO              reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    IF              reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    ELSE            reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    PRINT           reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    NOT             reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    ENTERO          reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    DOUBLE          reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    STRING          reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    BOOL            reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    $end            reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    LDER            reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)
    PDER            reduce using rule 88 (negacionBool -> NOT PIZQ expresionBool PDER .)


state 206

    (74) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ . algoritmo LDER
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

    expresionBool                  shift and go to state 97
    algoritmo                      shift and go to state 211
    asignacion                     shift and go to state 93
    expresionInt                   shift and go to state 94
    expresionDouble                shift and go to state 95
    expresionString                shift and go to state 96
    expresion                      shift and go to state 15
    sentenciaWhile                 shift and go to state 98
    sentenciaDoWhile               shift and go to state 99
    sentenciaIf                    shift and go to state 100
    sentenciaElse                  shift and go to state 101
    imprimir                       shift and go to state 102
    negacionBool                   shift and go to state 103
    comparacionBool                shift and go to state 104
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 207

    (75) sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .

    PUNTOYCOMA      reduce using rule 75 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    INT             reduce using rule 75 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DOUBLER         reduce using rule 75 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    NUM             reduce using rule 75 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    STRINGR         reduce using rule 75 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    BOOLR           reduce using rule 75 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DYNAMIC         reduce using rule 75 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    VAR             reduce using rule 75 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    VARIABLE        reduce using rule 75 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    WHILE           reduce using rule 75 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DO              reduce using rule 75 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    IF              reduce using rule 75 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    ELSE            reduce using rule 75 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    PRINT           reduce using rule 75 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    NOT             reduce using rule 75 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    ENTERO          reduce using rule 75 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DOUBLE          reduce using rule 75 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    STRING          reduce using rule 75 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    BOOL            reduce using rule 75 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    $end            reduce using rule 75 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    LDER            reduce using rule 75 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)


state 208

    (76) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE . PIZQ expresionBool PDER

    PIZQ            shift and go to state 212


state 209

    (60) sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .

    PUNTOYCOMA      reduce using rule 60 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    INT             reduce using rule 60 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DOUBLER         reduce using rule 60 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    NUM             reduce using rule 60 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    STRINGR         reduce using rule 60 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    BOOLR           reduce using rule 60 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DYNAMIC         reduce using rule 60 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    VAR             reduce using rule 60 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    VARIABLE        reduce using rule 60 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    WHILE           reduce using rule 60 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DO              reduce using rule 60 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    IF              reduce using rule 60 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    ELSE            reduce using rule 60 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    PRINT           reduce using rule 60 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    NOT             reduce using rule 60 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    ENTERO          reduce using rule 60 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DOUBLE          reduce using rule 60 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    STRING          reduce using rule 60 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    BOOL            reduce using rule 60 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    $end            reduce using rule 60 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    LDER            reduce using rule 60 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)


state 210

    (61) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ . algoritmo LDER
    (33) algoritmo -> . asignacion PUNTOYCOMA
    (34) algoritmo -> . expresionInt PUNTOYCOMA
    (35) algoritmo -> . expresionDouble PUNTOYCOMA
    (36) algoritmo -> . expresionString PUNTOYCOMA
    (37) algoritmo -> . expresionBool PUNTOYCOMA
    (38) algoritmo -> . expresion
    (39) algoritmo -> . sentenciaWhile
    (40) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (41) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (42) algoritmo -> . sentenciaIf PUNTOYCOMA
    (43) algoritmo -> . sentenciaIf
    (44) algoritmo -> . sentenciaElse PUNTOYCOMA
    (45) algoritmo -> . sentenciaElse
    (46) algoritmo -> . imprimir PUNTOYCOMA
    (47) algoritmo -> . negacionBool PUNTOYCOMA
    (48) algoritmo -> . comparacionBool PUNTOYCOMA
    (49) asignacion -> . INT VARIABLE IGUAL expresionInt
    (50) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (51) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (52) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (53) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (54) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (55) asignacion -> . VAR VARIABLE IGUAL expresion
    (56) asignacion -> . asignacionSimple
    (107) expresionInt -> . valorInt operadorMat expresionInt
    (108) expresionInt -> . valorInt
    (111) expresionDouble -> . valorDouble operadorMat expresionDouble
    (112) expresionDouble -> . valorDouble
    (103) expresionString -> . valorString operadorMat expresionString
    (104) expresionString -> . valorString
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (68) expresion -> . valor operadorMat expresion
    (69) expresion -> . valor
    (70) expresion -> . expresionString
    (71) expresion -> . expresionInt
    (72) expresion -> . expresionDouble
    (73) expresion -> . expresionBool
    (74) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (75) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (76) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (60) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (61) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (62) sentenciaElse -> . ELSE algoritmo
    (63) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (58) imprimir -> . PRINT PIZQ expresion PDER
    (59) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (57) asignacionSimple -> . VARIABLE IGUAL expresion
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (101) valorString -> . STRING
    (102) valorString -> . VARIABLE
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING

    INT             shift and go to state 16
    DOUBLER         shift and go to state 18
    NUM             shift and go to state 19
    STRINGR         shift and go to state 20
    BOOLR           shift and go to state 21
    DYNAMIC         shift and go to state 22
    VAR             shift and go to state 23
    VARIABLE        shift and go to state 17
    WHILE           shift and go to state 30
    DO              shift and go to state 31
    IF              shift and go to state 32
    ELSE            shift and go to state 33
    PRINT           shift and go to state 34
    NOT             shift and go to state 35
    ENTERO          shift and go to state 36
    DOUBLE          shift and go to state 37
    STRING          shift and go to state 38
    BOOL            shift and go to state 39

    expresionBool                  shift and go to state 97
    algoritmo                      shift and go to state 213
    asignacion                     shift and go to state 93
    expresionInt                   shift and go to state 94
    expresionDouble                shift and go to state 95
    expresionString                shift and go to state 96
    expresion                      shift and go to state 15
    sentenciaWhile                 shift and go to state 98
    sentenciaDoWhile               shift and go to state 99
    sentenciaIf                    shift and go to state 100
    sentenciaElse                  shift and go to state 101
    imprimir                       shift and go to state 102
    negacionBool                   shift and go to state 103
    comparacionBool                shift and go to state 104
    asignacionSimple               shift and go to state 24
    valorInt                       shift and go to state 25
    valorDouble                    shift and go to state 26
    valorString                    shift and go to state 27
    valorBool                      shift and go to state 28
    valor                          shift and go to state 29

state 211

    (74) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo . LDER

    LDER            shift and go to state 214


state 212

    (76) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ . expresionBool PDER
    (79) expresionBool -> . valorDouble comparadorMat expresionDouble
    (80) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (81) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (82) expresionBool -> . valorDouble comparadorMat VARIABLE
    (83) expresionBool -> . valorBool
    (84) expresionBool -> . negacionBool
    (85) expresionBool -> . comparacionBool
    (86) expresionBool -> . valor IS objeto
    (87) expresionBool -> . valor ISNEGADO objeto
    (109) valorDouble -> . DOUBLE
    (110) valorDouble -> . valorInt
    (77) valorBool -> . BOOL
    (78) valorBool -> . VARIABLE
    (88) negacionBool -> . NOT PIZQ expresionBool PDER
    (89) comparacionBool -> . expresionBool operadorLogico expresionBool
    (90) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (64) valor -> . ENTERO
    (65) valor -> . VARIABLE
    (66) valor -> . DOUBLE
    (67) valor -> . STRING
    (105) valorInt -> . ENTERO
    (106) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 116
    DOUBLE          shift and go to state 37
    BOOL            shift and go to state 39
    NOT             shift and go to state 35
    ENTERO          shift and go to state 120
    STRING          shift and go to state 121

    expresionBool                  shift and go to state 215
    valorDouble                    shift and go to state 115
    valorBool                      shift and go to state 28
    negacionBool                   shift and go to state 117
    comparacionBool                shift and go to state 143
    valor                          shift and go to state 118
    valorInt                       shift and go to state 119

state 213

    (61) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo . LDER

    LDER            shift and go to state 216


state 214

    (74) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 74 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    INT             reduce using rule 74 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 74 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NUM             reduce using rule 74 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 74 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 74 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 74 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VAR             reduce using rule 74 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 74 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    WHILE           reduce using rule 74 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DO              reduce using rule 74 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    IF              reduce using rule 74 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSE            reduce using rule 74 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    PRINT           reduce using rule 74 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NOT             reduce using rule 74 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 74 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 74 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRING          reduce using rule 74 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOL            reduce using rule 74 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    $end            reduce using rule 74 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    LDER            reduce using rule 74 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)


state 215

    (76) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool . PDER
    (89) comparacionBool -> expresionBool . operadorLogico expresionBool
    (90) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (125) operadorLogico -> . AND
    (126) operadorLogico -> . OR

    PDER            shift and go to state 217
    AND             shift and go to state 47
    OR              shift and go to state 48

    operadorLogico                 shift and go to state 46

state 216

    (61) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 61 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    INT             reduce using rule 61 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 61 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NUM             reduce using rule 61 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 61 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 61 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 61 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VAR             reduce using rule 61 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 61 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    WHILE           reduce using rule 61 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DO              reduce using rule 61 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    IF              reduce using rule 61 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSE            reduce using rule 61 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    PRINT           reduce using rule 61 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NOT             reduce using rule 61 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 61 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 61 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRING          reduce using rule 61 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOL            reduce using rule 61 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    $end            reduce using rule 61 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    LDER            reduce using rule 61 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)


state 217

    (76) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 76 (sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 4 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 5 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 6 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 7 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 8 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 10 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 11 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 13 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 14 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 17 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 17 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 17 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 17 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 17 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 17 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 25 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 25 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 25 resolved as shift
WARNING: shift/reduce conflict for DIV in state 25 resolved as shift
WARNING: shift/reduce conflict for DIVENTERO in state 25 resolved as shift
WARNING: shift/reduce conflict for MOD in state 25 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 94 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 95 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 96 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 97 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 98 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 100 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 101 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 103 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 104 resolved as shift
WARNING: shift/reduce conflict for AND in state 113 resolved as shift
WARNING: shift/reduce conflict for OR in state 113 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 116 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 116 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 134 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 134 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 134 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 134 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 134 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 134 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 190 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 190 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 190 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 190 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 190 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 190 resolved as shift
WARNING: reduce/reduce conflict in state 17 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 17
WARNING: reduce/reduce conflict in state 17 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 17
WARNING: reduce/reduce conflict in state 17 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 17
WARNING: reduce/reduce conflict in state 17 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 17
WARNING: reduce/reduce conflict in state 25 resolved using rule (expresionInt -> valorInt)
WARNING: rejected rule (valorDouble -> valorInt) in state 25
WARNING: reduce/reduce conflict in state 36 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 36
WARNING: reduce/reduce conflict in state 37 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 37
WARNING: reduce/reduce conflict in state 38 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 38
WARNING: reduce/reduce conflict in state 114 resolved using rule (expresionBool -> comparacionBool)
WARNING: rejected rule (comparacionBool -> expresionBool operadorLogico comparacionBool) in state 114
WARNING: reduce/reduce conflict in state 120 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 120
WARNING: reduce/reduce conflict in state 129 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 129
WARNING: reduce/reduce conflict in state 134 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 134
WARNING: reduce/reduce conflict in state 134 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 134
WARNING: reduce/reduce conflict in state 134 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 134
WARNING: reduce/reduce conflict in state 141 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 141
WARNING: reduce/reduce conflict in state 142 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 142
WARNING: reduce/reduce conflict in state 155 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 155
WARNING: reduce/reduce conflict in state 190 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 190
WARNING: reduce/reduce conflict in state 190 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 190
WARNING: reduce/reduce conflict in state 190 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 190
WARNING: Rule (comparacionBool -> expresionBool operadorLogico comparacionBool) is never reduced
