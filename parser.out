Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    AS
    BREAK
    CASE
    CDER
    CIZQ
    COMA
    COMILLAD
    COMILLAS
    DOSPUNTOS
    DRESTA
    DSUMA
    ELSEIF
    FLECHA
    FOR
    FUNCIONARR
    FUNCIONRANGE
    FUNCIONSTDIN
    FUNCIONSTDOUT
    FUNCIONSTRING
    FUNCIONTAKE
    IS
    ISNEGADO
    LIST
    MAP
    NOT
    OR
    PRINT
    RETURN
    SET
    SWITCH

Grammar

Rule 0     S' -> final
Rule 1     final -> algoritmo PUNTOYCOMA
Rule 2     final -> algoritmo PUNTOYCOMA final
Rule 3     final -> asignacion PUNTOYCOMA
Rule 4     final -> asignacion PUNTOYCOMA final
Rule 5     final -> expresionInt PUNTOYCOMA
Rule 6     final -> expresionInt PUNTOYCOMA final
Rule 7     final -> expresionDouble PUNTOYCOMA
Rule 8     final -> expresionDouble PUNTOYCOMA final
Rule 9     final -> expresionString PUNTOYCOMA
Rule 10    final -> expresionString PUNTOYCOMA final
Rule 11    final -> expresionBool PUNTOYCOMA
Rule 12    final -> expresionBool PUNTOYCOMA final
Rule 13    final -> sentenciaWhile
Rule 14    final -> sentenciaWhile final
Rule 15    final -> sentenciaWhile PUNTOYCOMA
Rule 16    final -> sentenciaWhile PUNTOYCOMA final
Rule 17    final -> sentenciaDoWhile PUNTOYCOMA
Rule 18    final -> sentenciaDoWhile PUNTOYCOMA final
Rule 19    final -> sentenciaIf PUNTOYCOMA
Rule 20    final -> sentenciaIf PUNTOYCOMA final
Rule 21    final -> sentenciaIf
Rule 22    final -> sentenciaIf final
Rule 23    final -> sentenciaElse PUNTOYCOMA
Rule 24    final -> sentenciaElse PUNTOYCOMA final
Rule 25    final -> sentenciaElse
Rule 26    final -> sentenciaElse final
Rule 27    algoritmo -> asignacion PUNTOYCOMA
Rule 28    algoritmo -> expresionInt PUNTOYCOMA
Rule 29    algoritmo -> expresionDouble PUNTOYCOMA
Rule 30    algoritmo -> expresionString PUNTOYCOMA
Rule 31    algoritmo -> expresionBool PUNTOYCOMA
Rule 32    algoritmo -> expresion
Rule 33    algoritmo -> sentenciaWhile
Rule 34    algoritmo -> sentenciaWhile PUNTOYCOMA
Rule 35    algoritmo -> sentenciaDoWhile PUNTOYCOMA
Rule 36    algoritmo -> sentenciaIf PUNTOYCOMA
Rule 37    algoritmo -> sentenciaIf
Rule 38    algoritmo -> sentenciaElse PUNTOYCOMA
Rule 39    algoritmo -> sentenciaElse
Rule 40    asignacion -> INT VARIABLE IGUAL expresionInt
Rule 41    asignacion -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 42    asignacion -> NUM VARIABLE IGUAL expresionDouble
Rule 43    asignacion -> STRINGR VARIABLE IGUAL expresionString
Rule 44    asignacion -> BOOLR VARIABLE IGUAL expresionBool
Rule 45    asignacion -> DYNAMIC VARIABLE IGUAL expresion
Rule 46    asignacion -> VAR VARIABLE IGUAL expresion
Rule 47    sentenciaIf -> IF PIZQ expresionBool PDER algoritmo
Rule 48    sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER
Rule 49    sentenciaElse -> ELSE algoritmo
Rule 50    sentenciaElse -> ELSE LIZQ algoritmo LDER
Rule 51    valor -> ENTERO
Rule 52    valor -> VARIABLE
Rule 53    valor -> DOUBLE
Rule 54    valor -> STRING
Rule 55    expresion -> valor operadorMat expresion
Rule 56    expresion -> valor
Rule 57    expresion -> expresionString
Rule 58    expresion -> expresionInt
Rule 59    expresion -> expresionDouble
Rule 60    sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
Rule 61    sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo
Rule 62    sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
Rule 63    valorBool -> BOOL
Rule 64    valorBool -> VARIABLE
Rule 65    expresionBool -> valorDouble comparadorMat expresionDouble
Rule 66    expresionBool -> VARIABLE comparadorMat expresionDouble
Rule 67    expresionBool -> VARIABLE comparadorMat VARIABLE
Rule 68    expresionBool -> valorDouble comparadorMat VARIABLE
Rule 69    expresionBool -> valorBool
Rule 70    valorString -> STRING
Rule 71    valorString -> VARIABLE
Rule 72    expresionString -> valorString operadorMat expresionString
Rule 73    expresionString -> valorString
Rule 74    valorInt -> ENTERO
Rule 75    valorInt -> VARIABLE
Rule 76    expresionInt -> valorInt operadorMat expresionInt
Rule 77    expresionInt -> valorInt
Rule 78    valorDouble -> DOUBLE
Rule 79    valorDouble -> valorInt
Rule 80    expresionDouble -> valorDouble operadorMat expresionDouble
Rule 81    expresionDouble -> valorDouble
Rule 82    operadorMat -> SUMA
Rule 83    operadorMat -> RESTA
Rule 84    operadorMat -> MULTI
Rule 85    operadorMat -> DIV
Rule 86    operadorMat -> DIVENTERO
Rule 87    operadorMat -> MOD
Rule 88    comparadorMat -> DIGUAL
Rule 89    comparadorMat -> NOIGUAL
Rule 90    comparadorMat -> MAYOR
Rule 91    comparadorMat -> MENOR
Rule 92    comparadorMat -> MAYIGUAL
Rule 93    comparadorMat -> MENIGUAL

Terminals, with rules where they appear

AND                  : 
AS                   : 
BOOL                 : 63
BOOLR                : 44
BREAK                : 
CASE                 : 
CDER                 : 
CIZQ                 : 
COMA                 : 
COMILLAD             : 
COMILLAS             : 
DIGUAL               : 88
DIV                  : 85
DIVENTERO            : 86
DO                   : 62
DOSPUNTOS            : 
DOUBLE               : 53 78
DOUBLER              : 41
DRESTA               : 
DSUMA                : 
DYNAMIC              : 45
ELSE                 : 49 50
ELSEIF               : 
ENTERO               : 51 74
FLECHA               : 
FOR                  : 
FUNCIONARR           : 
FUNCIONRANGE         : 
FUNCIONSTDIN         : 
FUNCIONSTDOUT        : 
FUNCIONSTRING        : 
FUNCIONTAKE          : 
IF                   : 47 48
IGUAL                : 40 41 42 43 44 45 46
INT                  : 40
IS                   : 
ISNEGADO             : 
LDER                 : 48 50 60 62
LIST                 : 
LIZQ                 : 48 50 60 62
MAP                  : 
MAYIGUAL             : 92
MAYOR                : 90
MENIGUAL             : 93
MENOR                : 91
MOD                  : 87
MULTI                : 84
NOIGUAL              : 89
NOT                  : 
NUM                  : 42
OR                   : 
PDER                 : 47 48 60 61 62
PIZQ                 : 47 48 60 61 62
PRINT                : 
PUNTOYCOMA           : 1 2 3 4 5 6 7 8 9 10 11 12 15 16 17 18 19 20 23 24 27 28 29 30 31 34 35 36 38
RESTA                : 83
RETURN               : 
SET                  : 
STRING               : 54 70
STRINGR              : 43
SUMA                 : 82
SWITCH               : 
VAR                  : 46
VARIABLE             : 40 41 42 43 44 45 46 52 64 66 67 67 68 71 75
WHILE                : 60 61 62
error                : 

Nonterminals, with rules where they appear

algoritmo            : 1 2 47 48 49 50 60 61 62
asignacion           : 3 4 27
comparadorMat        : 65 66 67 68
expresion            : 32 45 46 55
expresionBool        : 11 12 31 44 47 48 60 61 62
expresionDouble      : 7 8 29 41 42 59 65 66 80
expresionInt         : 5 6 28 40 58 76
expresionString      : 9 10 30 43 57 72
final                : 2 4 6 8 10 12 14 16 18 20 22 24 26 0
operadorMat          : 55 72 76 80
sentenciaDoWhile     : 17 18 35
sentenciaElse        : 23 24 25 26 38 39
sentenciaIf          : 19 20 21 22 36 37
sentenciaWhile       : 13 14 15 16 33 34
valor                : 55 56
valorBool            : 69
valorDouble          : 65 68 80 81
valorInt             : 76 77 79
valorString          : 72 73

Parsing method: LALR

state 0

    (0) S' -> . final
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) algoritmo -> . asignacion PUNTOYCOMA
    (28) algoritmo -> . expresionInt PUNTOYCOMA
    (29) algoritmo -> . expresionDouble PUNTOYCOMA
    (30) algoritmo -> . expresionString PUNTOYCOMA
    (31) algoritmo -> . expresionBool PUNTOYCOMA
    (32) algoritmo -> . expresion
    (33) algoritmo -> . sentenciaWhile
    (34) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (35) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaIf PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf
    (38) algoritmo -> . sentenciaElse PUNTOYCOMA
    (39) algoritmo -> . sentenciaElse
    (40) asignacion -> . INT VARIABLE IGUAL expresionInt
    (41) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (42) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (43) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (44) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (45) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (46) asignacion -> . VAR VARIABLE IGUAL expresion
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (60) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (62) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (47) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (48) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (49) sentenciaElse -> . ELSE algoritmo
    (50) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING

    INT             shift and go to state 13
    DOUBLER         shift and go to state 15
    NUM             shift and go to state 16
    STRINGR         shift and go to state 17
    BOOLR           shift and go to state 18
    DYNAMIC         shift and go to state 19
    VAR             shift and go to state 20
    VARIABLE        shift and go to state 14
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    IF              shift and go to state 27
    ELSE            shift and go to state 28
    ENTERO          shift and go to state 30
    DOUBLE          shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

    final                          shift and go to state 1
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    expresion                      shift and go to state 12
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 22
    valorString                    shift and go to state 23
    valorBool                      shift and go to state 24
    valor                          shift and go to state 29

state 1

    (0) S' -> final .



state 2

    (1) final -> algoritmo . PUNTOYCOMA
    (2) final -> algoritmo . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 34


state 3

    (3) final -> asignacion . PUNTOYCOMA
    (4) final -> asignacion . PUNTOYCOMA final
    (27) algoritmo -> asignacion . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 35


state 4

    (5) final -> expresionInt . PUNTOYCOMA
    (6) final -> expresionInt . PUNTOYCOMA final
    (28) algoritmo -> expresionInt . PUNTOYCOMA
    (58) expresion -> expresionInt .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 36

  ! PUNTOYCOMA      [ reduce using rule 58 (expresion -> expresionInt .) ]


state 5

    (7) final -> expresionDouble . PUNTOYCOMA
    (8) final -> expresionDouble . PUNTOYCOMA final
    (29) algoritmo -> expresionDouble . PUNTOYCOMA
    (59) expresion -> expresionDouble .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 37

  ! PUNTOYCOMA      [ reduce using rule 59 (expresion -> expresionDouble .) ]


state 6

    (9) final -> expresionString . PUNTOYCOMA
    (10) final -> expresionString . PUNTOYCOMA final
    (30) algoritmo -> expresionString . PUNTOYCOMA
    (57) expresion -> expresionString .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 38

  ! PUNTOYCOMA      [ reduce using rule 57 (expresion -> expresionString .) ]


state 7

    (11) final -> expresionBool . PUNTOYCOMA
    (12) final -> expresionBool . PUNTOYCOMA final
    (31) algoritmo -> expresionBool . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 39


state 8

    (13) final -> sentenciaWhile .
    (14) final -> sentenciaWhile . final
    (15) final -> sentenciaWhile . PUNTOYCOMA
    (16) final -> sentenciaWhile . PUNTOYCOMA final
    (33) algoritmo -> sentenciaWhile .
    (34) algoritmo -> sentenciaWhile . PUNTOYCOMA
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) algoritmo -> . asignacion PUNTOYCOMA
    (28) algoritmo -> . expresionInt PUNTOYCOMA
    (29) algoritmo -> . expresionDouble PUNTOYCOMA
    (30) algoritmo -> . expresionString PUNTOYCOMA
    (31) algoritmo -> . expresionBool PUNTOYCOMA
    (32) algoritmo -> . expresion
    (33) algoritmo -> . sentenciaWhile
    (34) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (35) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaIf PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf
    (38) algoritmo -> . sentenciaElse PUNTOYCOMA
    (39) algoritmo -> . sentenciaElse
    (40) asignacion -> . INT VARIABLE IGUAL expresionInt
    (41) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (42) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (43) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (44) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (45) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (46) asignacion -> . VAR VARIABLE IGUAL expresion
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (60) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (62) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (47) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (48) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (49) sentenciaElse -> . ELSE algoritmo
    (50) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    $end            reduce using rule 13 (final -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 41
    INT             shift and go to state 13
    DOUBLER         shift and go to state 15
    NUM             shift and go to state 16
    STRINGR         shift and go to state 17
    BOOLR           shift and go to state 18
    DYNAMIC         shift and go to state 19
    VAR             shift and go to state 20
    VARIABLE        shift and go to state 14
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    IF              shift and go to state 27
    ELSE            shift and go to state 28
    ENTERO          shift and go to state 30
    DOUBLE          shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

  ! PUNTOYCOMA      [ reduce using rule 33 (algoritmo -> sentenciaWhile .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 40
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    expresion                      shift and go to state 12
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 22
    valorString                    shift and go to state 23
    valorBool                      shift and go to state 24
    valor                          shift and go to state 29

state 9

    (17) final -> sentenciaDoWhile . PUNTOYCOMA
    (18) final -> sentenciaDoWhile . PUNTOYCOMA final
    (35) algoritmo -> sentenciaDoWhile . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 42


state 10

    (19) final -> sentenciaIf . PUNTOYCOMA
    (20) final -> sentenciaIf . PUNTOYCOMA final
    (21) final -> sentenciaIf .
    (22) final -> sentenciaIf . final
    (36) algoritmo -> sentenciaIf . PUNTOYCOMA
    (37) algoritmo -> sentenciaIf .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) algoritmo -> . asignacion PUNTOYCOMA
    (28) algoritmo -> . expresionInt PUNTOYCOMA
    (29) algoritmo -> . expresionDouble PUNTOYCOMA
    (30) algoritmo -> . expresionString PUNTOYCOMA
    (31) algoritmo -> . expresionBool PUNTOYCOMA
    (32) algoritmo -> . expresion
    (33) algoritmo -> . sentenciaWhile
    (34) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (35) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaIf PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf
    (38) algoritmo -> . sentenciaElse PUNTOYCOMA
    (39) algoritmo -> . sentenciaElse
    (40) asignacion -> . INT VARIABLE IGUAL expresionInt
    (41) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (42) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (43) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (44) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (45) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (46) asignacion -> . VAR VARIABLE IGUAL expresion
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (60) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (62) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (47) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (48) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (49) sentenciaElse -> . ELSE algoritmo
    (50) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 43
    $end            reduce using rule 21 (final -> sentenciaIf .)
    INT             shift and go to state 13
    DOUBLER         shift and go to state 15
    NUM             shift and go to state 16
    STRINGR         shift and go to state 17
    BOOLR           shift and go to state 18
    DYNAMIC         shift and go to state 19
    VAR             shift and go to state 20
    VARIABLE        shift and go to state 14
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    IF              shift and go to state 27
    ELSE            shift and go to state 28
    ENTERO          shift and go to state 30
    DOUBLE          shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

  ! PUNTOYCOMA      [ reduce using rule 37 (algoritmo -> sentenciaIf .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 44
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    expresion                      shift and go to state 12
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 22
    valorString                    shift and go to state 23
    valorBool                      shift and go to state 24
    valor                          shift and go to state 29

state 11

    (23) final -> sentenciaElse . PUNTOYCOMA
    (24) final -> sentenciaElse . PUNTOYCOMA final
    (25) final -> sentenciaElse .
    (26) final -> sentenciaElse . final
    (38) algoritmo -> sentenciaElse . PUNTOYCOMA
    (39) algoritmo -> sentenciaElse .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) algoritmo -> . asignacion PUNTOYCOMA
    (28) algoritmo -> . expresionInt PUNTOYCOMA
    (29) algoritmo -> . expresionDouble PUNTOYCOMA
    (30) algoritmo -> . expresionString PUNTOYCOMA
    (31) algoritmo -> . expresionBool PUNTOYCOMA
    (32) algoritmo -> . expresion
    (33) algoritmo -> . sentenciaWhile
    (34) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (35) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaIf PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf
    (38) algoritmo -> . sentenciaElse PUNTOYCOMA
    (39) algoritmo -> . sentenciaElse
    (40) asignacion -> . INT VARIABLE IGUAL expresionInt
    (41) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (42) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (43) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (44) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (45) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (46) asignacion -> . VAR VARIABLE IGUAL expresion
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (60) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (62) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (47) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (48) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (49) sentenciaElse -> . ELSE algoritmo
    (50) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 45
    $end            reduce using rule 25 (final -> sentenciaElse .)
    INT             shift and go to state 13
    DOUBLER         shift and go to state 15
    NUM             shift and go to state 16
    STRINGR         shift and go to state 17
    BOOLR           shift and go to state 18
    DYNAMIC         shift and go to state 19
    VAR             shift and go to state 20
    VARIABLE        shift and go to state 14
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    IF              shift and go to state 27
    ELSE            shift and go to state 28
    ENTERO          shift and go to state 30
    DOUBLE          shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

  ! PUNTOYCOMA      [ reduce using rule 39 (algoritmo -> sentenciaElse .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 46
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    expresion                      shift and go to state 12
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 22
    valorString                    shift and go to state 23
    valorBool                      shift and go to state 24
    valor                          shift and go to state 29

state 12

    (32) algoritmo -> expresion .

    PUNTOYCOMA      reduce using rule 32 (algoritmo -> expresion .)
    INT             reduce using rule 32 (algoritmo -> expresion .)
    DOUBLER         reduce using rule 32 (algoritmo -> expresion .)
    NUM             reduce using rule 32 (algoritmo -> expresion .)
    STRINGR         reduce using rule 32 (algoritmo -> expresion .)
    BOOLR           reduce using rule 32 (algoritmo -> expresion .)
    DYNAMIC         reduce using rule 32 (algoritmo -> expresion .)
    VAR             reduce using rule 32 (algoritmo -> expresion .)
    VARIABLE        reduce using rule 32 (algoritmo -> expresion .)
    WHILE           reduce using rule 32 (algoritmo -> expresion .)
    DO              reduce using rule 32 (algoritmo -> expresion .)
    IF              reduce using rule 32 (algoritmo -> expresion .)
    ELSE            reduce using rule 32 (algoritmo -> expresion .)
    ENTERO          reduce using rule 32 (algoritmo -> expresion .)
    DOUBLE          reduce using rule 32 (algoritmo -> expresion .)
    STRING          reduce using rule 32 (algoritmo -> expresion .)
    BOOL            reduce using rule 32 (algoritmo -> expresion .)
    $end            reduce using rule 32 (algoritmo -> expresion .)
    LDER            reduce using rule 32 (algoritmo -> expresion .)


state 13

    (40) asignacion -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 47


state 14

    (66) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (67) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (75) valorInt -> VARIABLE .
    (71) valorString -> VARIABLE .
    (64) valorBool -> VARIABLE .
    (52) valor -> VARIABLE .
    (88) comparadorMat -> . DIGUAL
    (89) comparadorMat -> . NOIGUAL
    (90) comparadorMat -> . MAYOR
    (91) comparadorMat -> . MENOR
    (92) comparadorMat -> . MAYIGUAL
    (93) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 71 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 64 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 52 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    SUMA            reduce using rule 52 (valor -> VARIABLE .)
    RESTA           reduce using rule 52 (valor -> VARIABLE .)
    MULTI           reduce using rule 52 (valor -> VARIABLE .)
    DIV             reduce using rule 52 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 52 (valor -> VARIABLE .)
    MOD             reduce using rule 52 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 52 (valor -> VARIABLE .)
    INT             reduce using rule 52 (valor -> VARIABLE .)
    DOUBLER         reduce using rule 52 (valor -> VARIABLE .)
    NUM             reduce using rule 52 (valor -> VARIABLE .)
    STRINGR         reduce using rule 52 (valor -> VARIABLE .)
    BOOLR           reduce using rule 52 (valor -> VARIABLE .)
    DYNAMIC         reduce using rule 52 (valor -> VARIABLE .)
    VAR             reduce using rule 52 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 52 (valor -> VARIABLE .)
    WHILE           reduce using rule 52 (valor -> VARIABLE .)
    DO              reduce using rule 52 (valor -> VARIABLE .)
    IF              reduce using rule 52 (valor -> VARIABLE .)
    ELSE            reduce using rule 52 (valor -> VARIABLE .)
    ENTERO          reduce using rule 52 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 52 (valor -> VARIABLE .)
    STRING          reduce using rule 52 (valor -> VARIABLE .)
    BOOL            reduce using rule 52 (valor -> VARIABLE .)
    $end            reduce using rule 52 (valor -> VARIABLE .)
    LDER            reduce using rule 52 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 49
    NOIGUAL         shift and go to state 50
    MAYOR           shift and go to state 51
    MENOR           shift and go to state 52
    MAYIGUAL        shift and go to state 53
    MENIGUAL        shift and go to state 54

  ! SUMA            [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! DIV             [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! MOD             [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! INT             [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! NUM             [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! VAR             [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! DO              [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! IF              [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! STRING          [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! $end            [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! LDER            [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 64 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 48

state 15

    (41) asignacion -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 55


state 16

    (42) asignacion -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 56


state 17

    (43) asignacion -> STRINGR . VARIABLE IGUAL expresionString

    VARIABLE        shift and go to state 57


state 18

    (44) asignacion -> BOOLR . VARIABLE IGUAL expresionBool

    VARIABLE        shift and go to state 58


state 19

    (45) asignacion -> DYNAMIC . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 59


state 20

    (46) asignacion -> VAR . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 60


state 21

    (76) expresionInt -> valorInt . operadorMat expresionInt
    (77) expresionInt -> valorInt .
    (79) valorDouble -> valorInt .
    (82) operadorMat -> . SUMA
    (83) operadorMat -> . RESTA
    (84) operadorMat -> . MULTI
    (85) operadorMat -> . DIV
    (86) operadorMat -> . DIVENTERO
    (87) operadorMat -> . MOD

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 77 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for INT resolved using rule 77 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 77 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for NUM resolved using rule 77 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for STRINGR resolved using rule 77 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for BOOLR resolved using rule 77 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 77 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for VAR resolved using rule 77 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 77 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for WHILE resolved using rule 77 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DO resolved using rule 77 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for IF resolved using rule 77 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for ELSE resolved using rule 77 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for ENTERO resolved using rule 77 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 77 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for STRING resolved using rule 77 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for BOOL resolved using rule 77 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for $end resolved using rule 77 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for LDER resolved using rule 77 (expresionInt -> valorInt .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DIVENTERO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PUNTOYCOMA      reduce using rule 77 (expresionInt -> valorInt .)
    INT             reduce using rule 77 (expresionInt -> valorInt .)
    DOUBLER         reduce using rule 77 (expresionInt -> valorInt .)
    NUM             reduce using rule 77 (expresionInt -> valorInt .)
    STRINGR         reduce using rule 77 (expresionInt -> valorInt .)
    BOOLR           reduce using rule 77 (expresionInt -> valorInt .)
    DYNAMIC         reduce using rule 77 (expresionInt -> valorInt .)
    VAR             reduce using rule 77 (expresionInt -> valorInt .)
    VARIABLE        reduce using rule 77 (expresionInt -> valorInt .)
    WHILE           reduce using rule 77 (expresionInt -> valorInt .)
    DO              reduce using rule 77 (expresionInt -> valorInt .)
    IF              reduce using rule 77 (expresionInt -> valorInt .)
    ELSE            reduce using rule 77 (expresionInt -> valorInt .)
    ENTERO          reduce using rule 77 (expresionInt -> valorInt .)
    DOUBLE          reduce using rule 77 (expresionInt -> valorInt .)
    STRING          reduce using rule 77 (expresionInt -> valorInt .)
    BOOL            reduce using rule 77 (expresionInt -> valorInt .)
    $end            reduce using rule 77 (expresionInt -> valorInt .)
    LDER            reduce using rule 77 (expresionInt -> valorInt .)
    DIGUAL          reduce using rule 79 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 79 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 79 (valorDouble -> valorInt .)
    MENOR           reduce using rule 79 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 79 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 79 (valorDouble -> valorInt .)
    SUMA            shift and go to state 62
    RESTA           shift and go to state 63
    MULTI           shift and go to state 64
    DIV             shift and go to state 65
    DIVENTERO       shift and go to state 66
    MOD             shift and go to state 67

  ! SUMA            [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! RESTA           [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! MULTI           [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! DIV             [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! DIVENTERO       [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! MOD             [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! PUNTOYCOMA      [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! INT             [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! DOUBLER         [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! NUM             [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! STRINGR         [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! BOOLR           [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! DYNAMIC         [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! VAR             [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! VARIABLE        [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! WHILE           [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! DO              [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! IF              [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! ELSE            [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! ENTERO          [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! DOUBLE          [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! STRING          [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! BOOL            [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! $end            [ reduce using rule 79 (valorDouble -> valorInt .) ]
  ! LDER            [ reduce using rule 79 (valorDouble -> valorInt .) ]

    operadorMat                    shift and go to state 61

state 22

    (80) expresionDouble -> valorDouble . operadorMat expresionDouble
    (81) expresionDouble -> valorDouble .
    (65) expresionBool -> valorDouble . comparadorMat expresionDouble
    (68) expresionBool -> valorDouble . comparadorMat VARIABLE
    (82) operadorMat -> . SUMA
    (83) operadorMat -> . RESTA
    (84) operadorMat -> . MULTI
    (85) operadorMat -> . DIV
    (86) operadorMat -> . DIVENTERO
    (87) operadorMat -> . MOD
    (88) comparadorMat -> . DIGUAL
    (89) comparadorMat -> . NOIGUAL
    (90) comparadorMat -> . MAYOR
    (91) comparadorMat -> . MENOR
    (92) comparadorMat -> . MAYIGUAL
    (93) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 81 (expresionDouble -> valorDouble .)
    INT             reduce using rule 81 (expresionDouble -> valorDouble .)
    DOUBLER         reduce using rule 81 (expresionDouble -> valorDouble .)
    NUM             reduce using rule 81 (expresionDouble -> valorDouble .)
    STRINGR         reduce using rule 81 (expresionDouble -> valorDouble .)
    BOOLR           reduce using rule 81 (expresionDouble -> valorDouble .)
    DYNAMIC         reduce using rule 81 (expresionDouble -> valorDouble .)
    VAR             reduce using rule 81 (expresionDouble -> valorDouble .)
    VARIABLE        reduce using rule 81 (expresionDouble -> valorDouble .)
    WHILE           reduce using rule 81 (expresionDouble -> valorDouble .)
    DO              reduce using rule 81 (expresionDouble -> valorDouble .)
    IF              reduce using rule 81 (expresionDouble -> valorDouble .)
    ELSE            reduce using rule 81 (expresionDouble -> valorDouble .)
    ENTERO          reduce using rule 81 (expresionDouble -> valorDouble .)
    DOUBLE          reduce using rule 81 (expresionDouble -> valorDouble .)
    STRING          reduce using rule 81 (expresionDouble -> valorDouble .)
    BOOL            reduce using rule 81 (expresionDouble -> valorDouble .)
    $end            reduce using rule 81 (expresionDouble -> valorDouble .)
    LDER            reduce using rule 81 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 62
    RESTA           shift and go to state 63
    MULTI           shift and go to state 64
    DIV             shift and go to state 65
    DIVENTERO       shift and go to state 66
    MOD             shift and go to state 67
    DIGUAL          shift and go to state 49
    NOIGUAL         shift and go to state 50
    MAYOR           shift and go to state 51
    MENOR           shift and go to state 52
    MAYIGUAL        shift and go to state 53
    MENIGUAL        shift and go to state 54

    operadorMat                    shift and go to state 68
    comparadorMat                  shift and go to state 69

state 23

    (72) expresionString -> valorString . operadorMat expresionString
    (73) expresionString -> valorString .
    (82) operadorMat -> . SUMA
    (83) operadorMat -> . RESTA
    (84) operadorMat -> . MULTI
    (85) operadorMat -> . DIV
    (86) operadorMat -> . DIVENTERO
    (87) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 73 (expresionString -> valorString .)
    INT             reduce using rule 73 (expresionString -> valorString .)
    DOUBLER         reduce using rule 73 (expresionString -> valorString .)
    NUM             reduce using rule 73 (expresionString -> valorString .)
    STRINGR         reduce using rule 73 (expresionString -> valorString .)
    BOOLR           reduce using rule 73 (expresionString -> valorString .)
    DYNAMIC         reduce using rule 73 (expresionString -> valorString .)
    VAR             reduce using rule 73 (expresionString -> valorString .)
    VARIABLE        reduce using rule 73 (expresionString -> valorString .)
    WHILE           reduce using rule 73 (expresionString -> valorString .)
    DO              reduce using rule 73 (expresionString -> valorString .)
    IF              reduce using rule 73 (expresionString -> valorString .)
    ELSE            reduce using rule 73 (expresionString -> valorString .)
    ENTERO          reduce using rule 73 (expresionString -> valorString .)
    DOUBLE          reduce using rule 73 (expresionString -> valorString .)
    STRING          reduce using rule 73 (expresionString -> valorString .)
    BOOL            reduce using rule 73 (expresionString -> valorString .)
    $end            reduce using rule 73 (expresionString -> valorString .)
    LDER            reduce using rule 73 (expresionString -> valorString .)
    SUMA            shift and go to state 62
    RESTA           shift and go to state 63
    MULTI           shift and go to state 64
    DIV             shift and go to state 65
    DIVENTERO       shift and go to state 66
    MOD             shift and go to state 67

    operadorMat                    shift and go to state 70

state 24

    (69) expresionBool -> valorBool .

    PUNTOYCOMA      reduce using rule 69 (expresionBool -> valorBool .)
    PDER            reduce using rule 69 (expresionBool -> valorBool .)


state 25

    (60) sentenciaWhile -> WHILE . PIZQ expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> WHILE . PIZQ expresionBool PDER algoritmo

    PIZQ            shift and go to state 71


state 26

    (62) sentenciaDoWhile -> DO . LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER

    LIZQ            shift and go to state 72


state 27

    (47) sentenciaIf -> IF . PIZQ expresionBool PDER algoritmo
    (48) sentenciaIf -> IF . PIZQ expresionBool PDER LIZQ algoritmo LDER

    PIZQ            shift and go to state 73


state 28

    (49) sentenciaElse -> ELSE . algoritmo
    (50) sentenciaElse -> ELSE . LIZQ algoritmo LDER
    (27) algoritmo -> . asignacion PUNTOYCOMA
    (28) algoritmo -> . expresionInt PUNTOYCOMA
    (29) algoritmo -> . expresionDouble PUNTOYCOMA
    (30) algoritmo -> . expresionString PUNTOYCOMA
    (31) algoritmo -> . expresionBool PUNTOYCOMA
    (32) algoritmo -> . expresion
    (33) algoritmo -> . sentenciaWhile
    (34) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (35) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaIf PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf
    (38) algoritmo -> . sentenciaElse PUNTOYCOMA
    (39) algoritmo -> . sentenciaElse
    (40) asignacion -> . INT VARIABLE IGUAL expresionInt
    (41) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (42) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (43) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (44) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (45) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (46) asignacion -> . VAR VARIABLE IGUAL expresion
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (60) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (62) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (47) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (48) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (49) sentenciaElse -> . ELSE algoritmo
    (50) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING

    LIZQ            shift and go to state 75
    INT             shift and go to state 13
    DOUBLER         shift and go to state 15
    NUM             shift and go to state 16
    STRINGR         shift and go to state 17
    BOOLR           shift and go to state 18
    DYNAMIC         shift and go to state 19
    VAR             shift and go to state 20
    VARIABLE        shift and go to state 14
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    IF              shift and go to state 27
    ELSE            shift and go to state 28
    ENTERO          shift and go to state 30
    DOUBLE          shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

    algoritmo                      shift and go to state 74
    asignacion                     shift and go to state 76
    expresionInt                   shift and go to state 77
    expresionDouble                shift and go to state 78
    expresionString                shift and go to state 79
    expresionBool                  shift and go to state 80
    expresion                      shift and go to state 12
    sentenciaWhile                 shift and go to state 81
    sentenciaDoWhile               shift and go to state 82
    sentenciaIf                    shift and go to state 83
    sentenciaElse                  shift and go to state 84
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 22
    valorString                    shift and go to state 23
    valorBool                      shift and go to state 24
    valor                          shift and go to state 29

state 29

    (55) expresion -> valor . operadorMat expresion
    (56) expresion -> valor .
    (82) operadorMat -> . SUMA
    (83) operadorMat -> . RESTA
    (84) operadorMat -> . MULTI
    (85) operadorMat -> . DIV
    (86) operadorMat -> . DIVENTERO
    (87) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 56 (expresion -> valor .)
    INT             reduce using rule 56 (expresion -> valor .)
    DOUBLER         reduce using rule 56 (expresion -> valor .)
    NUM             reduce using rule 56 (expresion -> valor .)
    STRINGR         reduce using rule 56 (expresion -> valor .)
    BOOLR           reduce using rule 56 (expresion -> valor .)
    DYNAMIC         reduce using rule 56 (expresion -> valor .)
    VAR             reduce using rule 56 (expresion -> valor .)
    VARIABLE        reduce using rule 56 (expresion -> valor .)
    WHILE           reduce using rule 56 (expresion -> valor .)
    DO              reduce using rule 56 (expresion -> valor .)
    IF              reduce using rule 56 (expresion -> valor .)
    ELSE            reduce using rule 56 (expresion -> valor .)
    ENTERO          reduce using rule 56 (expresion -> valor .)
    DOUBLE          reduce using rule 56 (expresion -> valor .)
    STRING          reduce using rule 56 (expresion -> valor .)
    BOOL            reduce using rule 56 (expresion -> valor .)
    $end            reduce using rule 56 (expresion -> valor .)
    LDER            reduce using rule 56 (expresion -> valor .)
    SUMA            shift and go to state 62
    RESTA           shift and go to state 63
    MULTI           shift and go to state 64
    DIV             shift and go to state 65
    DIVENTERO       shift and go to state 66
    MOD             shift and go to state 67

    operadorMat                    shift and go to state 85

state 30

    (74) valorInt -> ENTERO .
    (51) valor -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for INT resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for NUM resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRINGR resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOLR resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for VAR resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for WHILE resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for DO resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for IF resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for ELSE resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for ENTERO resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRING resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOL resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for $end resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for LDER resolved using rule 51 (valor -> ENTERO .)
    DIGUAL          reduce using rule 74 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 74 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 74 (valorInt -> ENTERO .)
    MENOR           reduce using rule 74 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 74 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 74 (valorInt -> ENTERO .)
    SUMA            reduce using rule 51 (valor -> ENTERO .)
    RESTA           reduce using rule 51 (valor -> ENTERO .)
    MULTI           reduce using rule 51 (valor -> ENTERO .)
    DIV             reduce using rule 51 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 51 (valor -> ENTERO .)
    MOD             reduce using rule 51 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 51 (valor -> ENTERO .)
    INT             reduce using rule 51 (valor -> ENTERO .)
    DOUBLER         reduce using rule 51 (valor -> ENTERO .)
    NUM             reduce using rule 51 (valor -> ENTERO .)
    STRINGR         reduce using rule 51 (valor -> ENTERO .)
    BOOLR           reduce using rule 51 (valor -> ENTERO .)
    DYNAMIC         reduce using rule 51 (valor -> ENTERO .)
    VAR             reduce using rule 51 (valor -> ENTERO .)
    VARIABLE        reduce using rule 51 (valor -> ENTERO .)
    WHILE           reduce using rule 51 (valor -> ENTERO .)
    DO              reduce using rule 51 (valor -> ENTERO .)
    IF              reduce using rule 51 (valor -> ENTERO .)
    ELSE            reduce using rule 51 (valor -> ENTERO .)
    ENTERO          reduce using rule 51 (valor -> ENTERO .)
    DOUBLE          reduce using rule 51 (valor -> ENTERO .)
    STRING          reduce using rule 51 (valor -> ENTERO .)
    BOOL            reduce using rule 51 (valor -> ENTERO .)
    $end            reduce using rule 51 (valor -> ENTERO .)
    LDER            reduce using rule 51 (valor -> ENTERO .)

  ! SUMA            [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! INT             [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! DOUBLER         [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! NUM             [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! STRINGR         [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! BOOLR           [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! DYNAMIC         [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! VAR             [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! VARIABLE        [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! WHILE           [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! DO              [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! IF              [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! ELSE            [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! ENTERO          [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! DOUBLE          [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! STRING          [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! BOOL            [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! $end            [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! LDER            [ reduce using rule 74 (valorInt -> ENTERO .) ]


state 31

    (78) valorDouble -> DOUBLE .
    (53) valor -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for INT resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NUM resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VAR resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DO resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for IF resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRING resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for $end resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for LDER resolved using rule 53 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 78 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 78 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 78 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 78 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 78 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 78 (valorDouble -> DOUBLE .)
    SUMA            reduce using rule 53 (valor -> DOUBLE .)
    RESTA           reduce using rule 53 (valor -> DOUBLE .)
    MULTI           reduce using rule 53 (valor -> DOUBLE .)
    DIV             reduce using rule 53 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 53 (valor -> DOUBLE .)
    MOD             reduce using rule 53 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 53 (valor -> DOUBLE .)
    INT             reduce using rule 53 (valor -> DOUBLE .)
    DOUBLER         reduce using rule 53 (valor -> DOUBLE .)
    NUM             reduce using rule 53 (valor -> DOUBLE .)
    STRINGR         reduce using rule 53 (valor -> DOUBLE .)
    BOOLR           reduce using rule 53 (valor -> DOUBLE .)
    DYNAMIC         reduce using rule 53 (valor -> DOUBLE .)
    VAR             reduce using rule 53 (valor -> DOUBLE .)
    VARIABLE        reduce using rule 53 (valor -> DOUBLE .)
    WHILE           reduce using rule 53 (valor -> DOUBLE .)
    DO              reduce using rule 53 (valor -> DOUBLE .)
    IF              reduce using rule 53 (valor -> DOUBLE .)
    ELSE            reduce using rule 53 (valor -> DOUBLE .)
    ENTERO          reduce using rule 53 (valor -> DOUBLE .)
    DOUBLE          reduce using rule 53 (valor -> DOUBLE .)
    STRING          reduce using rule 53 (valor -> DOUBLE .)
    BOOL            reduce using rule 53 (valor -> DOUBLE .)
    $end            reduce using rule 53 (valor -> DOUBLE .)
    LDER            reduce using rule 53 (valor -> DOUBLE .)

  ! SUMA            [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! INT             [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! DOUBLER         [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! NUM             [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! STRINGR         [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! BOOLR           [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! DYNAMIC         [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! VAR             [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! VARIABLE        [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! WHILE           [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! DO              [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! IF              [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! ELSE            [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! ENTERO          [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! DOUBLE          [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! STRING          [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! BOOL            [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! $end            [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! LDER            [ reduce using rule 78 (valorDouble -> DOUBLE .) ]


state 32

    (70) valorString -> STRING .
    (54) valor -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for RESTA resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for MULTI resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for DIV resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for MOD resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for INT resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for NUM resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for STRINGR resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for BOOLR resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for VAR resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for WHILE resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for DO resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for IF resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for ELSE resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for ENTERO resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for STRING resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for BOOL resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for $end resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for LDER resolved using rule 54 (valor -> STRING .)
    SUMA            reduce using rule 54 (valor -> STRING .)
    RESTA           reduce using rule 54 (valor -> STRING .)
    MULTI           reduce using rule 54 (valor -> STRING .)
    DIV             reduce using rule 54 (valor -> STRING .)
    DIVENTERO       reduce using rule 54 (valor -> STRING .)
    MOD             reduce using rule 54 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 54 (valor -> STRING .)
    INT             reduce using rule 54 (valor -> STRING .)
    DOUBLER         reduce using rule 54 (valor -> STRING .)
    NUM             reduce using rule 54 (valor -> STRING .)
    STRINGR         reduce using rule 54 (valor -> STRING .)
    BOOLR           reduce using rule 54 (valor -> STRING .)
    DYNAMIC         reduce using rule 54 (valor -> STRING .)
    VAR             reduce using rule 54 (valor -> STRING .)
    VARIABLE        reduce using rule 54 (valor -> STRING .)
    WHILE           reduce using rule 54 (valor -> STRING .)
    DO              reduce using rule 54 (valor -> STRING .)
    IF              reduce using rule 54 (valor -> STRING .)
    ELSE            reduce using rule 54 (valor -> STRING .)
    ENTERO          reduce using rule 54 (valor -> STRING .)
    DOUBLE          reduce using rule 54 (valor -> STRING .)
    STRING          reduce using rule 54 (valor -> STRING .)
    BOOL            reduce using rule 54 (valor -> STRING .)
    $end            reduce using rule 54 (valor -> STRING .)
    LDER            reduce using rule 54 (valor -> STRING .)

  ! SUMA            [ reduce using rule 70 (valorString -> STRING .) ]
  ! RESTA           [ reduce using rule 70 (valorString -> STRING .) ]
  ! MULTI           [ reduce using rule 70 (valorString -> STRING .) ]
  ! DIV             [ reduce using rule 70 (valorString -> STRING .) ]
  ! DIVENTERO       [ reduce using rule 70 (valorString -> STRING .) ]
  ! MOD             [ reduce using rule 70 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 70 (valorString -> STRING .) ]
  ! INT             [ reduce using rule 70 (valorString -> STRING .) ]
  ! DOUBLER         [ reduce using rule 70 (valorString -> STRING .) ]
  ! NUM             [ reduce using rule 70 (valorString -> STRING .) ]
  ! STRINGR         [ reduce using rule 70 (valorString -> STRING .) ]
  ! BOOLR           [ reduce using rule 70 (valorString -> STRING .) ]
  ! DYNAMIC         [ reduce using rule 70 (valorString -> STRING .) ]
  ! VAR             [ reduce using rule 70 (valorString -> STRING .) ]
  ! VARIABLE        [ reduce using rule 70 (valorString -> STRING .) ]
  ! WHILE           [ reduce using rule 70 (valorString -> STRING .) ]
  ! DO              [ reduce using rule 70 (valorString -> STRING .) ]
  ! IF              [ reduce using rule 70 (valorString -> STRING .) ]
  ! ELSE            [ reduce using rule 70 (valorString -> STRING .) ]
  ! ENTERO          [ reduce using rule 70 (valorString -> STRING .) ]
  ! DOUBLE          [ reduce using rule 70 (valorString -> STRING .) ]
  ! STRING          [ reduce using rule 70 (valorString -> STRING .) ]
  ! BOOL            [ reduce using rule 70 (valorString -> STRING .) ]
  ! $end            [ reduce using rule 70 (valorString -> STRING .) ]
  ! LDER            [ reduce using rule 70 (valorString -> STRING .) ]


state 33

    (63) valorBool -> BOOL .

    PUNTOYCOMA      reduce using rule 63 (valorBool -> BOOL .)
    PDER            reduce using rule 63 (valorBool -> BOOL .)


state 34

    (1) final -> algoritmo PUNTOYCOMA .
    (2) final -> algoritmo PUNTOYCOMA . final
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) algoritmo -> . asignacion PUNTOYCOMA
    (28) algoritmo -> . expresionInt PUNTOYCOMA
    (29) algoritmo -> . expresionDouble PUNTOYCOMA
    (30) algoritmo -> . expresionString PUNTOYCOMA
    (31) algoritmo -> . expresionBool PUNTOYCOMA
    (32) algoritmo -> . expresion
    (33) algoritmo -> . sentenciaWhile
    (34) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (35) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaIf PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf
    (38) algoritmo -> . sentenciaElse PUNTOYCOMA
    (39) algoritmo -> . sentenciaElse
    (40) asignacion -> . INT VARIABLE IGUAL expresionInt
    (41) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (42) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (43) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (44) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (45) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (46) asignacion -> . VAR VARIABLE IGUAL expresion
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (60) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (62) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (47) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (48) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (49) sentenciaElse -> . ELSE algoritmo
    (50) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING

    $end            reduce using rule 1 (final -> algoritmo PUNTOYCOMA .)
    INT             shift and go to state 13
    DOUBLER         shift and go to state 15
    NUM             shift and go to state 16
    STRINGR         shift and go to state 17
    BOOLR           shift and go to state 18
    DYNAMIC         shift and go to state 19
    VAR             shift and go to state 20
    VARIABLE        shift and go to state 14
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    IF              shift and go to state 27
    ELSE            shift and go to state 28
    ENTERO          shift and go to state 30
    DOUBLE          shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

    algoritmo                      shift and go to state 2
    final                          shift and go to state 86
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    expresion                      shift and go to state 12
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 22
    valorString                    shift and go to state 23
    valorBool                      shift and go to state 24
    valor                          shift and go to state 29

state 35

    (3) final -> asignacion PUNTOYCOMA .
    (4) final -> asignacion PUNTOYCOMA . final
    (27) algoritmo -> asignacion PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) algoritmo -> . asignacion PUNTOYCOMA
    (28) algoritmo -> . expresionInt PUNTOYCOMA
    (29) algoritmo -> . expresionDouble PUNTOYCOMA
    (30) algoritmo -> . expresionString PUNTOYCOMA
    (31) algoritmo -> . expresionBool PUNTOYCOMA
    (32) algoritmo -> . expresion
    (33) algoritmo -> . sentenciaWhile
    (34) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (35) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaIf PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf
    (38) algoritmo -> . sentenciaElse PUNTOYCOMA
    (39) algoritmo -> . sentenciaElse
    (40) asignacion -> . INT VARIABLE IGUAL expresionInt
    (41) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (42) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (43) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (44) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (45) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (46) asignacion -> . VAR VARIABLE IGUAL expresion
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (60) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (62) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (47) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (48) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (49) sentenciaElse -> . ELSE algoritmo
    (50) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING

    $end            reduce using rule 3 (final -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 27 (algoritmo -> asignacion PUNTOYCOMA .)
    INT             shift and go to state 13
    DOUBLER         shift and go to state 15
    NUM             shift and go to state 16
    STRINGR         shift and go to state 17
    BOOLR           shift and go to state 18
    DYNAMIC         shift and go to state 19
    VAR             shift and go to state 20
    VARIABLE        shift and go to state 14
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    IF              shift and go to state 27
    ELSE            shift and go to state 28
    ENTERO          shift and go to state 30
    DOUBLE          shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

    asignacion                     shift and go to state 3
    final                          shift and go to state 87
    algoritmo                      shift and go to state 2
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    expresion                      shift and go to state 12
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 22
    valorString                    shift and go to state 23
    valorBool                      shift and go to state 24
    valor                          shift and go to state 29

state 36

    (5) final -> expresionInt PUNTOYCOMA .
    (6) final -> expresionInt PUNTOYCOMA . final
    (28) algoritmo -> expresionInt PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) algoritmo -> . asignacion PUNTOYCOMA
    (28) algoritmo -> . expresionInt PUNTOYCOMA
    (29) algoritmo -> . expresionDouble PUNTOYCOMA
    (30) algoritmo -> . expresionString PUNTOYCOMA
    (31) algoritmo -> . expresionBool PUNTOYCOMA
    (32) algoritmo -> . expresion
    (33) algoritmo -> . sentenciaWhile
    (34) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (35) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaIf PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf
    (38) algoritmo -> . sentenciaElse PUNTOYCOMA
    (39) algoritmo -> . sentenciaElse
    (40) asignacion -> . INT VARIABLE IGUAL expresionInt
    (41) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (42) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (43) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (44) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (45) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (46) asignacion -> . VAR VARIABLE IGUAL expresion
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (60) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (62) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (47) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (48) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (49) sentenciaElse -> . ELSE algoritmo
    (50) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING

    $end            reduce using rule 5 (final -> expresionInt PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 28 (algoritmo -> expresionInt PUNTOYCOMA .)
    INT             shift and go to state 13
    DOUBLER         shift and go to state 15
    NUM             shift and go to state 16
    STRINGR         shift and go to state 17
    BOOLR           shift and go to state 18
    DYNAMIC         shift and go to state 19
    VAR             shift and go to state 20
    VARIABLE        shift and go to state 14
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    IF              shift and go to state 27
    ELSE            shift and go to state 28
    ENTERO          shift and go to state 30
    DOUBLE          shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

    expresionInt                   shift and go to state 4
    final                          shift and go to state 88
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    expresion                      shift and go to state 12
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 22
    valorString                    shift and go to state 23
    valorBool                      shift and go to state 24
    valor                          shift and go to state 29

state 37

    (7) final -> expresionDouble PUNTOYCOMA .
    (8) final -> expresionDouble PUNTOYCOMA . final
    (29) algoritmo -> expresionDouble PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) algoritmo -> . asignacion PUNTOYCOMA
    (28) algoritmo -> . expresionInt PUNTOYCOMA
    (29) algoritmo -> . expresionDouble PUNTOYCOMA
    (30) algoritmo -> . expresionString PUNTOYCOMA
    (31) algoritmo -> . expresionBool PUNTOYCOMA
    (32) algoritmo -> . expresion
    (33) algoritmo -> . sentenciaWhile
    (34) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (35) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaIf PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf
    (38) algoritmo -> . sentenciaElse PUNTOYCOMA
    (39) algoritmo -> . sentenciaElse
    (40) asignacion -> . INT VARIABLE IGUAL expresionInt
    (41) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (42) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (43) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (44) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (45) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (46) asignacion -> . VAR VARIABLE IGUAL expresion
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (60) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (62) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (47) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (48) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (49) sentenciaElse -> . ELSE algoritmo
    (50) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING

    $end            reduce using rule 7 (final -> expresionDouble PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 29 (algoritmo -> expresionDouble PUNTOYCOMA .)
    INT             shift and go to state 13
    DOUBLER         shift and go to state 15
    NUM             shift and go to state 16
    STRINGR         shift and go to state 17
    BOOLR           shift and go to state 18
    DYNAMIC         shift and go to state 19
    VAR             shift and go to state 20
    VARIABLE        shift and go to state 14
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    IF              shift and go to state 27
    ELSE            shift and go to state 28
    ENTERO          shift and go to state 30
    DOUBLE          shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

    expresionDouble                shift and go to state 5
    final                          shift and go to state 89
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    expresion                      shift and go to state 12
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 22
    valorString                    shift and go to state 23
    valorBool                      shift and go to state 24
    valor                          shift and go to state 29

state 38

    (9) final -> expresionString PUNTOYCOMA .
    (10) final -> expresionString PUNTOYCOMA . final
    (30) algoritmo -> expresionString PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) algoritmo -> . asignacion PUNTOYCOMA
    (28) algoritmo -> . expresionInt PUNTOYCOMA
    (29) algoritmo -> . expresionDouble PUNTOYCOMA
    (30) algoritmo -> . expresionString PUNTOYCOMA
    (31) algoritmo -> . expresionBool PUNTOYCOMA
    (32) algoritmo -> . expresion
    (33) algoritmo -> . sentenciaWhile
    (34) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (35) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaIf PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf
    (38) algoritmo -> . sentenciaElse PUNTOYCOMA
    (39) algoritmo -> . sentenciaElse
    (40) asignacion -> . INT VARIABLE IGUAL expresionInt
    (41) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (42) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (43) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (44) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (45) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (46) asignacion -> . VAR VARIABLE IGUAL expresion
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (60) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (62) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (47) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (48) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (49) sentenciaElse -> . ELSE algoritmo
    (50) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING

    $end            reduce using rule 9 (final -> expresionString PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 30 (algoritmo -> expresionString PUNTOYCOMA .)
    INT             shift and go to state 13
    DOUBLER         shift and go to state 15
    NUM             shift and go to state 16
    STRINGR         shift and go to state 17
    BOOLR           shift and go to state 18
    DYNAMIC         shift and go to state 19
    VAR             shift and go to state 20
    VARIABLE        shift and go to state 14
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    IF              shift and go to state 27
    ELSE            shift and go to state 28
    ENTERO          shift and go to state 30
    DOUBLE          shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

    expresionString                shift and go to state 6
    final                          shift and go to state 90
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    expresion                      shift and go to state 12
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 22
    valorString                    shift and go to state 23
    valorBool                      shift and go to state 24
    valor                          shift and go to state 29

state 39

    (11) final -> expresionBool PUNTOYCOMA .
    (12) final -> expresionBool PUNTOYCOMA . final
    (31) algoritmo -> expresionBool PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) algoritmo -> . asignacion PUNTOYCOMA
    (28) algoritmo -> . expresionInt PUNTOYCOMA
    (29) algoritmo -> . expresionDouble PUNTOYCOMA
    (30) algoritmo -> . expresionString PUNTOYCOMA
    (31) algoritmo -> . expresionBool PUNTOYCOMA
    (32) algoritmo -> . expresion
    (33) algoritmo -> . sentenciaWhile
    (34) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (35) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaIf PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf
    (38) algoritmo -> . sentenciaElse PUNTOYCOMA
    (39) algoritmo -> . sentenciaElse
    (40) asignacion -> . INT VARIABLE IGUAL expresionInt
    (41) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (42) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (43) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (44) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (45) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (46) asignacion -> . VAR VARIABLE IGUAL expresion
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (60) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (62) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (47) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (48) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (49) sentenciaElse -> . ELSE algoritmo
    (50) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING

    $end            reduce using rule 11 (final -> expresionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 31 (algoritmo -> expresionBool PUNTOYCOMA .)
    INT             shift and go to state 13
    DOUBLER         shift and go to state 15
    NUM             shift and go to state 16
    STRINGR         shift and go to state 17
    BOOLR           shift and go to state 18
    DYNAMIC         shift and go to state 19
    VAR             shift and go to state 20
    VARIABLE        shift and go to state 14
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    IF              shift and go to state 27
    ELSE            shift and go to state 28
    ENTERO          shift and go to state 30
    DOUBLE          shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

    expresionBool                  shift and go to state 7
    final                          shift and go to state 91
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    expresion                      shift and go to state 12
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 22
    valorString                    shift and go to state 23
    valorBool                      shift and go to state 24
    valor                          shift and go to state 29

state 40

    (14) final -> sentenciaWhile final .

    $end            reduce using rule 14 (final -> sentenciaWhile final .)


state 41

    (15) final -> sentenciaWhile PUNTOYCOMA .
    (16) final -> sentenciaWhile PUNTOYCOMA . final
    (34) algoritmo -> sentenciaWhile PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) algoritmo -> . asignacion PUNTOYCOMA
    (28) algoritmo -> . expresionInt PUNTOYCOMA
    (29) algoritmo -> . expresionDouble PUNTOYCOMA
    (30) algoritmo -> . expresionString PUNTOYCOMA
    (31) algoritmo -> . expresionBool PUNTOYCOMA
    (32) algoritmo -> . expresion
    (33) algoritmo -> . sentenciaWhile
    (34) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (35) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaIf PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf
    (38) algoritmo -> . sentenciaElse PUNTOYCOMA
    (39) algoritmo -> . sentenciaElse
    (40) asignacion -> . INT VARIABLE IGUAL expresionInt
    (41) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (42) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (43) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (44) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (45) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (46) asignacion -> . VAR VARIABLE IGUAL expresion
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (60) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (62) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (47) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (48) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (49) sentenciaElse -> . ELSE algoritmo
    (50) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING

    $end            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 34 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    INT             shift and go to state 13
    DOUBLER         shift and go to state 15
    NUM             shift and go to state 16
    STRINGR         shift and go to state 17
    BOOLR           shift and go to state 18
    DYNAMIC         shift and go to state 19
    VAR             shift and go to state 20
    VARIABLE        shift and go to state 14
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    IF              shift and go to state 27
    ELSE            shift and go to state 28
    ENTERO          shift and go to state 30
    DOUBLE          shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 92
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    expresion                      shift and go to state 12
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 22
    valorString                    shift and go to state 23
    valorBool                      shift and go to state 24
    valor                          shift and go to state 29

state 42

    (17) final -> sentenciaDoWhile PUNTOYCOMA .
    (18) final -> sentenciaDoWhile PUNTOYCOMA . final
    (35) algoritmo -> sentenciaDoWhile PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) algoritmo -> . asignacion PUNTOYCOMA
    (28) algoritmo -> . expresionInt PUNTOYCOMA
    (29) algoritmo -> . expresionDouble PUNTOYCOMA
    (30) algoritmo -> . expresionString PUNTOYCOMA
    (31) algoritmo -> . expresionBool PUNTOYCOMA
    (32) algoritmo -> . expresion
    (33) algoritmo -> . sentenciaWhile
    (34) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (35) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaIf PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf
    (38) algoritmo -> . sentenciaElse PUNTOYCOMA
    (39) algoritmo -> . sentenciaElse
    (40) asignacion -> . INT VARIABLE IGUAL expresionInt
    (41) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (42) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (43) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (44) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (45) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (46) asignacion -> . VAR VARIABLE IGUAL expresion
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (60) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (62) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (47) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (48) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (49) sentenciaElse -> . ELSE algoritmo
    (50) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING

    $end            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 35 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    INT             shift and go to state 13
    DOUBLER         shift and go to state 15
    NUM             shift and go to state 16
    STRINGR         shift and go to state 17
    BOOLR           shift and go to state 18
    DYNAMIC         shift and go to state 19
    VAR             shift and go to state 20
    VARIABLE        shift and go to state 14
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    IF              shift and go to state 27
    ELSE            shift and go to state 28
    ENTERO          shift and go to state 30
    DOUBLE          shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

    sentenciaDoWhile               shift and go to state 9
    final                          shift and go to state 93
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    expresion                      shift and go to state 12
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 22
    valorString                    shift and go to state 23
    valorBool                      shift and go to state 24
    valor                          shift and go to state 29

state 43

    (19) final -> sentenciaIf PUNTOYCOMA .
    (20) final -> sentenciaIf PUNTOYCOMA . final
    (36) algoritmo -> sentenciaIf PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) algoritmo -> . asignacion PUNTOYCOMA
    (28) algoritmo -> . expresionInt PUNTOYCOMA
    (29) algoritmo -> . expresionDouble PUNTOYCOMA
    (30) algoritmo -> . expresionString PUNTOYCOMA
    (31) algoritmo -> . expresionBool PUNTOYCOMA
    (32) algoritmo -> . expresion
    (33) algoritmo -> . sentenciaWhile
    (34) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (35) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaIf PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf
    (38) algoritmo -> . sentenciaElse PUNTOYCOMA
    (39) algoritmo -> . sentenciaElse
    (40) asignacion -> . INT VARIABLE IGUAL expresionInt
    (41) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (42) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (43) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (44) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (45) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (46) asignacion -> . VAR VARIABLE IGUAL expresion
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (60) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (62) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (47) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (48) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (49) sentenciaElse -> . ELSE algoritmo
    (50) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING

    $end            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 36 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    INT             shift and go to state 13
    DOUBLER         shift and go to state 15
    NUM             shift and go to state 16
    STRINGR         shift and go to state 17
    BOOLR           shift and go to state 18
    DYNAMIC         shift and go to state 19
    VAR             shift and go to state 20
    VARIABLE        shift and go to state 14
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    IF              shift and go to state 27
    ELSE            shift and go to state 28
    ENTERO          shift and go to state 30
    DOUBLE          shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 94
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    expresion                      shift and go to state 12
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 22
    valorString                    shift and go to state 23
    valorBool                      shift and go to state 24
    valor                          shift and go to state 29

state 44

    (22) final -> sentenciaIf final .

    $end            reduce using rule 22 (final -> sentenciaIf final .)


state 45

    (23) final -> sentenciaElse PUNTOYCOMA .
    (24) final -> sentenciaElse PUNTOYCOMA . final
    (38) algoritmo -> sentenciaElse PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) algoritmo -> . asignacion PUNTOYCOMA
    (28) algoritmo -> . expresionInt PUNTOYCOMA
    (29) algoritmo -> . expresionDouble PUNTOYCOMA
    (30) algoritmo -> . expresionString PUNTOYCOMA
    (31) algoritmo -> . expresionBool PUNTOYCOMA
    (32) algoritmo -> . expresion
    (33) algoritmo -> . sentenciaWhile
    (34) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (35) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaIf PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf
    (38) algoritmo -> . sentenciaElse PUNTOYCOMA
    (39) algoritmo -> . sentenciaElse
    (40) asignacion -> . INT VARIABLE IGUAL expresionInt
    (41) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (42) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (43) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (44) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (45) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (46) asignacion -> . VAR VARIABLE IGUAL expresion
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (60) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (62) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (47) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (48) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (49) sentenciaElse -> . ELSE algoritmo
    (50) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING

    $end            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 38 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    INT             shift and go to state 13
    DOUBLER         shift and go to state 15
    NUM             shift and go to state 16
    STRINGR         shift and go to state 17
    BOOLR           shift and go to state 18
    DYNAMIC         shift and go to state 19
    VAR             shift and go to state 20
    VARIABLE        shift and go to state 14
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    IF              shift and go to state 27
    ELSE            shift and go to state 28
    ENTERO          shift and go to state 30
    DOUBLE          shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 95
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    expresion                      shift and go to state 12
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 22
    valorString                    shift and go to state 23
    valorBool                      shift and go to state 24
    valor                          shift and go to state 29

state 46

    (26) final -> sentenciaElse final .

    $end            reduce using rule 26 (final -> sentenciaElse final .)


state 47

    (40) asignacion -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 96


state 48

    (66) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (67) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 97
    DOUBLE          shift and go to state 100
    ENTERO          shift and go to state 102

    expresionDouble                shift and go to state 98
    valorDouble                    shift and go to state 99
    valorInt                       shift and go to state 101

state 49

    (88) comparadorMat -> DIGUAL .

    VARIABLE        reduce using rule 88 (comparadorMat -> DIGUAL .)
    DOUBLE          reduce using rule 88 (comparadorMat -> DIGUAL .)
    ENTERO          reduce using rule 88 (comparadorMat -> DIGUAL .)


state 50

    (89) comparadorMat -> NOIGUAL .

    VARIABLE        reduce using rule 89 (comparadorMat -> NOIGUAL .)
    DOUBLE          reduce using rule 89 (comparadorMat -> NOIGUAL .)
    ENTERO          reduce using rule 89 (comparadorMat -> NOIGUAL .)


state 51

    (90) comparadorMat -> MAYOR .

    VARIABLE        reduce using rule 90 (comparadorMat -> MAYOR .)
    DOUBLE          reduce using rule 90 (comparadorMat -> MAYOR .)
    ENTERO          reduce using rule 90 (comparadorMat -> MAYOR .)


state 52

    (91) comparadorMat -> MENOR .

    VARIABLE        reduce using rule 91 (comparadorMat -> MENOR .)
    DOUBLE          reduce using rule 91 (comparadorMat -> MENOR .)
    ENTERO          reduce using rule 91 (comparadorMat -> MENOR .)


state 53

    (92) comparadorMat -> MAYIGUAL .

    VARIABLE        reduce using rule 92 (comparadorMat -> MAYIGUAL .)
    DOUBLE          reduce using rule 92 (comparadorMat -> MAYIGUAL .)
    ENTERO          reduce using rule 92 (comparadorMat -> MAYIGUAL .)


state 54

    (93) comparadorMat -> MENIGUAL .

    VARIABLE        reduce using rule 93 (comparadorMat -> MENIGUAL .)
    DOUBLE          reduce using rule 93 (comparadorMat -> MENIGUAL .)
    ENTERO          reduce using rule 93 (comparadorMat -> MENIGUAL .)


state 55

    (41) asignacion -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 103


state 56

    (42) asignacion -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 104


state 57

    (43) asignacion -> STRINGR VARIABLE . IGUAL expresionString

    IGUAL           shift and go to state 105


state 58

    (44) asignacion -> BOOLR VARIABLE . IGUAL expresionBool

    IGUAL           shift and go to state 106


state 59

    (45) asignacion -> DYNAMIC VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 107


state 60

    (46) asignacion -> VAR VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 108


state 61

    (76) expresionInt -> valorInt operadorMat . expresionInt
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE

    ENTERO          shift and go to state 102
    VARIABLE        shift and go to state 111

    valorInt                       shift and go to state 109
    expresionInt                   shift and go to state 110

state 62

    (82) operadorMat -> SUMA .

    ENTERO          reduce using rule 82 (operadorMat -> SUMA .)
    VARIABLE        reduce using rule 82 (operadorMat -> SUMA .)
    DOUBLE          reduce using rule 82 (operadorMat -> SUMA .)
    STRING          reduce using rule 82 (operadorMat -> SUMA .)


state 63

    (83) operadorMat -> RESTA .

    ENTERO          reduce using rule 83 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 83 (operadorMat -> RESTA .)
    DOUBLE          reduce using rule 83 (operadorMat -> RESTA .)
    STRING          reduce using rule 83 (operadorMat -> RESTA .)


state 64

    (84) operadorMat -> MULTI .

    ENTERO          reduce using rule 84 (operadorMat -> MULTI .)
    VARIABLE        reduce using rule 84 (operadorMat -> MULTI .)
    DOUBLE          reduce using rule 84 (operadorMat -> MULTI .)
    STRING          reduce using rule 84 (operadorMat -> MULTI .)


state 65

    (85) operadorMat -> DIV .

    ENTERO          reduce using rule 85 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 85 (operadorMat -> DIV .)
    DOUBLE          reduce using rule 85 (operadorMat -> DIV .)
    STRING          reduce using rule 85 (operadorMat -> DIV .)


state 66

    (86) operadorMat -> DIVENTERO .

    ENTERO          reduce using rule 86 (operadorMat -> DIVENTERO .)
    VARIABLE        reduce using rule 86 (operadorMat -> DIVENTERO .)
    DOUBLE          reduce using rule 86 (operadorMat -> DIVENTERO .)
    STRING          reduce using rule 86 (operadorMat -> DIVENTERO .)


state 67

    (87) operadorMat -> MOD .

    ENTERO          reduce using rule 87 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 87 (operadorMat -> MOD .)
    DOUBLE          reduce using rule 87 (operadorMat -> MOD .)
    STRING          reduce using rule 87 (operadorMat -> MOD .)


state 68

    (80) expresionDouble -> valorDouble operadorMat . expresionDouble
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 100
    ENTERO          shift and go to state 102
    VARIABLE        shift and go to state 111

    valorDouble                    shift and go to state 99
    expresionDouble                shift and go to state 112
    valorInt                       shift and go to state 101

state 69

    (65) expresionBool -> valorDouble comparadorMat . expresionDouble
    (68) expresionBool -> valorDouble comparadorMat . VARIABLE
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 114
    DOUBLE          shift and go to state 100
    ENTERO          shift and go to state 102

    valorDouble                    shift and go to state 99
    expresionDouble                shift and go to state 113
    valorInt                       shift and go to state 101

state 70

    (72) expresionString -> valorString operadorMat . expresionString
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE

    STRING          shift and go to state 116
    VARIABLE        shift and go to state 117

    valorString                    shift and go to state 23
    expresionString                shift and go to state 115

state 71

    (60) sentenciaWhile -> WHILE PIZQ . expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> WHILE PIZQ . expresionBool PDER algoritmo
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 120
    DOUBLE          shift and go to state 100
    BOOL            shift and go to state 33
    ENTERO          shift and go to state 102

    expresionBool                  shift and go to state 118
    valorDouble                    shift and go to state 119
    valorBool                      shift and go to state 24
    valorInt                       shift and go to state 101

state 72

    (62) sentenciaDoWhile -> DO LIZQ . algoritmo LDER WHILE PIZQ expresionBool PDER
    (27) algoritmo -> . asignacion PUNTOYCOMA
    (28) algoritmo -> . expresionInt PUNTOYCOMA
    (29) algoritmo -> . expresionDouble PUNTOYCOMA
    (30) algoritmo -> . expresionString PUNTOYCOMA
    (31) algoritmo -> . expresionBool PUNTOYCOMA
    (32) algoritmo -> . expresion
    (33) algoritmo -> . sentenciaWhile
    (34) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (35) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaIf PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf
    (38) algoritmo -> . sentenciaElse PUNTOYCOMA
    (39) algoritmo -> . sentenciaElse
    (40) asignacion -> . INT VARIABLE IGUAL expresionInt
    (41) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (42) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (43) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (44) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (45) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (46) asignacion -> . VAR VARIABLE IGUAL expresion
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (60) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (62) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (47) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (48) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (49) sentenciaElse -> . ELSE algoritmo
    (50) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING

    INT             shift and go to state 13
    DOUBLER         shift and go to state 15
    NUM             shift and go to state 16
    STRINGR         shift and go to state 17
    BOOLR           shift and go to state 18
    DYNAMIC         shift and go to state 19
    VAR             shift and go to state 20
    VARIABLE        shift and go to state 14
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    IF              shift and go to state 27
    ELSE            shift and go to state 28
    ENTERO          shift and go to state 30
    DOUBLE          shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

    algoritmo                      shift and go to state 121
    expresionBool                  shift and go to state 80
    asignacion                     shift and go to state 76
    expresionInt                   shift and go to state 77
    expresionDouble                shift and go to state 78
    expresionString                shift and go to state 79
    expresion                      shift and go to state 12
    sentenciaWhile                 shift and go to state 81
    sentenciaDoWhile               shift and go to state 82
    sentenciaIf                    shift and go to state 83
    sentenciaElse                  shift and go to state 84
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 22
    valorString                    shift and go to state 23
    valorBool                      shift and go to state 24
    valor                          shift and go to state 29

state 73

    (47) sentenciaIf -> IF PIZQ . expresionBool PDER algoritmo
    (48) sentenciaIf -> IF PIZQ . expresionBool PDER LIZQ algoritmo LDER
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 120
    DOUBLE          shift and go to state 100
    BOOL            shift and go to state 33
    ENTERO          shift and go to state 102

    expresionBool                  shift and go to state 122
    valorDouble                    shift and go to state 119
    valorBool                      shift and go to state 24
    valorInt                       shift and go to state 101

state 74

    (49) sentenciaElse -> ELSE algoritmo .

    PUNTOYCOMA      reduce using rule 49 (sentenciaElse -> ELSE algoritmo .)
    INT             reduce using rule 49 (sentenciaElse -> ELSE algoritmo .)
    DOUBLER         reduce using rule 49 (sentenciaElse -> ELSE algoritmo .)
    NUM             reduce using rule 49 (sentenciaElse -> ELSE algoritmo .)
    STRINGR         reduce using rule 49 (sentenciaElse -> ELSE algoritmo .)
    BOOLR           reduce using rule 49 (sentenciaElse -> ELSE algoritmo .)
    DYNAMIC         reduce using rule 49 (sentenciaElse -> ELSE algoritmo .)
    VAR             reduce using rule 49 (sentenciaElse -> ELSE algoritmo .)
    VARIABLE        reduce using rule 49 (sentenciaElse -> ELSE algoritmo .)
    WHILE           reduce using rule 49 (sentenciaElse -> ELSE algoritmo .)
    DO              reduce using rule 49 (sentenciaElse -> ELSE algoritmo .)
    IF              reduce using rule 49 (sentenciaElse -> ELSE algoritmo .)
    ELSE            reduce using rule 49 (sentenciaElse -> ELSE algoritmo .)
    ENTERO          reduce using rule 49 (sentenciaElse -> ELSE algoritmo .)
    DOUBLE          reduce using rule 49 (sentenciaElse -> ELSE algoritmo .)
    STRING          reduce using rule 49 (sentenciaElse -> ELSE algoritmo .)
    BOOL            reduce using rule 49 (sentenciaElse -> ELSE algoritmo .)
    $end            reduce using rule 49 (sentenciaElse -> ELSE algoritmo .)
    LDER            reduce using rule 49 (sentenciaElse -> ELSE algoritmo .)


state 75

    (50) sentenciaElse -> ELSE LIZQ . algoritmo LDER
    (27) algoritmo -> . asignacion PUNTOYCOMA
    (28) algoritmo -> . expresionInt PUNTOYCOMA
    (29) algoritmo -> . expresionDouble PUNTOYCOMA
    (30) algoritmo -> . expresionString PUNTOYCOMA
    (31) algoritmo -> . expresionBool PUNTOYCOMA
    (32) algoritmo -> . expresion
    (33) algoritmo -> . sentenciaWhile
    (34) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (35) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaIf PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf
    (38) algoritmo -> . sentenciaElse PUNTOYCOMA
    (39) algoritmo -> . sentenciaElse
    (40) asignacion -> . INT VARIABLE IGUAL expresionInt
    (41) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (42) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (43) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (44) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (45) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (46) asignacion -> . VAR VARIABLE IGUAL expresion
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (60) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (62) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (47) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (48) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (49) sentenciaElse -> . ELSE algoritmo
    (50) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING

    INT             shift and go to state 13
    DOUBLER         shift and go to state 15
    NUM             shift and go to state 16
    STRINGR         shift and go to state 17
    BOOLR           shift and go to state 18
    DYNAMIC         shift and go to state 19
    VAR             shift and go to state 20
    VARIABLE        shift and go to state 14
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    IF              shift and go to state 27
    ELSE            shift and go to state 28
    ENTERO          shift and go to state 30
    DOUBLE          shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

    algoritmo                      shift and go to state 123
    asignacion                     shift and go to state 76
    expresionInt                   shift and go to state 77
    expresionDouble                shift and go to state 78
    expresionString                shift and go to state 79
    expresionBool                  shift and go to state 80
    expresion                      shift and go to state 12
    sentenciaWhile                 shift and go to state 81
    sentenciaDoWhile               shift and go to state 82
    sentenciaIf                    shift and go to state 83
    sentenciaElse                  shift and go to state 84
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 22
    valorString                    shift and go to state 23
    valorBool                      shift and go to state 24
    valor                          shift and go to state 29

state 76

    (27) algoritmo -> asignacion . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 124


state 77

    (28) algoritmo -> expresionInt . PUNTOYCOMA
    (58) expresion -> expresionInt .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 125
    INT             reduce using rule 58 (expresion -> expresionInt .)
    DOUBLER         reduce using rule 58 (expresion -> expresionInt .)
    NUM             reduce using rule 58 (expresion -> expresionInt .)
    STRINGR         reduce using rule 58 (expresion -> expresionInt .)
    BOOLR           reduce using rule 58 (expresion -> expresionInt .)
    DYNAMIC         reduce using rule 58 (expresion -> expresionInt .)
    VAR             reduce using rule 58 (expresion -> expresionInt .)
    VARIABLE        reduce using rule 58 (expresion -> expresionInt .)
    WHILE           reduce using rule 58 (expresion -> expresionInt .)
    DO              reduce using rule 58 (expresion -> expresionInt .)
    IF              reduce using rule 58 (expresion -> expresionInt .)
    ELSE            reduce using rule 58 (expresion -> expresionInt .)
    ENTERO          reduce using rule 58 (expresion -> expresionInt .)
    DOUBLE          reduce using rule 58 (expresion -> expresionInt .)
    STRING          reduce using rule 58 (expresion -> expresionInt .)
    BOOL            reduce using rule 58 (expresion -> expresionInt .)
    $end            reduce using rule 58 (expresion -> expresionInt .)
    LDER            reduce using rule 58 (expresion -> expresionInt .)

  ! PUNTOYCOMA      [ reduce using rule 58 (expresion -> expresionInt .) ]


state 78

    (29) algoritmo -> expresionDouble . PUNTOYCOMA
    (59) expresion -> expresionDouble .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 126
    INT             reduce using rule 59 (expresion -> expresionDouble .)
    DOUBLER         reduce using rule 59 (expresion -> expresionDouble .)
    NUM             reduce using rule 59 (expresion -> expresionDouble .)
    STRINGR         reduce using rule 59 (expresion -> expresionDouble .)
    BOOLR           reduce using rule 59 (expresion -> expresionDouble .)
    DYNAMIC         reduce using rule 59 (expresion -> expresionDouble .)
    VAR             reduce using rule 59 (expresion -> expresionDouble .)
    VARIABLE        reduce using rule 59 (expresion -> expresionDouble .)
    WHILE           reduce using rule 59 (expresion -> expresionDouble .)
    DO              reduce using rule 59 (expresion -> expresionDouble .)
    IF              reduce using rule 59 (expresion -> expresionDouble .)
    ELSE            reduce using rule 59 (expresion -> expresionDouble .)
    ENTERO          reduce using rule 59 (expresion -> expresionDouble .)
    DOUBLE          reduce using rule 59 (expresion -> expresionDouble .)
    STRING          reduce using rule 59 (expresion -> expresionDouble .)
    BOOL            reduce using rule 59 (expresion -> expresionDouble .)
    $end            reduce using rule 59 (expresion -> expresionDouble .)
    LDER            reduce using rule 59 (expresion -> expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 59 (expresion -> expresionDouble .) ]


state 79

    (30) algoritmo -> expresionString . PUNTOYCOMA
    (57) expresion -> expresionString .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 127
    INT             reduce using rule 57 (expresion -> expresionString .)
    DOUBLER         reduce using rule 57 (expresion -> expresionString .)
    NUM             reduce using rule 57 (expresion -> expresionString .)
    STRINGR         reduce using rule 57 (expresion -> expresionString .)
    BOOLR           reduce using rule 57 (expresion -> expresionString .)
    DYNAMIC         reduce using rule 57 (expresion -> expresionString .)
    VAR             reduce using rule 57 (expresion -> expresionString .)
    VARIABLE        reduce using rule 57 (expresion -> expresionString .)
    WHILE           reduce using rule 57 (expresion -> expresionString .)
    DO              reduce using rule 57 (expresion -> expresionString .)
    IF              reduce using rule 57 (expresion -> expresionString .)
    ELSE            reduce using rule 57 (expresion -> expresionString .)
    ENTERO          reduce using rule 57 (expresion -> expresionString .)
    DOUBLE          reduce using rule 57 (expresion -> expresionString .)
    STRING          reduce using rule 57 (expresion -> expresionString .)
    BOOL            reduce using rule 57 (expresion -> expresionString .)
    $end            reduce using rule 57 (expresion -> expresionString .)
    LDER            reduce using rule 57 (expresion -> expresionString .)

  ! PUNTOYCOMA      [ reduce using rule 57 (expresion -> expresionString .) ]


state 80

    (31) algoritmo -> expresionBool . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 128


state 81

    (33) algoritmo -> sentenciaWhile .
    (34) algoritmo -> sentenciaWhile . PUNTOYCOMA

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    INT             reduce using rule 33 (algoritmo -> sentenciaWhile .)
    DOUBLER         reduce using rule 33 (algoritmo -> sentenciaWhile .)
    NUM             reduce using rule 33 (algoritmo -> sentenciaWhile .)
    STRINGR         reduce using rule 33 (algoritmo -> sentenciaWhile .)
    BOOLR           reduce using rule 33 (algoritmo -> sentenciaWhile .)
    DYNAMIC         reduce using rule 33 (algoritmo -> sentenciaWhile .)
    VAR             reduce using rule 33 (algoritmo -> sentenciaWhile .)
    VARIABLE        reduce using rule 33 (algoritmo -> sentenciaWhile .)
    WHILE           reduce using rule 33 (algoritmo -> sentenciaWhile .)
    DO              reduce using rule 33 (algoritmo -> sentenciaWhile .)
    IF              reduce using rule 33 (algoritmo -> sentenciaWhile .)
    ELSE            reduce using rule 33 (algoritmo -> sentenciaWhile .)
    ENTERO          reduce using rule 33 (algoritmo -> sentenciaWhile .)
    DOUBLE          reduce using rule 33 (algoritmo -> sentenciaWhile .)
    STRING          reduce using rule 33 (algoritmo -> sentenciaWhile .)
    BOOL            reduce using rule 33 (algoritmo -> sentenciaWhile .)
    $end            reduce using rule 33 (algoritmo -> sentenciaWhile .)
    LDER            reduce using rule 33 (algoritmo -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 129

  ! PUNTOYCOMA      [ reduce using rule 33 (algoritmo -> sentenciaWhile .) ]


state 82

    (35) algoritmo -> sentenciaDoWhile . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 130


state 83

    (36) algoritmo -> sentenciaIf . PUNTOYCOMA
    (37) algoritmo -> sentenciaIf .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 131
    INT             reduce using rule 37 (algoritmo -> sentenciaIf .)
    DOUBLER         reduce using rule 37 (algoritmo -> sentenciaIf .)
    NUM             reduce using rule 37 (algoritmo -> sentenciaIf .)
    STRINGR         reduce using rule 37 (algoritmo -> sentenciaIf .)
    BOOLR           reduce using rule 37 (algoritmo -> sentenciaIf .)
    DYNAMIC         reduce using rule 37 (algoritmo -> sentenciaIf .)
    VAR             reduce using rule 37 (algoritmo -> sentenciaIf .)
    VARIABLE        reduce using rule 37 (algoritmo -> sentenciaIf .)
    WHILE           reduce using rule 37 (algoritmo -> sentenciaIf .)
    DO              reduce using rule 37 (algoritmo -> sentenciaIf .)
    IF              reduce using rule 37 (algoritmo -> sentenciaIf .)
    ELSE            reduce using rule 37 (algoritmo -> sentenciaIf .)
    ENTERO          reduce using rule 37 (algoritmo -> sentenciaIf .)
    DOUBLE          reduce using rule 37 (algoritmo -> sentenciaIf .)
    STRING          reduce using rule 37 (algoritmo -> sentenciaIf .)
    BOOL            reduce using rule 37 (algoritmo -> sentenciaIf .)
    $end            reduce using rule 37 (algoritmo -> sentenciaIf .)
    LDER            reduce using rule 37 (algoritmo -> sentenciaIf .)

  ! PUNTOYCOMA      [ reduce using rule 37 (algoritmo -> sentenciaIf .) ]


state 84

    (38) algoritmo -> sentenciaElse . PUNTOYCOMA
    (39) algoritmo -> sentenciaElse .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 132
    INT             reduce using rule 39 (algoritmo -> sentenciaElse .)
    DOUBLER         reduce using rule 39 (algoritmo -> sentenciaElse .)
    NUM             reduce using rule 39 (algoritmo -> sentenciaElse .)
    STRINGR         reduce using rule 39 (algoritmo -> sentenciaElse .)
    BOOLR           reduce using rule 39 (algoritmo -> sentenciaElse .)
    DYNAMIC         reduce using rule 39 (algoritmo -> sentenciaElse .)
    VAR             reduce using rule 39 (algoritmo -> sentenciaElse .)
    VARIABLE        reduce using rule 39 (algoritmo -> sentenciaElse .)
    WHILE           reduce using rule 39 (algoritmo -> sentenciaElse .)
    DO              reduce using rule 39 (algoritmo -> sentenciaElse .)
    IF              reduce using rule 39 (algoritmo -> sentenciaElse .)
    ELSE            reduce using rule 39 (algoritmo -> sentenciaElse .)
    ENTERO          reduce using rule 39 (algoritmo -> sentenciaElse .)
    DOUBLE          reduce using rule 39 (algoritmo -> sentenciaElse .)
    STRING          reduce using rule 39 (algoritmo -> sentenciaElse .)
    BOOL            reduce using rule 39 (algoritmo -> sentenciaElse .)
    $end            reduce using rule 39 (algoritmo -> sentenciaElse .)
    LDER            reduce using rule 39 (algoritmo -> sentenciaElse .)

  ! PUNTOYCOMA      [ reduce using rule 39 (algoritmo -> sentenciaElse .) ]


state 85

    (55) expresion -> valor operadorMat . expresion
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt

    ENTERO          shift and go to state 137
    VARIABLE        shift and go to state 138
    DOUBLE          shift and go to state 139
    STRING          shift and go to state 140

    valor                          shift and go to state 29
    expresion                      shift and go to state 133
    expresionString                shift and go to state 134
    expresionInt                   shift and go to state 135
    expresionDouble                shift and go to state 136
    valorString                    shift and go to state 23
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 99

state 86

    (2) final -> algoritmo PUNTOYCOMA final .

    $end            reduce using rule 2 (final -> algoritmo PUNTOYCOMA final .)


state 87

    (4) final -> asignacion PUNTOYCOMA final .

    $end            reduce using rule 4 (final -> asignacion PUNTOYCOMA final .)


state 88

    (6) final -> expresionInt PUNTOYCOMA final .

    $end            reduce using rule 6 (final -> expresionInt PUNTOYCOMA final .)


state 89

    (8) final -> expresionDouble PUNTOYCOMA final .

    $end            reduce using rule 8 (final -> expresionDouble PUNTOYCOMA final .)


state 90

    (10) final -> expresionString PUNTOYCOMA final .

    $end            reduce using rule 10 (final -> expresionString PUNTOYCOMA final .)


state 91

    (12) final -> expresionBool PUNTOYCOMA final .

    $end            reduce using rule 12 (final -> expresionBool PUNTOYCOMA final .)


state 92

    (16) final -> sentenciaWhile PUNTOYCOMA final .

    $end            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)


state 93

    (18) final -> sentenciaDoWhile PUNTOYCOMA final .

    $end            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)


state 94

    (20) final -> sentenciaIf PUNTOYCOMA final .

    $end            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)


state 95

    (24) final -> sentenciaElse PUNTOYCOMA final .

    $end            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)


state 96

    (40) asignacion -> INT VARIABLE IGUAL . expresionInt
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE

    ENTERO          shift and go to state 102
    VARIABLE        shift and go to state 111

    expresionInt                   shift and go to state 141
    valorInt                       shift and go to state 109

state 97

    (67) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (75) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 67 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 67 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 67 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PDER            reduce using rule 67 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 75 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 75 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 75 (valorInt -> VARIABLE .)
    DIV             reduce using rule 75 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 75 (valorInt -> VARIABLE .)
    MOD             reduce using rule 75 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 75 (valorInt -> VARIABLE .) ]


state 98

    (66) expresionBool -> VARIABLE comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 66 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PDER            reduce using rule 66 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 99

    (80) expresionDouble -> valorDouble . operadorMat expresionDouble
    (81) expresionDouble -> valorDouble .
    (82) operadorMat -> . SUMA
    (83) operadorMat -> . RESTA
    (84) operadorMat -> . MULTI
    (85) operadorMat -> . DIV
    (86) operadorMat -> . DIVENTERO
    (87) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 81 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 81 (expresionDouble -> valorDouble .)
    INT             reduce using rule 81 (expresionDouble -> valorDouble .)
    DOUBLER         reduce using rule 81 (expresionDouble -> valorDouble .)
    NUM             reduce using rule 81 (expresionDouble -> valorDouble .)
    STRINGR         reduce using rule 81 (expresionDouble -> valorDouble .)
    BOOLR           reduce using rule 81 (expresionDouble -> valorDouble .)
    DYNAMIC         reduce using rule 81 (expresionDouble -> valorDouble .)
    VAR             reduce using rule 81 (expresionDouble -> valorDouble .)
    VARIABLE        reduce using rule 81 (expresionDouble -> valorDouble .)
    WHILE           reduce using rule 81 (expresionDouble -> valorDouble .)
    DO              reduce using rule 81 (expresionDouble -> valorDouble .)
    IF              reduce using rule 81 (expresionDouble -> valorDouble .)
    ELSE            reduce using rule 81 (expresionDouble -> valorDouble .)
    ENTERO          reduce using rule 81 (expresionDouble -> valorDouble .)
    DOUBLE          reduce using rule 81 (expresionDouble -> valorDouble .)
    STRING          reduce using rule 81 (expresionDouble -> valorDouble .)
    BOOL            reduce using rule 81 (expresionDouble -> valorDouble .)
    $end            reduce using rule 81 (expresionDouble -> valorDouble .)
    LDER            reduce using rule 81 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 62
    RESTA           shift and go to state 63
    MULTI           shift and go to state 64
    DIV             shift and go to state 65
    DIVENTERO       shift and go to state 66
    MOD             shift and go to state 67

    operadorMat                    shift and go to state 68

state 100

    (78) valorDouble -> DOUBLE .

    SUMA            reduce using rule 78 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 78 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 78 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 78 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 78 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 78 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 78 (valorDouble -> DOUBLE .)
    PDER            reduce using rule 78 (valorDouble -> DOUBLE .)
    INT             reduce using rule 78 (valorDouble -> DOUBLE .)
    DOUBLER         reduce using rule 78 (valorDouble -> DOUBLE .)
    NUM             reduce using rule 78 (valorDouble -> DOUBLE .)
    STRINGR         reduce using rule 78 (valorDouble -> DOUBLE .)
    BOOLR           reduce using rule 78 (valorDouble -> DOUBLE .)
    DYNAMIC         reduce using rule 78 (valorDouble -> DOUBLE .)
    VAR             reduce using rule 78 (valorDouble -> DOUBLE .)
    VARIABLE        reduce using rule 78 (valorDouble -> DOUBLE .)
    WHILE           reduce using rule 78 (valorDouble -> DOUBLE .)
    DO              reduce using rule 78 (valorDouble -> DOUBLE .)
    IF              reduce using rule 78 (valorDouble -> DOUBLE .)
    ELSE            reduce using rule 78 (valorDouble -> DOUBLE .)
    ENTERO          reduce using rule 78 (valorDouble -> DOUBLE .)
    DOUBLE          reduce using rule 78 (valorDouble -> DOUBLE .)
    STRING          reduce using rule 78 (valorDouble -> DOUBLE .)
    BOOL            reduce using rule 78 (valorDouble -> DOUBLE .)
    $end            reduce using rule 78 (valorDouble -> DOUBLE .)
    LDER            reduce using rule 78 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 78 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 78 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 78 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 78 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 78 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 78 (valorDouble -> DOUBLE .)


state 101

    (79) valorDouble -> valorInt .

    SUMA            reduce using rule 79 (valorDouble -> valorInt .)
    RESTA           reduce using rule 79 (valorDouble -> valorInt .)
    MULTI           reduce using rule 79 (valorDouble -> valorInt .)
    DIV             reduce using rule 79 (valorDouble -> valorInt .)
    DIVENTERO       reduce using rule 79 (valorDouble -> valorInt .)
    MOD             reduce using rule 79 (valorDouble -> valorInt .)
    PUNTOYCOMA      reduce using rule 79 (valorDouble -> valorInt .)
    PDER            reduce using rule 79 (valorDouble -> valorInt .)
    INT             reduce using rule 79 (valorDouble -> valorInt .)
    DOUBLER         reduce using rule 79 (valorDouble -> valorInt .)
    NUM             reduce using rule 79 (valorDouble -> valorInt .)
    STRINGR         reduce using rule 79 (valorDouble -> valorInt .)
    BOOLR           reduce using rule 79 (valorDouble -> valorInt .)
    DYNAMIC         reduce using rule 79 (valorDouble -> valorInt .)
    VAR             reduce using rule 79 (valorDouble -> valorInt .)
    VARIABLE        reduce using rule 79 (valorDouble -> valorInt .)
    WHILE           reduce using rule 79 (valorDouble -> valorInt .)
    DO              reduce using rule 79 (valorDouble -> valorInt .)
    IF              reduce using rule 79 (valorDouble -> valorInt .)
    ELSE            reduce using rule 79 (valorDouble -> valorInt .)
    ENTERO          reduce using rule 79 (valorDouble -> valorInt .)
    DOUBLE          reduce using rule 79 (valorDouble -> valorInt .)
    STRING          reduce using rule 79 (valorDouble -> valorInt .)
    BOOL            reduce using rule 79 (valorDouble -> valorInt .)
    $end            reduce using rule 79 (valorDouble -> valorInt .)
    LDER            reduce using rule 79 (valorDouble -> valorInt .)
    DIGUAL          reduce using rule 79 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 79 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 79 (valorDouble -> valorInt .)
    MENOR           reduce using rule 79 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 79 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 79 (valorDouble -> valorInt .)


state 102

    (74) valorInt -> ENTERO .

    SUMA            reduce using rule 74 (valorInt -> ENTERO .)
    RESTA           reduce using rule 74 (valorInt -> ENTERO .)
    MULTI           reduce using rule 74 (valorInt -> ENTERO .)
    DIV             reduce using rule 74 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 74 (valorInt -> ENTERO .)
    MOD             reduce using rule 74 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 74 (valorInt -> ENTERO .)
    PDER            reduce using rule 74 (valorInt -> ENTERO .)
    INT             reduce using rule 74 (valorInt -> ENTERO .)
    DOUBLER         reduce using rule 74 (valorInt -> ENTERO .)
    NUM             reduce using rule 74 (valorInt -> ENTERO .)
    STRINGR         reduce using rule 74 (valorInt -> ENTERO .)
    BOOLR           reduce using rule 74 (valorInt -> ENTERO .)
    DYNAMIC         reduce using rule 74 (valorInt -> ENTERO .)
    VAR             reduce using rule 74 (valorInt -> ENTERO .)
    VARIABLE        reduce using rule 74 (valorInt -> ENTERO .)
    WHILE           reduce using rule 74 (valorInt -> ENTERO .)
    DO              reduce using rule 74 (valorInt -> ENTERO .)
    IF              reduce using rule 74 (valorInt -> ENTERO .)
    ELSE            reduce using rule 74 (valorInt -> ENTERO .)
    ENTERO          reduce using rule 74 (valorInt -> ENTERO .)
    DOUBLE          reduce using rule 74 (valorInt -> ENTERO .)
    STRING          reduce using rule 74 (valorInt -> ENTERO .)
    BOOL            reduce using rule 74 (valorInt -> ENTERO .)
    $end            reduce using rule 74 (valorInt -> ENTERO .)
    LDER            reduce using rule 74 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 74 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 74 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 74 (valorInt -> ENTERO .)
    MENOR           reduce using rule 74 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 74 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 74 (valorInt -> ENTERO .)


state 103

    (41) asignacion -> DOUBLER VARIABLE IGUAL . expresionDouble
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 100
    ENTERO          shift and go to state 102
    VARIABLE        shift and go to state 111

    expresionDouble                shift and go to state 142
    valorDouble                    shift and go to state 99
    valorInt                       shift and go to state 101

state 104

    (42) asignacion -> NUM VARIABLE IGUAL . expresionDouble
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 100
    ENTERO          shift and go to state 102
    VARIABLE        shift and go to state 111

    expresionDouble                shift and go to state 143
    valorDouble                    shift and go to state 99
    valorInt                       shift and go to state 101

state 105

    (43) asignacion -> STRINGR VARIABLE IGUAL . expresionString
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE

    STRING          shift and go to state 116
    VARIABLE        shift and go to state 117

    expresionString                shift and go to state 144
    valorString                    shift and go to state 23

state 106

    (44) asignacion -> BOOLR VARIABLE IGUAL . expresionBool
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 120
    DOUBLE          shift and go to state 100
    BOOL            shift and go to state 33
    ENTERO          shift and go to state 102

    expresionBool                  shift and go to state 145
    valorDouble                    shift and go to state 119
    valorBool                      shift and go to state 24
    valorInt                       shift and go to state 101

state 107

    (45) asignacion -> DYNAMIC VARIABLE IGUAL . expresion
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt

    ENTERO          shift and go to state 137
    VARIABLE        shift and go to state 138
    DOUBLE          shift and go to state 139
    STRING          shift and go to state 140

    expresion                      shift and go to state 146
    valor                          shift and go to state 29
    expresionString                shift and go to state 134
    expresionInt                   shift and go to state 135
    expresionDouble                shift and go to state 136
    valorString                    shift and go to state 23
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 99

state 108

    (46) asignacion -> VAR VARIABLE IGUAL . expresion
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt

    ENTERO          shift and go to state 137
    VARIABLE        shift and go to state 138
    DOUBLE          shift and go to state 139
    STRING          shift and go to state 140

    expresion                      shift and go to state 147
    valor                          shift and go to state 29
    expresionString                shift and go to state 134
    expresionInt                   shift and go to state 135
    expresionDouble                shift and go to state 136
    valorString                    shift and go to state 23
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 99

state 109

    (76) expresionInt -> valorInt . operadorMat expresionInt
    (77) expresionInt -> valorInt .
    (82) operadorMat -> . SUMA
    (83) operadorMat -> . RESTA
    (84) operadorMat -> . MULTI
    (85) operadorMat -> . DIV
    (86) operadorMat -> . DIVENTERO
    (87) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 77 (expresionInt -> valorInt .)
    INT             reduce using rule 77 (expresionInt -> valorInt .)
    DOUBLER         reduce using rule 77 (expresionInt -> valorInt .)
    NUM             reduce using rule 77 (expresionInt -> valorInt .)
    STRINGR         reduce using rule 77 (expresionInt -> valorInt .)
    BOOLR           reduce using rule 77 (expresionInt -> valorInt .)
    DYNAMIC         reduce using rule 77 (expresionInt -> valorInt .)
    VAR             reduce using rule 77 (expresionInt -> valorInt .)
    VARIABLE        reduce using rule 77 (expresionInt -> valorInt .)
    WHILE           reduce using rule 77 (expresionInt -> valorInt .)
    DO              reduce using rule 77 (expresionInt -> valorInt .)
    IF              reduce using rule 77 (expresionInt -> valorInt .)
    ELSE            reduce using rule 77 (expresionInt -> valorInt .)
    ENTERO          reduce using rule 77 (expresionInt -> valorInt .)
    DOUBLE          reduce using rule 77 (expresionInt -> valorInt .)
    STRING          reduce using rule 77 (expresionInt -> valorInt .)
    BOOL            reduce using rule 77 (expresionInt -> valorInt .)
    $end            reduce using rule 77 (expresionInt -> valorInt .)
    LDER            reduce using rule 77 (expresionInt -> valorInt .)
    SUMA            shift and go to state 62
    RESTA           shift and go to state 63
    MULTI           shift and go to state 64
    DIV             shift and go to state 65
    DIVENTERO       shift and go to state 66
    MOD             shift and go to state 67

    operadorMat                    shift and go to state 61

state 110

    (76) expresionInt -> valorInt operadorMat expresionInt .

    PUNTOYCOMA      reduce using rule 76 (expresionInt -> valorInt operadorMat expresionInt .)
    INT             reduce using rule 76 (expresionInt -> valorInt operadorMat expresionInt .)
    DOUBLER         reduce using rule 76 (expresionInt -> valorInt operadorMat expresionInt .)
    NUM             reduce using rule 76 (expresionInt -> valorInt operadorMat expresionInt .)
    STRINGR         reduce using rule 76 (expresionInt -> valorInt operadorMat expresionInt .)
    BOOLR           reduce using rule 76 (expresionInt -> valorInt operadorMat expresionInt .)
    DYNAMIC         reduce using rule 76 (expresionInt -> valorInt operadorMat expresionInt .)
    VAR             reduce using rule 76 (expresionInt -> valorInt operadorMat expresionInt .)
    VARIABLE        reduce using rule 76 (expresionInt -> valorInt operadorMat expresionInt .)
    WHILE           reduce using rule 76 (expresionInt -> valorInt operadorMat expresionInt .)
    DO              reduce using rule 76 (expresionInt -> valorInt operadorMat expresionInt .)
    IF              reduce using rule 76 (expresionInt -> valorInt operadorMat expresionInt .)
    ELSE            reduce using rule 76 (expresionInt -> valorInt operadorMat expresionInt .)
    ENTERO          reduce using rule 76 (expresionInt -> valorInt operadorMat expresionInt .)
    DOUBLE          reduce using rule 76 (expresionInt -> valorInt operadorMat expresionInt .)
    STRING          reduce using rule 76 (expresionInt -> valorInt operadorMat expresionInt .)
    BOOL            reduce using rule 76 (expresionInt -> valorInt operadorMat expresionInt .)
    $end            reduce using rule 76 (expresionInt -> valorInt operadorMat expresionInt .)
    LDER            reduce using rule 76 (expresionInt -> valorInt operadorMat expresionInt .)


state 111

    (75) valorInt -> VARIABLE .

    SUMA            reduce using rule 75 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 75 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 75 (valorInt -> VARIABLE .)
    DIV             reduce using rule 75 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 75 (valorInt -> VARIABLE .)
    MOD             reduce using rule 75 (valorInt -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 75 (valorInt -> VARIABLE .)
    INT             reduce using rule 75 (valorInt -> VARIABLE .)
    DOUBLER         reduce using rule 75 (valorInt -> VARIABLE .)
    NUM             reduce using rule 75 (valorInt -> VARIABLE .)
    STRINGR         reduce using rule 75 (valorInt -> VARIABLE .)
    BOOLR           reduce using rule 75 (valorInt -> VARIABLE .)
    DYNAMIC         reduce using rule 75 (valorInt -> VARIABLE .)
    VAR             reduce using rule 75 (valorInt -> VARIABLE .)
    VARIABLE        reduce using rule 75 (valorInt -> VARIABLE .)
    WHILE           reduce using rule 75 (valorInt -> VARIABLE .)
    DO              reduce using rule 75 (valorInt -> VARIABLE .)
    IF              reduce using rule 75 (valorInt -> VARIABLE .)
    ELSE            reduce using rule 75 (valorInt -> VARIABLE .)
    ENTERO          reduce using rule 75 (valorInt -> VARIABLE .)
    DOUBLE          reduce using rule 75 (valorInt -> VARIABLE .)
    STRING          reduce using rule 75 (valorInt -> VARIABLE .)
    BOOL            reduce using rule 75 (valorInt -> VARIABLE .)
    $end            reduce using rule 75 (valorInt -> VARIABLE .)
    LDER            reduce using rule 75 (valorInt -> VARIABLE .)
    PDER            reduce using rule 75 (valorInt -> VARIABLE .)


state 112

    (80) expresionDouble -> valorDouble operadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 80 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    INT             reduce using rule 80 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DOUBLER         reduce using rule 80 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    NUM             reduce using rule 80 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    STRINGR         reduce using rule 80 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    BOOLR           reduce using rule 80 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DYNAMIC         reduce using rule 80 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    VAR             reduce using rule 80 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    VARIABLE        reduce using rule 80 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    WHILE           reduce using rule 80 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DO              reduce using rule 80 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    IF              reduce using rule 80 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    ELSE            reduce using rule 80 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    ENTERO          reduce using rule 80 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DOUBLE          reduce using rule 80 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    STRING          reduce using rule 80 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    BOOL            reduce using rule 80 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    $end            reduce using rule 80 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    LDER            reduce using rule 80 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PDER            reduce using rule 80 (expresionDouble -> valorDouble operadorMat expresionDouble .)


state 113

    (65) expresionBool -> valorDouble comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 65 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PDER            reduce using rule 65 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 114

    (68) expresionBool -> valorDouble comparadorMat VARIABLE .
    (75) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 68 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 68 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 68 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PDER            reduce using rule 68 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 75 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 75 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 75 (valorInt -> VARIABLE .)
    DIV             reduce using rule 75 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 75 (valorInt -> VARIABLE .)
    MOD             reduce using rule 75 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 75 (valorInt -> VARIABLE .) ]


state 115

    (72) expresionString -> valorString operadorMat expresionString .

    PUNTOYCOMA      reduce using rule 72 (expresionString -> valorString operadorMat expresionString .)
    INT             reduce using rule 72 (expresionString -> valorString operadorMat expresionString .)
    DOUBLER         reduce using rule 72 (expresionString -> valorString operadorMat expresionString .)
    NUM             reduce using rule 72 (expresionString -> valorString operadorMat expresionString .)
    STRINGR         reduce using rule 72 (expresionString -> valorString operadorMat expresionString .)
    BOOLR           reduce using rule 72 (expresionString -> valorString operadorMat expresionString .)
    DYNAMIC         reduce using rule 72 (expresionString -> valorString operadorMat expresionString .)
    VAR             reduce using rule 72 (expresionString -> valorString operadorMat expresionString .)
    VARIABLE        reduce using rule 72 (expresionString -> valorString operadorMat expresionString .)
    WHILE           reduce using rule 72 (expresionString -> valorString operadorMat expresionString .)
    DO              reduce using rule 72 (expresionString -> valorString operadorMat expresionString .)
    IF              reduce using rule 72 (expresionString -> valorString operadorMat expresionString .)
    ELSE            reduce using rule 72 (expresionString -> valorString operadorMat expresionString .)
    ENTERO          reduce using rule 72 (expresionString -> valorString operadorMat expresionString .)
    DOUBLE          reduce using rule 72 (expresionString -> valorString operadorMat expresionString .)
    STRING          reduce using rule 72 (expresionString -> valorString operadorMat expresionString .)
    BOOL            reduce using rule 72 (expresionString -> valorString operadorMat expresionString .)
    $end            reduce using rule 72 (expresionString -> valorString operadorMat expresionString .)
    LDER            reduce using rule 72 (expresionString -> valorString operadorMat expresionString .)


state 116

    (70) valorString -> STRING .

    SUMA            reduce using rule 70 (valorString -> STRING .)
    RESTA           reduce using rule 70 (valorString -> STRING .)
    MULTI           reduce using rule 70 (valorString -> STRING .)
    DIV             reduce using rule 70 (valorString -> STRING .)
    DIVENTERO       reduce using rule 70 (valorString -> STRING .)
    MOD             reduce using rule 70 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 70 (valorString -> STRING .)
    INT             reduce using rule 70 (valorString -> STRING .)
    DOUBLER         reduce using rule 70 (valorString -> STRING .)
    NUM             reduce using rule 70 (valorString -> STRING .)
    STRINGR         reduce using rule 70 (valorString -> STRING .)
    BOOLR           reduce using rule 70 (valorString -> STRING .)
    DYNAMIC         reduce using rule 70 (valorString -> STRING .)
    VAR             reduce using rule 70 (valorString -> STRING .)
    VARIABLE        reduce using rule 70 (valorString -> STRING .)
    WHILE           reduce using rule 70 (valorString -> STRING .)
    DO              reduce using rule 70 (valorString -> STRING .)
    IF              reduce using rule 70 (valorString -> STRING .)
    ELSE            reduce using rule 70 (valorString -> STRING .)
    ENTERO          reduce using rule 70 (valorString -> STRING .)
    DOUBLE          reduce using rule 70 (valorString -> STRING .)
    STRING          reduce using rule 70 (valorString -> STRING .)
    BOOL            reduce using rule 70 (valorString -> STRING .)
    $end            reduce using rule 70 (valorString -> STRING .)
    LDER            reduce using rule 70 (valorString -> STRING .)


state 117

    (71) valorString -> VARIABLE .

    SUMA            reduce using rule 71 (valorString -> VARIABLE .)
    RESTA           reduce using rule 71 (valorString -> VARIABLE .)
    MULTI           reduce using rule 71 (valorString -> VARIABLE .)
    DIV             reduce using rule 71 (valorString -> VARIABLE .)
    DIVENTERO       reduce using rule 71 (valorString -> VARIABLE .)
    MOD             reduce using rule 71 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 71 (valorString -> VARIABLE .)
    INT             reduce using rule 71 (valorString -> VARIABLE .)
    DOUBLER         reduce using rule 71 (valorString -> VARIABLE .)
    NUM             reduce using rule 71 (valorString -> VARIABLE .)
    STRINGR         reduce using rule 71 (valorString -> VARIABLE .)
    BOOLR           reduce using rule 71 (valorString -> VARIABLE .)
    DYNAMIC         reduce using rule 71 (valorString -> VARIABLE .)
    VAR             reduce using rule 71 (valorString -> VARIABLE .)
    VARIABLE        reduce using rule 71 (valorString -> VARIABLE .)
    WHILE           reduce using rule 71 (valorString -> VARIABLE .)
    DO              reduce using rule 71 (valorString -> VARIABLE .)
    IF              reduce using rule 71 (valorString -> VARIABLE .)
    ELSE            reduce using rule 71 (valorString -> VARIABLE .)
    ENTERO          reduce using rule 71 (valorString -> VARIABLE .)
    DOUBLE          reduce using rule 71 (valorString -> VARIABLE .)
    STRING          reduce using rule 71 (valorString -> VARIABLE .)
    BOOL            reduce using rule 71 (valorString -> VARIABLE .)
    $end            reduce using rule 71 (valorString -> VARIABLE .)
    LDER            reduce using rule 71 (valorString -> VARIABLE .)


state 118

    (60) sentenciaWhile -> WHILE PIZQ expresionBool . PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> WHILE PIZQ expresionBool . PDER algoritmo

    PDER            shift and go to state 148


state 119

    (65) expresionBool -> valorDouble . comparadorMat expresionDouble
    (68) expresionBool -> valorDouble . comparadorMat VARIABLE
    (88) comparadorMat -> . DIGUAL
    (89) comparadorMat -> . NOIGUAL
    (90) comparadorMat -> . MAYOR
    (91) comparadorMat -> . MENOR
    (92) comparadorMat -> . MAYIGUAL
    (93) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 49
    NOIGUAL         shift and go to state 50
    MAYOR           shift and go to state 51
    MENOR           shift and go to state 52
    MAYIGUAL        shift and go to state 53
    MENIGUAL        shift and go to state 54

    comparadorMat                  shift and go to state 69

state 120

    (66) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (67) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (64) valorBool -> VARIABLE .
    (75) valorInt -> VARIABLE .
    (88) comparadorMat -> . DIGUAL
    (89) comparadorMat -> . NOIGUAL
    (90) comparadorMat -> . MAYOR
    (91) comparadorMat -> . MENOR
    (92) comparadorMat -> . MAYIGUAL
    (93) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    PDER            reduce using rule 64 (valorBool -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 64 (valorBool -> VARIABLE .)
    DIGUAL          shift and go to state 49
    NOIGUAL         shift and go to state 50
    MAYOR           shift and go to state 51
    MENOR           shift and go to state 52
    MAYIGUAL        shift and go to state 53
    MENIGUAL        shift and go to state 54

  ! DIGUAL          [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 75 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 48

state 121

    (62) sentenciaDoWhile -> DO LIZQ algoritmo . LDER WHILE PIZQ expresionBool PDER

    LDER            shift and go to state 149


state 122

    (47) sentenciaIf -> IF PIZQ expresionBool . PDER algoritmo
    (48) sentenciaIf -> IF PIZQ expresionBool . PDER LIZQ algoritmo LDER

    PDER            shift and go to state 150


state 123

    (50) sentenciaElse -> ELSE LIZQ algoritmo . LDER

    LDER            shift and go to state 151


state 124

    (27) algoritmo -> asignacion PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 27 (algoritmo -> asignacion PUNTOYCOMA .)
    INT             reduce using rule 27 (algoritmo -> asignacion PUNTOYCOMA .)
    DOUBLER         reduce using rule 27 (algoritmo -> asignacion PUNTOYCOMA .)
    NUM             reduce using rule 27 (algoritmo -> asignacion PUNTOYCOMA .)
    STRINGR         reduce using rule 27 (algoritmo -> asignacion PUNTOYCOMA .)
    BOOLR           reduce using rule 27 (algoritmo -> asignacion PUNTOYCOMA .)
    DYNAMIC         reduce using rule 27 (algoritmo -> asignacion PUNTOYCOMA .)
    VAR             reduce using rule 27 (algoritmo -> asignacion PUNTOYCOMA .)
    VARIABLE        reduce using rule 27 (algoritmo -> asignacion PUNTOYCOMA .)
    WHILE           reduce using rule 27 (algoritmo -> asignacion PUNTOYCOMA .)
    DO              reduce using rule 27 (algoritmo -> asignacion PUNTOYCOMA .)
    IF              reduce using rule 27 (algoritmo -> asignacion PUNTOYCOMA .)
    ELSE            reduce using rule 27 (algoritmo -> asignacion PUNTOYCOMA .)
    ENTERO          reduce using rule 27 (algoritmo -> asignacion PUNTOYCOMA .)
    DOUBLE          reduce using rule 27 (algoritmo -> asignacion PUNTOYCOMA .)
    STRING          reduce using rule 27 (algoritmo -> asignacion PUNTOYCOMA .)
    BOOL            reduce using rule 27 (algoritmo -> asignacion PUNTOYCOMA .)
    $end            reduce using rule 27 (algoritmo -> asignacion PUNTOYCOMA .)
    LDER            reduce using rule 27 (algoritmo -> asignacion PUNTOYCOMA .)


state 125

    (28) algoritmo -> expresionInt PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 28 (algoritmo -> expresionInt PUNTOYCOMA .)
    INT             reduce using rule 28 (algoritmo -> expresionInt PUNTOYCOMA .)
    DOUBLER         reduce using rule 28 (algoritmo -> expresionInt PUNTOYCOMA .)
    NUM             reduce using rule 28 (algoritmo -> expresionInt PUNTOYCOMA .)
    STRINGR         reduce using rule 28 (algoritmo -> expresionInt PUNTOYCOMA .)
    BOOLR           reduce using rule 28 (algoritmo -> expresionInt PUNTOYCOMA .)
    DYNAMIC         reduce using rule 28 (algoritmo -> expresionInt PUNTOYCOMA .)
    VAR             reduce using rule 28 (algoritmo -> expresionInt PUNTOYCOMA .)
    VARIABLE        reduce using rule 28 (algoritmo -> expresionInt PUNTOYCOMA .)
    WHILE           reduce using rule 28 (algoritmo -> expresionInt PUNTOYCOMA .)
    DO              reduce using rule 28 (algoritmo -> expresionInt PUNTOYCOMA .)
    IF              reduce using rule 28 (algoritmo -> expresionInt PUNTOYCOMA .)
    ELSE            reduce using rule 28 (algoritmo -> expresionInt PUNTOYCOMA .)
    ENTERO          reduce using rule 28 (algoritmo -> expresionInt PUNTOYCOMA .)
    DOUBLE          reduce using rule 28 (algoritmo -> expresionInt PUNTOYCOMA .)
    STRING          reduce using rule 28 (algoritmo -> expresionInt PUNTOYCOMA .)
    BOOL            reduce using rule 28 (algoritmo -> expresionInt PUNTOYCOMA .)
    $end            reduce using rule 28 (algoritmo -> expresionInt PUNTOYCOMA .)
    LDER            reduce using rule 28 (algoritmo -> expresionInt PUNTOYCOMA .)


state 126

    (29) algoritmo -> expresionDouble PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 29 (algoritmo -> expresionDouble PUNTOYCOMA .)
    INT             reduce using rule 29 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DOUBLER         reduce using rule 29 (algoritmo -> expresionDouble PUNTOYCOMA .)
    NUM             reduce using rule 29 (algoritmo -> expresionDouble PUNTOYCOMA .)
    STRINGR         reduce using rule 29 (algoritmo -> expresionDouble PUNTOYCOMA .)
    BOOLR           reduce using rule 29 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DYNAMIC         reduce using rule 29 (algoritmo -> expresionDouble PUNTOYCOMA .)
    VAR             reduce using rule 29 (algoritmo -> expresionDouble PUNTOYCOMA .)
    VARIABLE        reduce using rule 29 (algoritmo -> expresionDouble PUNTOYCOMA .)
    WHILE           reduce using rule 29 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DO              reduce using rule 29 (algoritmo -> expresionDouble PUNTOYCOMA .)
    IF              reduce using rule 29 (algoritmo -> expresionDouble PUNTOYCOMA .)
    ELSE            reduce using rule 29 (algoritmo -> expresionDouble PUNTOYCOMA .)
    ENTERO          reduce using rule 29 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DOUBLE          reduce using rule 29 (algoritmo -> expresionDouble PUNTOYCOMA .)
    STRING          reduce using rule 29 (algoritmo -> expresionDouble PUNTOYCOMA .)
    BOOL            reduce using rule 29 (algoritmo -> expresionDouble PUNTOYCOMA .)
    $end            reduce using rule 29 (algoritmo -> expresionDouble PUNTOYCOMA .)
    LDER            reduce using rule 29 (algoritmo -> expresionDouble PUNTOYCOMA .)


state 127

    (30) algoritmo -> expresionString PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 30 (algoritmo -> expresionString PUNTOYCOMA .)
    INT             reduce using rule 30 (algoritmo -> expresionString PUNTOYCOMA .)
    DOUBLER         reduce using rule 30 (algoritmo -> expresionString PUNTOYCOMA .)
    NUM             reduce using rule 30 (algoritmo -> expresionString PUNTOYCOMA .)
    STRINGR         reduce using rule 30 (algoritmo -> expresionString PUNTOYCOMA .)
    BOOLR           reduce using rule 30 (algoritmo -> expresionString PUNTOYCOMA .)
    DYNAMIC         reduce using rule 30 (algoritmo -> expresionString PUNTOYCOMA .)
    VAR             reduce using rule 30 (algoritmo -> expresionString PUNTOYCOMA .)
    VARIABLE        reduce using rule 30 (algoritmo -> expresionString PUNTOYCOMA .)
    WHILE           reduce using rule 30 (algoritmo -> expresionString PUNTOYCOMA .)
    DO              reduce using rule 30 (algoritmo -> expresionString PUNTOYCOMA .)
    IF              reduce using rule 30 (algoritmo -> expresionString PUNTOYCOMA .)
    ELSE            reduce using rule 30 (algoritmo -> expresionString PUNTOYCOMA .)
    ENTERO          reduce using rule 30 (algoritmo -> expresionString PUNTOYCOMA .)
    DOUBLE          reduce using rule 30 (algoritmo -> expresionString PUNTOYCOMA .)
    STRING          reduce using rule 30 (algoritmo -> expresionString PUNTOYCOMA .)
    BOOL            reduce using rule 30 (algoritmo -> expresionString PUNTOYCOMA .)
    $end            reduce using rule 30 (algoritmo -> expresionString PUNTOYCOMA .)
    LDER            reduce using rule 30 (algoritmo -> expresionString PUNTOYCOMA .)


state 128

    (31) algoritmo -> expresionBool PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 31 (algoritmo -> expresionBool PUNTOYCOMA .)
    INT             reduce using rule 31 (algoritmo -> expresionBool PUNTOYCOMA .)
    DOUBLER         reduce using rule 31 (algoritmo -> expresionBool PUNTOYCOMA .)
    NUM             reduce using rule 31 (algoritmo -> expresionBool PUNTOYCOMA .)
    STRINGR         reduce using rule 31 (algoritmo -> expresionBool PUNTOYCOMA .)
    BOOLR           reduce using rule 31 (algoritmo -> expresionBool PUNTOYCOMA .)
    DYNAMIC         reduce using rule 31 (algoritmo -> expresionBool PUNTOYCOMA .)
    VAR             reduce using rule 31 (algoritmo -> expresionBool PUNTOYCOMA .)
    VARIABLE        reduce using rule 31 (algoritmo -> expresionBool PUNTOYCOMA .)
    WHILE           reduce using rule 31 (algoritmo -> expresionBool PUNTOYCOMA .)
    DO              reduce using rule 31 (algoritmo -> expresionBool PUNTOYCOMA .)
    IF              reduce using rule 31 (algoritmo -> expresionBool PUNTOYCOMA .)
    ELSE            reduce using rule 31 (algoritmo -> expresionBool PUNTOYCOMA .)
    ENTERO          reduce using rule 31 (algoritmo -> expresionBool PUNTOYCOMA .)
    DOUBLE          reduce using rule 31 (algoritmo -> expresionBool PUNTOYCOMA .)
    STRING          reduce using rule 31 (algoritmo -> expresionBool PUNTOYCOMA .)
    BOOL            reduce using rule 31 (algoritmo -> expresionBool PUNTOYCOMA .)
    $end            reduce using rule 31 (algoritmo -> expresionBool PUNTOYCOMA .)
    LDER            reduce using rule 31 (algoritmo -> expresionBool PUNTOYCOMA .)


state 129

    (34) algoritmo -> sentenciaWhile PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 34 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    INT             reduce using rule 34 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DOUBLER         reduce using rule 34 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    NUM             reduce using rule 34 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    STRINGR         reduce using rule 34 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    BOOLR           reduce using rule 34 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DYNAMIC         reduce using rule 34 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    VAR             reduce using rule 34 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    VARIABLE        reduce using rule 34 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    WHILE           reduce using rule 34 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DO              reduce using rule 34 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    IF              reduce using rule 34 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    ELSE            reduce using rule 34 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    ENTERO          reduce using rule 34 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DOUBLE          reduce using rule 34 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    STRING          reduce using rule 34 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    BOOL            reduce using rule 34 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    $end            reduce using rule 34 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    LDER            reduce using rule 34 (algoritmo -> sentenciaWhile PUNTOYCOMA .)


state 130

    (35) algoritmo -> sentenciaDoWhile PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 35 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    INT             reduce using rule 35 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DOUBLER         reduce using rule 35 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    NUM             reduce using rule 35 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    STRINGR         reduce using rule 35 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    BOOLR           reduce using rule 35 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DYNAMIC         reduce using rule 35 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    VAR             reduce using rule 35 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    VARIABLE        reduce using rule 35 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    WHILE           reduce using rule 35 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DO              reduce using rule 35 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    IF              reduce using rule 35 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    ELSE            reduce using rule 35 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    ENTERO          reduce using rule 35 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DOUBLE          reduce using rule 35 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    STRING          reduce using rule 35 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    BOOL            reduce using rule 35 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    $end            reduce using rule 35 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    LDER            reduce using rule 35 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)


state 131

    (36) algoritmo -> sentenciaIf PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 36 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    INT             reduce using rule 36 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DOUBLER         reduce using rule 36 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    NUM             reduce using rule 36 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    STRINGR         reduce using rule 36 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    BOOLR           reduce using rule 36 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DYNAMIC         reduce using rule 36 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    VAR             reduce using rule 36 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    VARIABLE        reduce using rule 36 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    WHILE           reduce using rule 36 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DO              reduce using rule 36 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    IF              reduce using rule 36 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    ELSE            reduce using rule 36 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    ENTERO          reduce using rule 36 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DOUBLE          reduce using rule 36 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    STRING          reduce using rule 36 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    BOOL            reduce using rule 36 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    $end            reduce using rule 36 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    LDER            reduce using rule 36 (algoritmo -> sentenciaIf PUNTOYCOMA .)


state 132

    (38) algoritmo -> sentenciaElse PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 38 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    INT             reduce using rule 38 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DOUBLER         reduce using rule 38 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    NUM             reduce using rule 38 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    STRINGR         reduce using rule 38 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    BOOLR           reduce using rule 38 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DYNAMIC         reduce using rule 38 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    VAR             reduce using rule 38 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    VARIABLE        reduce using rule 38 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    WHILE           reduce using rule 38 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DO              reduce using rule 38 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    IF              reduce using rule 38 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    ELSE            reduce using rule 38 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    ENTERO          reduce using rule 38 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DOUBLE          reduce using rule 38 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    STRING          reduce using rule 38 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    BOOL            reduce using rule 38 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    $end            reduce using rule 38 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    LDER            reduce using rule 38 (algoritmo -> sentenciaElse PUNTOYCOMA .)


state 133

    (55) expresion -> valor operadorMat expresion .

    PUNTOYCOMA      reduce using rule 55 (expresion -> valor operadorMat expresion .)
    INT             reduce using rule 55 (expresion -> valor operadorMat expresion .)
    DOUBLER         reduce using rule 55 (expresion -> valor operadorMat expresion .)
    NUM             reduce using rule 55 (expresion -> valor operadorMat expresion .)
    STRINGR         reduce using rule 55 (expresion -> valor operadorMat expresion .)
    BOOLR           reduce using rule 55 (expresion -> valor operadorMat expresion .)
    DYNAMIC         reduce using rule 55 (expresion -> valor operadorMat expresion .)
    VAR             reduce using rule 55 (expresion -> valor operadorMat expresion .)
    VARIABLE        reduce using rule 55 (expresion -> valor operadorMat expresion .)
    WHILE           reduce using rule 55 (expresion -> valor operadorMat expresion .)
    DO              reduce using rule 55 (expresion -> valor operadorMat expresion .)
    IF              reduce using rule 55 (expresion -> valor operadorMat expresion .)
    ELSE            reduce using rule 55 (expresion -> valor operadorMat expresion .)
    ENTERO          reduce using rule 55 (expresion -> valor operadorMat expresion .)
    DOUBLE          reduce using rule 55 (expresion -> valor operadorMat expresion .)
    STRING          reduce using rule 55 (expresion -> valor operadorMat expresion .)
    BOOL            reduce using rule 55 (expresion -> valor operadorMat expresion .)
    $end            reduce using rule 55 (expresion -> valor operadorMat expresion .)
    LDER            reduce using rule 55 (expresion -> valor operadorMat expresion .)


state 134

    (57) expresion -> expresionString .

    PUNTOYCOMA      reduce using rule 57 (expresion -> expresionString .)
    INT             reduce using rule 57 (expresion -> expresionString .)
    DOUBLER         reduce using rule 57 (expresion -> expresionString .)
    NUM             reduce using rule 57 (expresion -> expresionString .)
    STRINGR         reduce using rule 57 (expresion -> expresionString .)
    BOOLR           reduce using rule 57 (expresion -> expresionString .)
    DYNAMIC         reduce using rule 57 (expresion -> expresionString .)
    VAR             reduce using rule 57 (expresion -> expresionString .)
    VARIABLE        reduce using rule 57 (expresion -> expresionString .)
    WHILE           reduce using rule 57 (expresion -> expresionString .)
    DO              reduce using rule 57 (expresion -> expresionString .)
    IF              reduce using rule 57 (expresion -> expresionString .)
    ELSE            reduce using rule 57 (expresion -> expresionString .)
    ENTERO          reduce using rule 57 (expresion -> expresionString .)
    DOUBLE          reduce using rule 57 (expresion -> expresionString .)
    STRING          reduce using rule 57 (expresion -> expresionString .)
    BOOL            reduce using rule 57 (expresion -> expresionString .)
    $end            reduce using rule 57 (expresion -> expresionString .)
    LDER            reduce using rule 57 (expresion -> expresionString .)


state 135

    (58) expresion -> expresionInt .

    PUNTOYCOMA      reduce using rule 58 (expresion -> expresionInt .)
    INT             reduce using rule 58 (expresion -> expresionInt .)
    DOUBLER         reduce using rule 58 (expresion -> expresionInt .)
    NUM             reduce using rule 58 (expresion -> expresionInt .)
    STRINGR         reduce using rule 58 (expresion -> expresionInt .)
    BOOLR           reduce using rule 58 (expresion -> expresionInt .)
    DYNAMIC         reduce using rule 58 (expresion -> expresionInt .)
    VAR             reduce using rule 58 (expresion -> expresionInt .)
    VARIABLE        reduce using rule 58 (expresion -> expresionInt .)
    WHILE           reduce using rule 58 (expresion -> expresionInt .)
    DO              reduce using rule 58 (expresion -> expresionInt .)
    IF              reduce using rule 58 (expresion -> expresionInt .)
    ELSE            reduce using rule 58 (expresion -> expresionInt .)
    ENTERO          reduce using rule 58 (expresion -> expresionInt .)
    DOUBLE          reduce using rule 58 (expresion -> expresionInt .)
    STRING          reduce using rule 58 (expresion -> expresionInt .)
    BOOL            reduce using rule 58 (expresion -> expresionInt .)
    $end            reduce using rule 58 (expresion -> expresionInt .)
    LDER            reduce using rule 58 (expresion -> expresionInt .)


state 136

    (59) expresion -> expresionDouble .

    PUNTOYCOMA      reduce using rule 59 (expresion -> expresionDouble .)
    INT             reduce using rule 59 (expresion -> expresionDouble .)
    DOUBLER         reduce using rule 59 (expresion -> expresionDouble .)
    NUM             reduce using rule 59 (expresion -> expresionDouble .)
    STRINGR         reduce using rule 59 (expresion -> expresionDouble .)
    BOOLR           reduce using rule 59 (expresion -> expresionDouble .)
    DYNAMIC         reduce using rule 59 (expresion -> expresionDouble .)
    VAR             reduce using rule 59 (expresion -> expresionDouble .)
    VARIABLE        reduce using rule 59 (expresion -> expresionDouble .)
    WHILE           reduce using rule 59 (expresion -> expresionDouble .)
    DO              reduce using rule 59 (expresion -> expresionDouble .)
    IF              reduce using rule 59 (expresion -> expresionDouble .)
    ELSE            reduce using rule 59 (expresion -> expresionDouble .)
    ENTERO          reduce using rule 59 (expresion -> expresionDouble .)
    DOUBLE          reduce using rule 59 (expresion -> expresionDouble .)
    STRING          reduce using rule 59 (expresion -> expresionDouble .)
    BOOL            reduce using rule 59 (expresion -> expresionDouble .)
    $end            reduce using rule 59 (expresion -> expresionDouble .)
    LDER            reduce using rule 59 (expresion -> expresionDouble .)


state 137

    (51) valor -> ENTERO .
    (74) valorInt -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for INT resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for NUM resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRINGR resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOLR resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for VAR resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for WHILE resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for DO resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for IF resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for ELSE resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for ENTERO resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRING resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOL resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for $end resolved using rule 51 (valor -> ENTERO .)
  ! reduce/reduce conflict for LDER resolved using rule 51 (valor -> ENTERO .)
    SUMA            reduce using rule 51 (valor -> ENTERO .)
    RESTA           reduce using rule 51 (valor -> ENTERO .)
    MULTI           reduce using rule 51 (valor -> ENTERO .)
    DIV             reduce using rule 51 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 51 (valor -> ENTERO .)
    MOD             reduce using rule 51 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 51 (valor -> ENTERO .)
    INT             reduce using rule 51 (valor -> ENTERO .)
    DOUBLER         reduce using rule 51 (valor -> ENTERO .)
    NUM             reduce using rule 51 (valor -> ENTERO .)
    STRINGR         reduce using rule 51 (valor -> ENTERO .)
    BOOLR           reduce using rule 51 (valor -> ENTERO .)
    DYNAMIC         reduce using rule 51 (valor -> ENTERO .)
    VAR             reduce using rule 51 (valor -> ENTERO .)
    VARIABLE        reduce using rule 51 (valor -> ENTERO .)
    WHILE           reduce using rule 51 (valor -> ENTERO .)
    DO              reduce using rule 51 (valor -> ENTERO .)
    IF              reduce using rule 51 (valor -> ENTERO .)
    ELSE            reduce using rule 51 (valor -> ENTERO .)
    ENTERO          reduce using rule 51 (valor -> ENTERO .)
    DOUBLE          reduce using rule 51 (valor -> ENTERO .)
    STRING          reduce using rule 51 (valor -> ENTERO .)
    BOOL            reduce using rule 51 (valor -> ENTERO .)
    $end            reduce using rule 51 (valor -> ENTERO .)
    LDER            reduce using rule 51 (valor -> ENTERO .)

  ! SUMA            [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! INT             [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! DOUBLER         [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! NUM             [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! STRINGR         [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! BOOLR           [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! DYNAMIC         [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! VAR             [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! VARIABLE        [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! WHILE           [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! DO              [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! IF              [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! ELSE            [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! ENTERO          [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! DOUBLE          [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! STRING          [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! BOOL            [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! $end            [ reduce using rule 74 (valorInt -> ENTERO .) ]
  ! LDER            [ reduce using rule 74 (valorInt -> ENTERO .) ]


state 138

    (52) valor -> VARIABLE .
    (71) valorString -> VARIABLE .
    (75) valorInt -> VARIABLE .

  ! reduce/reduce conflict for SUMA resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 52 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 52 (valor -> VARIABLE .)
    SUMA            reduce using rule 52 (valor -> VARIABLE .)
    RESTA           reduce using rule 52 (valor -> VARIABLE .)
    MULTI           reduce using rule 52 (valor -> VARIABLE .)
    DIV             reduce using rule 52 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 52 (valor -> VARIABLE .)
    MOD             reduce using rule 52 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 52 (valor -> VARIABLE .)
    INT             reduce using rule 52 (valor -> VARIABLE .)
    DOUBLER         reduce using rule 52 (valor -> VARIABLE .)
    NUM             reduce using rule 52 (valor -> VARIABLE .)
    STRINGR         reduce using rule 52 (valor -> VARIABLE .)
    BOOLR           reduce using rule 52 (valor -> VARIABLE .)
    DYNAMIC         reduce using rule 52 (valor -> VARIABLE .)
    VAR             reduce using rule 52 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 52 (valor -> VARIABLE .)
    WHILE           reduce using rule 52 (valor -> VARIABLE .)
    DO              reduce using rule 52 (valor -> VARIABLE .)
    IF              reduce using rule 52 (valor -> VARIABLE .)
    ELSE            reduce using rule 52 (valor -> VARIABLE .)
    ENTERO          reduce using rule 52 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 52 (valor -> VARIABLE .)
    STRING          reduce using rule 52 (valor -> VARIABLE .)
    BOOL            reduce using rule 52 (valor -> VARIABLE .)
    $end            reduce using rule 52 (valor -> VARIABLE .)
    LDER            reduce using rule 52 (valor -> VARIABLE .)

  ! SUMA            [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! DIV             [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! MOD             [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! INT             [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! NUM             [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! VAR             [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! DO              [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! IF              [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! STRING          [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! $end            [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! LDER            [ reduce using rule 71 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 75 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 75 (valorInt -> VARIABLE .) ]


state 139

    (53) valor -> DOUBLE .
    (78) valorDouble -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for INT resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NUM resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VAR resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DO resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for IF resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRING resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for $end resolved using rule 53 (valor -> DOUBLE .)
  ! reduce/reduce conflict for LDER resolved using rule 53 (valor -> DOUBLE .)
    SUMA            reduce using rule 53 (valor -> DOUBLE .)
    RESTA           reduce using rule 53 (valor -> DOUBLE .)
    MULTI           reduce using rule 53 (valor -> DOUBLE .)
    DIV             reduce using rule 53 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 53 (valor -> DOUBLE .)
    MOD             reduce using rule 53 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 53 (valor -> DOUBLE .)
    INT             reduce using rule 53 (valor -> DOUBLE .)
    DOUBLER         reduce using rule 53 (valor -> DOUBLE .)
    NUM             reduce using rule 53 (valor -> DOUBLE .)
    STRINGR         reduce using rule 53 (valor -> DOUBLE .)
    BOOLR           reduce using rule 53 (valor -> DOUBLE .)
    DYNAMIC         reduce using rule 53 (valor -> DOUBLE .)
    VAR             reduce using rule 53 (valor -> DOUBLE .)
    VARIABLE        reduce using rule 53 (valor -> DOUBLE .)
    WHILE           reduce using rule 53 (valor -> DOUBLE .)
    DO              reduce using rule 53 (valor -> DOUBLE .)
    IF              reduce using rule 53 (valor -> DOUBLE .)
    ELSE            reduce using rule 53 (valor -> DOUBLE .)
    ENTERO          reduce using rule 53 (valor -> DOUBLE .)
    DOUBLE          reduce using rule 53 (valor -> DOUBLE .)
    STRING          reduce using rule 53 (valor -> DOUBLE .)
    BOOL            reduce using rule 53 (valor -> DOUBLE .)
    $end            reduce using rule 53 (valor -> DOUBLE .)
    LDER            reduce using rule 53 (valor -> DOUBLE .)

  ! SUMA            [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! INT             [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! DOUBLER         [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! NUM             [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! STRINGR         [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! BOOLR           [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! DYNAMIC         [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! VAR             [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! VARIABLE        [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! WHILE           [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! DO              [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! IF              [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! ELSE            [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! ENTERO          [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! DOUBLE          [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! STRING          [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! BOOL            [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! $end            [ reduce using rule 78 (valorDouble -> DOUBLE .) ]
  ! LDER            [ reduce using rule 78 (valorDouble -> DOUBLE .) ]


state 140

    (54) valor -> STRING .
    (70) valorString -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for RESTA resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for MULTI resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for DIV resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for MOD resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for INT resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for NUM resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for STRINGR resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for BOOLR resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for VAR resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for WHILE resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for DO resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for IF resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for ELSE resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for ENTERO resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for STRING resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for BOOL resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for $end resolved using rule 54 (valor -> STRING .)
  ! reduce/reduce conflict for LDER resolved using rule 54 (valor -> STRING .)
    SUMA            reduce using rule 54 (valor -> STRING .)
    RESTA           reduce using rule 54 (valor -> STRING .)
    MULTI           reduce using rule 54 (valor -> STRING .)
    DIV             reduce using rule 54 (valor -> STRING .)
    DIVENTERO       reduce using rule 54 (valor -> STRING .)
    MOD             reduce using rule 54 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 54 (valor -> STRING .)
    INT             reduce using rule 54 (valor -> STRING .)
    DOUBLER         reduce using rule 54 (valor -> STRING .)
    NUM             reduce using rule 54 (valor -> STRING .)
    STRINGR         reduce using rule 54 (valor -> STRING .)
    BOOLR           reduce using rule 54 (valor -> STRING .)
    DYNAMIC         reduce using rule 54 (valor -> STRING .)
    VAR             reduce using rule 54 (valor -> STRING .)
    VARIABLE        reduce using rule 54 (valor -> STRING .)
    WHILE           reduce using rule 54 (valor -> STRING .)
    DO              reduce using rule 54 (valor -> STRING .)
    IF              reduce using rule 54 (valor -> STRING .)
    ELSE            reduce using rule 54 (valor -> STRING .)
    ENTERO          reduce using rule 54 (valor -> STRING .)
    DOUBLE          reduce using rule 54 (valor -> STRING .)
    STRING          reduce using rule 54 (valor -> STRING .)
    BOOL            reduce using rule 54 (valor -> STRING .)
    $end            reduce using rule 54 (valor -> STRING .)
    LDER            reduce using rule 54 (valor -> STRING .)

  ! SUMA            [ reduce using rule 70 (valorString -> STRING .) ]
  ! RESTA           [ reduce using rule 70 (valorString -> STRING .) ]
  ! MULTI           [ reduce using rule 70 (valorString -> STRING .) ]
  ! DIV             [ reduce using rule 70 (valorString -> STRING .) ]
  ! DIVENTERO       [ reduce using rule 70 (valorString -> STRING .) ]
  ! MOD             [ reduce using rule 70 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 70 (valorString -> STRING .) ]
  ! INT             [ reduce using rule 70 (valorString -> STRING .) ]
  ! DOUBLER         [ reduce using rule 70 (valorString -> STRING .) ]
  ! NUM             [ reduce using rule 70 (valorString -> STRING .) ]
  ! STRINGR         [ reduce using rule 70 (valorString -> STRING .) ]
  ! BOOLR           [ reduce using rule 70 (valorString -> STRING .) ]
  ! DYNAMIC         [ reduce using rule 70 (valorString -> STRING .) ]
  ! VAR             [ reduce using rule 70 (valorString -> STRING .) ]
  ! VARIABLE        [ reduce using rule 70 (valorString -> STRING .) ]
  ! WHILE           [ reduce using rule 70 (valorString -> STRING .) ]
  ! DO              [ reduce using rule 70 (valorString -> STRING .) ]
  ! IF              [ reduce using rule 70 (valorString -> STRING .) ]
  ! ELSE            [ reduce using rule 70 (valorString -> STRING .) ]
  ! ENTERO          [ reduce using rule 70 (valorString -> STRING .) ]
  ! DOUBLE          [ reduce using rule 70 (valorString -> STRING .) ]
  ! STRING          [ reduce using rule 70 (valorString -> STRING .) ]
  ! BOOL            [ reduce using rule 70 (valorString -> STRING .) ]
  ! $end            [ reduce using rule 70 (valorString -> STRING .) ]
  ! LDER            [ reduce using rule 70 (valorString -> STRING .) ]


state 141

    (40) asignacion -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 40 (asignacion -> INT VARIABLE IGUAL expresionInt .)


state 142

    (41) asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 41 (asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 143

    (42) asignacion -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 42 (asignacion -> NUM VARIABLE IGUAL expresionDouble .)


state 144

    (43) asignacion -> STRINGR VARIABLE IGUAL expresionString .

    PUNTOYCOMA      reduce using rule 43 (asignacion -> STRINGR VARIABLE IGUAL expresionString .)


state 145

    (44) asignacion -> BOOLR VARIABLE IGUAL expresionBool .

    PUNTOYCOMA      reduce using rule 44 (asignacion -> BOOLR VARIABLE IGUAL expresionBool .)


state 146

    (45) asignacion -> DYNAMIC VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 45 (asignacion -> DYNAMIC VARIABLE IGUAL expresion .)


state 147

    (46) asignacion -> VAR VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL expresion .)


state 148

    (60) sentenciaWhile -> WHILE PIZQ expresionBool PDER . LIZQ algoritmo LDER
    (61) sentenciaWhile -> WHILE PIZQ expresionBool PDER . algoritmo
    (27) algoritmo -> . asignacion PUNTOYCOMA
    (28) algoritmo -> . expresionInt PUNTOYCOMA
    (29) algoritmo -> . expresionDouble PUNTOYCOMA
    (30) algoritmo -> . expresionString PUNTOYCOMA
    (31) algoritmo -> . expresionBool PUNTOYCOMA
    (32) algoritmo -> . expresion
    (33) algoritmo -> . sentenciaWhile
    (34) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (35) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaIf PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf
    (38) algoritmo -> . sentenciaElse PUNTOYCOMA
    (39) algoritmo -> . sentenciaElse
    (40) asignacion -> . INT VARIABLE IGUAL expresionInt
    (41) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (42) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (43) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (44) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (45) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (46) asignacion -> . VAR VARIABLE IGUAL expresion
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (60) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (62) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (47) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (48) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (49) sentenciaElse -> . ELSE algoritmo
    (50) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING

    LIZQ            shift and go to state 152
    INT             shift and go to state 13
    DOUBLER         shift and go to state 15
    NUM             shift and go to state 16
    STRINGR         shift and go to state 17
    BOOLR           shift and go to state 18
    DYNAMIC         shift and go to state 19
    VAR             shift and go to state 20
    VARIABLE        shift and go to state 14
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    IF              shift and go to state 27
    ELSE            shift and go to state 28
    ENTERO          shift and go to state 30
    DOUBLE          shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

    expresionBool                  shift and go to state 80
    algoritmo                      shift and go to state 153
    asignacion                     shift and go to state 76
    expresionInt                   shift and go to state 77
    expresionDouble                shift and go to state 78
    expresionString                shift and go to state 79
    expresion                      shift and go to state 12
    sentenciaWhile                 shift and go to state 81
    sentenciaDoWhile               shift and go to state 82
    sentenciaIf                    shift and go to state 83
    sentenciaElse                  shift and go to state 84
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 22
    valorString                    shift and go to state 23
    valorBool                      shift and go to state 24
    valor                          shift and go to state 29

state 149

    (62) sentenciaDoWhile -> DO LIZQ algoritmo LDER . WHILE PIZQ expresionBool PDER

    WHILE           shift and go to state 154


state 150

    (47) sentenciaIf -> IF PIZQ expresionBool PDER . algoritmo
    (48) sentenciaIf -> IF PIZQ expresionBool PDER . LIZQ algoritmo LDER
    (27) algoritmo -> . asignacion PUNTOYCOMA
    (28) algoritmo -> . expresionInt PUNTOYCOMA
    (29) algoritmo -> . expresionDouble PUNTOYCOMA
    (30) algoritmo -> . expresionString PUNTOYCOMA
    (31) algoritmo -> . expresionBool PUNTOYCOMA
    (32) algoritmo -> . expresion
    (33) algoritmo -> . sentenciaWhile
    (34) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (35) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaIf PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf
    (38) algoritmo -> . sentenciaElse PUNTOYCOMA
    (39) algoritmo -> . sentenciaElse
    (40) asignacion -> . INT VARIABLE IGUAL expresionInt
    (41) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (42) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (43) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (44) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (45) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (46) asignacion -> . VAR VARIABLE IGUAL expresion
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (60) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (62) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (47) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (48) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (49) sentenciaElse -> . ELSE algoritmo
    (50) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING

    LIZQ            shift and go to state 156
    INT             shift and go to state 13
    DOUBLER         shift and go to state 15
    NUM             shift and go to state 16
    STRINGR         shift and go to state 17
    BOOLR           shift and go to state 18
    DYNAMIC         shift and go to state 19
    VAR             shift and go to state 20
    VARIABLE        shift and go to state 14
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    IF              shift and go to state 27
    ELSE            shift and go to state 28
    ENTERO          shift and go to state 30
    DOUBLE          shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

    expresionBool                  shift and go to state 80
    algoritmo                      shift and go to state 155
    asignacion                     shift and go to state 76
    expresionInt                   shift and go to state 77
    expresionDouble                shift and go to state 78
    expresionString                shift and go to state 79
    expresion                      shift and go to state 12
    sentenciaWhile                 shift and go to state 81
    sentenciaDoWhile               shift and go to state 82
    sentenciaIf                    shift and go to state 83
    sentenciaElse                  shift and go to state 84
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 22
    valorString                    shift and go to state 23
    valorBool                      shift and go to state 24
    valor                          shift and go to state 29

state 151

    (50) sentenciaElse -> ELSE LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 50 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    INT             reduce using rule 50 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 50 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    NUM             reduce using rule 50 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 50 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 50 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 50 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    VAR             reduce using rule 50 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 50 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    WHILE           reduce using rule 50 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DO              reduce using rule 50 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    IF              reduce using rule 50 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    ELSE            reduce using rule 50 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 50 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 50 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    STRING          reduce using rule 50 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    BOOL            reduce using rule 50 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    $end            reduce using rule 50 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    LDER            reduce using rule 50 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)


state 152

    (60) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ . algoritmo LDER
    (27) algoritmo -> . asignacion PUNTOYCOMA
    (28) algoritmo -> . expresionInt PUNTOYCOMA
    (29) algoritmo -> . expresionDouble PUNTOYCOMA
    (30) algoritmo -> . expresionString PUNTOYCOMA
    (31) algoritmo -> . expresionBool PUNTOYCOMA
    (32) algoritmo -> . expresion
    (33) algoritmo -> . sentenciaWhile
    (34) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (35) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaIf PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf
    (38) algoritmo -> . sentenciaElse PUNTOYCOMA
    (39) algoritmo -> . sentenciaElse
    (40) asignacion -> . INT VARIABLE IGUAL expresionInt
    (41) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (42) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (43) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (44) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (45) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (46) asignacion -> . VAR VARIABLE IGUAL expresion
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (60) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (62) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (47) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (48) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (49) sentenciaElse -> . ELSE algoritmo
    (50) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING

    INT             shift and go to state 13
    DOUBLER         shift and go to state 15
    NUM             shift and go to state 16
    STRINGR         shift and go to state 17
    BOOLR           shift and go to state 18
    DYNAMIC         shift and go to state 19
    VAR             shift and go to state 20
    VARIABLE        shift and go to state 14
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    IF              shift and go to state 27
    ELSE            shift and go to state 28
    ENTERO          shift and go to state 30
    DOUBLE          shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

    expresionBool                  shift and go to state 80
    algoritmo                      shift and go to state 157
    asignacion                     shift and go to state 76
    expresionInt                   shift and go to state 77
    expresionDouble                shift and go to state 78
    expresionString                shift and go to state 79
    expresion                      shift and go to state 12
    sentenciaWhile                 shift and go to state 81
    sentenciaDoWhile               shift and go to state 82
    sentenciaIf                    shift and go to state 83
    sentenciaElse                  shift and go to state 84
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 22
    valorString                    shift and go to state 23
    valorBool                      shift and go to state 24
    valor                          shift and go to state 29

state 153

    (61) sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .

    PUNTOYCOMA      reduce using rule 61 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    INT             reduce using rule 61 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DOUBLER         reduce using rule 61 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    NUM             reduce using rule 61 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    STRINGR         reduce using rule 61 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    BOOLR           reduce using rule 61 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DYNAMIC         reduce using rule 61 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    VAR             reduce using rule 61 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    VARIABLE        reduce using rule 61 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    WHILE           reduce using rule 61 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DO              reduce using rule 61 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    IF              reduce using rule 61 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    ELSE            reduce using rule 61 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    ENTERO          reduce using rule 61 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DOUBLE          reduce using rule 61 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    STRING          reduce using rule 61 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    BOOL            reduce using rule 61 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    $end            reduce using rule 61 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    LDER            reduce using rule 61 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)


state 154

    (62) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE . PIZQ expresionBool PDER

    PIZQ            shift and go to state 158


state 155

    (47) sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .

    PUNTOYCOMA      reduce using rule 47 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    INT             reduce using rule 47 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DOUBLER         reduce using rule 47 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    NUM             reduce using rule 47 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    STRINGR         reduce using rule 47 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    BOOLR           reduce using rule 47 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DYNAMIC         reduce using rule 47 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    VAR             reduce using rule 47 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    VARIABLE        reduce using rule 47 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    WHILE           reduce using rule 47 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DO              reduce using rule 47 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    IF              reduce using rule 47 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    ELSE            reduce using rule 47 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    ENTERO          reduce using rule 47 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DOUBLE          reduce using rule 47 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    STRING          reduce using rule 47 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    BOOL            reduce using rule 47 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    $end            reduce using rule 47 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    LDER            reduce using rule 47 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)


state 156

    (48) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ . algoritmo LDER
    (27) algoritmo -> . asignacion PUNTOYCOMA
    (28) algoritmo -> . expresionInt PUNTOYCOMA
    (29) algoritmo -> . expresionDouble PUNTOYCOMA
    (30) algoritmo -> . expresionString PUNTOYCOMA
    (31) algoritmo -> . expresionBool PUNTOYCOMA
    (32) algoritmo -> . expresion
    (33) algoritmo -> . sentenciaWhile
    (34) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (35) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (36) algoritmo -> . sentenciaIf PUNTOYCOMA
    (37) algoritmo -> . sentenciaIf
    (38) algoritmo -> . sentenciaElse PUNTOYCOMA
    (39) algoritmo -> . sentenciaElse
    (40) asignacion -> . INT VARIABLE IGUAL expresionInt
    (41) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (42) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (43) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (44) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (45) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (46) asignacion -> . VAR VARIABLE IGUAL expresion
    (76) expresionInt -> . valorInt operadorMat expresionInt
    (77) expresionInt -> . valorInt
    (80) expresionDouble -> . valorDouble operadorMat expresionDouble
    (81) expresionDouble -> . valorDouble
    (72) expresionString -> . valorString operadorMat expresionString
    (73) expresionString -> . valorString
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (55) expresion -> . valor operadorMat expresion
    (56) expresion -> . valor
    (57) expresion -> . expresionString
    (58) expresion -> . expresionInt
    (59) expresion -> . expresionDouble
    (60) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (61) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (62) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (47) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (48) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (49) sentenciaElse -> . ELSE algoritmo
    (50) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (70) valorString -> . STRING
    (71) valorString -> . VARIABLE
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (51) valor -> . ENTERO
    (52) valor -> . VARIABLE
    (53) valor -> . DOUBLE
    (54) valor -> . STRING

    INT             shift and go to state 13
    DOUBLER         shift and go to state 15
    NUM             shift and go to state 16
    STRINGR         shift and go to state 17
    BOOLR           shift and go to state 18
    DYNAMIC         shift and go to state 19
    VAR             shift and go to state 20
    VARIABLE        shift and go to state 14
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    IF              shift and go to state 27
    ELSE            shift and go to state 28
    ENTERO          shift and go to state 30
    DOUBLE          shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

    expresionBool                  shift and go to state 80
    algoritmo                      shift and go to state 159
    asignacion                     shift and go to state 76
    expresionInt                   shift and go to state 77
    expresionDouble                shift and go to state 78
    expresionString                shift and go to state 79
    expresion                      shift and go to state 12
    sentenciaWhile                 shift and go to state 81
    sentenciaDoWhile               shift and go to state 82
    sentenciaIf                    shift and go to state 83
    sentenciaElse                  shift and go to state 84
    valorInt                       shift and go to state 21
    valorDouble                    shift and go to state 22
    valorString                    shift and go to state 23
    valorBool                      shift and go to state 24
    valor                          shift and go to state 29

state 157

    (60) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo . LDER

    LDER            shift and go to state 160


state 158

    (62) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ . expresionBool PDER
    (65) expresionBool -> . valorDouble comparadorMat expresionDouble
    (66) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (67) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (68) expresionBool -> . valorDouble comparadorMat VARIABLE
    (69) expresionBool -> . valorBool
    (78) valorDouble -> . DOUBLE
    (79) valorDouble -> . valorInt
    (63) valorBool -> . BOOL
    (64) valorBool -> . VARIABLE
    (74) valorInt -> . ENTERO
    (75) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 120
    DOUBLE          shift and go to state 100
    BOOL            shift and go to state 33
    ENTERO          shift and go to state 102

    expresionBool                  shift and go to state 161
    valorDouble                    shift and go to state 119
    valorBool                      shift and go to state 24
    valorInt                       shift and go to state 101

state 159

    (48) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo . LDER

    LDER            shift and go to state 162


state 160

    (60) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 60 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    INT             reduce using rule 60 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 60 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NUM             reduce using rule 60 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 60 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 60 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 60 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VAR             reduce using rule 60 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 60 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    WHILE           reduce using rule 60 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DO              reduce using rule 60 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    IF              reduce using rule 60 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSE            reduce using rule 60 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 60 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 60 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRING          reduce using rule 60 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOL            reduce using rule 60 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    $end            reduce using rule 60 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    LDER            reduce using rule 60 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)


state 161

    (62) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool . PDER

    PDER            shift and go to state 163


state 162

    (48) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 48 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    INT             reduce using rule 48 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 48 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NUM             reduce using rule 48 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 48 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 48 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 48 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VAR             reduce using rule 48 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 48 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    WHILE           reduce using rule 48 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DO              reduce using rule 48 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    IF              reduce using rule 48 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSE            reduce using rule 48 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 48 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 48 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRING          reduce using rule 48 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOL            reduce using rule 48 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    $end            reduce using rule 48 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    LDER            reduce using rule 48 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)


state 163

    (62) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 62 (sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 4 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 5 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 6 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 8 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 10 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 11 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 14 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 14 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 14 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 14 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 14 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 14 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 21 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 21 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 21 resolved as shift
WARNING: shift/reduce conflict for DIV in state 21 resolved as shift
WARNING: shift/reduce conflict for DIVENTERO in state 21 resolved as shift
WARNING: shift/reduce conflict for MOD in state 21 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 77 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 78 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 79 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 81 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 83 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 84 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 120 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 120 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 120 resolved as shift
WARNING: reduce/reduce conflict in state 14 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 14
WARNING: reduce/reduce conflict in state 14 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 14
WARNING: reduce/reduce conflict in state 14 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 14
WARNING: reduce/reduce conflict in state 14 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 14
WARNING: reduce/reduce conflict in state 21 resolved using rule (expresionInt -> valorInt)
WARNING: rejected rule (valorDouble -> valorInt) in state 21
WARNING: reduce/reduce conflict in state 30 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 30
WARNING: reduce/reduce conflict in state 31 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 31
WARNING: reduce/reduce conflict in state 32 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 32
WARNING: reduce/reduce conflict in state 97 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 97
WARNING: reduce/reduce conflict in state 114 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 114
WARNING: reduce/reduce conflict in state 137 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 137
WARNING: reduce/reduce conflict in state 138 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 138
WARNING: reduce/reduce conflict in state 138 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 138
WARNING: reduce/reduce conflict in state 139 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 139
WARNING: reduce/reduce conflict in state 140 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 140
