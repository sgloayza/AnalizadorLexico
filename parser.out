Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    BREAK
    CASE
    CDER
    CIZQ
    COMA
    COMILLAD
    COMILLAS
    DOSPUNTOS
    DRESTA
    DSUMA
    FLECHA
    FOR
    FUNCIONARR
    FUNCIONRANGE
    FUNCIONSTRING
    FUNCIONTAKE
    RETURN
    SWITCH

Grammar

Rule 0     S' -> final
Rule 1     final -> algoritmo PUNTOYCOMA
Rule 2     final -> algoritmo PUNTOYCOMA final
Rule 3     final -> asignacion PUNTOYCOMA
Rule 4     final -> asignacion PUNTOYCOMA final
Rule 5     final -> expresionInt PUNTOYCOMA
Rule 6     final -> expresionInt PUNTOYCOMA final
Rule 7     final -> expresionDouble PUNTOYCOMA
Rule 8     final -> expresionDouble PUNTOYCOMA final
Rule 9     final -> expresionString PUNTOYCOMA
Rule 10    final -> expresionString PUNTOYCOMA final
Rule 11    final -> expresionBool PUNTOYCOMA
Rule 12    final -> expresionBool PUNTOYCOMA final
Rule 13    final -> sentenciaWhile
Rule 14    final -> sentenciaWhile final
Rule 15    final -> sentenciaWhile PUNTOYCOMA
Rule 16    final -> sentenciaWhile PUNTOYCOMA final
Rule 17    final -> sentenciaDoWhile PUNTOYCOMA
Rule 18    final -> sentenciaDoWhile PUNTOYCOMA final
Rule 19    final -> sentenciaIf PUNTOYCOMA
Rule 20    final -> sentenciaIf PUNTOYCOMA final
Rule 21    final -> sentenciaIf
Rule 22    final -> sentenciaIf final
Rule 23    final -> sentenciaElse PUNTOYCOMA
Rule 24    final -> sentenciaElse PUNTOYCOMA final
Rule 25    final -> sentenciaElse
Rule 26    final -> sentenciaElse final
Rule 27    final -> imprimir PUNTOYCOMA
Rule 28    final -> imprimir PUNTOYCOMA final
Rule 29    final -> funcionStdin PUNTOYCOMA
Rule 30    final -> funcionStdin PUNTOYCOMA final
Rule 31    final -> funcionStdout PUNTOYCOMA
Rule 32    final -> funcionStdout PUNTOYCOMA final
Rule 33    final -> negacionBool PUNTOYCOMA
Rule 34    final -> negacionBool PUNTOYCOMA final
Rule 35    final -> comparacionBool PUNTOYCOMA final
Rule 36    final -> comparacionBool PUNTOYCOMA
Rule 37    final -> sentenciaElseIf PUNTOYCOMA final
Rule 38    final -> sentenciaElseIf final
Rule 39    final -> sentenciaElseIf PUNTOYCOMA
Rule 40    final -> sentenciaElseIf
Rule 41    algoritmo -> asignacion PUNTOYCOMA
Rule 42    algoritmo -> expresionInt PUNTOYCOMA
Rule 43    algoritmo -> expresionDouble PUNTOYCOMA
Rule 44    algoritmo -> expresionString PUNTOYCOMA
Rule 45    algoritmo -> expresionBool PUNTOYCOMA
Rule 46    algoritmo -> expresion
Rule 47    algoritmo -> sentenciaWhile
Rule 48    algoritmo -> sentenciaWhile PUNTOYCOMA
Rule 49    algoritmo -> sentenciaDoWhile PUNTOYCOMA
Rule 50    algoritmo -> sentenciaIf PUNTOYCOMA
Rule 51    algoritmo -> sentenciaIf
Rule 52    algoritmo -> sentenciaElse PUNTOYCOMA
Rule 53    algoritmo -> sentenciaElse
Rule 54    algoritmo -> imprimir PUNTOYCOMA
Rule 55    algoritmo -> funcionStdin PUNTOYCOMA
Rule 56    algoritmo -> funcionStdout PUNTOYCOMA
Rule 57    algoritmo -> negacionBool PUNTOYCOMA
Rule 58    algoritmo -> comparacionBool PUNTOYCOMA
Rule 59    algoritmo -> sentenciaElseIf
Rule 60    algoritmo -> sentenciaElseIf PUNTOYCOMA
Rule 61    asignacion -> INT VARIABLE IGUAL expresionInt
Rule 62    asignacion -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 63    asignacion -> NUM VARIABLE IGUAL expresionDouble
Rule 64    asignacion -> STRINGR VARIABLE IGUAL expresionString
Rule 65    asignacion -> BOOLR VARIABLE IGUAL expresionBool
Rule 66    asignacion -> DYNAMIC VARIABLE IGUAL expresion
Rule 67    asignacion -> VAR VARIABLE IGUAL expresion
Rule 68    asignacion -> asignacionSimple
Rule 69    asignacionSimple -> VARIABLE IGUAL expresion
Rule 70    imprimir -> PRINT PIZQ expresion PDER
Rule 71    imprimir -> PRINT PIZQ asignacionSimple PDER
Rule 72    funcionStdin -> FUNCIONSTDIN
Rule 73    funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER
Rule 74    funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER
Rule 75    sentenciaIf -> IF PIZQ expresionBool PDER algoritmo
Rule 76    sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER
Rule 77    sentenciaElse -> ELSE algoritmo
Rule 78    sentenciaElse -> ELSE LIZQ algoritmo LDER
Rule 79    sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo
Rule 80    sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
Rule 81    valor -> ENTERO
Rule 82    valor -> VARIABLE
Rule 83    valor -> DOUBLE
Rule 84    valor -> STRING
Rule 85    expresion -> valor operadorMat expresion
Rule 86    expresion -> valor
Rule 87    expresion -> expresionString
Rule 88    expresion -> expresionInt
Rule 89    expresion -> expresionDouble
Rule 90    expresion -> expresionBool
Rule 91    sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
Rule 92    sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo
Rule 93    sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
Rule 94    valorBool -> BOOL
Rule 95    valorBool -> VARIABLE
Rule 96    expresionBool -> valorDouble comparadorMat expresionDouble
Rule 97    expresionBool -> VARIABLE comparadorMat expresionDouble
Rule 98    expresionBool -> VARIABLE comparadorMat VARIABLE
Rule 99    expresionBool -> valorDouble comparadorMat VARIABLE
Rule 100   expresionBool -> valorBool
Rule 101   expresionBool -> negacionBool
Rule 102   expresionBool -> comparacionBool
Rule 103   expresionBool -> valor IS objeto
Rule 104   expresionBool -> valor ISNEGADO objeto
Rule 105   negacionBool -> NOT PIZQ expresionBool PDER
Rule 106   comparacionBool -> expresionBool operadorLogico expresionBool
Rule 107   comparacionBool -> expresionBool operadorLogico comparacionBool
Rule 108   valorString -> STRING
Rule 109   valorString -> VARIABLE
Rule 110   expresionString -> valorString operadorMat expresionString
Rule 111   expresionString -> valorString
Rule 112   valorInt -> ENTERO
Rule 113   valorInt -> VARIABLE
Rule 114   expresionInt -> valorInt operadorMat expresionInt
Rule 115   expresionInt -> valorInt
Rule 116   valorDouble -> DOUBLE
Rule 117   valorDouble -> valorInt
Rule 118   expresionDouble -> valorDouble operadorMat expresionDouble
Rule 119   expresionDouble -> valorDouble
Rule 120   operadorMat -> SUMA
Rule 121   operadorMat -> RESTA
Rule 122   operadorMat -> MULTI
Rule 123   operadorMat -> DIV
Rule 124   operadorMat -> DIVENTERO
Rule 125   operadorMat -> MOD
Rule 126   comparadorMat -> DIGUAL
Rule 127   comparadorMat -> NOIGUAL
Rule 128   comparadorMat -> MAYOR
Rule 129   comparadorMat -> MENOR
Rule 130   comparadorMat -> MAYIGUAL
Rule 131   comparadorMat -> MENIGUAL
Rule 132   operadorLogico -> AND
Rule 133   operadorLogico -> OR
Rule 134   objeto -> STRINGR
Rule 135   objeto -> INT
Rule 136   objeto -> DOUBLER
Rule 137   objeto -> NUM
Rule 138   objeto -> VAR
Rule 139   objeto -> DYNAMIC
Rule 140   objeto -> LIST
Rule 141   objeto -> BOOL
Rule 142   objeto -> MAP
Rule 143   objeto -> SET

Terminals, with rules where they appear

AND                  : 132
AS                   : 
BOOL                 : 94 141
BOOLR                : 65
BREAK                : 
CASE                 : 
CDER                 : 
CIZQ                 : 
COMA                 : 
COMILLAD             : 
COMILLAS             : 
DIGUAL               : 126
DIV                  : 123
DIVENTERO            : 124
DO                   : 93
DOSPUNTOS            : 
DOUBLE               : 83 116
DOUBLER              : 62 136
DRESTA               : 
DSUMA                : 
DYNAMIC              : 66 139
ELSE                 : 77 78
ELSEIF               : 79 80
ENTERO               : 81 112
FLECHA               : 
FOR                  : 
FUNCIONARR           : 
FUNCIONRANGE         : 
FUNCIONSTDIN         : 72
FUNCIONSTDOUT        : 73 74
FUNCIONSTRING        : 
FUNCIONTAKE          : 
IF                   : 75 76
IGUAL                : 61 62 63 64 65 66 67 69
INT                  : 61 135
IS                   : 103
ISNEGADO             : 104
LDER                 : 76 78 80 91 93
LIST                 : 140
LIZQ                 : 76 78 80 91 93
MAP                  : 142
MAYIGUAL             : 130
MAYOR                : 128
MENIGUAL             : 131
MENOR                : 129
MOD                  : 125
MULTI                : 122
NOIGUAL              : 127
NOT                  : 105
NUM                  : 63 137
OR                   : 133
PDER                 : 70 71 73 74 75 76 79 80 91 92 93 105
PIZQ                 : 70 71 73 74 75 76 79 80 91 92 93 105
PRINT                : 70 71
PUNTOYCOMA           : 1 2 3 4 5 6 7 8 9 10 11 12 15 16 17 18 19 20 23 24 27 28 29 30 31 32 33 34 35 36 37 39 41 42 43 44 45 48 49 50 52 54 55 56 57 58 60
RESTA                : 121
RETURN               : 
SET                  : 143
STRING               : 84 108
STRINGR              : 64 134
SUMA                 : 120
SWITCH               : 
VAR                  : 67 138
VARIABLE             : 61 62 63 64 65 66 67 69 82 95 97 98 98 99 109 113
WHILE                : 91 92 93
error                : 

Nonterminals, with rules where they appear

algoritmo            : 1 2 75 76 77 78 79 80 91 92 93
asignacion           : 3 4 41
asignacionSimple     : 68 71 74
comparacionBool      : 35 36 58 102 107
comparadorMat        : 96 97 98 99
expresion            : 46 66 67 69 70 73 85
expresionBool        : 11 12 45 65 75 76 79 80 90 91 92 93 105 106 106 107
expresionDouble      : 7 8 43 62 63 89 96 97 118
expresionInt         : 5 6 42 61 88 114
expresionString      : 9 10 44 64 87 110
final                : 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 35 37 38 0
funcionStdin         : 29 30 55
funcionStdout        : 31 32 56
imprimir             : 27 28 54
negacionBool         : 33 34 57 101
objeto               : 103 104
operadorLogico       : 106 107
operadorMat          : 85 110 114 118
sentenciaDoWhile     : 17 18 49
sentenciaElse        : 23 24 25 26 52 53
sentenciaElseIf      : 37 38 39 40 59 60
sentenciaIf          : 19 20 21 22 50 51
sentenciaWhile       : 13 14 15 16 47 48
valor                : 85 86 103 104
valorBool            : 100
valorDouble          : 96 99 118 119
valorInt             : 114 115 117
valorString          : 110 111

Parsing method: LALR

state 0

    (0) S' -> . final
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    final                          shift and go to state 1
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    expresion                      shift and go to state 18
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 1

    (0) S' -> final .



state 2

    (1) final -> algoritmo . PUNTOYCOMA
    (2) final -> algoritmo . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 46


state 3

    (3) final -> asignacion . PUNTOYCOMA
    (4) final -> asignacion . PUNTOYCOMA final
    (41) algoritmo -> asignacion . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 47


state 4

    (5) final -> expresionInt . PUNTOYCOMA
    (6) final -> expresionInt . PUNTOYCOMA final
    (42) algoritmo -> expresionInt . PUNTOYCOMA
    (88) expresion -> expresionInt .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 48

  ! PUNTOYCOMA      [ reduce using rule 88 (expresion -> expresionInt .) ]


state 5

    (7) final -> expresionDouble . PUNTOYCOMA
    (8) final -> expresionDouble . PUNTOYCOMA final
    (43) algoritmo -> expresionDouble . PUNTOYCOMA
    (89) expresion -> expresionDouble .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 49

  ! PUNTOYCOMA      [ reduce using rule 89 (expresion -> expresionDouble .) ]


state 6

    (9) final -> expresionString . PUNTOYCOMA
    (10) final -> expresionString . PUNTOYCOMA final
    (44) algoritmo -> expresionString . PUNTOYCOMA
    (87) expresion -> expresionString .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 50

  ! PUNTOYCOMA      [ reduce using rule 87 (expresion -> expresionString .) ]


state 7

    (11) final -> expresionBool . PUNTOYCOMA
    (12) final -> expresionBool . PUNTOYCOMA final
    (45) algoritmo -> expresionBool . PUNTOYCOMA
    (106) comparacionBool -> expresionBool . operadorLogico expresionBool
    (107) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (90) expresion -> expresionBool .
    (132) operadorLogico -> . AND
    (133) operadorLogico -> . OR

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 51
    AND             shift and go to state 53
    OR              shift and go to state 54

  ! PUNTOYCOMA      [ reduce using rule 90 (expresion -> expresionBool .) ]

    operadorLogico                 shift and go to state 52

state 8

    (13) final -> sentenciaWhile .
    (14) final -> sentenciaWhile . final
    (15) final -> sentenciaWhile . PUNTOYCOMA
    (16) final -> sentenciaWhile . PUNTOYCOMA final
    (47) algoritmo -> sentenciaWhile .
    (48) algoritmo -> sentenciaWhile . PUNTOYCOMA
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    $end            reduce using rule 13 (final -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 56
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

  ! PUNTOYCOMA      [ reduce using rule 47 (algoritmo -> sentenciaWhile .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 55
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    expresion                      shift and go to state 18
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 9

    (17) final -> sentenciaDoWhile . PUNTOYCOMA
    (18) final -> sentenciaDoWhile . PUNTOYCOMA final
    (49) algoritmo -> sentenciaDoWhile . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 57


state 10

    (19) final -> sentenciaIf . PUNTOYCOMA
    (20) final -> sentenciaIf . PUNTOYCOMA final
    (21) final -> sentenciaIf .
    (22) final -> sentenciaIf . final
    (50) algoritmo -> sentenciaIf . PUNTOYCOMA
    (51) algoritmo -> sentenciaIf .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 58
    $end            reduce using rule 21 (final -> sentenciaIf .)
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

  ! PUNTOYCOMA      [ reduce using rule 51 (algoritmo -> sentenciaIf .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 59
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    expresion                      shift and go to state 18
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 11

    (23) final -> sentenciaElse . PUNTOYCOMA
    (24) final -> sentenciaElse . PUNTOYCOMA final
    (25) final -> sentenciaElse .
    (26) final -> sentenciaElse . final
    (52) algoritmo -> sentenciaElse . PUNTOYCOMA
    (53) algoritmo -> sentenciaElse .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 60
    $end            reduce using rule 25 (final -> sentenciaElse .)
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

  ! PUNTOYCOMA      [ reduce using rule 53 (algoritmo -> sentenciaElse .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 61
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    expresion                      shift and go to state 18
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 12

    (27) final -> imprimir . PUNTOYCOMA
    (28) final -> imprimir . PUNTOYCOMA final
    (54) algoritmo -> imprimir . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 62


state 13

    (29) final -> funcionStdin . PUNTOYCOMA
    (30) final -> funcionStdin . PUNTOYCOMA final
    (55) algoritmo -> funcionStdin . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 63


state 14

    (31) final -> funcionStdout . PUNTOYCOMA
    (32) final -> funcionStdout . PUNTOYCOMA final
    (56) algoritmo -> funcionStdout . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 64


state 15

    (33) final -> negacionBool . PUNTOYCOMA
    (34) final -> negacionBool . PUNTOYCOMA final
    (57) algoritmo -> negacionBool . PUNTOYCOMA
    (101) expresionBool -> negacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 65
    AND             reduce using rule 101 (expresionBool -> negacionBool .)
    OR              reduce using rule 101 (expresionBool -> negacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 101 (expresionBool -> negacionBool .) ]


state 16

    (35) final -> comparacionBool . PUNTOYCOMA final
    (36) final -> comparacionBool . PUNTOYCOMA
    (58) algoritmo -> comparacionBool . PUNTOYCOMA
    (102) expresionBool -> comparacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 66
    AND             reduce using rule 102 (expresionBool -> comparacionBool .)
    OR              reduce using rule 102 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 102 (expresionBool -> comparacionBool .) ]


state 17

    (37) final -> sentenciaElseIf . PUNTOYCOMA final
    (38) final -> sentenciaElseIf . final
    (39) final -> sentenciaElseIf . PUNTOYCOMA
    (40) final -> sentenciaElseIf .
    (59) algoritmo -> sentenciaElseIf .
    (60) algoritmo -> sentenciaElseIf . PUNTOYCOMA
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 67
    $end            reduce using rule 40 (final -> sentenciaElseIf .)
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

  ! PUNTOYCOMA      [ reduce using rule 59 (algoritmo -> sentenciaElseIf .) ]

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 68
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    expresion                      shift and go to state 18
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 18

    (46) algoritmo -> expresion .

    PUNTOYCOMA      reduce using rule 46 (algoritmo -> expresion .)
    INT             reduce using rule 46 (algoritmo -> expresion .)
    DOUBLER         reduce using rule 46 (algoritmo -> expresion .)
    NUM             reduce using rule 46 (algoritmo -> expresion .)
    STRINGR         reduce using rule 46 (algoritmo -> expresion .)
    BOOLR           reduce using rule 46 (algoritmo -> expresion .)
    DYNAMIC         reduce using rule 46 (algoritmo -> expresion .)
    VAR             reduce using rule 46 (algoritmo -> expresion .)
    VARIABLE        reduce using rule 46 (algoritmo -> expresion .)
    WHILE           reduce using rule 46 (algoritmo -> expresion .)
    DO              reduce using rule 46 (algoritmo -> expresion .)
    IF              reduce using rule 46 (algoritmo -> expresion .)
    ELSE            reduce using rule 46 (algoritmo -> expresion .)
    PRINT           reduce using rule 46 (algoritmo -> expresion .)
    FUNCIONSTDIN    reduce using rule 46 (algoritmo -> expresion .)
    FUNCIONSTDOUT   reduce using rule 46 (algoritmo -> expresion .)
    NOT             reduce using rule 46 (algoritmo -> expresion .)
    ELSEIF          reduce using rule 46 (algoritmo -> expresion .)
    ENTERO          reduce using rule 46 (algoritmo -> expresion .)
    DOUBLE          reduce using rule 46 (algoritmo -> expresion .)
    STRING          reduce using rule 46 (algoritmo -> expresion .)
    BOOL            reduce using rule 46 (algoritmo -> expresion .)
    $end            reduce using rule 46 (algoritmo -> expresion .)
    LDER            reduce using rule 46 (algoritmo -> expresion .)


state 19

    (61) asignacion -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 69


state 20

    (97) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (98) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (69) asignacionSimple -> VARIABLE . IGUAL expresion
    (113) valorInt -> VARIABLE .
    (109) valorString -> VARIABLE .
    (95) valorBool -> VARIABLE .
    (82) valor -> VARIABLE .
    (126) comparadorMat -> . DIGUAL
    (127) comparadorMat -> . NOIGUAL
    (128) comparadorMat -> . MAYOR
    (129) comparadorMat -> . MENOR
    (130) comparadorMat -> . MAYIGUAL
    (131) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 109 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 95 (valorBool -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 82 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 71
    AND             reduce using rule 95 (valorBool -> VARIABLE .)
    OR              reduce using rule 95 (valorBool -> VARIABLE .)
    IS              reduce using rule 82 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 82 (valor -> VARIABLE .)
    SUMA            reduce using rule 82 (valor -> VARIABLE .)
    RESTA           reduce using rule 82 (valor -> VARIABLE .)
    MULTI           reduce using rule 82 (valor -> VARIABLE .)
    DIV             reduce using rule 82 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 82 (valor -> VARIABLE .)
    MOD             reduce using rule 82 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 82 (valor -> VARIABLE .)
    INT             reduce using rule 82 (valor -> VARIABLE .)
    DOUBLER         reduce using rule 82 (valor -> VARIABLE .)
    NUM             reduce using rule 82 (valor -> VARIABLE .)
    STRINGR         reduce using rule 82 (valor -> VARIABLE .)
    BOOLR           reduce using rule 82 (valor -> VARIABLE .)
    DYNAMIC         reduce using rule 82 (valor -> VARIABLE .)
    VAR             reduce using rule 82 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 82 (valor -> VARIABLE .)
    WHILE           reduce using rule 82 (valor -> VARIABLE .)
    DO              reduce using rule 82 (valor -> VARIABLE .)
    IF              reduce using rule 82 (valor -> VARIABLE .)
    ELSE            reduce using rule 82 (valor -> VARIABLE .)
    PRINT           reduce using rule 82 (valor -> VARIABLE .)
    FUNCIONSTDIN    reduce using rule 82 (valor -> VARIABLE .)
    FUNCIONSTDOUT   reduce using rule 82 (valor -> VARIABLE .)
    NOT             reduce using rule 82 (valor -> VARIABLE .)
    ELSEIF          reduce using rule 82 (valor -> VARIABLE .)
    ENTERO          reduce using rule 82 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 82 (valor -> VARIABLE .)
    STRING          reduce using rule 82 (valor -> VARIABLE .)
    BOOL            reduce using rule 82 (valor -> VARIABLE .)
    $end            reduce using rule 82 (valor -> VARIABLE .)
    LDER            reduce using rule 82 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 72
    NOIGUAL         shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYIGUAL        shift and go to state 76
    MENIGUAL        shift and go to state 77

  ! SUMA            [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! NOT             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! DIV             [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! MOD             [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! INT             [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! NUM             [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! VAR             [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! DO              [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! IF              [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! NOT             [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! STRING          [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! $end            [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! LDER            [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! INT             [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! NUM             [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! VAR             [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! DO              [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! IF              [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! NOT             [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! STRING          [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! $end            [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! LDER            [ reduce using rule 95 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 70

state 21

    (62) asignacion -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 78


state 22

    (63) asignacion -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 79


state 23

    (64) asignacion -> STRINGR . VARIABLE IGUAL expresionString

    VARIABLE        shift and go to state 80


state 24

    (65) asignacion -> BOOLR . VARIABLE IGUAL expresionBool

    VARIABLE        shift and go to state 81


state 25

    (66) asignacion -> DYNAMIC . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 82


state 26

    (67) asignacion -> VAR . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 83


state 27

    (68) asignacion -> asignacionSimple .

    PUNTOYCOMA      reduce using rule 68 (asignacion -> asignacionSimple .)


state 28

    (114) expresionInt -> valorInt . operadorMat expresionInt
    (115) expresionInt -> valorInt .
    (117) valorDouble -> valorInt .
    (120) operadorMat -> . SUMA
    (121) operadorMat -> . RESTA
    (122) operadorMat -> . MULTI
    (123) operadorMat -> . DIV
    (124) operadorMat -> . DIVENTERO
    (125) operadorMat -> . MOD

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for INT resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for NUM resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for STRINGR resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for BOOLR resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for VAR resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for WHILE resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DO resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for IF resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for ELSE resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PRINT resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for NOT resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for ENTERO resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for STRING resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for BOOL resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for $end resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for LDER resolved using rule 115 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PDER resolved using rule 115 (expresionInt -> valorInt .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DIVENTERO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PUNTOYCOMA      reduce using rule 115 (expresionInt -> valorInt .)
    INT             reduce using rule 115 (expresionInt -> valorInt .)
    DOUBLER         reduce using rule 115 (expresionInt -> valorInt .)
    NUM             reduce using rule 115 (expresionInt -> valorInt .)
    STRINGR         reduce using rule 115 (expresionInt -> valorInt .)
    BOOLR           reduce using rule 115 (expresionInt -> valorInt .)
    DYNAMIC         reduce using rule 115 (expresionInt -> valorInt .)
    VAR             reduce using rule 115 (expresionInt -> valorInt .)
    VARIABLE        reduce using rule 115 (expresionInt -> valorInt .)
    WHILE           reduce using rule 115 (expresionInt -> valorInt .)
    DO              reduce using rule 115 (expresionInt -> valorInt .)
    IF              reduce using rule 115 (expresionInt -> valorInt .)
    ELSE            reduce using rule 115 (expresionInt -> valorInt .)
    PRINT           reduce using rule 115 (expresionInt -> valorInt .)
    FUNCIONSTDIN    reduce using rule 115 (expresionInt -> valorInt .)
    FUNCIONSTDOUT   reduce using rule 115 (expresionInt -> valorInt .)
    NOT             reduce using rule 115 (expresionInt -> valorInt .)
    ELSEIF          reduce using rule 115 (expresionInt -> valorInt .)
    ENTERO          reduce using rule 115 (expresionInt -> valorInt .)
    DOUBLE          reduce using rule 115 (expresionInt -> valorInt .)
    STRING          reduce using rule 115 (expresionInt -> valorInt .)
    BOOL            reduce using rule 115 (expresionInt -> valorInt .)
    $end            reduce using rule 115 (expresionInt -> valorInt .)
    LDER            reduce using rule 115 (expresionInt -> valorInt .)
    PDER            reduce using rule 115 (expresionInt -> valorInt .)
    DIGUAL          reduce using rule 117 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 117 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 117 (valorDouble -> valorInt .)
    MENOR           reduce using rule 117 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 117 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 117 (valorDouble -> valorInt .)
    SUMA            shift and go to state 85
    RESTA           shift and go to state 86
    MULTI           shift and go to state 87
    DIV             shift and go to state 88
    DIVENTERO       shift and go to state 89
    MOD             shift and go to state 90

  ! SUMA            [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! RESTA           [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! MULTI           [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! DIV             [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! DIVENTERO       [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! MOD             [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! PUNTOYCOMA      [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! INT             [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! DOUBLER         [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! NUM             [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! STRINGR         [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! BOOLR           [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! DYNAMIC         [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! VAR             [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! VARIABLE        [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! WHILE           [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! DO              [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! IF              [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! ELSE            [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! PRINT           [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! FUNCIONSTDIN    [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! NOT             [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! ELSEIF          [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! ENTERO          [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! DOUBLE          [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! STRING          [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! BOOL            [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! $end            [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! LDER            [ reduce using rule 117 (valorDouble -> valorInt .) ]
  ! PDER            [ reduce using rule 117 (valorDouble -> valorInt .) ]

    operadorMat                    shift and go to state 84

state 29

    (118) expresionDouble -> valorDouble . operadorMat expresionDouble
    (119) expresionDouble -> valorDouble .
    (96) expresionBool -> valorDouble . comparadorMat expresionDouble
    (99) expresionBool -> valorDouble . comparadorMat VARIABLE
    (120) operadorMat -> . SUMA
    (121) operadorMat -> . RESTA
    (122) operadorMat -> . MULTI
    (123) operadorMat -> . DIV
    (124) operadorMat -> . DIVENTERO
    (125) operadorMat -> . MOD
    (126) comparadorMat -> . DIGUAL
    (127) comparadorMat -> . NOIGUAL
    (128) comparadorMat -> . MAYOR
    (129) comparadorMat -> . MENOR
    (130) comparadorMat -> . MAYIGUAL
    (131) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 119 (expresionDouble -> valorDouble .)
    INT             reduce using rule 119 (expresionDouble -> valorDouble .)
    DOUBLER         reduce using rule 119 (expresionDouble -> valorDouble .)
    NUM             reduce using rule 119 (expresionDouble -> valorDouble .)
    STRINGR         reduce using rule 119 (expresionDouble -> valorDouble .)
    BOOLR           reduce using rule 119 (expresionDouble -> valorDouble .)
    DYNAMIC         reduce using rule 119 (expresionDouble -> valorDouble .)
    VAR             reduce using rule 119 (expresionDouble -> valorDouble .)
    VARIABLE        reduce using rule 119 (expresionDouble -> valorDouble .)
    WHILE           reduce using rule 119 (expresionDouble -> valorDouble .)
    DO              reduce using rule 119 (expresionDouble -> valorDouble .)
    IF              reduce using rule 119 (expresionDouble -> valorDouble .)
    ELSE            reduce using rule 119 (expresionDouble -> valorDouble .)
    PRINT           reduce using rule 119 (expresionDouble -> valorDouble .)
    FUNCIONSTDIN    reduce using rule 119 (expresionDouble -> valorDouble .)
    FUNCIONSTDOUT   reduce using rule 119 (expresionDouble -> valorDouble .)
    NOT             reduce using rule 119 (expresionDouble -> valorDouble .)
    ELSEIF          reduce using rule 119 (expresionDouble -> valorDouble .)
    ENTERO          reduce using rule 119 (expresionDouble -> valorDouble .)
    DOUBLE          reduce using rule 119 (expresionDouble -> valorDouble .)
    STRING          reduce using rule 119 (expresionDouble -> valorDouble .)
    BOOL            reduce using rule 119 (expresionDouble -> valorDouble .)
    $end            reduce using rule 119 (expresionDouble -> valorDouble .)
    LDER            reduce using rule 119 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 119 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 85
    RESTA           shift and go to state 86
    MULTI           shift and go to state 87
    DIV             shift and go to state 88
    DIVENTERO       shift and go to state 89
    MOD             shift and go to state 90
    DIGUAL          shift and go to state 72
    NOIGUAL         shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYIGUAL        shift and go to state 76
    MENIGUAL        shift and go to state 77

    operadorMat                    shift and go to state 91
    comparadorMat                  shift and go to state 92

state 30

    (110) expresionString -> valorString . operadorMat expresionString
    (111) expresionString -> valorString .
    (120) operadorMat -> . SUMA
    (121) operadorMat -> . RESTA
    (122) operadorMat -> . MULTI
    (123) operadorMat -> . DIV
    (124) operadorMat -> . DIVENTERO
    (125) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 111 (expresionString -> valorString .)
    INT             reduce using rule 111 (expresionString -> valorString .)
    DOUBLER         reduce using rule 111 (expresionString -> valorString .)
    NUM             reduce using rule 111 (expresionString -> valorString .)
    STRINGR         reduce using rule 111 (expresionString -> valorString .)
    BOOLR           reduce using rule 111 (expresionString -> valorString .)
    DYNAMIC         reduce using rule 111 (expresionString -> valorString .)
    VAR             reduce using rule 111 (expresionString -> valorString .)
    VARIABLE        reduce using rule 111 (expresionString -> valorString .)
    WHILE           reduce using rule 111 (expresionString -> valorString .)
    DO              reduce using rule 111 (expresionString -> valorString .)
    IF              reduce using rule 111 (expresionString -> valorString .)
    ELSE            reduce using rule 111 (expresionString -> valorString .)
    PRINT           reduce using rule 111 (expresionString -> valorString .)
    FUNCIONSTDIN    reduce using rule 111 (expresionString -> valorString .)
    FUNCIONSTDOUT   reduce using rule 111 (expresionString -> valorString .)
    NOT             reduce using rule 111 (expresionString -> valorString .)
    ELSEIF          reduce using rule 111 (expresionString -> valorString .)
    ENTERO          reduce using rule 111 (expresionString -> valorString .)
    DOUBLE          reduce using rule 111 (expresionString -> valorString .)
    STRING          reduce using rule 111 (expresionString -> valorString .)
    BOOL            reduce using rule 111 (expresionString -> valorString .)
    $end            reduce using rule 111 (expresionString -> valorString .)
    LDER            reduce using rule 111 (expresionString -> valorString .)
    PDER            reduce using rule 111 (expresionString -> valorString .)
    SUMA            shift and go to state 85
    RESTA           shift and go to state 86
    MULTI           shift and go to state 87
    DIV             shift and go to state 88
    DIVENTERO       shift and go to state 89
    MOD             shift and go to state 90

    operadorMat                    shift and go to state 93

state 31

    (100) expresionBool -> valorBool .

    PUNTOYCOMA      reduce using rule 100 (expresionBool -> valorBool .)
    AND             reduce using rule 100 (expresionBool -> valorBool .)
    OR              reduce using rule 100 (expresionBool -> valorBool .)
    INT             reduce using rule 100 (expresionBool -> valorBool .)
    DOUBLER         reduce using rule 100 (expresionBool -> valorBool .)
    NUM             reduce using rule 100 (expresionBool -> valorBool .)
    STRINGR         reduce using rule 100 (expresionBool -> valorBool .)
    BOOLR           reduce using rule 100 (expresionBool -> valorBool .)
    DYNAMIC         reduce using rule 100 (expresionBool -> valorBool .)
    VAR             reduce using rule 100 (expresionBool -> valorBool .)
    VARIABLE        reduce using rule 100 (expresionBool -> valorBool .)
    WHILE           reduce using rule 100 (expresionBool -> valorBool .)
    DO              reduce using rule 100 (expresionBool -> valorBool .)
    IF              reduce using rule 100 (expresionBool -> valorBool .)
    ELSE            reduce using rule 100 (expresionBool -> valorBool .)
    PRINT           reduce using rule 100 (expresionBool -> valorBool .)
    FUNCIONSTDIN    reduce using rule 100 (expresionBool -> valorBool .)
    FUNCIONSTDOUT   reduce using rule 100 (expresionBool -> valorBool .)
    NOT             reduce using rule 100 (expresionBool -> valorBool .)
    ELSEIF          reduce using rule 100 (expresionBool -> valorBool .)
    ENTERO          reduce using rule 100 (expresionBool -> valorBool .)
    DOUBLE          reduce using rule 100 (expresionBool -> valorBool .)
    STRING          reduce using rule 100 (expresionBool -> valorBool .)
    BOOL            reduce using rule 100 (expresionBool -> valorBool .)
    $end            reduce using rule 100 (expresionBool -> valorBool .)
    LDER            reduce using rule 100 (expresionBool -> valorBool .)
    PDER            reduce using rule 100 (expresionBool -> valorBool .)


state 32

    (103) expresionBool -> valor . IS objeto
    (104) expresionBool -> valor . ISNEGADO objeto
    (85) expresion -> valor . operadorMat expresion
    (86) expresion -> valor .
    (120) operadorMat -> . SUMA
    (121) operadorMat -> . RESTA
    (122) operadorMat -> . MULTI
    (123) operadorMat -> . DIV
    (124) operadorMat -> . DIVENTERO
    (125) operadorMat -> . MOD

    IS              shift and go to state 94
    ISNEGADO        shift and go to state 95
    PUNTOYCOMA      reduce using rule 86 (expresion -> valor .)
    INT             reduce using rule 86 (expresion -> valor .)
    DOUBLER         reduce using rule 86 (expresion -> valor .)
    NUM             reduce using rule 86 (expresion -> valor .)
    STRINGR         reduce using rule 86 (expresion -> valor .)
    BOOLR           reduce using rule 86 (expresion -> valor .)
    DYNAMIC         reduce using rule 86 (expresion -> valor .)
    VAR             reduce using rule 86 (expresion -> valor .)
    VARIABLE        reduce using rule 86 (expresion -> valor .)
    WHILE           reduce using rule 86 (expresion -> valor .)
    DO              reduce using rule 86 (expresion -> valor .)
    IF              reduce using rule 86 (expresion -> valor .)
    ELSE            reduce using rule 86 (expresion -> valor .)
    PRINT           reduce using rule 86 (expresion -> valor .)
    FUNCIONSTDIN    reduce using rule 86 (expresion -> valor .)
    FUNCIONSTDOUT   reduce using rule 86 (expresion -> valor .)
    NOT             reduce using rule 86 (expresion -> valor .)
    ELSEIF          reduce using rule 86 (expresion -> valor .)
    ENTERO          reduce using rule 86 (expresion -> valor .)
    DOUBLE          reduce using rule 86 (expresion -> valor .)
    STRING          reduce using rule 86 (expresion -> valor .)
    BOOL            reduce using rule 86 (expresion -> valor .)
    $end            reduce using rule 86 (expresion -> valor .)
    LDER            reduce using rule 86 (expresion -> valor .)
    SUMA            shift and go to state 85
    RESTA           shift and go to state 86
    MULTI           shift and go to state 87
    DIV             shift and go to state 88
    DIVENTERO       shift and go to state 89
    MOD             shift and go to state 90

    operadorMat                    shift and go to state 96

state 33

    (91) sentenciaWhile -> WHILE . PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> WHILE . PIZQ expresionBool PDER algoritmo

    PIZQ            shift and go to state 97


state 34

    (93) sentenciaDoWhile -> DO . LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER

    LIZQ            shift and go to state 98


state 35

    (75) sentenciaIf -> IF . PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> IF . PIZQ expresionBool PDER LIZQ algoritmo LDER

    PIZQ            shift and go to state 99


state 36

    (77) sentenciaElse -> ELSE . algoritmo
    (78) sentenciaElse -> ELSE . LIZQ algoritmo LDER
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    LIZQ            shift and go to state 101
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    algoritmo                      shift and go to state 100
    asignacion                     shift and go to state 102
    expresionInt                   shift and go to state 103
    expresionDouble                shift and go to state 104
    expresionString                shift and go to state 105
    expresionBool                  shift and go to state 106
    expresion                      shift and go to state 18
    sentenciaWhile                 shift and go to state 107
    sentenciaDoWhile               shift and go to state 108
    sentenciaIf                    shift and go to state 109
    sentenciaElse                  shift and go to state 110
    imprimir                       shift and go to state 111
    funcionStdin                   shift and go to state 112
    funcionStdout                  shift and go to state 113
    negacionBool                   shift and go to state 114
    comparacionBool                shift and go to state 115
    sentenciaElseIf                shift and go to state 116
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 37

    (70) imprimir -> PRINT . PIZQ expresion PDER
    (71) imprimir -> PRINT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 117


state 38

    (72) funcionStdin -> FUNCIONSTDIN .

    PUNTOYCOMA      reduce using rule 72 (funcionStdin -> FUNCIONSTDIN .)


state 39

    (73) funcionStdout -> FUNCIONSTDOUT . PIZQ expresion PDER
    (74) funcionStdout -> FUNCIONSTDOUT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 118


state 40

    (105) negacionBool -> NOT . PIZQ expresionBool PDER

    PIZQ            shift and go to state 119


state 41

    (79) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER LIZQ algoritmo LDER

    PIZQ            shift and go to state 120


state 42

    (112) valorInt -> ENTERO .
    (81) valor -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for INT resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for NUM resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRINGR resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOLR resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for VAR resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for WHILE resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for DO resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for IF resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for ELSE resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for PRINT resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for NOT resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for ENTERO resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRING resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOL resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for $end resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for LDER resolved using rule 81 (valor -> ENTERO .)
    DIGUAL          reduce using rule 112 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 112 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 112 (valorInt -> ENTERO .)
    MENOR           reduce using rule 112 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 112 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 112 (valorInt -> ENTERO .)
    IS              reduce using rule 81 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 81 (valor -> ENTERO .)
    SUMA            reduce using rule 81 (valor -> ENTERO .)
    RESTA           reduce using rule 81 (valor -> ENTERO .)
    MULTI           reduce using rule 81 (valor -> ENTERO .)
    DIV             reduce using rule 81 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 81 (valor -> ENTERO .)
    MOD             reduce using rule 81 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 81 (valor -> ENTERO .)
    INT             reduce using rule 81 (valor -> ENTERO .)
    DOUBLER         reduce using rule 81 (valor -> ENTERO .)
    NUM             reduce using rule 81 (valor -> ENTERO .)
    STRINGR         reduce using rule 81 (valor -> ENTERO .)
    BOOLR           reduce using rule 81 (valor -> ENTERO .)
    DYNAMIC         reduce using rule 81 (valor -> ENTERO .)
    VAR             reduce using rule 81 (valor -> ENTERO .)
    VARIABLE        reduce using rule 81 (valor -> ENTERO .)
    WHILE           reduce using rule 81 (valor -> ENTERO .)
    DO              reduce using rule 81 (valor -> ENTERO .)
    IF              reduce using rule 81 (valor -> ENTERO .)
    ELSE            reduce using rule 81 (valor -> ENTERO .)
    PRINT           reduce using rule 81 (valor -> ENTERO .)
    FUNCIONSTDIN    reduce using rule 81 (valor -> ENTERO .)
    FUNCIONSTDOUT   reduce using rule 81 (valor -> ENTERO .)
    NOT             reduce using rule 81 (valor -> ENTERO .)
    ELSEIF          reduce using rule 81 (valor -> ENTERO .)
    ENTERO          reduce using rule 81 (valor -> ENTERO .)
    DOUBLE          reduce using rule 81 (valor -> ENTERO .)
    STRING          reduce using rule 81 (valor -> ENTERO .)
    BOOL            reduce using rule 81 (valor -> ENTERO .)
    $end            reduce using rule 81 (valor -> ENTERO .)
    LDER            reduce using rule 81 (valor -> ENTERO .)

  ! SUMA            [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! INT             [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! DOUBLER         [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! NUM             [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! STRINGR         [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! BOOLR           [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! DYNAMIC         [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! VAR             [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! VARIABLE        [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! WHILE           [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! DO              [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! IF              [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! ELSE            [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! PRINT           [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! FUNCIONSTDIN    [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! NOT             [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! ELSEIF          [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! ENTERO          [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! DOUBLE          [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! STRING          [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! BOOL            [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! $end            [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! LDER            [ reduce using rule 112 (valorInt -> ENTERO .) ]


state 43

    (116) valorDouble -> DOUBLE .
    (83) valor -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for INT resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NUM resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VAR resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DO resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for IF resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NOT resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRING resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for $end resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for LDER resolved using rule 83 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 116 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 116 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 116 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 116 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 116 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 116 (valorDouble -> DOUBLE .)
    IS              reduce using rule 83 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 83 (valor -> DOUBLE .)
    SUMA            reduce using rule 83 (valor -> DOUBLE .)
    RESTA           reduce using rule 83 (valor -> DOUBLE .)
    MULTI           reduce using rule 83 (valor -> DOUBLE .)
    DIV             reduce using rule 83 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 83 (valor -> DOUBLE .)
    MOD             reduce using rule 83 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 83 (valor -> DOUBLE .)
    INT             reduce using rule 83 (valor -> DOUBLE .)
    DOUBLER         reduce using rule 83 (valor -> DOUBLE .)
    NUM             reduce using rule 83 (valor -> DOUBLE .)
    STRINGR         reduce using rule 83 (valor -> DOUBLE .)
    BOOLR           reduce using rule 83 (valor -> DOUBLE .)
    DYNAMIC         reduce using rule 83 (valor -> DOUBLE .)
    VAR             reduce using rule 83 (valor -> DOUBLE .)
    VARIABLE        reduce using rule 83 (valor -> DOUBLE .)
    WHILE           reduce using rule 83 (valor -> DOUBLE .)
    DO              reduce using rule 83 (valor -> DOUBLE .)
    IF              reduce using rule 83 (valor -> DOUBLE .)
    ELSE            reduce using rule 83 (valor -> DOUBLE .)
    PRINT           reduce using rule 83 (valor -> DOUBLE .)
    FUNCIONSTDIN    reduce using rule 83 (valor -> DOUBLE .)
    FUNCIONSTDOUT   reduce using rule 83 (valor -> DOUBLE .)
    NOT             reduce using rule 83 (valor -> DOUBLE .)
    ELSEIF          reduce using rule 83 (valor -> DOUBLE .)
    ENTERO          reduce using rule 83 (valor -> DOUBLE .)
    DOUBLE          reduce using rule 83 (valor -> DOUBLE .)
    STRING          reduce using rule 83 (valor -> DOUBLE .)
    BOOL            reduce using rule 83 (valor -> DOUBLE .)
    $end            reduce using rule 83 (valor -> DOUBLE .)
    LDER            reduce using rule 83 (valor -> DOUBLE .)

  ! SUMA            [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! INT             [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! DOUBLER         [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! NUM             [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! STRINGR         [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! BOOLR           [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! DYNAMIC         [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! VAR             [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! VARIABLE        [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! WHILE           [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! DO              [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! IF              [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! ELSE            [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! PRINT           [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! NOT             [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! ELSEIF          [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! ENTERO          [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! DOUBLE          [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! STRING          [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! BOOL            [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! $end            [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! LDER            [ reduce using rule 116 (valorDouble -> DOUBLE .) ]


state 44

    (108) valorString -> STRING .
    (84) valor -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for RESTA resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for MULTI resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for DIV resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for MOD resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for INT resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for NUM resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for STRINGR resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for BOOLR resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for VAR resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for WHILE resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for DO resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for IF resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for ELSE resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for PRINT resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for NOT resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for ENTERO resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for STRING resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for BOOL resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for $end resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for LDER resolved using rule 84 (valor -> STRING .)
    IS              reduce using rule 84 (valor -> STRING .)
    ISNEGADO        reduce using rule 84 (valor -> STRING .)
    SUMA            reduce using rule 84 (valor -> STRING .)
    RESTA           reduce using rule 84 (valor -> STRING .)
    MULTI           reduce using rule 84 (valor -> STRING .)
    DIV             reduce using rule 84 (valor -> STRING .)
    DIVENTERO       reduce using rule 84 (valor -> STRING .)
    MOD             reduce using rule 84 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 84 (valor -> STRING .)
    INT             reduce using rule 84 (valor -> STRING .)
    DOUBLER         reduce using rule 84 (valor -> STRING .)
    NUM             reduce using rule 84 (valor -> STRING .)
    STRINGR         reduce using rule 84 (valor -> STRING .)
    BOOLR           reduce using rule 84 (valor -> STRING .)
    DYNAMIC         reduce using rule 84 (valor -> STRING .)
    VAR             reduce using rule 84 (valor -> STRING .)
    VARIABLE        reduce using rule 84 (valor -> STRING .)
    WHILE           reduce using rule 84 (valor -> STRING .)
    DO              reduce using rule 84 (valor -> STRING .)
    IF              reduce using rule 84 (valor -> STRING .)
    ELSE            reduce using rule 84 (valor -> STRING .)
    PRINT           reduce using rule 84 (valor -> STRING .)
    FUNCIONSTDIN    reduce using rule 84 (valor -> STRING .)
    FUNCIONSTDOUT   reduce using rule 84 (valor -> STRING .)
    NOT             reduce using rule 84 (valor -> STRING .)
    ELSEIF          reduce using rule 84 (valor -> STRING .)
    ENTERO          reduce using rule 84 (valor -> STRING .)
    DOUBLE          reduce using rule 84 (valor -> STRING .)
    STRING          reduce using rule 84 (valor -> STRING .)
    BOOL            reduce using rule 84 (valor -> STRING .)
    $end            reduce using rule 84 (valor -> STRING .)
    LDER            reduce using rule 84 (valor -> STRING .)

  ! SUMA            [ reduce using rule 108 (valorString -> STRING .) ]
  ! RESTA           [ reduce using rule 108 (valorString -> STRING .) ]
  ! MULTI           [ reduce using rule 108 (valorString -> STRING .) ]
  ! DIV             [ reduce using rule 108 (valorString -> STRING .) ]
  ! DIVENTERO       [ reduce using rule 108 (valorString -> STRING .) ]
  ! MOD             [ reduce using rule 108 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 108 (valorString -> STRING .) ]
  ! INT             [ reduce using rule 108 (valorString -> STRING .) ]
  ! DOUBLER         [ reduce using rule 108 (valorString -> STRING .) ]
  ! NUM             [ reduce using rule 108 (valorString -> STRING .) ]
  ! STRINGR         [ reduce using rule 108 (valorString -> STRING .) ]
  ! BOOLR           [ reduce using rule 108 (valorString -> STRING .) ]
  ! DYNAMIC         [ reduce using rule 108 (valorString -> STRING .) ]
  ! VAR             [ reduce using rule 108 (valorString -> STRING .) ]
  ! VARIABLE        [ reduce using rule 108 (valorString -> STRING .) ]
  ! WHILE           [ reduce using rule 108 (valorString -> STRING .) ]
  ! DO              [ reduce using rule 108 (valorString -> STRING .) ]
  ! IF              [ reduce using rule 108 (valorString -> STRING .) ]
  ! ELSE            [ reduce using rule 108 (valorString -> STRING .) ]
  ! PRINT           [ reduce using rule 108 (valorString -> STRING .) ]
  ! FUNCIONSTDIN    [ reduce using rule 108 (valorString -> STRING .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 108 (valorString -> STRING .) ]
  ! NOT             [ reduce using rule 108 (valorString -> STRING .) ]
  ! ELSEIF          [ reduce using rule 108 (valorString -> STRING .) ]
  ! ENTERO          [ reduce using rule 108 (valorString -> STRING .) ]
  ! DOUBLE          [ reduce using rule 108 (valorString -> STRING .) ]
  ! STRING          [ reduce using rule 108 (valorString -> STRING .) ]
  ! BOOL            [ reduce using rule 108 (valorString -> STRING .) ]
  ! $end            [ reduce using rule 108 (valorString -> STRING .) ]
  ! LDER            [ reduce using rule 108 (valorString -> STRING .) ]


state 45

    (94) valorBool -> BOOL .

    PUNTOYCOMA      reduce using rule 94 (valorBool -> BOOL .)
    AND             reduce using rule 94 (valorBool -> BOOL .)
    OR              reduce using rule 94 (valorBool -> BOOL .)
    INT             reduce using rule 94 (valorBool -> BOOL .)
    DOUBLER         reduce using rule 94 (valorBool -> BOOL .)
    NUM             reduce using rule 94 (valorBool -> BOOL .)
    STRINGR         reduce using rule 94 (valorBool -> BOOL .)
    BOOLR           reduce using rule 94 (valorBool -> BOOL .)
    DYNAMIC         reduce using rule 94 (valorBool -> BOOL .)
    VAR             reduce using rule 94 (valorBool -> BOOL .)
    VARIABLE        reduce using rule 94 (valorBool -> BOOL .)
    WHILE           reduce using rule 94 (valorBool -> BOOL .)
    DO              reduce using rule 94 (valorBool -> BOOL .)
    IF              reduce using rule 94 (valorBool -> BOOL .)
    ELSE            reduce using rule 94 (valorBool -> BOOL .)
    PRINT           reduce using rule 94 (valorBool -> BOOL .)
    FUNCIONSTDIN    reduce using rule 94 (valorBool -> BOOL .)
    FUNCIONSTDOUT   reduce using rule 94 (valorBool -> BOOL .)
    NOT             reduce using rule 94 (valorBool -> BOOL .)
    ELSEIF          reduce using rule 94 (valorBool -> BOOL .)
    ENTERO          reduce using rule 94 (valorBool -> BOOL .)
    DOUBLE          reduce using rule 94 (valorBool -> BOOL .)
    STRING          reduce using rule 94 (valorBool -> BOOL .)
    BOOL            reduce using rule 94 (valorBool -> BOOL .)
    $end            reduce using rule 94 (valorBool -> BOOL .)
    LDER            reduce using rule 94 (valorBool -> BOOL .)
    PDER            reduce using rule 94 (valorBool -> BOOL .)


state 46

    (1) final -> algoritmo PUNTOYCOMA .
    (2) final -> algoritmo PUNTOYCOMA . final
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    $end            reduce using rule 1 (final -> algoritmo PUNTOYCOMA .)
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    algoritmo                      shift and go to state 2
    final                          shift and go to state 121
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    expresion                      shift and go to state 18
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 47

    (3) final -> asignacion PUNTOYCOMA .
    (4) final -> asignacion PUNTOYCOMA . final
    (41) algoritmo -> asignacion PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    $end            reduce using rule 3 (final -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    asignacion                     shift and go to state 3
    final                          shift and go to state 122
    algoritmo                      shift and go to state 2
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    expresion                      shift and go to state 18
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 48

    (5) final -> expresionInt PUNTOYCOMA .
    (6) final -> expresionInt PUNTOYCOMA . final
    (42) algoritmo -> expresionInt PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    $end            reduce using rule 5 (final -> expresionInt PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    expresionInt                   shift and go to state 4
    final                          shift and go to state 123
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    expresion                      shift and go to state 18
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 49

    (7) final -> expresionDouble PUNTOYCOMA .
    (8) final -> expresionDouble PUNTOYCOMA . final
    (43) algoritmo -> expresionDouble PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    $end            reduce using rule 7 (final -> expresionDouble PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    expresionDouble                shift and go to state 5
    final                          shift and go to state 124
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    expresion                      shift and go to state 18
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 50

    (9) final -> expresionString PUNTOYCOMA .
    (10) final -> expresionString PUNTOYCOMA . final
    (44) algoritmo -> expresionString PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    $end            reduce using rule 9 (final -> expresionString PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    expresionString                shift and go to state 6
    final                          shift and go to state 125
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    expresion                      shift and go to state 18
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 51

    (11) final -> expresionBool PUNTOYCOMA .
    (12) final -> expresionBool PUNTOYCOMA . final
    (45) algoritmo -> expresionBool PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    $end            reduce using rule 11 (final -> expresionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    expresionBool                  shift and go to state 7
    final                          shift and go to state 126
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    expresion                      shift and go to state 18
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 52

    (106) comparacionBool -> expresionBool operadorLogico . expresionBool
    (107) comparacionBool -> expresionBool operadorLogico . comparacionBool
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 130
    DOUBLE          shift and go to state 43
    BOOL            shift and go to state 45
    NOT             shift and go to state 40
    ENTERO          shift and go to state 134
    STRING          shift and go to state 135

    expresionBool                  shift and go to state 127
    comparacionBool                shift and go to state 128
    valorDouble                    shift and go to state 129
    valorBool                      shift and go to state 31
    negacionBool                   shift and go to state 131
    valor                          shift and go to state 132
    valorInt                       shift and go to state 133

state 53

    (132) operadorLogico -> AND .

    VARIABLE        reduce using rule 132 (operadorLogico -> AND .)
    DOUBLE          reduce using rule 132 (operadorLogico -> AND .)
    BOOL            reduce using rule 132 (operadorLogico -> AND .)
    NOT             reduce using rule 132 (operadorLogico -> AND .)
    ENTERO          reduce using rule 132 (operadorLogico -> AND .)
    STRING          reduce using rule 132 (operadorLogico -> AND .)


state 54

    (133) operadorLogico -> OR .

    VARIABLE        reduce using rule 133 (operadorLogico -> OR .)
    DOUBLE          reduce using rule 133 (operadorLogico -> OR .)
    BOOL            reduce using rule 133 (operadorLogico -> OR .)
    NOT             reduce using rule 133 (operadorLogico -> OR .)
    ENTERO          reduce using rule 133 (operadorLogico -> OR .)
    STRING          reduce using rule 133 (operadorLogico -> OR .)


state 55

    (14) final -> sentenciaWhile final .

    $end            reduce using rule 14 (final -> sentenciaWhile final .)


state 56

    (15) final -> sentenciaWhile PUNTOYCOMA .
    (16) final -> sentenciaWhile PUNTOYCOMA . final
    (48) algoritmo -> sentenciaWhile PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    $end            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 136
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    expresion                      shift and go to state 18
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 57

    (17) final -> sentenciaDoWhile PUNTOYCOMA .
    (18) final -> sentenciaDoWhile PUNTOYCOMA . final
    (49) algoritmo -> sentenciaDoWhile PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    $end            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    sentenciaDoWhile               shift and go to state 9
    final                          shift and go to state 137
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    expresion                      shift and go to state 18
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 58

    (19) final -> sentenciaIf PUNTOYCOMA .
    (20) final -> sentenciaIf PUNTOYCOMA . final
    (50) algoritmo -> sentenciaIf PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    $end            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 138
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    expresion                      shift and go to state 18
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 59

    (22) final -> sentenciaIf final .

    $end            reduce using rule 22 (final -> sentenciaIf final .)


state 60

    (23) final -> sentenciaElse PUNTOYCOMA .
    (24) final -> sentenciaElse PUNTOYCOMA . final
    (52) algoritmo -> sentenciaElse PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    $end            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 139
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    expresion                      shift and go to state 18
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 61

    (26) final -> sentenciaElse final .

    $end            reduce using rule 26 (final -> sentenciaElse final .)


state 62

    (27) final -> imprimir PUNTOYCOMA .
    (28) final -> imprimir PUNTOYCOMA . final
    (54) algoritmo -> imprimir PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    $end            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    imprimir                       shift and go to state 12
    final                          shift and go to state 140
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    expresion                      shift and go to state 18
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 63

    (29) final -> funcionStdin PUNTOYCOMA .
    (30) final -> funcionStdin PUNTOYCOMA . final
    (55) algoritmo -> funcionStdin PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    $end            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    funcionStdin                   shift and go to state 13
    final                          shift and go to state 141
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    expresion                      shift and go to state 18
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 64

    (31) final -> funcionStdout PUNTOYCOMA .
    (32) final -> funcionStdout PUNTOYCOMA . final
    (56) algoritmo -> funcionStdout PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    $end            reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    funcionStdout                  shift and go to state 14
    final                          shift and go to state 142
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    expresion                      shift and go to state 18
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 65

    (33) final -> negacionBool PUNTOYCOMA .
    (34) final -> negacionBool PUNTOYCOMA . final
    (57) algoritmo -> negacionBool PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    $end            reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    negacionBool                   shift and go to state 15
    final                          shift and go to state 143
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    expresion                      shift and go to state 18
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 66

    (35) final -> comparacionBool PUNTOYCOMA . final
    (36) final -> comparacionBool PUNTOYCOMA .
    (58) algoritmo -> comparacionBool PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    $end            reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    comparacionBool                shift and go to state 16
    final                          shift and go to state 144
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    sentenciaElseIf                shift and go to state 17
    expresion                      shift and go to state 18
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 67

    (37) final -> sentenciaElseIf PUNTOYCOMA . final
    (39) final -> sentenciaElseIf PUNTOYCOMA .
    (60) algoritmo -> sentenciaElseIf PUNTOYCOMA .
    (1) final -> . algoritmo PUNTOYCOMA
    (2) final -> . algoritmo PUNTOYCOMA final
    (3) final -> . asignacion PUNTOYCOMA
    (4) final -> . asignacion PUNTOYCOMA final
    (5) final -> . expresionInt PUNTOYCOMA
    (6) final -> . expresionInt PUNTOYCOMA final
    (7) final -> . expresionDouble PUNTOYCOMA
    (8) final -> . expresionDouble PUNTOYCOMA final
    (9) final -> . expresionString PUNTOYCOMA
    (10) final -> . expresionString PUNTOYCOMA final
    (11) final -> . expresionBool PUNTOYCOMA
    (12) final -> . expresionBool PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    $end            reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 145
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresionInt                   shift and go to state 4
    expresionDouble                shift and go to state 5
    expresionString                shift and go to state 6
    expresionBool                  shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    expresion                      shift and go to state 18
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 68

    (38) final -> sentenciaElseIf final .

    $end            reduce using rule 38 (final -> sentenciaElseIf final .)


state 69

    (61) asignacion -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 146


state 70

    (97) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (98) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 147
    DOUBLE          shift and go to state 150
    ENTERO          shift and go to state 151

    expresionDouble                shift and go to state 148
    valorDouble                    shift and go to state 149
    valorInt                       shift and go to state 133

state 71

    (69) asignacionSimple -> VARIABLE IGUAL . expresion
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool

    ENTERO          shift and go to state 134
    VARIABLE        shift and go to state 152
    DOUBLE          shift and go to state 159
    STRING          shift and go to state 160
    BOOL            shift and go to state 45
    NOT             shift and go to state 40

    expresion                      shift and go to state 153
    valor                          shift and go to state 154
    expresionString                shift and go to state 155
    expresionInt                   shift and go to state 156
    expresionDouble                shift and go to state 157
    expresionBool                  shift and go to state 158
    valorString                    shift and go to state 30
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorBool                      shift and go to state 31
    negacionBool                   shift and go to state 131
    comparacionBool                shift and go to state 161

state 72

    (126) comparadorMat -> DIGUAL .

    VARIABLE        reduce using rule 126 (comparadorMat -> DIGUAL .)
    DOUBLE          reduce using rule 126 (comparadorMat -> DIGUAL .)
    ENTERO          reduce using rule 126 (comparadorMat -> DIGUAL .)


state 73

    (127) comparadorMat -> NOIGUAL .

    VARIABLE        reduce using rule 127 (comparadorMat -> NOIGUAL .)
    DOUBLE          reduce using rule 127 (comparadorMat -> NOIGUAL .)
    ENTERO          reduce using rule 127 (comparadorMat -> NOIGUAL .)


state 74

    (128) comparadorMat -> MAYOR .

    VARIABLE        reduce using rule 128 (comparadorMat -> MAYOR .)
    DOUBLE          reduce using rule 128 (comparadorMat -> MAYOR .)
    ENTERO          reduce using rule 128 (comparadorMat -> MAYOR .)


state 75

    (129) comparadorMat -> MENOR .

    VARIABLE        reduce using rule 129 (comparadorMat -> MENOR .)
    DOUBLE          reduce using rule 129 (comparadorMat -> MENOR .)
    ENTERO          reduce using rule 129 (comparadorMat -> MENOR .)


state 76

    (130) comparadorMat -> MAYIGUAL .

    VARIABLE        reduce using rule 130 (comparadorMat -> MAYIGUAL .)
    DOUBLE          reduce using rule 130 (comparadorMat -> MAYIGUAL .)
    ENTERO          reduce using rule 130 (comparadorMat -> MAYIGUAL .)


state 77

    (131) comparadorMat -> MENIGUAL .

    VARIABLE        reduce using rule 131 (comparadorMat -> MENIGUAL .)
    DOUBLE          reduce using rule 131 (comparadorMat -> MENIGUAL .)
    ENTERO          reduce using rule 131 (comparadorMat -> MENIGUAL .)


state 78

    (62) asignacion -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 162


state 79

    (63) asignacion -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 163


state 80

    (64) asignacion -> STRINGR VARIABLE . IGUAL expresionString

    IGUAL           shift and go to state 164


state 81

    (65) asignacion -> BOOLR VARIABLE . IGUAL expresionBool

    IGUAL           shift and go to state 165


state 82

    (66) asignacion -> DYNAMIC VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 166


state 83

    (67) asignacion -> VAR VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 167


state 84

    (114) expresionInt -> valorInt operadorMat . expresionInt
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE

    ENTERO          shift and go to state 151
    VARIABLE        shift and go to state 170

    valorInt                       shift and go to state 168
    expresionInt                   shift and go to state 169

state 85

    (120) operadorMat -> SUMA .

    ENTERO          reduce using rule 120 (operadorMat -> SUMA .)
    VARIABLE        reduce using rule 120 (operadorMat -> SUMA .)
    DOUBLE          reduce using rule 120 (operadorMat -> SUMA .)
    STRING          reduce using rule 120 (operadorMat -> SUMA .)
    BOOL            reduce using rule 120 (operadorMat -> SUMA .)
    NOT             reduce using rule 120 (operadorMat -> SUMA .)


state 86

    (121) operadorMat -> RESTA .

    ENTERO          reduce using rule 121 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 121 (operadorMat -> RESTA .)
    DOUBLE          reduce using rule 121 (operadorMat -> RESTA .)
    STRING          reduce using rule 121 (operadorMat -> RESTA .)
    BOOL            reduce using rule 121 (operadorMat -> RESTA .)
    NOT             reduce using rule 121 (operadorMat -> RESTA .)


state 87

    (122) operadorMat -> MULTI .

    ENTERO          reduce using rule 122 (operadorMat -> MULTI .)
    VARIABLE        reduce using rule 122 (operadorMat -> MULTI .)
    DOUBLE          reduce using rule 122 (operadorMat -> MULTI .)
    STRING          reduce using rule 122 (operadorMat -> MULTI .)
    BOOL            reduce using rule 122 (operadorMat -> MULTI .)
    NOT             reduce using rule 122 (operadorMat -> MULTI .)


state 88

    (123) operadorMat -> DIV .

    ENTERO          reduce using rule 123 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 123 (operadorMat -> DIV .)
    DOUBLE          reduce using rule 123 (operadorMat -> DIV .)
    STRING          reduce using rule 123 (operadorMat -> DIV .)
    BOOL            reduce using rule 123 (operadorMat -> DIV .)
    NOT             reduce using rule 123 (operadorMat -> DIV .)


state 89

    (124) operadorMat -> DIVENTERO .

    ENTERO          reduce using rule 124 (operadorMat -> DIVENTERO .)
    VARIABLE        reduce using rule 124 (operadorMat -> DIVENTERO .)
    DOUBLE          reduce using rule 124 (operadorMat -> DIVENTERO .)
    STRING          reduce using rule 124 (operadorMat -> DIVENTERO .)
    BOOL            reduce using rule 124 (operadorMat -> DIVENTERO .)
    NOT             reduce using rule 124 (operadorMat -> DIVENTERO .)


state 90

    (125) operadorMat -> MOD .

    ENTERO          reduce using rule 125 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 125 (operadorMat -> MOD .)
    DOUBLE          reduce using rule 125 (operadorMat -> MOD .)
    STRING          reduce using rule 125 (operadorMat -> MOD .)
    BOOL            reduce using rule 125 (operadorMat -> MOD .)
    NOT             reduce using rule 125 (operadorMat -> MOD .)


state 91

    (118) expresionDouble -> valorDouble operadorMat . expresionDouble
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 150
    ENTERO          shift and go to state 151
    VARIABLE        shift and go to state 170

    valorDouble                    shift and go to state 149
    expresionDouble                shift and go to state 171
    valorInt                       shift and go to state 133

state 92

    (96) expresionBool -> valorDouble comparadorMat . expresionDouble
    (99) expresionBool -> valorDouble comparadorMat . VARIABLE
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 173
    DOUBLE          shift and go to state 150
    ENTERO          shift and go to state 151

    valorDouble                    shift and go to state 149
    expresionDouble                shift and go to state 172
    valorInt                       shift and go to state 133

state 93

    (110) expresionString -> valorString operadorMat . expresionString
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE

    STRING          shift and go to state 175
    VARIABLE        shift and go to state 176

    valorString                    shift and go to state 30
    expresionString                shift and go to state 174

state 94

    (103) expresionBool -> valor IS . objeto
    (134) objeto -> . STRINGR
    (135) objeto -> . INT
    (136) objeto -> . DOUBLER
    (137) objeto -> . NUM
    (138) objeto -> . VAR
    (139) objeto -> . DYNAMIC
    (140) objeto -> . LIST
    (141) objeto -> . BOOL
    (142) objeto -> . MAP
    (143) objeto -> . SET

    STRINGR         shift and go to state 178
    INT             shift and go to state 179
    DOUBLER         shift and go to state 180
    NUM             shift and go to state 181
    VAR             shift and go to state 182
    DYNAMIC         shift and go to state 183
    LIST            shift and go to state 184
    BOOL            shift and go to state 185
    MAP             shift and go to state 186
    SET             shift and go to state 187

    objeto                         shift and go to state 177

state 95

    (104) expresionBool -> valor ISNEGADO . objeto
    (134) objeto -> . STRINGR
    (135) objeto -> . INT
    (136) objeto -> . DOUBLER
    (137) objeto -> . NUM
    (138) objeto -> . VAR
    (139) objeto -> . DYNAMIC
    (140) objeto -> . LIST
    (141) objeto -> . BOOL
    (142) objeto -> . MAP
    (143) objeto -> . SET

    STRINGR         shift and go to state 178
    INT             shift and go to state 179
    DOUBLER         shift and go to state 180
    NUM             shift and go to state 181
    VAR             shift and go to state 182
    DYNAMIC         shift and go to state 183
    LIST            shift and go to state 184
    BOOL            shift and go to state 185
    MAP             shift and go to state 186
    SET             shift and go to state 187

    objeto                         shift and go to state 188

state 96

    (85) expresion -> valor operadorMat . expresion
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool

    ENTERO          shift and go to state 134
    VARIABLE        shift and go to state 152
    DOUBLE          shift and go to state 159
    STRING          shift and go to state 160
    BOOL            shift and go to state 45
    NOT             shift and go to state 40

    valor                          shift and go to state 154
    expresion                      shift and go to state 189
    expresionString                shift and go to state 155
    expresionInt                   shift and go to state 156
    expresionDouble                shift and go to state 157
    expresionBool                  shift and go to state 158
    valorString                    shift and go to state 30
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorBool                      shift and go to state 31
    negacionBool                   shift and go to state 131
    comparacionBool                shift and go to state 161

state 97

    (91) sentenciaWhile -> WHILE PIZQ . expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> WHILE PIZQ . expresionBool PDER algoritmo
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 130
    DOUBLE          shift and go to state 43
    BOOL            shift and go to state 45
    NOT             shift and go to state 40
    ENTERO          shift and go to state 134
    STRING          shift and go to state 135

    expresionBool                  shift and go to state 190
    valorDouble                    shift and go to state 129
    valorBool                      shift and go to state 31
    negacionBool                   shift and go to state 131
    comparacionBool                shift and go to state 161
    valor                          shift and go to state 132
    valorInt                       shift and go to state 133

state 98

    (93) sentenciaDoWhile -> DO LIZQ . algoritmo LDER WHILE PIZQ expresionBool PDER
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    algoritmo                      shift and go to state 191
    expresionBool                  shift and go to state 106
    asignacion                     shift and go to state 102
    expresionInt                   shift and go to state 103
    expresionDouble                shift and go to state 104
    expresionString                shift and go to state 105
    expresion                      shift and go to state 18
    sentenciaWhile                 shift and go to state 107
    sentenciaDoWhile               shift and go to state 108
    sentenciaIf                    shift and go to state 109
    sentenciaElse                  shift and go to state 110
    imprimir                       shift and go to state 111
    funcionStdin                   shift and go to state 112
    funcionStdout                  shift and go to state 113
    negacionBool                   shift and go to state 114
    comparacionBool                shift and go to state 115
    sentenciaElseIf                shift and go to state 116
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 99

    (75) sentenciaIf -> IF PIZQ . expresionBool PDER algoritmo
    (76) sentenciaIf -> IF PIZQ . expresionBool PDER LIZQ algoritmo LDER
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 130
    DOUBLE          shift and go to state 43
    BOOL            shift and go to state 45
    NOT             shift and go to state 40
    ENTERO          shift and go to state 134
    STRING          shift and go to state 135

    expresionBool                  shift and go to state 192
    valorDouble                    shift and go to state 129
    valorBool                      shift and go to state 31
    negacionBool                   shift and go to state 131
    comparacionBool                shift and go to state 161
    valor                          shift and go to state 132
    valorInt                       shift and go to state 133

state 100

    (77) sentenciaElse -> ELSE algoritmo .

    PUNTOYCOMA      reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    INT             reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    DOUBLER         reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    NUM             reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    STRINGR         reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    BOOLR           reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    DYNAMIC         reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    VAR             reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    VARIABLE        reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    WHILE           reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    DO              reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    IF              reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    ELSE            reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    PRINT           reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    FUNCIONSTDIN    reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    FUNCIONSTDOUT   reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    NOT             reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    ELSEIF          reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    ENTERO          reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    DOUBLE          reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    STRING          reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    BOOL            reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    $end            reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)
    LDER            reduce using rule 77 (sentenciaElse -> ELSE algoritmo .)


state 101

    (78) sentenciaElse -> ELSE LIZQ . algoritmo LDER
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    algoritmo                      shift and go to state 193
    asignacion                     shift and go to state 102
    expresionInt                   shift and go to state 103
    expresionDouble                shift and go to state 104
    expresionString                shift and go to state 105
    expresionBool                  shift and go to state 106
    expresion                      shift and go to state 18
    sentenciaWhile                 shift and go to state 107
    sentenciaDoWhile               shift and go to state 108
    sentenciaIf                    shift and go to state 109
    sentenciaElse                  shift and go to state 110
    imprimir                       shift and go to state 111
    funcionStdin                   shift and go to state 112
    funcionStdout                  shift and go to state 113
    negacionBool                   shift and go to state 114
    comparacionBool                shift and go to state 115
    sentenciaElseIf                shift and go to state 116
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 102

    (41) algoritmo -> asignacion . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 194


state 103

    (42) algoritmo -> expresionInt . PUNTOYCOMA
    (88) expresion -> expresionInt .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 195
    INT             reduce using rule 88 (expresion -> expresionInt .)
    DOUBLER         reduce using rule 88 (expresion -> expresionInt .)
    NUM             reduce using rule 88 (expresion -> expresionInt .)
    STRINGR         reduce using rule 88 (expresion -> expresionInt .)
    BOOLR           reduce using rule 88 (expresion -> expresionInt .)
    DYNAMIC         reduce using rule 88 (expresion -> expresionInt .)
    VAR             reduce using rule 88 (expresion -> expresionInt .)
    VARIABLE        reduce using rule 88 (expresion -> expresionInt .)
    WHILE           reduce using rule 88 (expresion -> expresionInt .)
    DO              reduce using rule 88 (expresion -> expresionInt .)
    IF              reduce using rule 88 (expresion -> expresionInt .)
    ELSE            reduce using rule 88 (expresion -> expresionInt .)
    PRINT           reduce using rule 88 (expresion -> expresionInt .)
    FUNCIONSTDIN    reduce using rule 88 (expresion -> expresionInt .)
    FUNCIONSTDOUT   reduce using rule 88 (expresion -> expresionInt .)
    NOT             reduce using rule 88 (expresion -> expresionInt .)
    ELSEIF          reduce using rule 88 (expresion -> expresionInt .)
    ENTERO          reduce using rule 88 (expresion -> expresionInt .)
    DOUBLE          reduce using rule 88 (expresion -> expresionInt .)
    STRING          reduce using rule 88 (expresion -> expresionInt .)
    BOOL            reduce using rule 88 (expresion -> expresionInt .)
    $end            reduce using rule 88 (expresion -> expresionInt .)
    LDER            reduce using rule 88 (expresion -> expresionInt .)

  ! PUNTOYCOMA      [ reduce using rule 88 (expresion -> expresionInt .) ]


state 104

    (43) algoritmo -> expresionDouble . PUNTOYCOMA
    (89) expresion -> expresionDouble .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 196
    INT             reduce using rule 89 (expresion -> expresionDouble .)
    DOUBLER         reduce using rule 89 (expresion -> expresionDouble .)
    NUM             reduce using rule 89 (expresion -> expresionDouble .)
    STRINGR         reduce using rule 89 (expresion -> expresionDouble .)
    BOOLR           reduce using rule 89 (expresion -> expresionDouble .)
    DYNAMIC         reduce using rule 89 (expresion -> expresionDouble .)
    VAR             reduce using rule 89 (expresion -> expresionDouble .)
    VARIABLE        reduce using rule 89 (expresion -> expresionDouble .)
    WHILE           reduce using rule 89 (expresion -> expresionDouble .)
    DO              reduce using rule 89 (expresion -> expresionDouble .)
    IF              reduce using rule 89 (expresion -> expresionDouble .)
    ELSE            reduce using rule 89 (expresion -> expresionDouble .)
    PRINT           reduce using rule 89 (expresion -> expresionDouble .)
    FUNCIONSTDIN    reduce using rule 89 (expresion -> expresionDouble .)
    FUNCIONSTDOUT   reduce using rule 89 (expresion -> expresionDouble .)
    NOT             reduce using rule 89 (expresion -> expresionDouble .)
    ELSEIF          reduce using rule 89 (expresion -> expresionDouble .)
    ENTERO          reduce using rule 89 (expresion -> expresionDouble .)
    DOUBLE          reduce using rule 89 (expresion -> expresionDouble .)
    STRING          reduce using rule 89 (expresion -> expresionDouble .)
    BOOL            reduce using rule 89 (expresion -> expresionDouble .)
    $end            reduce using rule 89 (expresion -> expresionDouble .)
    LDER            reduce using rule 89 (expresion -> expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 89 (expresion -> expresionDouble .) ]


state 105

    (44) algoritmo -> expresionString . PUNTOYCOMA
    (87) expresion -> expresionString .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 197
    INT             reduce using rule 87 (expresion -> expresionString .)
    DOUBLER         reduce using rule 87 (expresion -> expresionString .)
    NUM             reduce using rule 87 (expresion -> expresionString .)
    STRINGR         reduce using rule 87 (expresion -> expresionString .)
    BOOLR           reduce using rule 87 (expresion -> expresionString .)
    DYNAMIC         reduce using rule 87 (expresion -> expresionString .)
    VAR             reduce using rule 87 (expresion -> expresionString .)
    VARIABLE        reduce using rule 87 (expresion -> expresionString .)
    WHILE           reduce using rule 87 (expresion -> expresionString .)
    DO              reduce using rule 87 (expresion -> expresionString .)
    IF              reduce using rule 87 (expresion -> expresionString .)
    ELSE            reduce using rule 87 (expresion -> expresionString .)
    PRINT           reduce using rule 87 (expresion -> expresionString .)
    FUNCIONSTDIN    reduce using rule 87 (expresion -> expresionString .)
    FUNCIONSTDOUT   reduce using rule 87 (expresion -> expresionString .)
    NOT             reduce using rule 87 (expresion -> expresionString .)
    ELSEIF          reduce using rule 87 (expresion -> expresionString .)
    ENTERO          reduce using rule 87 (expresion -> expresionString .)
    DOUBLE          reduce using rule 87 (expresion -> expresionString .)
    STRING          reduce using rule 87 (expresion -> expresionString .)
    BOOL            reduce using rule 87 (expresion -> expresionString .)
    $end            reduce using rule 87 (expresion -> expresionString .)
    LDER            reduce using rule 87 (expresion -> expresionString .)

  ! PUNTOYCOMA      [ reduce using rule 87 (expresion -> expresionString .) ]


state 106

    (45) algoritmo -> expresionBool . PUNTOYCOMA
    (90) expresion -> expresionBool .
    (106) comparacionBool -> expresionBool . operadorLogico expresionBool
    (107) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (132) operadorLogico -> . AND
    (133) operadorLogico -> . OR

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 198
    INT             reduce using rule 90 (expresion -> expresionBool .)
    DOUBLER         reduce using rule 90 (expresion -> expresionBool .)
    NUM             reduce using rule 90 (expresion -> expresionBool .)
    STRINGR         reduce using rule 90 (expresion -> expresionBool .)
    BOOLR           reduce using rule 90 (expresion -> expresionBool .)
    DYNAMIC         reduce using rule 90 (expresion -> expresionBool .)
    VAR             reduce using rule 90 (expresion -> expresionBool .)
    VARIABLE        reduce using rule 90 (expresion -> expresionBool .)
    WHILE           reduce using rule 90 (expresion -> expresionBool .)
    DO              reduce using rule 90 (expresion -> expresionBool .)
    IF              reduce using rule 90 (expresion -> expresionBool .)
    ELSE            reduce using rule 90 (expresion -> expresionBool .)
    PRINT           reduce using rule 90 (expresion -> expresionBool .)
    FUNCIONSTDIN    reduce using rule 90 (expresion -> expresionBool .)
    FUNCIONSTDOUT   reduce using rule 90 (expresion -> expresionBool .)
    NOT             reduce using rule 90 (expresion -> expresionBool .)
    ELSEIF          reduce using rule 90 (expresion -> expresionBool .)
    ENTERO          reduce using rule 90 (expresion -> expresionBool .)
    DOUBLE          reduce using rule 90 (expresion -> expresionBool .)
    STRING          reduce using rule 90 (expresion -> expresionBool .)
    BOOL            reduce using rule 90 (expresion -> expresionBool .)
    $end            reduce using rule 90 (expresion -> expresionBool .)
    LDER            reduce using rule 90 (expresion -> expresionBool .)
    AND             shift and go to state 53
    OR              shift and go to state 54

  ! PUNTOYCOMA      [ reduce using rule 90 (expresion -> expresionBool .) ]

    operadorLogico                 shift and go to state 52

state 107

    (47) algoritmo -> sentenciaWhile .
    (48) algoritmo -> sentenciaWhile . PUNTOYCOMA

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    INT             reduce using rule 47 (algoritmo -> sentenciaWhile .)
    DOUBLER         reduce using rule 47 (algoritmo -> sentenciaWhile .)
    NUM             reduce using rule 47 (algoritmo -> sentenciaWhile .)
    STRINGR         reduce using rule 47 (algoritmo -> sentenciaWhile .)
    BOOLR           reduce using rule 47 (algoritmo -> sentenciaWhile .)
    DYNAMIC         reduce using rule 47 (algoritmo -> sentenciaWhile .)
    VAR             reduce using rule 47 (algoritmo -> sentenciaWhile .)
    VARIABLE        reduce using rule 47 (algoritmo -> sentenciaWhile .)
    WHILE           reduce using rule 47 (algoritmo -> sentenciaWhile .)
    DO              reduce using rule 47 (algoritmo -> sentenciaWhile .)
    IF              reduce using rule 47 (algoritmo -> sentenciaWhile .)
    ELSE            reduce using rule 47 (algoritmo -> sentenciaWhile .)
    PRINT           reduce using rule 47 (algoritmo -> sentenciaWhile .)
    FUNCIONSTDIN    reduce using rule 47 (algoritmo -> sentenciaWhile .)
    FUNCIONSTDOUT   reduce using rule 47 (algoritmo -> sentenciaWhile .)
    NOT             reduce using rule 47 (algoritmo -> sentenciaWhile .)
    ELSEIF          reduce using rule 47 (algoritmo -> sentenciaWhile .)
    ENTERO          reduce using rule 47 (algoritmo -> sentenciaWhile .)
    DOUBLE          reduce using rule 47 (algoritmo -> sentenciaWhile .)
    STRING          reduce using rule 47 (algoritmo -> sentenciaWhile .)
    BOOL            reduce using rule 47 (algoritmo -> sentenciaWhile .)
    $end            reduce using rule 47 (algoritmo -> sentenciaWhile .)
    LDER            reduce using rule 47 (algoritmo -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 199

  ! PUNTOYCOMA      [ reduce using rule 47 (algoritmo -> sentenciaWhile .) ]


state 108

    (49) algoritmo -> sentenciaDoWhile . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 200


state 109

    (50) algoritmo -> sentenciaIf . PUNTOYCOMA
    (51) algoritmo -> sentenciaIf .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 201
    INT             reduce using rule 51 (algoritmo -> sentenciaIf .)
    DOUBLER         reduce using rule 51 (algoritmo -> sentenciaIf .)
    NUM             reduce using rule 51 (algoritmo -> sentenciaIf .)
    STRINGR         reduce using rule 51 (algoritmo -> sentenciaIf .)
    BOOLR           reduce using rule 51 (algoritmo -> sentenciaIf .)
    DYNAMIC         reduce using rule 51 (algoritmo -> sentenciaIf .)
    VAR             reduce using rule 51 (algoritmo -> sentenciaIf .)
    VARIABLE        reduce using rule 51 (algoritmo -> sentenciaIf .)
    WHILE           reduce using rule 51 (algoritmo -> sentenciaIf .)
    DO              reduce using rule 51 (algoritmo -> sentenciaIf .)
    IF              reduce using rule 51 (algoritmo -> sentenciaIf .)
    ELSE            reduce using rule 51 (algoritmo -> sentenciaIf .)
    PRINT           reduce using rule 51 (algoritmo -> sentenciaIf .)
    FUNCIONSTDIN    reduce using rule 51 (algoritmo -> sentenciaIf .)
    FUNCIONSTDOUT   reduce using rule 51 (algoritmo -> sentenciaIf .)
    NOT             reduce using rule 51 (algoritmo -> sentenciaIf .)
    ELSEIF          reduce using rule 51 (algoritmo -> sentenciaIf .)
    ENTERO          reduce using rule 51 (algoritmo -> sentenciaIf .)
    DOUBLE          reduce using rule 51 (algoritmo -> sentenciaIf .)
    STRING          reduce using rule 51 (algoritmo -> sentenciaIf .)
    BOOL            reduce using rule 51 (algoritmo -> sentenciaIf .)
    $end            reduce using rule 51 (algoritmo -> sentenciaIf .)
    LDER            reduce using rule 51 (algoritmo -> sentenciaIf .)

  ! PUNTOYCOMA      [ reduce using rule 51 (algoritmo -> sentenciaIf .) ]


state 110

    (52) algoritmo -> sentenciaElse . PUNTOYCOMA
    (53) algoritmo -> sentenciaElse .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 202
    INT             reduce using rule 53 (algoritmo -> sentenciaElse .)
    DOUBLER         reduce using rule 53 (algoritmo -> sentenciaElse .)
    NUM             reduce using rule 53 (algoritmo -> sentenciaElse .)
    STRINGR         reduce using rule 53 (algoritmo -> sentenciaElse .)
    BOOLR           reduce using rule 53 (algoritmo -> sentenciaElse .)
    DYNAMIC         reduce using rule 53 (algoritmo -> sentenciaElse .)
    VAR             reduce using rule 53 (algoritmo -> sentenciaElse .)
    VARIABLE        reduce using rule 53 (algoritmo -> sentenciaElse .)
    WHILE           reduce using rule 53 (algoritmo -> sentenciaElse .)
    DO              reduce using rule 53 (algoritmo -> sentenciaElse .)
    IF              reduce using rule 53 (algoritmo -> sentenciaElse .)
    ELSE            reduce using rule 53 (algoritmo -> sentenciaElse .)
    PRINT           reduce using rule 53 (algoritmo -> sentenciaElse .)
    FUNCIONSTDIN    reduce using rule 53 (algoritmo -> sentenciaElse .)
    FUNCIONSTDOUT   reduce using rule 53 (algoritmo -> sentenciaElse .)
    NOT             reduce using rule 53 (algoritmo -> sentenciaElse .)
    ELSEIF          reduce using rule 53 (algoritmo -> sentenciaElse .)
    ENTERO          reduce using rule 53 (algoritmo -> sentenciaElse .)
    DOUBLE          reduce using rule 53 (algoritmo -> sentenciaElse .)
    STRING          reduce using rule 53 (algoritmo -> sentenciaElse .)
    BOOL            reduce using rule 53 (algoritmo -> sentenciaElse .)
    $end            reduce using rule 53 (algoritmo -> sentenciaElse .)
    LDER            reduce using rule 53 (algoritmo -> sentenciaElse .)

  ! PUNTOYCOMA      [ reduce using rule 53 (algoritmo -> sentenciaElse .) ]


state 111

    (54) algoritmo -> imprimir . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 203


state 112

    (55) algoritmo -> funcionStdin . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 204


state 113

    (56) algoritmo -> funcionStdout . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 205


state 114

    (57) algoritmo -> negacionBool . PUNTOYCOMA
    (101) expresionBool -> negacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 206
    AND             reduce using rule 101 (expresionBool -> negacionBool .)
    OR              reduce using rule 101 (expresionBool -> negacionBool .)
    INT             reduce using rule 101 (expresionBool -> negacionBool .)
    DOUBLER         reduce using rule 101 (expresionBool -> negacionBool .)
    NUM             reduce using rule 101 (expresionBool -> negacionBool .)
    STRINGR         reduce using rule 101 (expresionBool -> negacionBool .)
    BOOLR           reduce using rule 101 (expresionBool -> negacionBool .)
    DYNAMIC         reduce using rule 101 (expresionBool -> negacionBool .)
    VAR             reduce using rule 101 (expresionBool -> negacionBool .)
    VARIABLE        reduce using rule 101 (expresionBool -> negacionBool .)
    WHILE           reduce using rule 101 (expresionBool -> negacionBool .)
    DO              reduce using rule 101 (expresionBool -> negacionBool .)
    IF              reduce using rule 101 (expresionBool -> negacionBool .)
    ELSE            reduce using rule 101 (expresionBool -> negacionBool .)
    PRINT           reduce using rule 101 (expresionBool -> negacionBool .)
    FUNCIONSTDIN    reduce using rule 101 (expresionBool -> negacionBool .)
    FUNCIONSTDOUT   reduce using rule 101 (expresionBool -> negacionBool .)
    NOT             reduce using rule 101 (expresionBool -> negacionBool .)
    ELSEIF          reduce using rule 101 (expresionBool -> negacionBool .)
    ENTERO          reduce using rule 101 (expresionBool -> negacionBool .)
    DOUBLE          reduce using rule 101 (expresionBool -> negacionBool .)
    STRING          reduce using rule 101 (expresionBool -> negacionBool .)
    BOOL            reduce using rule 101 (expresionBool -> negacionBool .)
    $end            reduce using rule 101 (expresionBool -> negacionBool .)
    LDER            reduce using rule 101 (expresionBool -> negacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 101 (expresionBool -> negacionBool .) ]


state 115

    (58) algoritmo -> comparacionBool . PUNTOYCOMA
    (102) expresionBool -> comparacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 207
    AND             reduce using rule 102 (expresionBool -> comparacionBool .)
    OR              reduce using rule 102 (expresionBool -> comparacionBool .)
    INT             reduce using rule 102 (expresionBool -> comparacionBool .)
    DOUBLER         reduce using rule 102 (expresionBool -> comparacionBool .)
    NUM             reduce using rule 102 (expresionBool -> comparacionBool .)
    STRINGR         reduce using rule 102 (expresionBool -> comparacionBool .)
    BOOLR           reduce using rule 102 (expresionBool -> comparacionBool .)
    DYNAMIC         reduce using rule 102 (expresionBool -> comparacionBool .)
    VAR             reduce using rule 102 (expresionBool -> comparacionBool .)
    VARIABLE        reduce using rule 102 (expresionBool -> comparacionBool .)
    WHILE           reduce using rule 102 (expresionBool -> comparacionBool .)
    DO              reduce using rule 102 (expresionBool -> comparacionBool .)
    IF              reduce using rule 102 (expresionBool -> comparacionBool .)
    ELSE            reduce using rule 102 (expresionBool -> comparacionBool .)
    PRINT           reduce using rule 102 (expresionBool -> comparacionBool .)
    FUNCIONSTDIN    reduce using rule 102 (expresionBool -> comparacionBool .)
    FUNCIONSTDOUT   reduce using rule 102 (expresionBool -> comparacionBool .)
    NOT             reduce using rule 102 (expresionBool -> comparacionBool .)
    ELSEIF          reduce using rule 102 (expresionBool -> comparacionBool .)
    ENTERO          reduce using rule 102 (expresionBool -> comparacionBool .)
    DOUBLE          reduce using rule 102 (expresionBool -> comparacionBool .)
    STRING          reduce using rule 102 (expresionBool -> comparacionBool .)
    BOOL            reduce using rule 102 (expresionBool -> comparacionBool .)
    $end            reduce using rule 102 (expresionBool -> comparacionBool .)
    LDER            reduce using rule 102 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 102 (expresionBool -> comparacionBool .) ]


state 116

    (59) algoritmo -> sentenciaElseIf .
    (60) algoritmo -> sentenciaElseIf . PUNTOYCOMA

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    INT             reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    DOUBLER         reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    NUM             reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    STRINGR         reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    BOOLR           reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    DYNAMIC         reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    VAR             reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    VARIABLE        reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    WHILE           reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    DO              reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    IF              reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    ELSE            reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    PRINT           reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    FUNCIONSTDIN    reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    FUNCIONSTDOUT   reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    NOT             reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    ELSEIF          reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    ENTERO          reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    DOUBLE          reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    STRING          reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    BOOL            reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    $end            reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    LDER            reduce using rule 59 (algoritmo -> sentenciaElseIf .)
    PUNTOYCOMA      shift and go to state 208

  ! PUNTOYCOMA      [ reduce using rule 59 (algoritmo -> sentenciaElseIf .) ]


state 117

    (70) imprimir -> PRINT PIZQ . expresion PDER
    (71) imprimir -> PRINT PIZQ . asignacionSimple PDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool

    VARIABLE        shift and go to state 211
    ENTERO          shift and go to state 134
    DOUBLE          shift and go to state 159
    STRING          shift and go to state 160
    BOOL            shift and go to state 45
    NOT             shift and go to state 40

    expresion                      shift and go to state 209
    asignacionSimple               shift and go to state 210
    valor                          shift and go to state 154
    expresionString                shift and go to state 155
    expresionInt                   shift and go to state 156
    expresionDouble                shift and go to state 157
    expresionBool                  shift and go to state 158
    valorString                    shift and go to state 30
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorBool                      shift and go to state 31
    negacionBool                   shift and go to state 131
    comparacionBool                shift and go to state 161

state 118

    (73) funcionStdout -> FUNCIONSTDOUT PIZQ . expresion PDER
    (74) funcionStdout -> FUNCIONSTDOUT PIZQ . asignacionSimple PDER
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool

    VARIABLE        shift and go to state 211
    ENTERO          shift and go to state 134
    DOUBLE          shift and go to state 159
    STRING          shift and go to state 160
    BOOL            shift and go to state 45
    NOT             shift and go to state 40

    expresion                      shift and go to state 212
    asignacionSimple               shift and go to state 213
    valor                          shift and go to state 154
    expresionString                shift and go to state 155
    expresionInt                   shift and go to state 156
    expresionDouble                shift and go to state 157
    expresionBool                  shift and go to state 158
    valorString                    shift and go to state 30
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorBool                      shift and go to state 31
    negacionBool                   shift and go to state 131
    comparacionBool                shift and go to state 161

state 119

    (105) negacionBool -> NOT PIZQ . expresionBool PDER
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 130
    DOUBLE          shift and go to state 43
    BOOL            shift and go to state 45
    NOT             shift and go to state 40
    ENTERO          shift and go to state 134
    STRING          shift and go to state 135

    expresionBool                  shift and go to state 214
    valorDouble                    shift and go to state 129
    valorBool                      shift and go to state 31
    negacionBool                   shift and go to state 131
    comparacionBool                shift and go to state 161
    valor                          shift and go to state 132
    valorInt                       shift and go to state 133

state 120

    (79) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER algoritmo
    (80) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER LIZQ algoritmo LDER
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 130
    DOUBLE          shift and go to state 43
    BOOL            shift and go to state 45
    NOT             shift and go to state 40
    ENTERO          shift and go to state 134
    STRING          shift and go to state 135

    expresionBool                  shift and go to state 215
    valorDouble                    shift and go to state 129
    valorBool                      shift and go to state 31
    negacionBool                   shift and go to state 131
    comparacionBool                shift and go to state 161
    valor                          shift and go to state 132
    valorInt                       shift and go to state 133

state 121

    (2) final -> algoritmo PUNTOYCOMA final .

    $end            reduce using rule 2 (final -> algoritmo PUNTOYCOMA final .)


state 122

    (4) final -> asignacion PUNTOYCOMA final .

    $end            reduce using rule 4 (final -> asignacion PUNTOYCOMA final .)


state 123

    (6) final -> expresionInt PUNTOYCOMA final .

    $end            reduce using rule 6 (final -> expresionInt PUNTOYCOMA final .)


state 124

    (8) final -> expresionDouble PUNTOYCOMA final .

    $end            reduce using rule 8 (final -> expresionDouble PUNTOYCOMA final .)


state 125

    (10) final -> expresionString PUNTOYCOMA final .

    $end            reduce using rule 10 (final -> expresionString PUNTOYCOMA final .)


state 126

    (12) final -> expresionBool PUNTOYCOMA final .

    $end            reduce using rule 12 (final -> expresionBool PUNTOYCOMA final .)


state 127

    (106) comparacionBool -> expresionBool operadorLogico expresionBool .
    (106) comparacionBool -> expresionBool . operadorLogico expresionBool
    (107) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (132) operadorLogico -> . AND
    (133) operadorLogico -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNTOYCOMA      reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    INT             reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    DOUBLER         reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    NUM             reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    STRINGR         reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    BOOLR           reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    DYNAMIC         reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    VAR             reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    VARIABLE        reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    WHILE           reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    DO              reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    IF              reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    ELSE            reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    PRINT           reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    FUNCIONSTDIN    reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    FUNCIONSTDOUT   reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    NOT             reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    ELSEIF          reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    ENTERO          reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    DOUBLE          reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    STRING          reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    BOOL            reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    $end            reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    LDER            reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    PDER            reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    AND             shift and go to state 53
    OR              shift and go to state 54

  ! AND             [ reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]
  ! OR              [ reduce using rule 106 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]

    operadorLogico                 shift and go to state 52

state 128

    (107) comparacionBool -> expresionBool operadorLogico comparacionBool .
    (102) expresionBool -> comparacionBool .

  ! reduce/reduce conflict for AND resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for OR resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for INT resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for NUM resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for STRINGR resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for BOOLR resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for VAR resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for WHILE resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for DO resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for IF resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for ELSE resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PRINT resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for NOT resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for ENTERO resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for STRING resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for BOOL resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for $end resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for LDER resolved using rule 102 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PDER resolved using rule 102 (expresionBool -> comparacionBool .)
    AND             reduce using rule 102 (expresionBool -> comparacionBool .)
    OR              reduce using rule 102 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 102 (expresionBool -> comparacionBool .)
    INT             reduce using rule 102 (expresionBool -> comparacionBool .)
    DOUBLER         reduce using rule 102 (expresionBool -> comparacionBool .)
    NUM             reduce using rule 102 (expresionBool -> comparacionBool .)
    STRINGR         reduce using rule 102 (expresionBool -> comparacionBool .)
    BOOLR           reduce using rule 102 (expresionBool -> comparacionBool .)
    DYNAMIC         reduce using rule 102 (expresionBool -> comparacionBool .)
    VAR             reduce using rule 102 (expresionBool -> comparacionBool .)
    VARIABLE        reduce using rule 102 (expresionBool -> comparacionBool .)
    WHILE           reduce using rule 102 (expresionBool -> comparacionBool .)
    DO              reduce using rule 102 (expresionBool -> comparacionBool .)
    IF              reduce using rule 102 (expresionBool -> comparacionBool .)
    ELSE            reduce using rule 102 (expresionBool -> comparacionBool .)
    PRINT           reduce using rule 102 (expresionBool -> comparacionBool .)
    FUNCIONSTDIN    reduce using rule 102 (expresionBool -> comparacionBool .)
    FUNCIONSTDOUT   reduce using rule 102 (expresionBool -> comparacionBool .)
    NOT             reduce using rule 102 (expresionBool -> comparacionBool .)
    ELSEIF          reduce using rule 102 (expresionBool -> comparacionBool .)
    ENTERO          reduce using rule 102 (expresionBool -> comparacionBool .)
    DOUBLE          reduce using rule 102 (expresionBool -> comparacionBool .)
    STRING          reduce using rule 102 (expresionBool -> comparacionBool .)
    BOOL            reduce using rule 102 (expresionBool -> comparacionBool .)
    $end            reduce using rule 102 (expresionBool -> comparacionBool .)
    LDER            reduce using rule 102 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 102 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! AND             [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! OR              [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! INT             [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! DOUBLER         [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! NUM             [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! STRINGR         [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! BOOLR           [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! DYNAMIC         [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! VAR             [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! VARIABLE        [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! WHILE           [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! DO              [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! IF              [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! ELSE            [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! PRINT           [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! FUNCIONSTDIN    [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! NOT             [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! ELSEIF          [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! ENTERO          [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! DOUBLE          [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! STRING          [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! BOOL            [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! $end            [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! LDER            [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! PDER            [ reduce using rule 107 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]


state 129

    (96) expresionBool -> valorDouble . comparadorMat expresionDouble
    (99) expresionBool -> valorDouble . comparadorMat VARIABLE
    (126) comparadorMat -> . DIGUAL
    (127) comparadorMat -> . NOIGUAL
    (128) comparadorMat -> . MAYOR
    (129) comparadorMat -> . MENOR
    (130) comparadorMat -> . MAYIGUAL
    (131) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 72
    NOIGUAL         shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYIGUAL        shift and go to state 76
    MENIGUAL        shift and go to state 77

    comparadorMat                  shift and go to state 92

state 130

    (97) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (98) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (95) valorBool -> VARIABLE .
    (82) valor -> VARIABLE .
    (113) valorInt -> VARIABLE .
    (126) comparadorMat -> . DIGUAL
    (127) comparadorMat -> . NOIGUAL
    (128) comparadorMat -> . MAYOR
    (129) comparadorMat -> . MENOR
    (130) comparadorMat -> . MAYIGUAL
    (131) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    AND             reduce using rule 95 (valorBool -> VARIABLE .)
    OR              reduce using rule 95 (valorBool -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 95 (valorBool -> VARIABLE .)
    INT             reduce using rule 95 (valorBool -> VARIABLE .)
    DOUBLER         reduce using rule 95 (valorBool -> VARIABLE .)
    NUM             reduce using rule 95 (valorBool -> VARIABLE .)
    STRINGR         reduce using rule 95 (valorBool -> VARIABLE .)
    BOOLR           reduce using rule 95 (valorBool -> VARIABLE .)
    DYNAMIC         reduce using rule 95 (valorBool -> VARIABLE .)
    VAR             reduce using rule 95 (valorBool -> VARIABLE .)
    VARIABLE        reduce using rule 95 (valorBool -> VARIABLE .)
    WHILE           reduce using rule 95 (valorBool -> VARIABLE .)
    DO              reduce using rule 95 (valorBool -> VARIABLE .)
    IF              reduce using rule 95 (valorBool -> VARIABLE .)
    ELSE            reduce using rule 95 (valorBool -> VARIABLE .)
    PRINT           reduce using rule 95 (valorBool -> VARIABLE .)
    FUNCIONSTDIN    reduce using rule 95 (valorBool -> VARIABLE .)
    FUNCIONSTDOUT   reduce using rule 95 (valorBool -> VARIABLE .)
    NOT             reduce using rule 95 (valorBool -> VARIABLE .)
    ELSEIF          reduce using rule 95 (valorBool -> VARIABLE .)
    ENTERO          reduce using rule 95 (valorBool -> VARIABLE .)
    DOUBLE          reduce using rule 95 (valorBool -> VARIABLE .)
    STRING          reduce using rule 95 (valorBool -> VARIABLE .)
    BOOL            reduce using rule 95 (valorBool -> VARIABLE .)
    $end            reduce using rule 95 (valorBool -> VARIABLE .)
    LDER            reduce using rule 95 (valorBool -> VARIABLE .)
    PDER            reduce using rule 95 (valorBool -> VARIABLE .)
    IS              reduce using rule 82 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 82 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 72
    NOIGUAL         shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYIGUAL        shift and go to state 76
    MENIGUAL        shift and go to state 77

  ! DIGUAL          [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 113 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 70

state 131

    (101) expresionBool -> negacionBool .

    AND             reduce using rule 101 (expresionBool -> negacionBool .)
    OR              reduce using rule 101 (expresionBool -> negacionBool .)
    PUNTOYCOMA      reduce using rule 101 (expresionBool -> negacionBool .)
    INT             reduce using rule 101 (expresionBool -> negacionBool .)
    DOUBLER         reduce using rule 101 (expresionBool -> negacionBool .)
    NUM             reduce using rule 101 (expresionBool -> negacionBool .)
    STRINGR         reduce using rule 101 (expresionBool -> negacionBool .)
    BOOLR           reduce using rule 101 (expresionBool -> negacionBool .)
    DYNAMIC         reduce using rule 101 (expresionBool -> negacionBool .)
    VAR             reduce using rule 101 (expresionBool -> negacionBool .)
    VARIABLE        reduce using rule 101 (expresionBool -> negacionBool .)
    WHILE           reduce using rule 101 (expresionBool -> negacionBool .)
    DO              reduce using rule 101 (expresionBool -> negacionBool .)
    IF              reduce using rule 101 (expresionBool -> negacionBool .)
    ELSE            reduce using rule 101 (expresionBool -> negacionBool .)
    PRINT           reduce using rule 101 (expresionBool -> negacionBool .)
    FUNCIONSTDIN    reduce using rule 101 (expresionBool -> negacionBool .)
    FUNCIONSTDOUT   reduce using rule 101 (expresionBool -> negacionBool .)
    NOT             reduce using rule 101 (expresionBool -> negacionBool .)
    ELSEIF          reduce using rule 101 (expresionBool -> negacionBool .)
    ENTERO          reduce using rule 101 (expresionBool -> negacionBool .)
    DOUBLE          reduce using rule 101 (expresionBool -> negacionBool .)
    STRING          reduce using rule 101 (expresionBool -> negacionBool .)
    BOOL            reduce using rule 101 (expresionBool -> negacionBool .)
    $end            reduce using rule 101 (expresionBool -> negacionBool .)
    LDER            reduce using rule 101 (expresionBool -> negacionBool .)
    PDER            reduce using rule 101 (expresionBool -> negacionBool .)


state 132

    (103) expresionBool -> valor . IS objeto
    (104) expresionBool -> valor . ISNEGADO objeto

    IS              shift and go to state 94
    ISNEGADO        shift and go to state 95


state 133

    (117) valorDouble -> valorInt .

    DIGUAL          reduce using rule 117 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 117 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 117 (valorDouble -> valorInt .)
    MENOR           reduce using rule 117 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 117 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 117 (valorDouble -> valorInt .)
    SUMA            reduce using rule 117 (valorDouble -> valorInt .)
    RESTA           reduce using rule 117 (valorDouble -> valorInt .)
    MULTI           reduce using rule 117 (valorDouble -> valorInt .)
    DIV             reduce using rule 117 (valorDouble -> valorInt .)
    DIVENTERO       reduce using rule 117 (valorDouble -> valorInt .)
    MOD             reduce using rule 117 (valorDouble -> valorInt .)
    PUNTOYCOMA      reduce using rule 117 (valorDouble -> valorInt .)
    AND             reduce using rule 117 (valorDouble -> valorInt .)
    OR              reduce using rule 117 (valorDouble -> valorInt .)
    INT             reduce using rule 117 (valorDouble -> valorInt .)
    DOUBLER         reduce using rule 117 (valorDouble -> valorInt .)
    NUM             reduce using rule 117 (valorDouble -> valorInt .)
    STRINGR         reduce using rule 117 (valorDouble -> valorInt .)
    BOOLR           reduce using rule 117 (valorDouble -> valorInt .)
    DYNAMIC         reduce using rule 117 (valorDouble -> valorInt .)
    VAR             reduce using rule 117 (valorDouble -> valorInt .)
    VARIABLE        reduce using rule 117 (valorDouble -> valorInt .)
    WHILE           reduce using rule 117 (valorDouble -> valorInt .)
    DO              reduce using rule 117 (valorDouble -> valorInt .)
    IF              reduce using rule 117 (valorDouble -> valorInt .)
    ELSE            reduce using rule 117 (valorDouble -> valorInt .)
    PRINT           reduce using rule 117 (valorDouble -> valorInt .)
    FUNCIONSTDIN    reduce using rule 117 (valorDouble -> valorInt .)
    FUNCIONSTDOUT   reduce using rule 117 (valorDouble -> valorInt .)
    NOT             reduce using rule 117 (valorDouble -> valorInt .)
    ELSEIF          reduce using rule 117 (valorDouble -> valorInt .)
    ENTERO          reduce using rule 117 (valorDouble -> valorInt .)
    DOUBLE          reduce using rule 117 (valorDouble -> valorInt .)
    STRING          reduce using rule 117 (valorDouble -> valorInt .)
    BOOL            reduce using rule 117 (valorDouble -> valorInt .)
    $end            reduce using rule 117 (valorDouble -> valorInt .)
    LDER            reduce using rule 117 (valorDouble -> valorInt .)
    PDER            reduce using rule 117 (valorDouble -> valorInt .)


state 134

    (81) valor -> ENTERO .
    (112) valorInt -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for PDER resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for INT resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for NUM resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRINGR resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOLR resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for VAR resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for WHILE resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for DO resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for IF resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for ELSE resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for PRINT resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for NOT resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for ENTERO resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for STRING resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for BOOL resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for $end resolved using rule 81 (valor -> ENTERO .)
  ! reduce/reduce conflict for LDER resolved using rule 81 (valor -> ENTERO .)
    IS              reduce using rule 81 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 81 (valor -> ENTERO .)
    SUMA            reduce using rule 81 (valor -> ENTERO .)
    RESTA           reduce using rule 81 (valor -> ENTERO .)
    MULTI           reduce using rule 81 (valor -> ENTERO .)
    DIV             reduce using rule 81 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 81 (valor -> ENTERO .)
    MOD             reduce using rule 81 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 81 (valor -> ENTERO .)
    PDER            reduce using rule 81 (valor -> ENTERO .)
    INT             reduce using rule 81 (valor -> ENTERO .)
    DOUBLER         reduce using rule 81 (valor -> ENTERO .)
    NUM             reduce using rule 81 (valor -> ENTERO .)
    STRINGR         reduce using rule 81 (valor -> ENTERO .)
    BOOLR           reduce using rule 81 (valor -> ENTERO .)
    DYNAMIC         reduce using rule 81 (valor -> ENTERO .)
    VAR             reduce using rule 81 (valor -> ENTERO .)
    VARIABLE        reduce using rule 81 (valor -> ENTERO .)
    WHILE           reduce using rule 81 (valor -> ENTERO .)
    DO              reduce using rule 81 (valor -> ENTERO .)
    IF              reduce using rule 81 (valor -> ENTERO .)
    ELSE            reduce using rule 81 (valor -> ENTERO .)
    PRINT           reduce using rule 81 (valor -> ENTERO .)
    FUNCIONSTDIN    reduce using rule 81 (valor -> ENTERO .)
    FUNCIONSTDOUT   reduce using rule 81 (valor -> ENTERO .)
    NOT             reduce using rule 81 (valor -> ENTERO .)
    ELSEIF          reduce using rule 81 (valor -> ENTERO .)
    ENTERO          reduce using rule 81 (valor -> ENTERO .)
    DOUBLE          reduce using rule 81 (valor -> ENTERO .)
    STRING          reduce using rule 81 (valor -> ENTERO .)
    BOOL            reduce using rule 81 (valor -> ENTERO .)
    $end            reduce using rule 81 (valor -> ENTERO .)
    LDER            reduce using rule 81 (valor -> ENTERO .)
    DIGUAL          reduce using rule 112 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 112 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 112 (valorInt -> ENTERO .)
    MENOR           reduce using rule 112 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 112 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 112 (valorInt -> ENTERO .)

  ! SUMA            [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! PDER            [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! INT             [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! DOUBLER         [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! NUM             [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! STRINGR         [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! BOOLR           [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! DYNAMIC         [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! VAR             [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! VARIABLE        [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! WHILE           [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! DO              [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! IF              [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! ELSE            [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! PRINT           [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! FUNCIONSTDIN    [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! NOT             [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! ELSEIF          [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! ENTERO          [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! DOUBLE          [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! STRING          [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! BOOL            [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! $end            [ reduce using rule 112 (valorInt -> ENTERO .) ]
  ! LDER            [ reduce using rule 112 (valorInt -> ENTERO .) ]


state 135

    (84) valor -> STRING .

    IS              reduce using rule 84 (valor -> STRING .)
    ISNEGADO        reduce using rule 84 (valor -> STRING .)


state 136

    (16) final -> sentenciaWhile PUNTOYCOMA final .

    $end            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)


state 137

    (18) final -> sentenciaDoWhile PUNTOYCOMA final .

    $end            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)


state 138

    (20) final -> sentenciaIf PUNTOYCOMA final .

    $end            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)


state 139

    (24) final -> sentenciaElse PUNTOYCOMA final .

    $end            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)


state 140

    (28) final -> imprimir PUNTOYCOMA final .

    $end            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)


state 141

    (30) final -> funcionStdin PUNTOYCOMA final .

    $end            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)


state 142

    (32) final -> funcionStdout PUNTOYCOMA final .

    $end            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)


state 143

    (34) final -> negacionBool PUNTOYCOMA final .

    $end            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)


state 144

    (35) final -> comparacionBool PUNTOYCOMA final .

    $end            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)


state 145

    (37) final -> sentenciaElseIf PUNTOYCOMA final .

    $end            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)


state 146

    (61) asignacion -> INT VARIABLE IGUAL . expresionInt
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE

    ENTERO          shift and go to state 151
    VARIABLE        shift and go to state 170

    expresionInt                   shift and go to state 216
    valorInt                       shift and go to state 168

state 147

    (98) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (113) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    INT             reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DOUBLER         reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    NUM             reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    STRINGR         reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    BOOLR           reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DYNAMIC         reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    VAR             reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    VARIABLE        reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    WHILE           reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DO              reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    IF              reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    ELSE            reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PRINT           reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    FUNCIONSTDIN    reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    FUNCIONSTDOUT   reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    NOT             reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    ELSEIF          reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    ENTERO          reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    DOUBLE          reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    STRING          reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    BOOL            reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    $end            reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    LDER            reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PDER            reduce using rule 98 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 113 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 113 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 113 (valorInt -> VARIABLE .)
    DIV             reduce using rule 113 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 113 (valorInt -> VARIABLE .)
    MOD             reduce using rule 113 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! NOT             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 113 (valorInt -> VARIABLE .) ]


state 148

    (97) expresionBool -> VARIABLE comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    INT             reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DOUBLER         reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    NUM             reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    STRINGR         reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    BOOLR           reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DYNAMIC         reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    VAR             reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    VARIABLE        reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    WHILE           reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DO              reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    IF              reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    ELSE            reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PRINT           reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    FUNCIONSTDIN    reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    FUNCIONSTDOUT   reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    NOT             reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    ELSEIF          reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    ENTERO          reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    DOUBLE          reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    STRING          reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    BOOL            reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    $end            reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    LDER            reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PDER            reduce using rule 97 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 149

    (118) expresionDouble -> valorDouble . operadorMat expresionDouble
    (119) expresionDouble -> valorDouble .
    (120) operadorMat -> . SUMA
    (121) operadorMat -> . RESTA
    (122) operadorMat -> . MULTI
    (123) operadorMat -> . DIV
    (124) operadorMat -> . DIVENTERO
    (125) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 119 (expresionDouble -> valorDouble .)
    AND             reduce using rule 119 (expresionDouble -> valorDouble .)
    OR              reduce using rule 119 (expresionDouble -> valorDouble .)
    INT             reduce using rule 119 (expresionDouble -> valorDouble .)
    DOUBLER         reduce using rule 119 (expresionDouble -> valorDouble .)
    NUM             reduce using rule 119 (expresionDouble -> valorDouble .)
    STRINGR         reduce using rule 119 (expresionDouble -> valorDouble .)
    BOOLR           reduce using rule 119 (expresionDouble -> valorDouble .)
    DYNAMIC         reduce using rule 119 (expresionDouble -> valorDouble .)
    VAR             reduce using rule 119 (expresionDouble -> valorDouble .)
    VARIABLE        reduce using rule 119 (expresionDouble -> valorDouble .)
    WHILE           reduce using rule 119 (expresionDouble -> valorDouble .)
    DO              reduce using rule 119 (expresionDouble -> valorDouble .)
    IF              reduce using rule 119 (expresionDouble -> valorDouble .)
    ELSE            reduce using rule 119 (expresionDouble -> valorDouble .)
    PRINT           reduce using rule 119 (expresionDouble -> valorDouble .)
    FUNCIONSTDIN    reduce using rule 119 (expresionDouble -> valorDouble .)
    FUNCIONSTDOUT   reduce using rule 119 (expresionDouble -> valorDouble .)
    NOT             reduce using rule 119 (expresionDouble -> valorDouble .)
    ELSEIF          reduce using rule 119 (expresionDouble -> valorDouble .)
    ENTERO          reduce using rule 119 (expresionDouble -> valorDouble .)
    DOUBLE          reduce using rule 119 (expresionDouble -> valorDouble .)
    STRING          reduce using rule 119 (expresionDouble -> valorDouble .)
    BOOL            reduce using rule 119 (expresionDouble -> valorDouble .)
    $end            reduce using rule 119 (expresionDouble -> valorDouble .)
    LDER            reduce using rule 119 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 119 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 85
    RESTA           shift and go to state 86
    MULTI           shift and go to state 87
    DIV             shift and go to state 88
    DIVENTERO       shift and go to state 89
    MOD             shift and go to state 90

    operadorMat                    shift and go to state 91

state 150

    (116) valorDouble -> DOUBLE .

    SUMA            reduce using rule 116 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 116 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 116 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 116 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 116 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 116 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 116 (valorDouble -> DOUBLE .)
    AND             reduce using rule 116 (valorDouble -> DOUBLE .)
    OR              reduce using rule 116 (valorDouble -> DOUBLE .)
    INT             reduce using rule 116 (valorDouble -> DOUBLE .)
    DOUBLER         reduce using rule 116 (valorDouble -> DOUBLE .)
    NUM             reduce using rule 116 (valorDouble -> DOUBLE .)
    STRINGR         reduce using rule 116 (valorDouble -> DOUBLE .)
    BOOLR           reduce using rule 116 (valorDouble -> DOUBLE .)
    DYNAMIC         reduce using rule 116 (valorDouble -> DOUBLE .)
    VAR             reduce using rule 116 (valorDouble -> DOUBLE .)
    VARIABLE        reduce using rule 116 (valorDouble -> DOUBLE .)
    WHILE           reduce using rule 116 (valorDouble -> DOUBLE .)
    DO              reduce using rule 116 (valorDouble -> DOUBLE .)
    IF              reduce using rule 116 (valorDouble -> DOUBLE .)
    ELSE            reduce using rule 116 (valorDouble -> DOUBLE .)
    PRINT           reduce using rule 116 (valorDouble -> DOUBLE .)
    FUNCIONSTDIN    reduce using rule 116 (valorDouble -> DOUBLE .)
    FUNCIONSTDOUT   reduce using rule 116 (valorDouble -> DOUBLE .)
    NOT             reduce using rule 116 (valorDouble -> DOUBLE .)
    ELSEIF          reduce using rule 116 (valorDouble -> DOUBLE .)
    ENTERO          reduce using rule 116 (valorDouble -> DOUBLE .)
    DOUBLE          reduce using rule 116 (valorDouble -> DOUBLE .)
    STRING          reduce using rule 116 (valorDouble -> DOUBLE .)
    BOOL            reduce using rule 116 (valorDouble -> DOUBLE .)
    $end            reduce using rule 116 (valorDouble -> DOUBLE .)
    LDER            reduce using rule 116 (valorDouble -> DOUBLE .)
    PDER            reduce using rule 116 (valorDouble -> DOUBLE .)


state 151

    (112) valorInt -> ENTERO .

    SUMA            reduce using rule 112 (valorInt -> ENTERO .)
    RESTA           reduce using rule 112 (valorInt -> ENTERO .)
    MULTI           reduce using rule 112 (valorInt -> ENTERO .)
    DIV             reduce using rule 112 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 112 (valorInt -> ENTERO .)
    MOD             reduce using rule 112 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 112 (valorInt -> ENTERO .)
    AND             reduce using rule 112 (valorInt -> ENTERO .)
    OR              reduce using rule 112 (valorInt -> ENTERO .)
    INT             reduce using rule 112 (valorInt -> ENTERO .)
    DOUBLER         reduce using rule 112 (valorInt -> ENTERO .)
    NUM             reduce using rule 112 (valorInt -> ENTERO .)
    STRINGR         reduce using rule 112 (valorInt -> ENTERO .)
    BOOLR           reduce using rule 112 (valorInt -> ENTERO .)
    DYNAMIC         reduce using rule 112 (valorInt -> ENTERO .)
    VAR             reduce using rule 112 (valorInt -> ENTERO .)
    VARIABLE        reduce using rule 112 (valorInt -> ENTERO .)
    WHILE           reduce using rule 112 (valorInt -> ENTERO .)
    DO              reduce using rule 112 (valorInt -> ENTERO .)
    IF              reduce using rule 112 (valorInt -> ENTERO .)
    ELSE            reduce using rule 112 (valorInt -> ENTERO .)
    PRINT           reduce using rule 112 (valorInt -> ENTERO .)
    FUNCIONSTDIN    reduce using rule 112 (valorInt -> ENTERO .)
    FUNCIONSTDOUT   reduce using rule 112 (valorInt -> ENTERO .)
    NOT             reduce using rule 112 (valorInt -> ENTERO .)
    ELSEIF          reduce using rule 112 (valorInt -> ENTERO .)
    ENTERO          reduce using rule 112 (valorInt -> ENTERO .)
    DOUBLE          reduce using rule 112 (valorInt -> ENTERO .)
    STRING          reduce using rule 112 (valorInt -> ENTERO .)
    BOOL            reduce using rule 112 (valorInt -> ENTERO .)
    $end            reduce using rule 112 (valorInt -> ENTERO .)
    LDER            reduce using rule 112 (valorInt -> ENTERO .)
    PDER            reduce using rule 112 (valorInt -> ENTERO .)


state 152

    (82) valor -> VARIABLE .
    (97) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (98) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (109) valorString -> VARIABLE .
    (113) valorInt -> VARIABLE .
    (95) valorBool -> VARIABLE .
    (126) comparadorMat -> . DIGUAL
    (127) comparadorMat -> . NOIGUAL
    (128) comparadorMat -> . MAYOR
    (129) comparadorMat -> . MENOR
    (130) comparadorMat -> . MAYIGUAL
    (131) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 82 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IS              reduce using rule 82 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 82 (valor -> VARIABLE .)
    SUMA            reduce using rule 82 (valor -> VARIABLE .)
    RESTA           reduce using rule 82 (valor -> VARIABLE .)
    MULTI           reduce using rule 82 (valor -> VARIABLE .)
    DIV             reduce using rule 82 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 82 (valor -> VARIABLE .)
    MOD             reduce using rule 82 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 82 (valor -> VARIABLE .)
    PDER            reduce using rule 82 (valor -> VARIABLE .)
    INT             reduce using rule 82 (valor -> VARIABLE .)
    DOUBLER         reduce using rule 82 (valor -> VARIABLE .)
    NUM             reduce using rule 82 (valor -> VARIABLE .)
    STRINGR         reduce using rule 82 (valor -> VARIABLE .)
    BOOLR           reduce using rule 82 (valor -> VARIABLE .)
    DYNAMIC         reduce using rule 82 (valor -> VARIABLE .)
    VAR             reduce using rule 82 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 82 (valor -> VARIABLE .)
    WHILE           reduce using rule 82 (valor -> VARIABLE .)
    DO              reduce using rule 82 (valor -> VARIABLE .)
    IF              reduce using rule 82 (valor -> VARIABLE .)
    ELSE            reduce using rule 82 (valor -> VARIABLE .)
    PRINT           reduce using rule 82 (valor -> VARIABLE .)
    FUNCIONSTDIN    reduce using rule 82 (valor -> VARIABLE .)
    FUNCIONSTDOUT   reduce using rule 82 (valor -> VARIABLE .)
    NOT             reduce using rule 82 (valor -> VARIABLE .)
    ELSEIF          reduce using rule 82 (valor -> VARIABLE .)
    ENTERO          reduce using rule 82 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 82 (valor -> VARIABLE .)
    STRING          reduce using rule 82 (valor -> VARIABLE .)
    BOOL            reduce using rule 82 (valor -> VARIABLE .)
    $end            reduce using rule 82 (valor -> VARIABLE .)
    LDER            reduce using rule 82 (valor -> VARIABLE .)
    AND             reduce using rule 95 (valorBool -> VARIABLE .)
    OR              reduce using rule 95 (valorBool -> VARIABLE .)
    DIGUAL          shift and go to state 72
    NOIGUAL         shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYIGUAL        shift and go to state 76
    MENIGUAL        shift and go to state 77

  ! SUMA            [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! DIV             [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! MOD             [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! INT             [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! NUM             [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! VAR             [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! DO              [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! IF              [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! NOT             [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! STRING          [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! $end            [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! LDER            [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! NOT             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! PDER            [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! INT             [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! NUM             [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! VAR             [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! DO              [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! IF              [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! NOT             [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! STRING          [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! $end            [ reduce using rule 95 (valorBool -> VARIABLE .) ]
  ! LDER            [ reduce using rule 95 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 70

state 153

    (69) asignacionSimple -> VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 69 (asignacionSimple -> VARIABLE IGUAL expresion .)
    PDER            reduce using rule 69 (asignacionSimple -> VARIABLE IGUAL expresion .)


state 154

    (85) expresion -> valor . operadorMat expresion
    (86) expresion -> valor .
    (103) expresionBool -> valor . IS objeto
    (104) expresionBool -> valor . ISNEGADO objeto
    (120) operadorMat -> . SUMA
    (121) operadorMat -> . RESTA
    (122) operadorMat -> . MULTI
    (123) operadorMat -> . DIV
    (124) operadorMat -> . DIVENTERO
    (125) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 86 (expresion -> valor .)
    PDER            reduce using rule 86 (expresion -> valor .)
    INT             reduce using rule 86 (expresion -> valor .)
    DOUBLER         reduce using rule 86 (expresion -> valor .)
    NUM             reduce using rule 86 (expresion -> valor .)
    STRINGR         reduce using rule 86 (expresion -> valor .)
    BOOLR           reduce using rule 86 (expresion -> valor .)
    DYNAMIC         reduce using rule 86 (expresion -> valor .)
    VAR             reduce using rule 86 (expresion -> valor .)
    VARIABLE        reduce using rule 86 (expresion -> valor .)
    WHILE           reduce using rule 86 (expresion -> valor .)
    DO              reduce using rule 86 (expresion -> valor .)
    IF              reduce using rule 86 (expresion -> valor .)
    ELSE            reduce using rule 86 (expresion -> valor .)
    PRINT           reduce using rule 86 (expresion -> valor .)
    FUNCIONSTDIN    reduce using rule 86 (expresion -> valor .)
    FUNCIONSTDOUT   reduce using rule 86 (expresion -> valor .)
    NOT             reduce using rule 86 (expresion -> valor .)
    ELSEIF          reduce using rule 86 (expresion -> valor .)
    ENTERO          reduce using rule 86 (expresion -> valor .)
    DOUBLE          reduce using rule 86 (expresion -> valor .)
    STRING          reduce using rule 86 (expresion -> valor .)
    BOOL            reduce using rule 86 (expresion -> valor .)
    $end            reduce using rule 86 (expresion -> valor .)
    LDER            reduce using rule 86 (expresion -> valor .)
    IS              shift and go to state 94
    ISNEGADO        shift and go to state 95
    SUMA            shift and go to state 85
    RESTA           shift and go to state 86
    MULTI           shift and go to state 87
    DIV             shift and go to state 88
    DIVENTERO       shift and go to state 89
    MOD             shift and go to state 90

    operadorMat                    shift and go to state 96

state 155

    (87) expresion -> expresionString .

    PUNTOYCOMA      reduce using rule 87 (expresion -> expresionString .)
    PDER            reduce using rule 87 (expresion -> expresionString .)
    INT             reduce using rule 87 (expresion -> expresionString .)
    DOUBLER         reduce using rule 87 (expresion -> expresionString .)
    NUM             reduce using rule 87 (expresion -> expresionString .)
    STRINGR         reduce using rule 87 (expresion -> expresionString .)
    BOOLR           reduce using rule 87 (expresion -> expresionString .)
    DYNAMIC         reduce using rule 87 (expresion -> expresionString .)
    VAR             reduce using rule 87 (expresion -> expresionString .)
    VARIABLE        reduce using rule 87 (expresion -> expresionString .)
    WHILE           reduce using rule 87 (expresion -> expresionString .)
    DO              reduce using rule 87 (expresion -> expresionString .)
    IF              reduce using rule 87 (expresion -> expresionString .)
    ELSE            reduce using rule 87 (expresion -> expresionString .)
    PRINT           reduce using rule 87 (expresion -> expresionString .)
    FUNCIONSTDIN    reduce using rule 87 (expresion -> expresionString .)
    FUNCIONSTDOUT   reduce using rule 87 (expresion -> expresionString .)
    NOT             reduce using rule 87 (expresion -> expresionString .)
    ELSEIF          reduce using rule 87 (expresion -> expresionString .)
    ENTERO          reduce using rule 87 (expresion -> expresionString .)
    DOUBLE          reduce using rule 87 (expresion -> expresionString .)
    STRING          reduce using rule 87 (expresion -> expresionString .)
    BOOL            reduce using rule 87 (expresion -> expresionString .)
    $end            reduce using rule 87 (expresion -> expresionString .)
    LDER            reduce using rule 87 (expresion -> expresionString .)


state 156

    (88) expresion -> expresionInt .

    PUNTOYCOMA      reduce using rule 88 (expresion -> expresionInt .)
    PDER            reduce using rule 88 (expresion -> expresionInt .)
    INT             reduce using rule 88 (expresion -> expresionInt .)
    DOUBLER         reduce using rule 88 (expresion -> expresionInt .)
    NUM             reduce using rule 88 (expresion -> expresionInt .)
    STRINGR         reduce using rule 88 (expresion -> expresionInt .)
    BOOLR           reduce using rule 88 (expresion -> expresionInt .)
    DYNAMIC         reduce using rule 88 (expresion -> expresionInt .)
    VAR             reduce using rule 88 (expresion -> expresionInt .)
    VARIABLE        reduce using rule 88 (expresion -> expresionInt .)
    WHILE           reduce using rule 88 (expresion -> expresionInt .)
    DO              reduce using rule 88 (expresion -> expresionInt .)
    IF              reduce using rule 88 (expresion -> expresionInt .)
    ELSE            reduce using rule 88 (expresion -> expresionInt .)
    PRINT           reduce using rule 88 (expresion -> expresionInt .)
    FUNCIONSTDIN    reduce using rule 88 (expresion -> expresionInt .)
    FUNCIONSTDOUT   reduce using rule 88 (expresion -> expresionInt .)
    NOT             reduce using rule 88 (expresion -> expresionInt .)
    ELSEIF          reduce using rule 88 (expresion -> expresionInt .)
    ENTERO          reduce using rule 88 (expresion -> expresionInt .)
    DOUBLE          reduce using rule 88 (expresion -> expresionInt .)
    STRING          reduce using rule 88 (expresion -> expresionInt .)
    BOOL            reduce using rule 88 (expresion -> expresionInt .)
    $end            reduce using rule 88 (expresion -> expresionInt .)
    LDER            reduce using rule 88 (expresion -> expresionInt .)


state 157

    (89) expresion -> expresionDouble .

    PUNTOYCOMA      reduce using rule 89 (expresion -> expresionDouble .)
    PDER            reduce using rule 89 (expresion -> expresionDouble .)
    INT             reduce using rule 89 (expresion -> expresionDouble .)
    DOUBLER         reduce using rule 89 (expresion -> expresionDouble .)
    NUM             reduce using rule 89 (expresion -> expresionDouble .)
    STRINGR         reduce using rule 89 (expresion -> expresionDouble .)
    BOOLR           reduce using rule 89 (expresion -> expresionDouble .)
    DYNAMIC         reduce using rule 89 (expresion -> expresionDouble .)
    VAR             reduce using rule 89 (expresion -> expresionDouble .)
    VARIABLE        reduce using rule 89 (expresion -> expresionDouble .)
    WHILE           reduce using rule 89 (expresion -> expresionDouble .)
    DO              reduce using rule 89 (expresion -> expresionDouble .)
    IF              reduce using rule 89 (expresion -> expresionDouble .)
    ELSE            reduce using rule 89 (expresion -> expresionDouble .)
    PRINT           reduce using rule 89 (expresion -> expresionDouble .)
    FUNCIONSTDIN    reduce using rule 89 (expresion -> expresionDouble .)
    FUNCIONSTDOUT   reduce using rule 89 (expresion -> expresionDouble .)
    NOT             reduce using rule 89 (expresion -> expresionDouble .)
    ELSEIF          reduce using rule 89 (expresion -> expresionDouble .)
    ENTERO          reduce using rule 89 (expresion -> expresionDouble .)
    DOUBLE          reduce using rule 89 (expresion -> expresionDouble .)
    STRING          reduce using rule 89 (expresion -> expresionDouble .)
    BOOL            reduce using rule 89 (expresion -> expresionDouble .)
    $end            reduce using rule 89 (expresion -> expresionDouble .)
    LDER            reduce using rule 89 (expresion -> expresionDouble .)


state 158

    (90) expresion -> expresionBool .
    (106) comparacionBool -> expresionBool . operadorLogico expresionBool
    (107) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (132) operadorLogico -> . AND
    (133) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 90 (expresion -> expresionBool .)
    PDER            reduce using rule 90 (expresion -> expresionBool .)
    INT             reduce using rule 90 (expresion -> expresionBool .)
    DOUBLER         reduce using rule 90 (expresion -> expresionBool .)
    NUM             reduce using rule 90 (expresion -> expresionBool .)
    STRINGR         reduce using rule 90 (expresion -> expresionBool .)
    BOOLR           reduce using rule 90 (expresion -> expresionBool .)
    DYNAMIC         reduce using rule 90 (expresion -> expresionBool .)
    VAR             reduce using rule 90 (expresion -> expresionBool .)
    VARIABLE        reduce using rule 90 (expresion -> expresionBool .)
    WHILE           reduce using rule 90 (expresion -> expresionBool .)
    DO              reduce using rule 90 (expresion -> expresionBool .)
    IF              reduce using rule 90 (expresion -> expresionBool .)
    ELSE            reduce using rule 90 (expresion -> expresionBool .)
    PRINT           reduce using rule 90 (expresion -> expresionBool .)
    FUNCIONSTDIN    reduce using rule 90 (expresion -> expresionBool .)
    FUNCIONSTDOUT   reduce using rule 90 (expresion -> expresionBool .)
    NOT             reduce using rule 90 (expresion -> expresionBool .)
    ELSEIF          reduce using rule 90 (expresion -> expresionBool .)
    ENTERO          reduce using rule 90 (expresion -> expresionBool .)
    DOUBLE          reduce using rule 90 (expresion -> expresionBool .)
    STRING          reduce using rule 90 (expresion -> expresionBool .)
    BOOL            reduce using rule 90 (expresion -> expresionBool .)
    $end            reduce using rule 90 (expresion -> expresionBool .)
    LDER            reduce using rule 90 (expresion -> expresionBool .)
    AND             shift and go to state 53
    OR              shift and go to state 54

    operadorLogico                 shift and go to state 52

state 159

    (83) valor -> DOUBLE .
    (116) valorDouble -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PDER resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for INT resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NUM resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VAR resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DO resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for IF resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for NOT resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for STRING resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for $end resolved using rule 83 (valor -> DOUBLE .)
  ! reduce/reduce conflict for LDER resolved using rule 83 (valor -> DOUBLE .)
    IS              reduce using rule 83 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 83 (valor -> DOUBLE .)
    SUMA            reduce using rule 83 (valor -> DOUBLE .)
    RESTA           reduce using rule 83 (valor -> DOUBLE .)
    MULTI           reduce using rule 83 (valor -> DOUBLE .)
    DIV             reduce using rule 83 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 83 (valor -> DOUBLE .)
    MOD             reduce using rule 83 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 83 (valor -> DOUBLE .)
    PDER            reduce using rule 83 (valor -> DOUBLE .)
    INT             reduce using rule 83 (valor -> DOUBLE .)
    DOUBLER         reduce using rule 83 (valor -> DOUBLE .)
    NUM             reduce using rule 83 (valor -> DOUBLE .)
    STRINGR         reduce using rule 83 (valor -> DOUBLE .)
    BOOLR           reduce using rule 83 (valor -> DOUBLE .)
    DYNAMIC         reduce using rule 83 (valor -> DOUBLE .)
    VAR             reduce using rule 83 (valor -> DOUBLE .)
    VARIABLE        reduce using rule 83 (valor -> DOUBLE .)
    WHILE           reduce using rule 83 (valor -> DOUBLE .)
    DO              reduce using rule 83 (valor -> DOUBLE .)
    IF              reduce using rule 83 (valor -> DOUBLE .)
    ELSE            reduce using rule 83 (valor -> DOUBLE .)
    PRINT           reduce using rule 83 (valor -> DOUBLE .)
    FUNCIONSTDIN    reduce using rule 83 (valor -> DOUBLE .)
    FUNCIONSTDOUT   reduce using rule 83 (valor -> DOUBLE .)
    NOT             reduce using rule 83 (valor -> DOUBLE .)
    ELSEIF          reduce using rule 83 (valor -> DOUBLE .)
    ENTERO          reduce using rule 83 (valor -> DOUBLE .)
    DOUBLE          reduce using rule 83 (valor -> DOUBLE .)
    STRING          reduce using rule 83 (valor -> DOUBLE .)
    BOOL            reduce using rule 83 (valor -> DOUBLE .)
    $end            reduce using rule 83 (valor -> DOUBLE .)
    LDER            reduce using rule 83 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 116 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 116 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 116 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 116 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 116 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 116 (valorDouble -> DOUBLE .)

  ! SUMA            [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! PDER            [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! INT             [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! DOUBLER         [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! NUM             [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! STRINGR         [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! BOOLR           [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! DYNAMIC         [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! VAR             [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! VARIABLE        [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! WHILE           [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! DO              [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! IF              [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! ELSE            [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! PRINT           [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! NOT             [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! ELSEIF          [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! ENTERO          [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! DOUBLE          [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! STRING          [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! BOOL            [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! $end            [ reduce using rule 116 (valorDouble -> DOUBLE .) ]
  ! LDER            [ reduce using rule 116 (valorDouble -> DOUBLE .) ]


state 160

    (84) valor -> STRING .
    (108) valorString -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for RESTA resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for MULTI resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for DIV resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for MOD resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for PDER resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for INT resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for NUM resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for STRINGR resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for BOOLR resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for VAR resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for WHILE resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for DO resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for IF resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for ELSE resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for PRINT resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for NOT resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for ENTERO resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for STRING resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for BOOL resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for $end resolved using rule 84 (valor -> STRING .)
  ! reduce/reduce conflict for LDER resolved using rule 84 (valor -> STRING .)
    IS              reduce using rule 84 (valor -> STRING .)
    ISNEGADO        reduce using rule 84 (valor -> STRING .)
    SUMA            reduce using rule 84 (valor -> STRING .)
    RESTA           reduce using rule 84 (valor -> STRING .)
    MULTI           reduce using rule 84 (valor -> STRING .)
    DIV             reduce using rule 84 (valor -> STRING .)
    DIVENTERO       reduce using rule 84 (valor -> STRING .)
    MOD             reduce using rule 84 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 84 (valor -> STRING .)
    PDER            reduce using rule 84 (valor -> STRING .)
    INT             reduce using rule 84 (valor -> STRING .)
    DOUBLER         reduce using rule 84 (valor -> STRING .)
    NUM             reduce using rule 84 (valor -> STRING .)
    STRINGR         reduce using rule 84 (valor -> STRING .)
    BOOLR           reduce using rule 84 (valor -> STRING .)
    DYNAMIC         reduce using rule 84 (valor -> STRING .)
    VAR             reduce using rule 84 (valor -> STRING .)
    VARIABLE        reduce using rule 84 (valor -> STRING .)
    WHILE           reduce using rule 84 (valor -> STRING .)
    DO              reduce using rule 84 (valor -> STRING .)
    IF              reduce using rule 84 (valor -> STRING .)
    ELSE            reduce using rule 84 (valor -> STRING .)
    PRINT           reduce using rule 84 (valor -> STRING .)
    FUNCIONSTDIN    reduce using rule 84 (valor -> STRING .)
    FUNCIONSTDOUT   reduce using rule 84 (valor -> STRING .)
    NOT             reduce using rule 84 (valor -> STRING .)
    ELSEIF          reduce using rule 84 (valor -> STRING .)
    ENTERO          reduce using rule 84 (valor -> STRING .)
    DOUBLE          reduce using rule 84 (valor -> STRING .)
    STRING          reduce using rule 84 (valor -> STRING .)
    BOOL            reduce using rule 84 (valor -> STRING .)
    $end            reduce using rule 84 (valor -> STRING .)
    LDER            reduce using rule 84 (valor -> STRING .)

  ! SUMA            [ reduce using rule 108 (valorString -> STRING .) ]
  ! RESTA           [ reduce using rule 108 (valorString -> STRING .) ]
  ! MULTI           [ reduce using rule 108 (valorString -> STRING .) ]
  ! DIV             [ reduce using rule 108 (valorString -> STRING .) ]
  ! DIVENTERO       [ reduce using rule 108 (valorString -> STRING .) ]
  ! MOD             [ reduce using rule 108 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 108 (valorString -> STRING .) ]
  ! PDER            [ reduce using rule 108 (valorString -> STRING .) ]
  ! INT             [ reduce using rule 108 (valorString -> STRING .) ]
  ! DOUBLER         [ reduce using rule 108 (valorString -> STRING .) ]
  ! NUM             [ reduce using rule 108 (valorString -> STRING .) ]
  ! STRINGR         [ reduce using rule 108 (valorString -> STRING .) ]
  ! BOOLR           [ reduce using rule 108 (valorString -> STRING .) ]
  ! DYNAMIC         [ reduce using rule 108 (valorString -> STRING .) ]
  ! VAR             [ reduce using rule 108 (valorString -> STRING .) ]
  ! VARIABLE        [ reduce using rule 108 (valorString -> STRING .) ]
  ! WHILE           [ reduce using rule 108 (valorString -> STRING .) ]
  ! DO              [ reduce using rule 108 (valorString -> STRING .) ]
  ! IF              [ reduce using rule 108 (valorString -> STRING .) ]
  ! ELSE            [ reduce using rule 108 (valorString -> STRING .) ]
  ! PRINT           [ reduce using rule 108 (valorString -> STRING .) ]
  ! FUNCIONSTDIN    [ reduce using rule 108 (valorString -> STRING .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 108 (valorString -> STRING .) ]
  ! NOT             [ reduce using rule 108 (valorString -> STRING .) ]
  ! ELSEIF          [ reduce using rule 108 (valorString -> STRING .) ]
  ! ENTERO          [ reduce using rule 108 (valorString -> STRING .) ]
  ! DOUBLE          [ reduce using rule 108 (valorString -> STRING .) ]
  ! STRING          [ reduce using rule 108 (valorString -> STRING .) ]
  ! BOOL            [ reduce using rule 108 (valorString -> STRING .) ]
  ! $end            [ reduce using rule 108 (valorString -> STRING .) ]
  ! LDER            [ reduce using rule 108 (valorString -> STRING .) ]


state 161

    (102) expresionBool -> comparacionBool .

    AND             reduce using rule 102 (expresionBool -> comparacionBool .)
    OR              reduce using rule 102 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 102 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 102 (expresionBool -> comparacionBool .)
    INT             reduce using rule 102 (expresionBool -> comparacionBool .)
    DOUBLER         reduce using rule 102 (expresionBool -> comparacionBool .)
    NUM             reduce using rule 102 (expresionBool -> comparacionBool .)
    STRINGR         reduce using rule 102 (expresionBool -> comparacionBool .)
    BOOLR           reduce using rule 102 (expresionBool -> comparacionBool .)
    DYNAMIC         reduce using rule 102 (expresionBool -> comparacionBool .)
    VAR             reduce using rule 102 (expresionBool -> comparacionBool .)
    VARIABLE        reduce using rule 102 (expresionBool -> comparacionBool .)
    WHILE           reduce using rule 102 (expresionBool -> comparacionBool .)
    DO              reduce using rule 102 (expresionBool -> comparacionBool .)
    IF              reduce using rule 102 (expresionBool -> comparacionBool .)
    ELSE            reduce using rule 102 (expresionBool -> comparacionBool .)
    PRINT           reduce using rule 102 (expresionBool -> comparacionBool .)
    FUNCIONSTDIN    reduce using rule 102 (expresionBool -> comparacionBool .)
    FUNCIONSTDOUT   reduce using rule 102 (expresionBool -> comparacionBool .)
    NOT             reduce using rule 102 (expresionBool -> comparacionBool .)
    ELSEIF          reduce using rule 102 (expresionBool -> comparacionBool .)
    ENTERO          reduce using rule 102 (expresionBool -> comparacionBool .)
    DOUBLE          reduce using rule 102 (expresionBool -> comparacionBool .)
    STRING          reduce using rule 102 (expresionBool -> comparacionBool .)
    BOOL            reduce using rule 102 (expresionBool -> comparacionBool .)
    $end            reduce using rule 102 (expresionBool -> comparacionBool .)
    LDER            reduce using rule 102 (expresionBool -> comparacionBool .)


state 162

    (62) asignacion -> DOUBLER VARIABLE IGUAL . expresionDouble
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 150
    ENTERO          shift and go to state 151
    VARIABLE        shift and go to state 170

    expresionDouble                shift and go to state 217
    valorDouble                    shift and go to state 149
    valorInt                       shift and go to state 133

state 163

    (63) asignacion -> NUM VARIABLE IGUAL . expresionDouble
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 150
    ENTERO          shift and go to state 151
    VARIABLE        shift and go to state 170

    expresionDouble                shift and go to state 218
    valorDouble                    shift and go to state 149
    valorInt                       shift and go to state 133

state 164

    (64) asignacion -> STRINGR VARIABLE IGUAL . expresionString
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE

    STRING          shift and go to state 175
    VARIABLE        shift and go to state 176

    expresionString                shift and go to state 219
    valorString                    shift and go to state 30

state 165

    (65) asignacion -> BOOLR VARIABLE IGUAL . expresionBool
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 130
    DOUBLE          shift and go to state 43
    BOOL            shift and go to state 45
    NOT             shift and go to state 40
    ENTERO          shift and go to state 134
    STRING          shift and go to state 135

    expresionBool                  shift and go to state 220
    valorDouble                    shift and go to state 129
    valorBool                      shift and go to state 31
    negacionBool                   shift and go to state 131
    comparacionBool                shift and go to state 161
    valor                          shift and go to state 132
    valorInt                       shift and go to state 133

state 166

    (66) asignacion -> DYNAMIC VARIABLE IGUAL . expresion
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool

    ENTERO          shift and go to state 134
    VARIABLE        shift and go to state 152
    DOUBLE          shift and go to state 159
    STRING          shift and go to state 160
    BOOL            shift and go to state 45
    NOT             shift and go to state 40

    expresion                      shift and go to state 221
    valor                          shift and go to state 154
    expresionString                shift and go to state 155
    expresionInt                   shift and go to state 156
    expresionDouble                shift and go to state 157
    expresionBool                  shift and go to state 158
    valorString                    shift and go to state 30
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorBool                      shift and go to state 31
    negacionBool                   shift and go to state 131
    comparacionBool                shift and go to state 161

state 167

    (67) asignacion -> VAR VARIABLE IGUAL . expresion
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool

    ENTERO          shift and go to state 134
    VARIABLE        shift and go to state 152
    DOUBLE          shift and go to state 159
    STRING          shift and go to state 160
    BOOL            shift and go to state 45
    NOT             shift and go to state 40

    expresion                      shift and go to state 222
    valor                          shift and go to state 154
    expresionString                shift and go to state 155
    expresionInt                   shift and go to state 156
    expresionDouble                shift and go to state 157
    expresionBool                  shift and go to state 158
    valorString                    shift and go to state 30
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorBool                      shift and go to state 31
    negacionBool                   shift and go to state 131
    comparacionBool                shift and go to state 161

state 168

    (114) expresionInt -> valorInt . operadorMat expresionInt
    (115) expresionInt -> valorInt .
    (120) operadorMat -> . SUMA
    (121) operadorMat -> . RESTA
    (122) operadorMat -> . MULTI
    (123) operadorMat -> . DIV
    (124) operadorMat -> . DIVENTERO
    (125) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 115 (expresionInt -> valorInt .)
    INT             reduce using rule 115 (expresionInt -> valorInt .)
    DOUBLER         reduce using rule 115 (expresionInt -> valorInt .)
    NUM             reduce using rule 115 (expresionInt -> valorInt .)
    STRINGR         reduce using rule 115 (expresionInt -> valorInt .)
    BOOLR           reduce using rule 115 (expresionInt -> valorInt .)
    DYNAMIC         reduce using rule 115 (expresionInt -> valorInt .)
    VAR             reduce using rule 115 (expresionInt -> valorInt .)
    VARIABLE        reduce using rule 115 (expresionInt -> valorInt .)
    WHILE           reduce using rule 115 (expresionInt -> valorInt .)
    DO              reduce using rule 115 (expresionInt -> valorInt .)
    IF              reduce using rule 115 (expresionInt -> valorInt .)
    ELSE            reduce using rule 115 (expresionInt -> valorInt .)
    PRINT           reduce using rule 115 (expresionInt -> valorInt .)
    FUNCIONSTDIN    reduce using rule 115 (expresionInt -> valorInt .)
    FUNCIONSTDOUT   reduce using rule 115 (expresionInt -> valorInt .)
    NOT             reduce using rule 115 (expresionInt -> valorInt .)
    ELSEIF          reduce using rule 115 (expresionInt -> valorInt .)
    ENTERO          reduce using rule 115 (expresionInt -> valorInt .)
    DOUBLE          reduce using rule 115 (expresionInt -> valorInt .)
    STRING          reduce using rule 115 (expresionInt -> valorInt .)
    BOOL            reduce using rule 115 (expresionInt -> valorInt .)
    $end            reduce using rule 115 (expresionInt -> valorInt .)
    LDER            reduce using rule 115 (expresionInt -> valorInt .)
    PDER            reduce using rule 115 (expresionInt -> valorInt .)
    SUMA            shift and go to state 85
    RESTA           shift and go to state 86
    MULTI           shift and go to state 87
    DIV             shift and go to state 88
    DIVENTERO       shift and go to state 89
    MOD             shift and go to state 90

    operadorMat                    shift and go to state 84

state 169

    (114) expresionInt -> valorInt operadorMat expresionInt .

    PUNTOYCOMA      reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    INT             reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    DOUBLER         reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    NUM             reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    STRINGR         reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    BOOLR           reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    DYNAMIC         reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    VAR             reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    VARIABLE        reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    WHILE           reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    DO              reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    IF              reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    ELSE            reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    PRINT           reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    FUNCIONSTDIN    reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    FUNCIONSTDOUT   reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    NOT             reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    ELSEIF          reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    ENTERO          reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    DOUBLE          reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    STRING          reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    BOOL            reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    $end            reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    LDER            reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)
    PDER            reduce using rule 114 (expresionInt -> valorInt operadorMat expresionInt .)


state 170

    (113) valorInt -> VARIABLE .

    SUMA            reduce using rule 113 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 113 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 113 (valorInt -> VARIABLE .)
    DIV             reduce using rule 113 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 113 (valorInt -> VARIABLE .)
    MOD             reduce using rule 113 (valorInt -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 113 (valorInt -> VARIABLE .)
    INT             reduce using rule 113 (valorInt -> VARIABLE .)
    DOUBLER         reduce using rule 113 (valorInt -> VARIABLE .)
    NUM             reduce using rule 113 (valorInt -> VARIABLE .)
    STRINGR         reduce using rule 113 (valorInt -> VARIABLE .)
    BOOLR           reduce using rule 113 (valorInt -> VARIABLE .)
    DYNAMIC         reduce using rule 113 (valorInt -> VARIABLE .)
    VAR             reduce using rule 113 (valorInt -> VARIABLE .)
    VARIABLE        reduce using rule 113 (valorInt -> VARIABLE .)
    WHILE           reduce using rule 113 (valorInt -> VARIABLE .)
    DO              reduce using rule 113 (valorInt -> VARIABLE .)
    IF              reduce using rule 113 (valorInt -> VARIABLE .)
    ELSE            reduce using rule 113 (valorInt -> VARIABLE .)
    PRINT           reduce using rule 113 (valorInt -> VARIABLE .)
    FUNCIONSTDIN    reduce using rule 113 (valorInt -> VARIABLE .)
    FUNCIONSTDOUT   reduce using rule 113 (valorInt -> VARIABLE .)
    NOT             reduce using rule 113 (valorInt -> VARIABLE .)
    ELSEIF          reduce using rule 113 (valorInt -> VARIABLE .)
    ENTERO          reduce using rule 113 (valorInt -> VARIABLE .)
    DOUBLE          reduce using rule 113 (valorInt -> VARIABLE .)
    STRING          reduce using rule 113 (valorInt -> VARIABLE .)
    BOOL            reduce using rule 113 (valorInt -> VARIABLE .)
    $end            reduce using rule 113 (valorInt -> VARIABLE .)
    LDER            reduce using rule 113 (valorInt -> VARIABLE .)
    PDER            reduce using rule 113 (valorInt -> VARIABLE .)
    AND             reduce using rule 113 (valorInt -> VARIABLE .)
    OR              reduce using rule 113 (valorInt -> VARIABLE .)


state 171

    (118) expresionDouble -> valorDouble operadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    INT             reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DOUBLER         reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    NUM             reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    STRINGR         reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    BOOLR           reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DYNAMIC         reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    VAR             reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    VARIABLE        reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    WHILE           reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DO              reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    IF              reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    ELSE            reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PRINT           reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    FUNCIONSTDIN    reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    FUNCIONSTDOUT   reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    NOT             reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    ELSEIF          reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    ENTERO          reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    DOUBLE          reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    STRING          reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    BOOL            reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    $end            reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    LDER            reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    AND             reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    OR              reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PDER            reduce using rule 118 (expresionDouble -> valorDouble operadorMat expresionDouble .)


state 172

    (96) expresionBool -> valorDouble comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    INT             reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DOUBLER         reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    NUM             reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    STRINGR         reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    BOOLR           reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DYNAMIC         reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    VAR             reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    VARIABLE        reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    WHILE           reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DO              reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    IF              reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    ELSE            reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PRINT           reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    FUNCIONSTDIN    reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    FUNCIONSTDOUT   reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    NOT             reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    ELSEIF          reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    ENTERO          reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    DOUBLE          reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    STRING          reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    BOOL            reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    $end            reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    LDER            reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PDER            reduce using rule 96 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 173

    (99) expresionBool -> valorDouble comparadorMat VARIABLE .
    (113) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for INT resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLER resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for NUM resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRINGR resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOLR resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DYNAMIC resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VAR resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDIN resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for FUNCIONSTDOUT resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for NOT resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for STRING resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for BOOL resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for LDER resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    INT             reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DOUBLER         reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    NUM             reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    STRINGR         reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    BOOLR           reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DYNAMIC         reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    VAR             reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    VARIABLE        reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    WHILE           reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DO              reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    IF              reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    ELSE            reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PRINT           reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    FUNCIONSTDIN    reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    FUNCIONSTDOUT   reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    NOT             reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    ELSEIF          reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    ENTERO          reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    DOUBLE          reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    STRING          reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    BOOL            reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    $end            reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    LDER            reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PDER            reduce using rule 99 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 113 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 113 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 113 (valorInt -> VARIABLE .)
    DIV             reduce using rule 113 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 113 (valorInt -> VARIABLE .)
    MOD             reduce using rule 113 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! INT             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DOUBLER         [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! NUM             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! STRINGR         [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! BOOLR           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DYNAMIC         [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! VAR             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DO              [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! IF              [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! FUNCIONSTDIN    [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! NOT             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! ENTERO          [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DOUBLE          [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! STRING          [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! BOOL            [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! $end            [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! LDER            [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 113 (valorInt -> VARIABLE .) ]


state 174

    (110) expresionString -> valorString operadorMat expresionString .

    PUNTOYCOMA      reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    INT             reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    DOUBLER         reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    NUM             reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    STRINGR         reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    BOOLR           reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    DYNAMIC         reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    VAR             reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    VARIABLE        reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    WHILE           reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    DO              reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    IF              reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    ELSE            reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    PRINT           reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    FUNCIONSTDIN    reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    FUNCIONSTDOUT   reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    NOT             reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    ELSEIF          reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    ENTERO          reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    DOUBLE          reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    STRING          reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    BOOL            reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    $end            reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    LDER            reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)
    PDER            reduce using rule 110 (expresionString -> valorString operadorMat expresionString .)


state 175

    (108) valorString -> STRING .

    SUMA            reduce using rule 108 (valorString -> STRING .)
    RESTA           reduce using rule 108 (valorString -> STRING .)
    MULTI           reduce using rule 108 (valorString -> STRING .)
    DIV             reduce using rule 108 (valorString -> STRING .)
    DIVENTERO       reduce using rule 108 (valorString -> STRING .)
    MOD             reduce using rule 108 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 108 (valorString -> STRING .)
    INT             reduce using rule 108 (valorString -> STRING .)
    DOUBLER         reduce using rule 108 (valorString -> STRING .)
    NUM             reduce using rule 108 (valorString -> STRING .)
    STRINGR         reduce using rule 108 (valorString -> STRING .)
    BOOLR           reduce using rule 108 (valorString -> STRING .)
    DYNAMIC         reduce using rule 108 (valorString -> STRING .)
    VAR             reduce using rule 108 (valorString -> STRING .)
    VARIABLE        reduce using rule 108 (valorString -> STRING .)
    WHILE           reduce using rule 108 (valorString -> STRING .)
    DO              reduce using rule 108 (valorString -> STRING .)
    IF              reduce using rule 108 (valorString -> STRING .)
    ELSE            reduce using rule 108 (valorString -> STRING .)
    PRINT           reduce using rule 108 (valorString -> STRING .)
    FUNCIONSTDIN    reduce using rule 108 (valorString -> STRING .)
    FUNCIONSTDOUT   reduce using rule 108 (valorString -> STRING .)
    NOT             reduce using rule 108 (valorString -> STRING .)
    ELSEIF          reduce using rule 108 (valorString -> STRING .)
    ENTERO          reduce using rule 108 (valorString -> STRING .)
    DOUBLE          reduce using rule 108 (valorString -> STRING .)
    STRING          reduce using rule 108 (valorString -> STRING .)
    BOOL            reduce using rule 108 (valorString -> STRING .)
    $end            reduce using rule 108 (valorString -> STRING .)
    LDER            reduce using rule 108 (valorString -> STRING .)
    PDER            reduce using rule 108 (valorString -> STRING .)


state 176

    (109) valorString -> VARIABLE .

    SUMA            reduce using rule 109 (valorString -> VARIABLE .)
    RESTA           reduce using rule 109 (valorString -> VARIABLE .)
    MULTI           reduce using rule 109 (valorString -> VARIABLE .)
    DIV             reduce using rule 109 (valorString -> VARIABLE .)
    DIVENTERO       reduce using rule 109 (valorString -> VARIABLE .)
    MOD             reduce using rule 109 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 109 (valorString -> VARIABLE .)
    INT             reduce using rule 109 (valorString -> VARIABLE .)
    DOUBLER         reduce using rule 109 (valorString -> VARIABLE .)
    NUM             reduce using rule 109 (valorString -> VARIABLE .)
    STRINGR         reduce using rule 109 (valorString -> VARIABLE .)
    BOOLR           reduce using rule 109 (valorString -> VARIABLE .)
    DYNAMIC         reduce using rule 109 (valorString -> VARIABLE .)
    VAR             reduce using rule 109 (valorString -> VARIABLE .)
    VARIABLE        reduce using rule 109 (valorString -> VARIABLE .)
    WHILE           reduce using rule 109 (valorString -> VARIABLE .)
    DO              reduce using rule 109 (valorString -> VARIABLE .)
    IF              reduce using rule 109 (valorString -> VARIABLE .)
    ELSE            reduce using rule 109 (valorString -> VARIABLE .)
    PRINT           reduce using rule 109 (valorString -> VARIABLE .)
    FUNCIONSTDIN    reduce using rule 109 (valorString -> VARIABLE .)
    FUNCIONSTDOUT   reduce using rule 109 (valorString -> VARIABLE .)
    NOT             reduce using rule 109 (valorString -> VARIABLE .)
    ELSEIF          reduce using rule 109 (valorString -> VARIABLE .)
    ENTERO          reduce using rule 109 (valorString -> VARIABLE .)
    DOUBLE          reduce using rule 109 (valorString -> VARIABLE .)
    STRING          reduce using rule 109 (valorString -> VARIABLE .)
    BOOL            reduce using rule 109 (valorString -> VARIABLE .)
    $end            reduce using rule 109 (valorString -> VARIABLE .)
    LDER            reduce using rule 109 (valorString -> VARIABLE .)
    PDER            reduce using rule 109 (valorString -> VARIABLE .)


state 177

    (103) expresionBool -> valor IS objeto .

    PUNTOYCOMA      reduce using rule 103 (expresionBool -> valor IS objeto .)
    AND             reduce using rule 103 (expresionBool -> valor IS objeto .)
    OR              reduce using rule 103 (expresionBool -> valor IS objeto .)
    INT             reduce using rule 103 (expresionBool -> valor IS objeto .)
    DOUBLER         reduce using rule 103 (expresionBool -> valor IS objeto .)
    NUM             reduce using rule 103 (expresionBool -> valor IS objeto .)
    STRINGR         reduce using rule 103 (expresionBool -> valor IS objeto .)
    BOOLR           reduce using rule 103 (expresionBool -> valor IS objeto .)
    DYNAMIC         reduce using rule 103 (expresionBool -> valor IS objeto .)
    VAR             reduce using rule 103 (expresionBool -> valor IS objeto .)
    VARIABLE        reduce using rule 103 (expresionBool -> valor IS objeto .)
    WHILE           reduce using rule 103 (expresionBool -> valor IS objeto .)
    DO              reduce using rule 103 (expresionBool -> valor IS objeto .)
    IF              reduce using rule 103 (expresionBool -> valor IS objeto .)
    ELSE            reduce using rule 103 (expresionBool -> valor IS objeto .)
    PRINT           reduce using rule 103 (expresionBool -> valor IS objeto .)
    FUNCIONSTDIN    reduce using rule 103 (expresionBool -> valor IS objeto .)
    FUNCIONSTDOUT   reduce using rule 103 (expresionBool -> valor IS objeto .)
    NOT             reduce using rule 103 (expresionBool -> valor IS objeto .)
    ELSEIF          reduce using rule 103 (expresionBool -> valor IS objeto .)
    ENTERO          reduce using rule 103 (expresionBool -> valor IS objeto .)
    DOUBLE          reduce using rule 103 (expresionBool -> valor IS objeto .)
    STRING          reduce using rule 103 (expresionBool -> valor IS objeto .)
    BOOL            reduce using rule 103 (expresionBool -> valor IS objeto .)
    $end            reduce using rule 103 (expresionBool -> valor IS objeto .)
    LDER            reduce using rule 103 (expresionBool -> valor IS objeto .)
    PDER            reduce using rule 103 (expresionBool -> valor IS objeto .)


state 178

    (134) objeto -> STRINGR .

    PUNTOYCOMA      reduce using rule 134 (objeto -> STRINGR .)
    AND             reduce using rule 134 (objeto -> STRINGR .)
    OR              reduce using rule 134 (objeto -> STRINGR .)
    INT             reduce using rule 134 (objeto -> STRINGR .)
    DOUBLER         reduce using rule 134 (objeto -> STRINGR .)
    NUM             reduce using rule 134 (objeto -> STRINGR .)
    STRINGR         reduce using rule 134 (objeto -> STRINGR .)
    BOOLR           reduce using rule 134 (objeto -> STRINGR .)
    DYNAMIC         reduce using rule 134 (objeto -> STRINGR .)
    VAR             reduce using rule 134 (objeto -> STRINGR .)
    VARIABLE        reduce using rule 134 (objeto -> STRINGR .)
    WHILE           reduce using rule 134 (objeto -> STRINGR .)
    DO              reduce using rule 134 (objeto -> STRINGR .)
    IF              reduce using rule 134 (objeto -> STRINGR .)
    ELSE            reduce using rule 134 (objeto -> STRINGR .)
    PRINT           reduce using rule 134 (objeto -> STRINGR .)
    FUNCIONSTDIN    reduce using rule 134 (objeto -> STRINGR .)
    FUNCIONSTDOUT   reduce using rule 134 (objeto -> STRINGR .)
    NOT             reduce using rule 134 (objeto -> STRINGR .)
    ELSEIF          reduce using rule 134 (objeto -> STRINGR .)
    ENTERO          reduce using rule 134 (objeto -> STRINGR .)
    DOUBLE          reduce using rule 134 (objeto -> STRINGR .)
    STRING          reduce using rule 134 (objeto -> STRINGR .)
    BOOL            reduce using rule 134 (objeto -> STRINGR .)
    $end            reduce using rule 134 (objeto -> STRINGR .)
    LDER            reduce using rule 134 (objeto -> STRINGR .)
    PDER            reduce using rule 134 (objeto -> STRINGR .)


state 179

    (135) objeto -> INT .

    PUNTOYCOMA      reduce using rule 135 (objeto -> INT .)
    AND             reduce using rule 135 (objeto -> INT .)
    OR              reduce using rule 135 (objeto -> INT .)
    INT             reduce using rule 135 (objeto -> INT .)
    DOUBLER         reduce using rule 135 (objeto -> INT .)
    NUM             reduce using rule 135 (objeto -> INT .)
    STRINGR         reduce using rule 135 (objeto -> INT .)
    BOOLR           reduce using rule 135 (objeto -> INT .)
    DYNAMIC         reduce using rule 135 (objeto -> INT .)
    VAR             reduce using rule 135 (objeto -> INT .)
    VARIABLE        reduce using rule 135 (objeto -> INT .)
    WHILE           reduce using rule 135 (objeto -> INT .)
    DO              reduce using rule 135 (objeto -> INT .)
    IF              reduce using rule 135 (objeto -> INT .)
    ELSE            reduce using rule 135 (objeto -> INT .)
    PRINT           reduce using rule 135 (objeto -> INT .)
    FUNCIONSTDIN    reduce using rule 135 (objeto -> INT .)
    FUNCIONSTDOUT   reduce using rule 135 (objeto -> INT .)
    NOT             reduce using rule 135 (objeto -> INT .)
    ELSEIF          reduce using rule 135 (objeto -> INT .)
    ENTERO          reduce using rule 135 (objeto -> INT .)
    DOUBLE          reduce using rule 135 (objeto -> INT .)
    STRING          reduce using rule 135 (objeto -> INT .)
    BOOL            reduce using rule 135 (objeto -> INT .)
    $end            reduce using rule 135 (objeto -> INT .)
    LDER            reduce using rule 135 (objeto -> INT .)
    PDER            reduce using rule 135 (objeto -> INT .)


state 180

    (136) objeto -> DOUBLER .

    PUNTOYCOMA      reduce using rule 136 (objeto -> DOUBLER .)
    AND             reduce using rule 136 (objeto -> DOUBLER .)
    OR              reduce using rule 136 (objeto -> DOUBLER .)
    INT             reduce using rule 136 (objeto -> DOUBLER .)
    DOUBLER         reduce using rule 136 (objeto -> DOUBLER .)
    NUM             reduce using rule 136 (objeto -> DOUBLER .)
    STRINGR         reduce using rule 136 (objeto -> DOUBLER .)
    BOOLR           reduce using rule 136 (objeto -> DOUBLER .)
    DYNAMIC         reduce using rule 136 (objeto -> DOUBLER .)
    VAR             reduce using rule 136 (objeto -> DOUBLER .)
    VARIABLE        reduce using rule 136 (objeto -> DOUBLER .)
    WHILE           reduce using rule 136 (objeto -> DOUBLER .)
    DO              reduce using rule 136 (objeto -> DOUBLER .)
    IF              reduce using rule 136 (objeto -> DOUBLER .)
    ELSE            reduce using rule 136 (objeto -> DOUBLER .)
    PRINT           reduce using rule 136 (objeto -> DOUBLER .)
    FUNCIONSTDIN    reduce using rule 136 (objeto -> DOUBLER .)
    FUNCIONSTDOUT   reduce using rule 136 (objeto -> DOUBLER .)
    NOT             reduce using rule 136 (objeto -> DOUBLER .)
    ELSEIF          reduce using rule 136 (objeto -> DOUBLER .)
    ENTERO          reduce using rule 136 (objeto -> DOUBLER .)
    DOUBLE          reduce using rule 136 (objeto -> DOUBLER .)
    STRING          reduce using rule 136 (objeto -> DOUBLER .)
    BOOL            reduce using rule 136 (objeto -> DOUBLER .)
    $end            reduce using rule 136 (objeto -> DOUBLER .)
    LDER            reduce using rule 136 (objeto -> DOUBLER .)
    PDER            reduce using rule 136 (objeto -> DOUBLER .)


state 181

    (137) objeto -> NUM .

    PUNTOYCOMA      reduce using rule 137 (objeto -> NUM .)
    AND             reduce using rule 137 (objeto -> NUM .)
    OR              reduce using rule 137 (objeto -> NUM .)
    INT             reduce using rule 137 (objeto -> NUM .)
    DOUBLER         reduce using rule 137 (objeto -> NUM .)
    NUM             reduce using rule 137 (objeto -> NUM .)
    STRINGR         reduce using rule 137 (objeto -> NUM .)
    BOOLR           reduce using rule 137 (objeto -> NUM .)
    DYNAMIC         reduce using rule 137 (objeto -> NUM .)
    VAR             reduce using rule 137 (objeto -> NUM .)
    VARIABLE        reduce using rule 137 (objeto -> NUM .)
    WHILE           reduce using rule 137 (objeto -> NUM .)
    DO              reduce using rule 137 (objeto -> NUM .)
    IF              reduce using rule 137 (objeto -> NUM .)
    ELSE            reduce using rule 137 (objeto -> NUM .)
    PRINT           reduce using rule 137 (objeto -> NUM .)
    FUNCIONSTDIN    reduce using rule 137 (objeto -> NUM .)
    FUNCIONSTDOUT   reduce using rule 137 (objeto -> NUM .)
    NOT             reduce using rule 137 (objeto -> NUM .)
    ELSEIF          reduce using rule 137 (objeto -> NUM .)
    ENTERO          reduce using rule 137 (objeto -> NUM .)
    DOUBLE          reduce using rule 137 (objeto -> NUM .)
    STRING          reduce using rule 137 (objeto -> NUM .)
    BOOL            reduce using rule 137 (objeto -> NUM .)
    $end            reduce using rule 137 (objeto -> NUM .)
    LDER            reduce using rule 137 (objeto -> NUM .)
    PDER            reduce using rule 137 (objeto -> NUM .)


state 182

    (138) objeto -> VAR .

    PUNTOYCOMA      reduce using rule 138 (objeto -> VAR .)
    AND             reduce using rule 138 (objeto -> VAR .)
    OR              reduce using rule 138 (objeto -> VAR .)
    INT             reduce using rule 138 (objeto -> VAR .)
    DOUBLER         reduce using rule 138 (objeto -> VAR .)
    NUM             reduce using rule 138 (objeto -> VAR .)
    STRINGR         reduce using rule 138 (objeto -> VAR .)
    BOOLR           reduce using rule 138 (objeto -> VAR .)
    DYNAMIC         reduce using rule 138 (objeto -> VAR .)
    VAR             reduce using rule 138 (objeto -> VAR .)
    VARIABLE        reduce using rule 138 (objeto -> VAR .)
    WHILE           reduce using rule 138 (objeto -> VAR .)
    DO              reduce using rule 138 (objeto -> VAR .)
    IF              reduce using rule 138 (objeto -> VAR .)
    ELSE            reduce using rule 138 (objeto -> VAR .)
    PRINT           reduce using rule 138 (objeto -> VAR .)
    FUNCIONSTDIN    reduce using rule 138 (objeto -> VAR .)
    FUNCIONSTDOUT   reduce using rule 138 (objeto -> VAR .)
    NOT             reduce using rule 138 (objeto -> VAR .)
    ELSEIF          reduce using rule 138 (objeto -> VAR .)
    ENTERO          reduce using rule 138 (objeto -> VAR .)
    DOUBLE          reduce using rule 138 (objeto -> VAR .)
    STRING          reduce using rule 138 (objeto -> VAR .)
    BOOL            reduce using rule 138 (objeto -> VAR .)
    $end            reduce using rule 138 (objeto -> VAR .)
    LDER            reduce using rule 138 (objeto -> VAR .)
    PDER            reduce using rule 138 (objeto -> VAR .)


state 183

    (139) objeto -> DYNAMIC .

    PUNTOYCOMA      reduce using rule 139 (objeto -> DYNAMIC .)
    AND             reduce using rule 139 (objeto -> DYNAMIC .)
    OR              reduce using rule 139 (objeto -> DYNAMIC .)
    INT             reduce using rule 139 (objeto -> DYNAMIC .)
    DOUBLER         reduce using rule 139 (objeto -> DYNAMIC .)
    NUM             reduce using rule 139 (objeto -> DYNAMIC .)
    STRINGR         reduce using rule 139 (objeto -> DYNAMIC .)
    BOOLR           reduce using rule 139 (objeto -> DYNAMIC .)
    DYNAMIC         reduce using rule 139 (objeto -> DYNAMIC .)
    VAR             reduce using rule 139 (objeto -> DYNAMIC .)
    VARIABLE        reduce using rule 139 (objeto -> DYNAMIC .)
    WHILE           reduce using rule 139 (objeto -> DYNAMIC .)
    DO              reduce using rule 139 (objeto -> DYNAMIC .)
    IF              reduce using rule 139 (objeto -> DYNAMIC .)
    ELSE            reduce using rule 139 (objeto -> DYNAMIC .)
    PRINT           reduce using rule 139 (objeto -> DYNAMIC .)
    FUNCIONSTDIN    reduce using rule 139 (objeto -> DYNAMIC .)
    FUNCIONSTDOUT   reduce using rule 139 (objeto -> DYNAMIC .)
    NOT             reduce using rule 139 (objeto -> DYNAMIC .)
    ELSEIF          reduce using rule 139 (objeto -> DYNAMIC .)
    ENTERO          reduce using rule 139 (objeto -> DYNAMIC .)
    DOUBLE          reduce using rule 139 (objeto -> DYNAMIC .)
    STRING          reduce using rule 139 (objeto -> DYNAMIC .)
    BOOL            reduce using rule 139 (objeto -> DYNAMIC .)
    $end            reduce using rule 139 (objeto -> DYNAMIC .)
    LDER            reduce using rule 139 (objeto -> DYNAMIC .)
    PDER            reduce using rule 139 (objeto -> DYNAMIC .)


state 184

    (140) objeto -> LIST .

    PUNTOYCOMA      reduce using rule 140 (objeto -> LIST .)
    AND             reduce using rule 140 (objeto -> LIST .)
    OR              reduce using rule 140 (objeto -> LIST .)
    INT             reduce using rule 140 (objeto -> LIST .)
    DOUBLER         reduce using rule 140 (objeto -> LIST .)
    NUM             reduce using rule 140 (objeto -> LIST .)
    STRINGR         reduce using rule 140 (objeto -> LIST .)
    BOOLR           reduce using rule 140 (objeto -> LIST .)
    DYNAMIC         reduce using rule 140 (objeto -> LIST .)
    VAR             reduce using rule 140 (objeto -> LIST .)
    VARIABLE        reduce using rule 140 (objeto -> LIST .)
    WHILE           reduce using rule 140 (objeto -> LIST .)
    DO              reduce using rule 140 (objeto -> LIST .)
    IF              reduce using rule 140 (objeto -> LIST .)
    ELSE            reduce using rule 140 (objeto -> LIST .)
    PRINT           reduce using rule 140 (objeto -> LIST .)
    FUNCIONSTDIN    reduce using rule 140 (objeto -> LIST .)
    FUNCIONSTDOUT   reduce using rule 140 (objeto -> LIST .)
    NOT             reduce using rule 140 (objeto -> LIST .)
    ELSEIF          reduce using rule 140 (objeto -> LIST .)
    ENTERO          reduce using rule 140 (objeto -> LIST .)
    DOUBLE          reduce using rule 140 (objeto -> LIST .)
    STRING          reduce using rule 140 (objeto -> LIST .)
    BOOL            reduce using rule 140 (objeto -> LIST .)
    $end            reduce using rule 140 (objeto -> LIST .)
    LDER            reduce using rule 140 (objeto -> LIST .)
    PDER            reduce using rule 140 (objeto -> LIST .)


state 185

    (141) objeto -> BOOL .

    PUNTOYCOMA      reduce using rule 141 (objeto -> BOOL .)
    AND             reduce using rule 141 (objeto -> BOOL .)
    OR              reduce using rule 141 (objeto -> BOOL .)
    INT             reduce using rule 141 (objeto -> BOOL .)
    DOUBLER         reduce using rule 141 (objeto -> BOOL .)
    NUM             reduce using rule 141 (objeto -> BOOL .)
    STRINGR         reduce using rule 141 (objeto -> BOOL .)
    BOOLR           reduce using rule 141 (objeto -> BOOL .)
    DYNAMIC         reduce using rule 141 (objeto -> BOOL .)
    VAR             reduce using rule 141 (objeto -> BOOL .)
    VARIABLE        reduce using rule 141 (objeto -> BOOL .)
    WHILE           reduce using rule 141 (objeto -> BOOL .)
    DO              reduce using rule 141 (objeto -> BOOL .)
    IF              reduce using rule 141 (objeto -> BOOL .)
    ELSE            reduce using rule 141 (objeto -> BOOL .)
    PRINT           reduce using rule 141 (objeto -> BOOL .)
    FUNCIONSTDIN    reduce using rule 141 (objeto -> BOOL .)
    FUNCIONSTDOUT   reduce using rule 141 (objeto -> BOOL .)
    NOT             reduce using rule 141 (objeto -> BOOL .)
    ELSEIF          reduce using rule 141 (objeto -> BOOL .)
    ENTERO          reduce using rule 141 (objeto -> BOOL .)
    DOUBLE          reduce using rule 141 (objeto -> BOOL .)
    STRING          reduce using rule 141 (objeto -> BOOL .)
    BOOL            reduce using rule 141 (objeto -> BOOL .)
    $end            reduce using rule 141 (objeto -> BOOL .)
    LDER            reduce using rule 141 (objeto -> BOOL .)
    PDER            reduce using rule 141 (objeto -> BOOL .)


state 186

    (142) objeto -> MAP .

    PUNTOYCOMA      reduce using rule 142 (objeto -> MAP .)
    AND             reduce using rule 142 (objeto -> MAP .)
    OR              reduce using rule 142 (objeto -> MAP .)
    INT             reduce using rule 142 (objeto -> MAP .)
    DOUBLER         reduce using rule 142 (objeto -> MAP .)
    NUM             reduce using rule 142 (objeto -> MAP .)
    STRINGR         reduce using rule 142 (objeto -> MAP .)
    BOOLR           reduce using rule 142 (objeto -> MAP .)
    DYNAMIC         reduce using rule 142 (objeto -> MAP .)
    VAR             reduce using rule 142 (objeto -> MAP .)
    VARIABLE        reduce using rule 142 (objeto -> MAP .)
    WHILE           reduce using rule 142 (objeto -> MAP .)
    DO              reduce using rule 142 (objeto -> MAP .)
    IF              reduce using rule 142 (objeto -> MAP .)
    ELSE            reduce using rule 142 (objeto -> MAP .)
    PRINT           reduce using rule 142 (objeto -> MAP .)
    FUNCIONSTDIN    reduce using rule 142 (objeto -> MAP .)
    FUNCIONSTDOUT   reduce using rule 142 (objeto -> MAP .)
    NOT             reduce using rule 142 (objeto -> MAP .)
    ELSEIF          reduce using rule 142 (objeto -> MAP .)
    ENTERO          reduce using rule 142 (objeto -> MAP .)
    DOUBLE          reduce using rule 142 (objeto -> MAP .)
    STRING          reduce using rule 142 (objeto -> MAP .)
    BOOL            reduce using rule 142 (objeto -> MAP .)
    $end            reduce using rule 142 (objeto -> MAP .)
    LDER            reduce using rule 142 (objeto -> MAP .)
    PDER            reduce using rule 142 (objeto -> MAP .)


state 187

    (143) objeto -> SET .

    PUNTOYCOMA      reduce using rule 143 (objeto -> SET .)
    AND             reduce using rule 143 (objeto -> SET .)
    OR              reduce using rule 143 (objeto -> SET .)
    INT             reduce using rule 143 (objeto -> SET .)
    DOUBLER         reduce using rule 143 (objeto -> SET .)
    NUM             reduce using rule 143 (objeto -> SET .)
    STRINGR         reduce using rule 143 (objeto -> SET .)
    BOOLR           reduce using rule 143 (objeto -> SET .)
    DYNAMIC         reduce using rule 143 (objeto -> SET .)
    VAR             reduce using rule 143 (objeto -> SET .)
    VARIABLE        reduce using rule 143 (objeto -> SET .)
    WHILE           reduce using rule 143 (objeto -> SET .)
    DO              reduce using rule 143 (objeto -> SET .)
    IF              reduce using rule 143 (objeto -> SET .)
    ELSE            reduce using rule 143 (objeto -> SET .)
    PRINT           reduce using rule 143 (objeto -> SET .)
    FUNCIONSTDIN    reduce using rule 143 (objeto -> SET .)
    FUNCIONSTDOUT   reduce using rule 143 (objeto -> SET .)
    NOT             reduce using rule 143 (objeto -> SET .)
    ELSEIF          reduce using rule 143 (objeto -> SET .)
    ENTERO          reduce using rule 143 (objeto -> SET .)
    DOUBLE          reduce using rule 143 (objeto -> SET .)
    STRING          reduce using rule 143 (objeto -> SET .)
    BOOL            reduce using rule 143 (objeto -> SET .)
    $end            reduce using rule 143 (objeto -> SET .)
    LDER            reduce using rule 143 (objeto -> SET .)
    PDER            reduce using rule 143 (objeto -> SET .)


state 188

    (104) expresionBool -> valor ISNEGADO objeto .

    PUNTOYCOMA      reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    AND             reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    OR              reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    INT             reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    DOUBLER         reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    NUM             reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    STRINGR         reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    BOOLR           reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    DYNAMIC         reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    VAR             reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    VARIABLE        reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    WHILE           reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    DO              reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    IF              reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    ELSE            reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    PRINT           reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    FUNCIONSTDIN    reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    FUNCIONSTDOUT   reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    NOT             reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    ELSEIF          reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    ENTERO          reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    DOUBLE          reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    STRING          reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    BOOL            reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    $end            reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    LDER            reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)
    PDER            reduce using rule 104 (expresionBool -> valor ISNEGADO objeto .)


state 189

    (85) expresion -> valor operadorMat expresion .

    PUNTOYCOMA      reduce using rule 85 (expresion -> valor operadorMat expresion .)
    INT             reduce using rule 85 (expresion -> valor operadorMat expresion .)
    DOUBLER         reduce using rule 85 (expresion -> valor operadorMat expresion .)
    NUM             reduce using rule 85 (expresion -> valor operadorMat expresion .)
    STRINGR         reduce using rule 85 (expresion -> valor operadorMat expresion .)
    BOOLR           reduce using rule 85 (expresion -> valor operadorMat expresion .)
    DYNAMIC         reduce using rule 85 (expresion -> valor operadorMat expresion .)
    VAR             reduce using rule 85 (expresion -> valor operadorMat expresion .)
    VARIABLE        reduce using rule 85 (expresion -> valor operadorMat expresion .)
    WHILE           reduce using rule 85 (expresion -> valor operadorMat expresion .)
    DO              reduce using rule 85 (expresion -> valor operadorMat expresion .)
    IF              reduce using rule 85 (expresion -> valor operadorMat expresion .)
    ELSE            reduce using rule 85 (expresion -> valor operadorMat expresion .)
    PRINT           reduce using rule 85 (expresion -> valor operadorMat expresion .)
    FUNCIONSTDIN    reduce using rule 85 (expresion -> valor operadorMat expresion .)
    FUNCIONSTDOUT   reduce using rule 85 (expresion -> valor operadorMat expresion .)
    NOT             reduce using rule 85 (expresion -> valor operadorMat expresion .)
    ELSEIF          reduce using rule 85 (expresion -> valor operadorMat expresion .)
    ENTERO          reduce using rule 85 (expresion -> valor operadorMat expresion .)
    DOUBLE          reduce using rule 85 (expresion -> valor operadorMat expresion .)
    STRING          reduce using rule 85 (expresion -> valor operadorMat expresion .)
    BOOL            reduce using rule 85 (expresion -> valor operadorMat expresion .)
    $end            reduce using rule 85 (expresion -> valor operadorMat expresion .)
    LDER            reduce using rule 85 (expresion -> valor operadorMat expresion .)
    PDER            reduce using rule 85 (expresion -> valor operadorMat expresion .)


state 190

    (91) sentenciaWhile -> WHILE PIZQ expresionBool . PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> WHILE PIZQ expresionBool . PDER algoritmo
    (106) comparacionBool -> expresionBool . operadorLogico expresionBool
    (107) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (132) operadorLogico -> . AND
    (133) operadorLogico -> . OR

    PDER            shift and go to state 223
    AND             shift and go to state 53
    OR              shift and go to state 54

    operadorLogico                 shift and go to state 52

state 191

    (93) sentenciaDoWhile -> DO LIZQ algoritmo . LDER WHILE PIZQ expresionBool PDER

    LDER            shift and go to state 224


state 192

    (75) sentenciaIf -> IF PIZQ expresionBool . PDER algoritmo
    (76) sentenciaIf -> IF PIZQ expresionBool . PDER LIZQ algoritmo LDER
    (106) comparacionBool -> expresionBool . operadorLogico expresionBool
    (107) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (132) operadorLogico -> . AND
    (133) operadorLogico -> . OR

    PDER            shift and go to state 225
    AND             shift and go to state 53
    OR              shift and go to state 54

    operadorLogico                 shift and go to state 52

state 193

    (78) sentenciaElse -> ELSE LIZQ algoritmo . LDER

    LDER            shift and go to state 226


state 194

    (41) algoritmo -> asignacion PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    INT             reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    DOUBLER         reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    NUM             reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    STRINGR         reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    BOOLR           reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    DYNAMIC         reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    VAR             reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    VARIABLE        reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    WHILE           reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    DO              reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    IF              reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    ELSE            reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    PRINT           reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    NOT             reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    ELSEIF          reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    ENTERO          reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    DOUBLE          reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    STRING          reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    BOOL            reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    $end            reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)
    LDER            reduce using rule 41 (algoritmo -> asignacion PUNTOYCOMA .)


state 195

    (42) algoritmo -> expresionInt PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    INT             reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    DOUBLER         reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    NUM             reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    STRINGR         reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    BOOLR           reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    DYNAMIC         reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    VAR             reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    VARIABLE        reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    WHILE           reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    DO              reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    IF              reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    ELSE            reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    PRINT           reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    NOT             reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    ELSEIF          reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    ENTERO          reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    DOUBLE          reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    STRING          reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    BOOL            reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    $end            reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)
    LDER            reduce using rule 42 (algoritmo -> expresionInt PUNTOYCOMA .)


state 196

    (43) algoritmo -> expresionDouble PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    INT             reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DOUBLER         reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    NUM             reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    STRINGR         reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    BOOLR           reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DYNAMIC         reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    VAR             reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    VARIABLE        reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    WHILE           reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DO              reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    IF              reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    ELSE            reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    PRINT           reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    NOT             reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    ELSEIF          reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    ENTERO          reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    DOUBLE          reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    STRING          reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    BOOL            reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    $end            reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)
    LDER            reduce using rule 43 (algoritmo -> expresionDouble PUNTOYCOMA .)


state 197

    (44) algoritmo -> expresionString PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    INT             reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    DOUBLER         reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    NUM             reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    STRINGR         reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    BOOLR           reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    DYNAMIC         reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    VAR             reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    VARIABLE        reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    WHILE           reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    DO              reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    IF              reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    ELSE            reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    PRINT           reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    NOT             reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    ELSEIF          reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    ENTERO          reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    DOUBLE          reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    STRING          reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    BOOL            reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    $end            reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)
    LDER            reduce using rule 44 (algoritmo -> expresionString PUNTOYCOMA .)


state 198

    (45) algoritmo -> expresionBool PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    INT             reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    DOUBLER         reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    NUM             reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    STRINGR         reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    BOOLR           reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    DYNAMIC         reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    VAR             reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    VARIABLE        reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    WHILE           reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    DO              reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    IF              reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    ELSE            reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    PRINT           reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    NOT             reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    ELSEIF          reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    ENTERO          reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    DOUBLE          reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    STRING          reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    BOOL            reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    $end            reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)
    LDER            reduce using rule 45 (algoritmo -> expresionBool PUNTOYCOMA .)


state 199

    (48) algoritmo -> sentenciaWhile PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    INT             reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DOUBLER         reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    NUM             reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    STRINGR         reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    BOOLR           reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DYNAMIC         reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    VAR             reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    VARIABLE        reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    WHILE           reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DO              reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    IF              reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    ELSE            reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    PRINT           reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    NOT             reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    ELSEIF          reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    ENTERO          reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    DOUBLE          reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    STRING          reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    BOOL            reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    $end            reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    LDER            reduce using rule 48 (algoritmo -> sentenciaWhile PUNTOYCOMA .)


state 200

    (49) algoritmo -> sentenciaDoWhile PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    INT             reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DOUBLER         reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    NUM             reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    STRINGR         reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    BOOLR           reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DYNAMIC         reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    VAR             reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    VARIABLE        reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    WHILE           reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DO              reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    IF              reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    ELSE            reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    PRINT           reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    NOT             reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    ELSEIF          reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    ENTERO          reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    DOUBLE          reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    STRING          reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    BOOL            reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    $end            reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    LDER            reduce using rule 49 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)


state 201

    (50) algoritmo -> sentenciaIf PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    INT             reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DOUBLER         reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    NUM             reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    STRINGR         reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    BOOLR           reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DYNAMIC         reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    VAR             reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    VARIABLE        reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    WHILE           reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DO              reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    IF              reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    ELSE            reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    PRINT           reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    NOT             reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    ELSEIF          reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    ENTERO          reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    DOUBLE          reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    STRING          reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    BOOL            reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    $end            reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    LDER            reduce using rule 50 (algoritmo -> sentenciaIf PUNTOYCOMA .)


state 202

    (52) algoritmo -> sentenciaElse PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    INT             reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DOUBLER         reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    NUM             reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    STRINGR         reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    BOOLR           reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DYNAMIC         reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    VAR             reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    VARIABLE        reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    WHILE           reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DO              reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    IF              reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    ELSE            reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    PRINT           reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    NOT             reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    ELSEIF          reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    ENTERO          reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    DOUBLE          reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    STRING          reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    BOOL            reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    $end            reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)
    LDER            reduce using rule 52 (algoritmo -> sentenciaElse PUNTOYCOMA .)


state 203

    (54) algoritmo -> imprimir PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    INT             reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    DOUBLER         reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    NUM             reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    STRINGR         reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    BOOLR           reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    DYNAMIC         reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    VAR             reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    VARIABLE        reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    WHILE           reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    DO              reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    IF              reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    ELSE            reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    PRINT           reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    NOT             reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    ELSEIF          reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    ENTERO          reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    DOUBLE          reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    STRING          reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    BOOL            reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    $end            reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)
    LDER            reduce using rule 54 (algoritmo -> imprimir PUNTOYCOMA .)


state 204

    (55) algoritmo -> funcionStdin PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    INT             reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    DOUBLER         reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    NUM             reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    STRINGR         reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    BOOLR           reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    DYNAMIC         reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    VAR             reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    VARIABLE        reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    WHILE           reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    DO              reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    IF              reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    ELSE            reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    PRINT           reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    NOT             reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    ELSEIF          reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    ENTERO          reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    DOUBLE          reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    STRING          reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    BOOL            reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    $end            reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)
    LDER            reduce using rule 55 (algoritmo -> funcionStdin PUNTOYCOMA .)


state 205

    (56) algoritmo -> funcionStdout PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    INT             reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    DOUBLER         reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    NUM             reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    STRINGR         reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    BOOLR           reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    DYNAMIC         reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    VAR             reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    VARIABLE        reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    WHILE           reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    DO              reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    IF              reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    ELSE            reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    PRINT           reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    NOT             reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    ELSEIF          reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    ENTERO          reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    DOUBLE          reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    STRING          reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    BOOL            reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    $end            reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)
    LDER            reduce using rule 56 (algoritmo -> funcionStdout PUNTOYCOMA .)


state 206

    (57) algoritmo -> negacionBool PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    INT             reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    DOUBLER         reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    NUM             reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    STRINGR         reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    BOOLR           reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    DYNAMIC         reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    VAR             reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    VARIABLE        reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    WHILE           reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    DO              reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    IF              reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    ELSE            reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    PRINT           reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    NOT             reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    ELSEIF          reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    ENTERO          reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    DOUBLE          reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    STRING          reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    BOOL            reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    $end            reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)
    LDER            reduce using rule 57 (algoritmo -> negacionBool PUNTOYCOMA .)


state 207

    (58) algoritmo -> comparacionBool PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    INT             reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    DOUBLER         reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    NUM             reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    STRINGR         reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    BOOLR           reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    DYNAMIC         reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    VAR             reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    VARIABLE        reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    WHILE           reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    DO              reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    IF              reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    ELSE            reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    PRINT           reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    NOT             reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    ELSEIF          reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    ENTERO          reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    DOUBLE          reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    STRING          reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    BOOL            reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    $end            reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)
    LDER            reduce using rule 58 (algoritmo -> comparacionBool PUNTOYCOMA .)


state 208

    (60) algoritmo -> sentenciaElseIf PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    INT             reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    DOUBLER         reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    NUM             reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    STRINGR         reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    BOOLR           reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    DYNAMIC         reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    VAR             reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    VARIABLE        reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    WHILE           reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    DO              reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    IF              reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    ELSE            reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    PRINT           reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    FUNCIONSTDIN    reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    FUNCIONSTDOUT   reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    NOT             reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    ELSEIF          reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    ENTERO          reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    DOUBLE          reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    STRING          reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    BOOL            reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    $end            reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)
    LDER            reduce using rule 60 (algoritmo -> sentenciaElseIf PUNTOYCOMA .)


state 209

    (70) imprimir -> PRINT PIZQ expresion . PDER

    PDER            shift and go to state 227


state 210

    (71) imprimir -> PRINT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 228


state 211

    (69) asignacionSimple -> VARIABLE . IGUAL expresion
    (82) valor -> VARIABLE .
    (97) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (98) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (109) valorString -> VARIABLE .
    (113) valorInt -> VARIABLE .
    (95) valorBool -> VARIABLE .
    (126) comparadorMat -> . DIGUAL
    (127) comparadorMat -> . NOIGUAL
    (128) comparadorMat -> . MAYOR
    (129) comparadorMat -> . MENOR
    (130) comparadorMat -> . MAYIGUAL
    (131) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 82 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 82 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 71
    IS              reduce using rule 82 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 82 (valor -> VARIABLE .)
    SUMA            reduce using rule 82 (valor -> VARIABLE .)
    RESTA           reduce using rule 82 (valor -> VARIABLE .)
    MULTI           reduce using rule 82 (valor -> VARIABLE .)
    DIV             reduce using rule 82 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 82 (valor -> VARIABLE .)
    MOD             reduce using rule 82 (valor -> VARIABLE .)
    PDER            reduce using rule 82 (valor -> VARIABLE .)
    AND             reduce using rule 95 (valorBool -> VARIABLE .)
    OR              reduce using rule 95 (valorBool -> VARIABLE .)
    DIGUAL          shift and go to state 72
    NOIGUAL         shift and go to state 73
    MAYOR           shift and go to state 74
    MENOR           shift and go to state 75
    MAYIGUAL        shift and go to state 76
    MENIGUAL        shift and go to state 77

  ! SUMA            [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! DIV             [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! MOD             [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 109 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 113 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 95 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 70

state 212

    (73) funcionStdout -> FUNCIONSTDOUT PIZQ expresion . PDER

    PDER            shift and go to state 229


state 213

    (74) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 230


state 214

    (105) negacionBool -> NOT PIZQ expresionBool . PDER
    (106) comparacionBool -> expresionBool . operadorLogico expresionBool
    (107) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (132) operadorLogico -> . AND
    (133) operadorLogico -> . OR

    PDER            shift and go to state 231
    AND             shift and go to state 53
    OR              shift and go to state 54

    operadorLogico                 shift and go to state 52

state 215

    (79) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER algoritmo
    (80) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER LIZQ algoritmo LDER
    (106) comparacionBool -> expresionBool . operadorLogico expresionBool
    (107) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (132) operadorLogico -> . AND
    (133) operadorLogico -> . OR

    PDER            shift and go to state 232
    AND             shift and go to state 53
    OR              shift and go to state 54

    operadorLogico                 shift and go to state 52

state 216

    (61) asignacion -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 61 (asignacion -> INT VARIABLE IGUAL expresionInt .)


state 217

    (62) asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 62 (asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 218

    (63) asignacion -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 63 (asignacion -> NUM VARIABLE IGUAL expresionDouble .)


state 219

    (64) asignacion -> STRINGR VARIABLE IGUAL expresionString .

    PUNTOYCOMA      reduce using rule 64 (asignacion -> STRINGR VARIABLE IGUAL expresionString .)


state 220

    (65) asignacion -> BOOLR VARIABLE IGUAL expresionBool .
    (106) comparacionBool -> expresionBool . operadorLogico expresionBool
    (107) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (132) operadorLogico -> . AND
    (133) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 65 (asignacion -> BOOLR VARIABLE IGUAL expresionBool .)
    AND             shift and go to state 53
    OR              shift and go to state 54

    operadorLogico                 shift and go to state 52

state 221

    (66) asignacion -> DYNAMIC VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 66 (asignacion -> DYNAMIC VARIABLE IGUAL expresion .)


state 222

    (67) asignacion -> VAR VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 67 (asignacion -> VAR VARIABLE IGUAL expresion .)


state 223

    (91) sentenciaWhile -> WHILE PIZQ expresionBool PDER . LIZQ algoritmo LDER
    (92) sentenciaWhile -> WHILE PIZQ expresionBool PDER . algoritmo
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    LIZQ            shift and go to state 233
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    expresionBool                  shift and go to state 106
    algoritmo                      shift and go to state 234
    asignacion                     shift and go to state 102
    expresionInt                   shift and go to state 103
    expresionDouble                shift and go to state 104
    expresionString                shift and go to state 105
    expresion                      shift and go to state 18
    sentenciaWhile                 shift and go to state 107
    sentenciaDoWhile               shift and go to state 108
    sentenciaIf                    shift and go to state 109
    sentenciaElse                  shift and go to state 110
    imprimir                       shift and go to state 111
    funcionStdin                   shift and go to state 112
    funcionStdout                  shift and go to state 113
    negacionBool                   shift and go to state 114
    comparacionBool                shift and go to state 115
    sentenciaElseIf                shift and go to state 116
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 224

    (93) sentenciaDoWhile -> DO LIZQ algoritmo LDER . WHILE PIZQ expresionBool PDER

    WHILE           shift and go to state 235


state 225

    (75) sentenciaIf -> IF PIZQ expresionBool PDER . algoritmo
    (76) sentenciaIf -> IF PIZQ expresionBool PDER . LIZQ algoritmo LDER
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    LIZQ            shift and go to state 237
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    expresionBool                  shift and go to state 106
    algoritmo                      shift and go to state 236
    asignacion                     shift and go to state 102
    expresionInt                   shift and go to state 103
    expresionDouble                shift and go to state 104
    expresionString                shift and go to state 105
    expresion                      shift and go to state 18
    sentenciaWhile                 shift and go to state 107
    sentenciaDoWhile               shift and go to state 108
    sentenciaIf                    shift and go to state 109
    sentenciaElse                  shift and go to state 110
    imprimir                       shift and go to state 111
    funcionStdin                   shift and go to state 112
    funcionStdout                  shift and go to state 113
    negacionBool                   shift and go to state 114
    comparacionBool                shift and go to state 115
    sentenciaElseIf                shift and go to state 116
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 226

    (78) sentenciaElse -> ELSE LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    INT             reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    NUM             reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    VAR             reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    WHILE           reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DO              reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    IF              reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    ELSE            reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    PRINT           reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    FUNCIONSTDIN    reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    FUNCIONSTDOUT   reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    NOT             reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    ELSEIF          reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    STRING          reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    BOOL            reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    $end            reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)
    LDER            reduce using rule 78 (sentenciaElse -> ELSE LIZQ algoritmo LDER .)


state 227

    (70) imprimir -> PRINT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 70 (imprimir -> PRINT PIZQ expresion PDER .)


state 228

    (71) imprimir -> PRINT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 71 (imprimir -> PRINT PIZQ asignacionSimple PDER .)


state 229

    (73) funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 73 (funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .)


state 230

    (74) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 74 (funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .)


state 231

    (105) negacionBool -> NOT PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    AND             reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    OR              reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    INT             reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    DOUBLER         reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    NUM             reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    STRINGR         reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    BOOLR           reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    DYNAMIC         reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    VAR             reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    VARIABLE        reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    WHILE           reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    DO              reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    IF              reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    ELSE            reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    PRINT           reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    FUNCIONSTDIN    reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    FUNCIONSTDOUT   reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    NOT             reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    ELSEIF          reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    ENTERO          reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    DOUBLE          reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    STRING          reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    BOOL            reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    $end            reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    LDER            reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)
    PDER            reduce using rule 105 (negacionBool -> NOT PIZQ expresionBool PDER .)


state 232

    (79) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . algoritmo
    (80) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . LIZQ algoritmo LDER
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    LIZQ            shift and go to state 239
    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    expresionBool                  shift and go to state 106
    algoritmo                      shift and go to state 238
    asignacion                     shift and go to state 102
    expresionInt                   shift and go to state 103
    expresionDouble                shift and go to state 104
    expresionString                shift and go to state 105
    expresion                      shift and go to state 18
    sentenciaWhile                 shift and go to state 107
    sentenciaDoWhile               shift and go to state 108
    sentenciaIf                    shift and go to state 109
    sentenciaElse                  shift and go to state 110
    imprimir                       shift and go to state 111
    funcionStdin                   shift and go to state 112
    funcionStdout                  shift and go to state 113
    negacionBool                   shift and go to state 114
    comparacionBool                shift and go to state 115
    sentenciaElseIf                shift and go to state 116
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 233

    (91) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ . algoritmo LDER
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    expresionBool                  shift and go to state 106
    algoritmo                      shift and go to state 240
    asignacion                     shift and go to state 102
    expresionInt                   shift and go to state 103
    expresionDouble                shift and go to state 104
    expresionString                shift and go to state 105
    expresion                      shift and go to state 18
    sentenciaWhile                 shift and go to state 107
    sentenciaDoWhile               shift and go to state 108
    sentenciaIf                    shift and go to state 109
    sentenciaElse                  shift and go to state 110
    imprimir                       shift and go to state 111
    funcionStdin                   shift and go to state 112
    funcionStdout                  shift and go to state 113
    negacionBool                   shift and go to state 114
    comparacionBool                shift and go to state 115
    sentenciaElseIf                shift and go to state 116
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 234

    (92) sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .

    PUNTOYCOMA      reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    INT             reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DOUBLER         reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    NUM             reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    STRINGR         reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    BOOLR           reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DYNAMIC         reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    VAR             reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    VARIABLE        reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    WHILE           reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DO              reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    IF              reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    ELSE            reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    PRINT           reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    FUNCIONSTDIN    reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    FUNCIONSTDOUT   reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    NOT             reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    ELSEIF          reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    ENTERO          reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    DOUBLE          reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    STRING          reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    BOOL            reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    $end            reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)
    LDER            reduce using rule 92 (sentenciaWhile -> WHILE PIZQ expresionBool PDER algoritmo .)


state 235

    (93) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE . PIZQ expresionBool PDER

    PIZQ            shift and go to state 241


state 236

    (75) sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .

    PUNTOYCOMA      reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    INT             reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DOUBLER         reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    NUM             reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    STRINGR         reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    BOOLR           reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DYNAMIC         reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    VAR             reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    VARIABLE        reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    WHILE           reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DO              reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    IF              reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    ELSE            reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    PRINT           reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    FUNCIONSTDIN    reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    FUNCIONSTDOUT   reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    NOT             reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    ELSEIF          reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    ENTERO          reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    DOUBLE          reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    STRING          reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    BOOL            reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    $end            reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)
    LDER            reduce using rule 75 (sentenciaIf -> IF PIZQ expresionBool PDER algoritmo .)


state 237

    (76) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ . algoritmo LDER
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    expresionBool                  shift and go to state 106
    algoritmo                      shift and go to state 242
    asignacion                     shift and go to state 102
    expresionInt                   shift and go to state 103
    expresionDouble                shift and go to state 104
    expresionString                shift and go to state 105
    expresion                      shift and go to state 18
    sentenciaWhile                 shift and go to state 107
    sentenciaDoWhile               shift and go to state 108
    sentenciaIf                    shift and go to state 109
    sentenciaElse                  shift and go to state 110
    imprimir                       shift and go to state 111
    funcionStdin                   shift and go to state 112
    funcionStdout                  shift and go to state 113
    negacionBool                   shift and go to state 114
    comparacionBool                shift and go to state 115
    sentenciaElseIf                shift and go to state 116
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 238

    (79) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .

    PUNTOYCOMA      reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    INT             reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    DOUBLER         reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    NUM             reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    STRINGR         reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    BOOLR           reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    DYNAMIC         reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    VAR             reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    VARIABLE        reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    WHILE           reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    DO              reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    IF              reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    ELSE            reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    PRINT           reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    FUNCIONSTDIN    reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    FUNCIONSTDOUT   reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    NOT             reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    ELSEIF          reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    ENTERO          reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    DOUBLE          reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    STRING          reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    BOOL            reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    $end            reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)
    LDER            reduce using rule 79 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER algoritmo .)


state 239

    (80) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ . algoritmo LDER
    (41) algoritmo -> . asignacion PUNTOYCOMA
    (42) algoritmo -> . expresionInt PUNTOYCOMA
    (43) algoritmo -> . expresionDouble PUNTOYCOMA
    (44) algoritmo -> . expresionString PUNTOYCOMA
    (45) algoritmo -> . expresionBool PUNTOYCOMA
    (46) algoritmo -> . expresion
    (47) algoritmo -> . sentenciaWhile
    (48) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (49) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (50) algoritmo -> . sentenciaIf PUNTOYCOMA
    (51) algoritmo -> . sentenciaIf
    (52) algoritmo -> . sentenciaElse PUNTOYCOMA
    (53) algoritmo -> . sentenciaElse
    (54) algoritmo -> . imprimir PUNTOYCOMA
    (55) algoritmo -> . funcionStdin PUNTOYCOMA
    (56) algoritmo -> . funcionStdout PUNTOYCOMA
    (57) algoritmo -> . negacionBool PUNTOYCOMA
    (58) algoritmo -> . comparacionBool PUNTOYCOMA
    (59) algoritmo -> . sentenciaElseIf
    (60) algoritmo -> . sentenciaElseIf PUNTOYCOMA
    (61) asignacion -> . INT VARIABLE IGUAL expresionInt
    (62) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (63) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (64) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (65) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (66) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (67) asignacion -> . VAR VARIABLE IGUAL expresion
    (68) asignacion -> . asignacionSimple
    (114) expresionInt -> . valorInt operadorMat expresionInt
    (115) expresionInt -> . valorInt
    (118) expresionDouble -> . valorDouble operadorMat expresionDouble
    (119) expresionDouble -> . valorDouble
    (110) expresionString -> . valorString operadorMat expresionString
    (111) expresionString -> . valorString
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (85) expresion -> . valor operadorMat expresion
    (86) expresion -> . valor
    (87) expresion -> . expresionString
    (88) expresion -> . expresionInt
    (89) expresion -> . expresionDouble
    (90) expresion -> . expresionBool
    (91) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER
    (92) sentenciaWhile -> . WHILE PIZQ expresionBool PDER algoritmo
    (93) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER
    (75) sentenciaIf -> . IF PIZQ expresionBool PDER algoritmo
    (76) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (77) sentenciaElse -> . ELSE algoritmo
    (78) sentenciaElse -> . ELSE LIZQ algoritmo LDER
    (70) imprimir -> . PRINT PIZQ expresion PDER
    (71) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (72) funcionStdin -> . FUNCIONSTDIN
    (73) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (74) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (79) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER algoritmo
    (80) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER
    (69) asignacionSimple -> . VARIABLE IGUAL expresion
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (108) valorString -> . STRING
    (109) valorString -> . VARIABLE
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING

    INT             shift and go to state 19
    DOUBLER         shift and go to state 21
    NUM             shift and go to state 22
    STRINGR         shift and go to state 23
    BOOLR           shift and go to state 24
    DYNAMIC         shift and go to state 25
    VAR             shift and go to state 26
    VARIABLE        shift and go to state 20
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    PRINT           shift and go to state 37
    FUNCIONSTDIN    shift and go to state 38
    FUNCIONSTDOUT   shift and go to state 39
    NOT             shift and go to state 40
    ELSEIF          shift and go to state 41
    ENTERO          shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    BOOL            shift and go to state 45

    expresionBool                  shift and go to state 106
    algoritmo                      shift and go to state 243
    asignacion                     shift and go to state 102
    expresionInt                   shift and go to state 103
    expresionDouble                shift and go to state 104
    expresionString                shift and go to state 105
    expresion                      shift and go to state 18
    sentenciaWhile                 shift and go to state 107
    sentenciaDoWhile               shift and go to state 108
    sentenciaIf                    shift and go to state 109
    sentenciaElse                  shift and go to state 110
    imprimir                       shift and go to state 111
    funcionStdin                   shift and go to state 112
    funcionStdout                  shift and go to state 113
    negacionBool                   shift and go to state 114
    comparacionBool                shift and go to state 115
    sentenciaElseIf                shift and go to state 116
    asignacionSimple               shift and go to state 27
    valorInt                       shift and go to state 28
    valorDouble                    shift and go to state 29
    valorString                    shift and go to state 30
    valorBool                      shift and go to state 31
    valor                          shift and go to state 32

state 240

    (91) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo . LDER

    LDER            shift and go to state 244


state 241

    (93) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ . expresionBool PDER
    (96) expresionBool -> . valorDouble comparadorMat expresionDouble
    (97) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (98) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (99) expresionBool -> . valorDouble comparadorMat VARIABLE
    (100) expresionBool -> . valorBool
    (101) expresionBool -> . negacionBool
    (102) expresionBool -> . comparacionBool
    (103) expresionBool -> . valor IS objeto
    (104) expresionBool -> . valor ISNEGADO objeto
    (116) valorDouble -> . DOUBLE
    (117) valorDouble -> . valorInt
    (94) valorBool -> . BOOL
    (95) valorBool -> . VARIABLE
    (105) negacionBool -> . NOT PIZQ expresionBool PDER
    (106) comparacionBool -> . expresionBool operadorLogico expresionBool
    (107) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (81) valor -> . ENTERO
    (82) valor -> . VARIABLE
    (83) valor -> . DOUBLE
    (84) valor -> . STRING
    (112) valorInt -> . ENTERO
    (113) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 130
    DOUBLE          shift and go to state 43
    BOOL            shift and go to state 45
    NOT             shift and go to state 40
    ENTERO          shift and go to state 134
    STRING          shift and go to state 135

    expresionBool                  shift and go to state 245
    valorDouble                    shift and go to state 129
    valorBool                      shift and go to state 31
    negacionBool                   shift and go to state 131
    comparacionBool                shift and go to state 161
    valor                          shift and go to state 132
    valorInt                       shift and go to state 133

state 242

    (76) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo . LDER

    LDER            shift and go to state 246


state 243

    (80) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo . LDER

    LDER            shift and go to state 247


state 244

    (91) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    INT             reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NUM             reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VAR             reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    WHILE           reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DO              reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    IF              reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSE            reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    PRINT           reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    FUNCIONSTDIN    reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    FUNCIONSTDOUT   reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NOT             reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSEIF          reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRING          reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOL            reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    $end            reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    LDER            reduce using rule 91 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ algoritmo LDER .)


state 245

    (93) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool . PDER
    (106) comparacionBool -> expresionBool . operadorLogico expresionBool
    (107) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (132) operadorLogico -> . AND
    (133) operadorLogico -> . OR

    PDER            shift and go to state 248
    AND             shift and go to state 53
    OR              shift and go to state 54

    operadorLogico                 shift and go to state 52

state 246

    (76) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    INT             reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NUM             reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VAR             reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    WHILE           reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DO              reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    IF              reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSE            reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    PRINT           reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    FUNCIONSTDIN    reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    FUNCIONSTDOUT   reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NOT             reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSEIF          reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRING          reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOL            reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    $end            reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    LDER            reduce using rule 76 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ algoritmo LDER .)


state 247

    (80) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    INT             reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLER         reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NUM             reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRINGR         reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOLR           reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DYNAMIC         reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VAR             reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    VARIABLE        reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    WHILE           reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DO              reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    IF              reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSE            reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    PRINT           reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    FUNCIONSTDIN    reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    FUNCIONSTDOUT   reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    NOT             reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ELSEIF          reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    ENTERO          reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    DOUBLE          reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    STRING          reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    BOOL            reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    $end            reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)
    LDER            reduce using rule 80 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ algoritmo LDER .)


state 248

    (93) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 93 (sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ expresionBool PDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 4 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 5 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 6 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 7 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 8 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 10 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 11 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 17 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 28 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 28 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 28 resolved as shift
WARNING: shift/reduce conflict for DIV in state 28 resolved as shift
WARNING: shift/reduce conflict for DIVENTERO in state 28 resolved as shift
WARNING: shift/reduce conflict for MOD in state 28 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 103 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 104 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 105 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 106 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 107 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 109 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 110 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 114 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 115 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 116 resolved as shift
WARNING: shift/reduce conflict for AND in state 127 resolved as shift
WARNING: shift/reduce conflict for OR in state 127 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 130 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 130 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 130 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 130 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 130 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 130 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 152 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 152 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 152 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 152 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 152 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 152 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 211 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 211 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 211 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 211 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 211 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 211 resolved as shift
WARNING: reduce/reduce conflict in state 20 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 28 resolved using rule (expresionInt -> valorInt)
WARNING: rejected rule (valorDouble -> valorInt) in state 28
WARNING: reduce/reduce conflict in state 42 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 42
WARNING: reduce/reduce conflict in state 43 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 43
WARNING: reduce/reduce conflict in state 44 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 44
WARNING: reduce/reduce conflict in state 128 resolved using rule (expresionBool -> comparacionBool)
WARNING: rejected rule (comparacionBool -> expresionBool operadorLogico comparacionBool) in state 128
WARNING: reduce/reduce conflict in state 134 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 134
WARNING: reduce/reduce conflict in state 147 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 147
WARNING: reduce/reduce conflict in state 152 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 152
WARNING: reduce/reduce conflict in state 152 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 152
WARNING: reduce/reduce conflict in state 152 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 152
WARNING: reduce/reduce conflict in state 159 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 159
WARNING: reduce/reduce conflict in state 160 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 160
WARNING: reduce/reduce conflict in state 173 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 173
WARNING: reduce/reduce conflict in state 211 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 211
WARNING: reduce/reduce conflict in state 211 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 211
WARNING: reduce/reduce conflict in state 211 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 211
WARNING: Rule (comparacionBool -> expresionBool operadorLogico comparacionBool) is never reduced
