Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    BREAK
    CASE
    COMILLAD
    COMILLAS
    DOSPUNTOS
    FLECHA
    FUNCIONARR
    FUNCIONRANGE
    FUNCIONTAKE
    RETURN
    SETFROM
    SWITCH

Grammar

Rule 0     S' -> final
Rule 1     final -> asignacion PUNTOYCOMA
Rule 2     final -> asignacion PUNTOYCOMA final
Rule 3     final -> expresionInt PUNTOYCOMA
Rule 4     final -> expresionInt PUNTOYCOMA final
Rule 5     final -> expresionDouble PUNTOYCOMA
Rule 6     final -> expresionDouble PUNTOYCOMA final
Rule 7     final -> expresionString PUNTOYCOMA
Rule 8     final -> expresionString PUNTOYCOMA final
Rule 9     final -> expresionBool PUNTOYCOMA
Rule 10    final -> expresionBool PUNTOYCOMA final
Rule 11    final -> expresionBoolFor PUNTOYCOMA
Rule 12    final -> expresionBoolFor PUNTOYCOMA final
Rule 13    final -> sentenciaWhile
Rule 14    final -> sentenciaWhile final
Rule 15    final -> sentenciaWhile PUNTOYCOMA
Rule 16    final -> sentenciaWhile PUNTOYCOMA final
Rule 17    final -> sentenciaDoWhile PUNTOYCOMA
Rule 18    final -> sentenciaDoWhile PUNTOYCOMA final
Rule 19    final -> sentenciaIf PUNTOYCOMA
Rule 20    final -> sentenciaIf PUNTOYCOMA final
Rule 21    final -> sentenciaIf
Rule 22    final -> sentenciaIf final
Rule 23    final -> sentenciaElse PUNTOYCOMA
Rule 24    final -> sentenciaElse PUNTOYCOMA final
Rule 25    final -> sentenciaElse
Rule 26    final -> sentenciaElse final
Rule 27    final -> imprimir PUNTOYCOMA
Rule 28    final -> imprimir PUNTOYCOMA final
Rule 29    final -> funcionStdin PUNTOYCOMA
Rule 30    final -> funcionStdin PUNTOYCOMA final
Rule 31    final -> funcionStdout PUNTOYCOMA
Rule 32    final -> funcionStdout PUNTOYCOMA final
Rule 33    final -> negacionBool PUNTOYCOMA
Rule 34    final -> negacionBool PUNTOYCOMA final
Rule 35    final -> comparacionBool PUNTOYCOMA final
Rule 36    final -> comparacionBool PUNTOYCOMA
Rule 37    final -> sentenciaElseIf PUNTOYCOMA final
Rule 38    final -> sentenciaElseIf final
Rule 39    final -> sentenciaElseIf PUNTOYCOMA
Rule 40    final -> sentenciaElseIf
Rule 41    final -> sentenciaFor PUNTOYCOMA final
Rule 42    final -> sentenciaFor PUNTOYCOMA
Rule 43    final -> sentenciaFor final
Rule 44    final -> sentenciaFor
Rule 45    final -> sentenciaSubstring PUNTOYCOMA final
Rule 46    final -> sentenciaSubstring PUNTOYCOMA
Rule 47    final -> VARIABLE DSUMA PUNTOYCOMA final
Rule 48    final -> VARIABLE DSUMA PUNTOYCOMA
Rule 49    final -> VARIABLE DRESTA PUNTOYCOMA final
Rule 50    final -> VARIABLE DRESTA PUNTOYCOMA
Rule 51    final -> expresionLista PUNTOYCOMA
Rule 52    final -> expresionLista PUNTOYCOMA final
Rule 53    final -> expresionNewList PUNTOYCOMA
Rule 54    final -> expresionNewList PUNTOYCOMA final
Rule 55    final -> expListaLista
Rule 56    expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
Rule 57    expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
Rule 58    tipo -> STRINGR
Rule 59    tipo -> INT
Rule 60    tipo -> DOUBLER
Rule 61    tipo -> NUM
Rule 62    tipo -> DYNAMIC
Rule 63    tipo -> BOOL
Rule 64    tipo -> MAP
Rule 65    tipo -> SET
Rule 66    tipo -> LIST MENOR tipo MAYOR
Rule 67    expresionNewList -> NEWLIST PIZQ PDER
Rule 68    expresionNewList -> NEWLIST PIZQ ENTERO PDER
Rule 69    expresionNewList -> CIZQ CDER
Rule 70    expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE
Rule 71    expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
Rule 72    expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
Rule 73    expresionLista -> CIZQ expListString CDER
Rule 74    expresionLista -> LIST MENOR INT MAYOR VARIABLE
Rule 75    expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
Rule 76    expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
Rule 77    expresionLista -> CIZQ expListInt CDER
Rule 78    expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE
Rule 79    expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
Rule 80    expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
Rule 81    expresionLista -> CIZQ expListNum CDER
Rule 82    expresionLista -> LIST MENOR NUM MAYOR VARIABLE
Rule 83    expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
Rule 84    expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
Rule 85    expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE
Rule 86    expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
Rule 87    expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
Rule 88    expresionLista -> CIZQ expListBool CDER
Rule 89    expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE
Rule 90    expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
Rule 91    expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
Rule 92    expresionLista -> CIZQ expListDynamic CDER
Rule 93    expresionLista -> LIST MENOR VARIABLE MAYOR VARIABLE
Rule 94    expresionLista -> LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
Rule 95    expListString -> STRING
Rule 96    expListString -> STRING COMA expListString
Rule 97    expListInt -> ENTERO
Rule 98    expListInt -> ENTERO COMA expListInt
Rule 99    expListNum -> ENTERO
Rule 100   expListNum -> DOUBLE
Rule 101   expListNum -> ENTERO COMA expListNum
Rule 102   expListNum -> DOUBLE COMA expListNum
Rule 103   expListBool -> BOOL
Rule 104   expListBool -> BOOL COMA expListBool
Rule 105   expListDynamic -> STRING
Rule 106   expListDynamic -> ENTERO
Rule 107   expListDynamic -> DOUBLE
Rule 108   expListDynamic -> BOOL
Rule 109   expListDynamic -> STRING COMA expListDynamic
Rule 110   expListDynamic -> ENTERO COMA expListDynamic
Rule 111   expListDynamic -> DOUBLE COMA expListDynamic
Rule 112   expListDynamic -> BOOL COMA expListDynamic
Rule 113   expListList -> VAR
Rule 114   asignacion -> INT VARIABLE IGUAL expresionInt
Rule 115   asignacion -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 116   asignacion -> NUM VARIABLE IGUAL expresionDouble
Rule 117   asignacion -> STRINGR VARIABLE IGUAL expresionString
Rule 118   asignacion -> BOOLR VARIABLE IGUAL expresionBool
Rule 119   asignacion -> DYNAMIC VARIABLE IGUAL expresion
Rule 120   asignacion -> VAR VARIABLE IGUAL expresion
Rule 121   asignacion -> asignacionSimple
Rule 122   asignacionSimple -> VARIABLE IGUAL expresion
Rule 123   imprimir -> PRINT PIZQ expresion PDER
Rule 124   imprimir -> PRINT PIZQ asignacionSimple PDER
Rule 125   funcionStdin -> FUNCIONSTDIN
Rule 126   funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER
Rule 127   funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER
Rule 128   sentenciaIf -> IF PIZQ expresionBool PDER final
Rule 129   sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER
Rule 130   sentenciaElse -> ELSE final
Rule 131   sentenciaElse -> ELSE LIZQ final LDER
Rule 132   sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final
Rule 133   sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER
Rule 134   valor -> ENTERO
Rule 135   valor -> VARIABLE
Rule 136   valor -> DOUBLE
Rule 137   valor -> STRING
Rule 138   expresion -> valor operadorMat expresion
Rule 139   expresion -> valor
Rule 140   expresion -> expresionString
Rule 141   expresion -> expresionInt
Rule 142   expresion -> expresionDouble
Rule 143   expresion -> expresionBool
Rule 144   asignacionFor -> INT VARIABLE IGUAL expresionInt
Rule 145   asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 146   asignacionFor -> NUM VARIABLE IGUAL expresionDouble
Rule 147   asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt
Rule 148   asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble
Rule 149   asignacionFor -> VAR VARIABLE IGUAL expresionInt
Rule 150   asignacionFor -> VAR VARIABLE IGUAL expresionDouble
Rule 151   asignacionFor -> VARIABLE IGUAL expresionInt
Rule 152   asignacionFor -> VARIABLE IGUAL expresionDouble
Rule 153   expresionBoolFor -> valorDouble comparadorMat expresionDouble
Rule 154   expresionBoolFor -> VARIABLE comparadorMat expresionDouble
Rule 155   expresionBoolFor -> VARIABLE comparadorMat VARIABLE
Rule 156   expresionBoolFor -> valorDouble comparadorMat VARIABLE
Rule 157   expresionBoolFor -> valorBool
Rule 158   expresionBoolFor -> negacionBool
Rule 159   expresionBoolFor -> comparacionBool
Rule 160   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
Rule 161   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
Rule 162   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
Rule 163   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
Rule 164   sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER
Rule 165   sentenciaWhile -> WHILE PIZQ expresionBool PDER final
Rule 166   sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER
Rule 167   valorBool -> BOOL
Rule 168   valorBool -> VARIABLE
Rule 169   expresionBool -> valorDouble comparadorMat expresionDouble
Rule 170   expresionBool -> VARIABLE comparadorMat expresionDouble
Rule 171   expresionBool -> VARIABLE comparadorMat VARIABLE
Rule 172   expresionBool -> valorDouble comparadorMat VARIABLE
Rule 173   expresionBool -> valorBool
Rule 174   expresionBool -> negacionBool
Rule 175   expresionBool -> comparacionBool
Rule 176   expresionBool -> valor IS objeto
Rule 177   expresionBool -> valor ISNEGADO objeto
Rule 178   negacionBool -> NOT PIZQ expresionBool PDER
Rule 179   comparacionBool -> expresionBool operadorLogico expresionBool
Rule 180   comparacionBool -> expresionBool operadorLogico comparacionBool
Rule 181   valorString -> STRING
Rule 182   valorString -> VARIABLE
Rule 183   valorString -> FUNCIONSTDIN
Rule 184   valorString -> expresionIndexString
Rule 185   valorString -> sentenciaSubstring
Rule 186   expresionString -> valorString SUMA expresionString
Rule 187   expresionString -> valorString
Rule 188   expresionIndexString -> valorString CIZQ ENTERO CDER
Rule 189   sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
Rule 190   sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
Rule 191   valorInt -> ENTERO
Rule 192   valorInt -> VARIABLE
Rule 193   expresionInt -> valorInt operadorMat expresionInt
Rule 194   expresionInt -> valorInt
Rule 195   valorDouble -> DOUBLE
Rule 196   valorDouble -> valorInt
Rule 197   expresionDouble -> valorDouble operadorMat expresionDouble
Rule 198   expresionDouble -> valorDouble
Rule 199   operadorMat -> SUMA
Rule 200   operadorMat -> RESTA
Rule 201   operadorMat -> MULTI
Rule 202   operadorMat -> DIV
Rule 203   operadorMat -> DIVENTERO
Rule 204   operadorMat -> MOD
Rule 205   comparadorMat -> DIGUAL
Rule 206   comparadorMat -> NOIGUAL
Rule 207   comparadorMat -> MAYOR
Rule 208   comparadorMat -> MENOR
Rule 209   comparadorMat -> MAYIGUAL
Rule 210   comparadorMat -> MENIGUAL
Rule 211   operadorLogico -> AND
Rule 212   operadorLogico -> OR
Rule 213   objeto -> STRINGR
Rule 214   objeto -> INT
Rule 215   objeto -> DOUBLER
Rule 216   objeto -> NUM
Rule 217   objeto -> VAR
Rule 218   objeto -> DYNAMIC
Rule 219   objeto -> LIST
Rule 220   objeto -> BOOL
Rule 221   objeto -> MAP
Rule 222   objeto -> SET

Terminals, with rules where they appear

AND                  : 211
AS                   : 
BOOL                 : 63 103 104 108 112 167 220
BOOLR                : 85 86 87 118
BREAK                : 
CASE                 : 
CDER                 : 69 71 73 75 77 79 81 83 86 88 90 92 188
CIZQ                 : 69 71 73 75 77 79 81 83 86 88 90 92 188
COMA                 : 96 98 101 102 104 109 110 111 112 190
COMILLAD             : 
COMILLAS             : 
DIGUAL               : 205
DIV                  : 202
DIVENTERO            : 203
DO                   : 166
DOSPUNTOS            : 
DOUBLE               : 100 102 107 111 136 195
DOUBLER              : 60 78 79 80 115 145 215
DRESTA               : 49 50 162 163
DSUMA                : 47 48 160 161
DYNAMIC              : 62 89 90 91 119 147 148 218
ELSE                 : 130 131
ELSEIF               : 132 133
ENTERO               : 68 97 98 99 101 106 110 134 188 189 190 190 191
FLECHA               : 
FOR                  : 160 161 162 163
FUNCIONARR           : 
FUNCIONRANGE         : 
FUNCIONSTDIN         : 125 183
FUNCIONSTDOUT        : 126 127
FUNCIONSUBSTRING     : 189 190
FUNCIONTAKE          : 
IF                   : 128 129
IGUAL                : 57 71 72 75 76 79 80 83 84 86 87 90 91 94 114 115 116 117 118 119 120 122 144 145 146 147 148 149 150 151 152
INT                  : 59 74 75 76 114 144 214
IS                   : 176
ISNEGADO             : 177
LDER                 : 129 131 133 160 162 164 166
LIST                 : 56 56 57 57 66 70 71 72 74 75 76 78 79 80 82 83 84 85 86 87 89 90 91 93 94 219
LIZQ                 : 129 131 133 160 162 164 166
MAP                  : 64 221
MAYIGUAL             : 209
MAYOR                : 56 56 57 57 66 70 71 72 74 75 76 78 79 80 82 83 84 85 86 87 89 90 91 93 94 207
MENIGUAL             : 210
MENOR                : 56 56 57 57 66 70 71 72 74 75 76 78 79 80 82 83 84 85 86 87 89 90 91 93 94 208
MOD                  : 204
MULTI                : 201
NEWLIST              : 67 68
NOIGUAL              : 206
NOT                  : 178
NUM                  : 61 82 83 84 116 146 216
OR                   : 212
PDER                 : 67 68 123 124 126 127 128 129 132 133 160 161 162 163 164 165 166 178 189 190
PIZQ                 : 67 68 123 124 126 127 128 129 132 133 160 161 162 163 164 165 166 178 189 190
PRINT                : 123 124
PUNTOYCOMA           : 1 2 3 4 5 6 7 8 9 10 11 12 15 16 17 18 19 20 23 24 27 28 29 30 31 32 33 34 35 36 37 39 41 42 45 46 47 48 49 50 51 52 53 54 160 160 161 161 162 162 163 163
RESTA                : 200
RETURN               : 
SET                  : 65 222
SETFROM              : 
STRING               : 95 96 105 109 137 181
STRINGR              : 58 70 71 72 117 213
SUMA                 : 186 199
SWITCH               : 
VAR                  : 113 120 149 150 217
VARIABLE             : 47 48 49 50 56 57 70 71 72 74 75 76 78 79 80 82 83 84 85 86 87 89 90 91 93 93 94 94 114 115 116 117 118 119 120 122 135 144 145 146 147 148 149 150 151 152 154 155 155 156 160 161 162 163 168 170 171 171 172 182 189 190 192
WHILE                : 164 165 166
error                : 

Nonterminals, with rules where they appear

asignacion           : 1 2
asignacionFor        : 160 161 162 163
asignacionSimple     : 121 124 127
comparacionBool      : 35 36 159 175 180
comparadorMat        : 153 154 155 156 169 170 171 172
expListBool          : 86 88 104
expListDynamic       : 90 92 109 110 111 112
expListInt           : 75 77 98
expListList          : 
expListNum           : 79 81 83 101 102
expListString        : 71 73 96
expListaLista        : 55
expresion            : 119 120 122 123 126 138
expresionBool        : 9 10 118 128 129 132 133 143 164 165 166 178 179 179 180
expresionBoolFor     : 11 12 160 161 162 163
expresionDouble      : 5 6 115 116 142 145 146 148 150 152 153 154 169 170 197
expresionIndexString : 184
expresionInt         : 3 4 114 141 144 147 149 151 193
expresionLista       : 51 52
expresionNewList     : 53 54 57 72 76 80 84 87 91 94
expresionString      : 7 8 117 140 186
final                : 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 35 37 38 41 43 45 47 49 52 54 128 129 130 131 132 133 160 161 162 163 164 165 166 0
funcionStdin         : 29 30
funcionStdout        : 31 32
imprimir             : 27 28
negacionBool         : 33 34 158 174
objeto               : 176 177
operadorLogico       : 179 180
operadorMat          : 138 193 197
sentenciaDoWhile     : 17 18
sentenciaElse        : 23 24 25 26
sentenciaElseIf      : 37 38 39 40
sentenciaFor         : 41 42 43 44
sentenciaIf          : 19 20 21 22
sentenciaSubstring   : 45 46 185
sentenciaWhile       : 13 14 15 16
tipo                 : 56 57 66
valor                : 138 139 176 177
valorBool            : 157 173
valorDouble          : 153 156 169 172 197 198
valorInt             : 193 194 196
valorString          : 186 187 188

Parsing method: LALR

state 0

    (0) S' -> . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    final                          shift and go to state 1
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 1

    (0) S' -> final .



state 2

    (1) final -> asignacion . PUNTOYCOMA
    (2) final -> asignacion . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 55


state 3

    (3) final -> expresionInt . PUNTOYCOMA
    (4) final -> expresionInt . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 56


state 4

    (5) final -> expresionDouble . PUNTOYCOMA
    (6) final -> expresionDouble . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 57


state 5

    (7) final -> expresionString . PUNTOYCOMA
    (8) final -> expresionString . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 58


state 6

    (9) final -> expresionBool . PUNTOYCOMA
    (10) final -> expresionBool . PUNTOYCOMA final
    (179) comparacionBool -> expresionBool . operadorLogico expresionBool
    (180) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (211) operadorLogico -> . AND
    (212) operadorLogico -> . OR

    PUNTOYCOMA      shift and go to state 59
    AND             shift and go to state 61
    OR              shift and go to state 62

    operadorLogico                 shift and go to state 60

state 7

    (11) final -> expresionBoolFor . PUNTOYCOMA
    (12) final -> expresionBoolFor . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 63


state 8

    (13) final -> sentenciaWhile .
    (14) final -> sentenciaWhile . final
    (15) final -> sentenciaWhile . PUNTOYCOMA
    (16) final -> sentenciaWhile . PUNTOYCOMA final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 13 (final -> sentenciaWhile .)
    LDER            reduce using rule 13 (final -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 65
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! PUNTOYCOMA      [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! VARIABLE        [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! INT             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DOUBLER         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NUM             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! STRINGR         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! BOOLR           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DYNAMIC         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! VAR             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! WHILE           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DO              [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! IF              [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ELSE            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! PRINT           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDIN    [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NOT             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ELSEIF          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FOR             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! LIST            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! CIZQ            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NEWLIST         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ENTERO          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DOUBLE          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! STRING          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! BOOL            [ reduce using rule 13 (final -> sentenciaWhile .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 64
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 9

    (17) final -> sentenciaDoWhile . PUNTOYCOMA
    (18) final -> sentenciaDoWhile . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 66


state 10

    (19) final -> sentenciaIf . PUNTOYCOMA
    (20) final -> sentenciaIf . PUNTOYCOMA final
    (21) final -> sentenciaIf .
    (22) final -> sentenciaIf . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 67
    $end            reduce using rule 21 (final -> sentenciaIf .)
    LDER            reduce using rule 21 (final -> sentenciaIf .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! PUNTOYCOMA      [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! VARIABLE        [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! INT             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DOUBLER         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NUM             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! STRINGR         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! BOOLR           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DYNAMIC         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! VAR             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! WHILE           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DO              [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! IF              [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ELSE            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! PRINT           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NOT             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ELSEIF          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FOR             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! LIST            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! CIZQ            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NEWLIST         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ENTERO          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DOUBLE          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! STRING          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! BOOL            [ reduce using rule 21 (final -> sentenciaIf .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 68
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 11

    (23) final -> sentenciaElse . PUNTOYCOMA
    (24) final -> sentenciaElse . PUNTOYCOMA final
    (25) final -> sentenciaElse .
    (26) final -> sentenciaElse . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 69
    $end            reduce using rule 25 (final -> sentenciaElse .)
    LDER            reduce using rule 25 (final -> sentenciaElse .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! PUNTOYCOMA      [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! VARIABLE        [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! INT             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DOUBLER         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NUM             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! STRINGR         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! BOOLR           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DYNAMIC         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! VAR             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! WHILE           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DO              [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! IF              [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ELSE            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! PRINT           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FUNCIONSTDIN    [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NOT             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ELSEIF          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FOR             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! LIST            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! CIZQ            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NEWLIST         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ENTERO          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DOUBLE          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! STRING          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! BOOL            [ reduce using rule 25 (final -> sentenciaElse .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 70
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 12

    (27) final -> imprimir . PUNTOYCOMA
    (28) final -> imprimir . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 71


state 13

    (29) final -> funcionStdin . PUNTOYCOMA
    (30) final -> funcionStdin . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 72


state 14

    (31) final -> funcionStdout . PUNTOYCOMA
    (32) final -> funcionStdout . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 73


state 15

    (33) final -> negacionBool . PUNTOYCOMA
    (34) final -> negacionBool . PUNTOYCOMA final
    (174) expresionBool -> negacionBool .
    (158) expresionBoolFor -> negacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 74
    AND             reduce using rule 174 (expresionBool -> negacionBool .)
    OR              reduce using rule 174 (expresionBool -> negacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 174 (expresionBool -> negacionBool .) ]
  ! PUNTOYCOMA      [ reduce using rule 158 (expresionBoolFor -> negacionBool .) ]


state 16

    (35) final -> comparacionBool . PUNTOYCOMA final
    (36) final -> comparacionBool . PUNTOYCOMA
    (175) expresionBool -> comparacionBool .
    (159) expresionBoolFor -> comparacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 75
    AND             reduce using rule 175 (expresionBool -> comparacionBool .)
    OR              reduce using rule 175 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 175 (expresionBool -> comparacionBool .) ]
  ! PUNTOYCOMA      [ reduce using rule 159 (expresionBoolFor -> comparacionBool .) ]


state 17

    (37) final -> sentenciaElseIf . PUNTOYCOMA final
    (38) final -> sentenciaElseIf . final
    (39) final -> sentenciaElseIf . PUNTOYCOMA
    (40) final -> sentenciaElseIf .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 76
    $end            reduce using rule 40 (final -> sentenciaElseIf .)
    LDER            reduce using rule 40 (final -> sentenciaElseIf .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! PUNTOYCOMA      [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! VARIABLE        [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! INT             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DOUBLER         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NUM             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! STRINGR         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! BOOLR           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DYNAMIC         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! VAR             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! WHILE           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DO              [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! IF              [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ELSE            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! PRINT           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NOT             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ELSEIF          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FOR             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! LIST            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! CIZQ            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NEWLIST         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ENTERO          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DOUBLE          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! STRING          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! BOOL            [ reduce using rule 40 (final -> sentenciaElseIf .) ]

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 77
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 18

    (41) final -> sentenciaFor . PUNTOYCOMA final
    (42) final -> sentenciaFor . PUNTOYCOMA
    (43) final -> sentenciaFor . final
    (44) final -> sentenciaFor .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 78
    $end            reduce using rule 44 (final -> sentenciaFor .)
    LDER            reduce using rule 44 (final -> sentenciaFor .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! PUNTOYCOMA      [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! VARIABLE        [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! INT             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DOUBLER         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NUM             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! STRINGR         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! BOOLR           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DYNAMIC         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! VAR             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! WHILE           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DO              [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! IF              [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ELSE            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! PRINT           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FUNCIONSTDIN    [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NOT             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ELSEIF          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FOR             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! LIST            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! CIZQ            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NEWLIST         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ENTERO          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DOUBLE          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! STRING          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! BOOL            [ reduce using rule 44 (final -> sentenciaFor .) ]

    sentenciaFor                   shift and go to state 18
    final                          shift and go to state 79
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 19

    (45) final -> sentenciaSubstring . PUNTOYCOMA final
    (46) final -> sentenciaSubstring . PUNTOYCOMA
    (185) valorString -> sentenciaSubstring .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 80
    SUMA            reduce using rule 185 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 185 (valorString -> sentenciaSubstring .)

  ! PUNTOYCOMA      [ reduce using rule 185 (valorString -> sentenciaSubstring .) ]


state 20

    (47) final -> VARIABLE . DSUMA PUNTOYCOMA final
    (48) final -> VARIABLE . DSUMA PUNTOYCOMA
    (49) final -> VARIABLE . DRESTA PUNTOYCOMA final
    (50) final -> VARIABLE . DRESTA PUNTOYCOMA
    (170) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (171) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (154) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (155) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (189) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (122) asignacionSimple -> VARIABLE . IGUAL expresion
    (192) valorInt -> VARIABLE .
    (182) valorString -> VARIABLE .
    (168) valorBool -> VARIABLE .
    (135) valor -> VARIABLE .
    (205) comparadorMat -> . DIGUAL
    (206) comparadorMat -> . NOIGUAL
    (207) comparadorMat -> . MAYOR
    (208) comparadorMat -> . MENOR
    (209) comparadorMat -> . MAYIGUAL
    (210) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 182 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 182 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 168 (valorBool -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    DSUMA           shift and go to state 81
    DRESTA          shift and go to state 82
    FUNCIONSUBSTRING shift and go to state 84
    IGUAL           shift and go to state 85
    RESTA           reduce using rule 192 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 192 (valorInt -> VARIABLE .)
    DIV             reduce using rule 192 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 192 (valorInt -> VARIABLE .)
    MOD             reduce using rule 192 (valorInt -> VARIABLE .)
    SUMA            reduce using rule 182 (valorString -> VARIABLE .)
    CIZQ            reduce using rule 182 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 168 (valorBool -> VARIABLE .)
    AND             reduce using rule 168 (valorBool -> VARIABLE .)
    OR              reduce using rule 168 (valorBool -> VARIABLE .)
    IS              reduce using rule 135 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 135 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 86
    NOIGUAL         shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYIGUAL        shift and go to state 90
    MENIGUAL        shift and go to state 91

  ! SUMA            [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 182 (valorString -> VARIABLE .) ]

    comparadorMat                  shift and go to state 83

state 21

    (51) final -> expresionLista . PUNTOYCOMA
    (52) final -> expresionLista . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 92


state 22

    (53) final -> expresionNewList . PUNTOYCOMA
    (54) final -> expresionNewList . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 93


state 23

    (55) final -> expListaLista .

    $end            reduce using rule 55 (final -> expListaLista .)
    PUNTOYCOMA      reduce using rule 55 (final -> expListaLista .)
    VARIABLE        reduce using rule 55 (final -> expListaLista .)
    INT             reduce using rule 55 (final -> expListaLista .)
    DOUBLER         reduce using rule 55 (final -> expListaLista .)
    NUM             reduce using rule 55 (final -> expListaLista .)
    STRINGR         reduce using rule 55 (final -> expListaLista .)
    BOOLR           reduce using rule 55 (final -> expListaLista .)
    DYNAMIC         reduce using rule 55 (final -> expListaLista .)
    VAR             reduce using rule 55 (final -> expListaLista .)
    WHILE           reduce using rule 55 (final -> expListaLista .)
    DO              reduce using rule 55 (final -> expListaLista .)
    IF              reduce using rule 55 (final -> expListaLista .)
    ELSE            reduce using rule 55 (final -> expListaLista .)
    PRINT           reduce using rule 55 (final -> expListaLista .)
    FUNCIONSTDIN    reduce using rule 55 (final -> expListaLista .)
    FUNCIONSTDOUT   reduce using rule 55 (final -> expListaLista .)
    NOT             reduce using rule 55 (final -> expListaLista .)
    ELSEIF          reduce using rule 55 (final -> expListaLista .)
    FOR             reduce using rule 55 (final -> expListaLista .)
    LIST            reduce using rule 55 (final -> expListaLista .)
    CIZQ            reduce using rule 55 (final -> expListaLista .)
    NEWLIST         reduce using rule 55 (final -> expListaLista .)
    ENTERO          reduce using rule 55 (final -> expListaLista .)
    DOUBLE          reduce using rule 55 (final -> expListaLista .)
    STRING          reduce using rule 55 (final -> expListaLista .)
    BOOL            reduce using rule 55 (final -> expListaLista .)
    LDER            reduce using rule 55 (final -> expListaLista .)


state 24

    (114) asignacion -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 94


state 25

    (115) asignacion -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 95


state 26

    (116) asignacion -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 96


state 27

    (117) asignacion -> STRINGR . VARIABLE IGUAL expresionString

    VARIABLE        shift and go to state 97


state 28

    (118) asignacion -> BOOLR . VARIABLE IGUAL expresionBool

    VARIABLE        shift and go to state 98


state 29

    (119) asignacion -> DYNAMIC . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 99


state 30

    (120) asignacion -> VAR . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 100


state 31

    (121) asignacion -> asignacionSimple .

    PUNTOYCOMA      reduce using rule 121 (asignacion -> asignacionSimple .)


state 32

    (193) expresionInt -> valorInt . operadorMat expresionInt
    (194) expresionInt -> valorInt .
    (196) valorDouble -> valorInt .
    (199) operadorMat -> . SUMA
    (200) operadorMat -> . RESTA
    (201) operadorMat -> . MULTI
    (202) operadorMat -> . DIV
    (203) operadorMat -> . DIVENTERO
    (204) operadorMat -> . MOD

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 194 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PDER resolved using rule 194 (expresionInt -> valorInt .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DIVENTERO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PUNTOYCOMA      reduce using rule 194 (expresionInt -> valorInt .)
    PDER            reduce using rule 194 (expresionInt -> valorInt .)
    DIGUAL          reduce using rule 196 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 196 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 196 (valorDouble -> valorInt .)
    MENOR           reduce using rule 196 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 196 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 196 (valorDouble -> valorInt .)
    SUMA            shift and go to state 102
    RESTA           shift and go to state 103
    MULTI           shift and go to state 104
    DIV             shift and go to state 105
    DIVENTERO       shift and go to state 106
    MOD             shift and go to state 107

  ! SUMA            [ reduce using rule 196 (valorDouble -> valorInt .) ]
  ! RESTA           [ reduce using rule 196 (valorDouble -> valorInt .) ]
  ! MULTI           [ reduce using rule 196 (valorDouble -> valorInt .) ]
  ! DIV             [ reduce using rule 196 (valorDouble -> valorInt .) ]
  ! DIVENTERO       [ reduce using rule 196 (valorDouble -> valorInt .) ]
  ! MOD             [ reduce using rule 196 (valorDouble -> valorInt .) ]
  ! PUNTOYCOMA      [ reduce using rule 196 (valorDouble -> valorInt .) ]
  ! PDER            [ reduce using rule 196 (valorDouble -> valorInt .) ]

    operadorMat                    shift and go to state 101

state 33

    (197) expresionDouble -> valorDouble . operadorMat expresionDouble
    (198) expresionDouble -> valorDouble .
    (169) expresionBool -> valorDouble . comparadorMat expresionDouble
    (172) expresionBool -> valorDouble . comparadorMat VARIABLE
    (153) expresionBoolFor -> valorDouble . comparadorMat expresionDouble
    (156) expresionBoolFor -> valorDouble . comparadorMat VARIABLE
    (199) operadorMat -> . SUMA
    (200) operadorMat -> . RESTA
    (201) operadorMat -> . MULTI
    (202) operadorMat -> . DIV
    (203) operadorMat -> . DIVENTERO
    (204) operadorMat -> . MOD
    (205) comparadorMat -> . DIGUAL
    (206) comparadorMat -> . NOIGUAL
    (207) comparadorMat -> . MAYOR
    (208) comparadorMat -> . MENOR
    (209) comparadorMat -> . MAYIGUAL
    (210) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 198 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 102
    RESTA           shift and go to state 103
    MULTI           shift and go to state 104
    DIV             shift and go to state 105
    DIVENTERO       shift and go to state 106
    MOD             shift and go to state 107
    DIGUAL          shift and go to state 86
    NOIGUAL         shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYIGUAL        shift and go to state 90
    MENIGUAL        shift and go to state 91

    operadorMat                    shift and go to state 108
    comparadorMat                  shift and go to state 109

state 34

    (186) expresionString -> valorString . SUMA expresionString
    (187) expresionString -> valorString .
    (188) expresionIndexString -> valorString . CIZQ ENTERO CDER

    SUMA            shift and go to state 110
    PUNTOYCOMA      reduce using rule 187 (expresionString -> valorString .)
    PDER            reduce using rule 187 (expresionString -> valorString .)
    CIZQ            shift and go to state 111


state 35

    (173) expresionBool -> valorBool .
    (157) expresionBoolFor -> valorBool .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 157 (expresionBoolFor -> valorBool .)
    AND             reduce using rule 173 (expresionBool -> valorBool .)
    OR              reduce using rule 173 (expresionBool -> valorBool .)
    PUNTOYCOMA      reduce using rule 157 (expresionBoolFor -> valorBool .)

  ! PUNTOYCOMA      [ reduce using rule 173 (expresionBool -> valorBool .) ]


state 36

    (176) expresionBool -> valor . IS objeto
    (177) expresionBool -> valor . ISNEGADO objeto

    IS              shift and go to state 112
    ISNEGADO        shift and go to state 113


state 37

    (164) sentenciaWhile -> WHILE . PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> WHILE . PIZQ expresionBool PDER final

    PIZQ            shift and go to state 114


state 38

    (166) sentenciaDoWhile -> DO . LIZQ final LDER WHILE PIZQ expresionBool PDER

    LIZQ            shift and go to state 115


state 39

    (128) sentenciaIf -> IF . PIZQ expresionBool PDER final
    (129) sentenciaIf -> IF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 116


state 40

    (130) sentenciaElse -> ELSE . final
    (131) sentenciaElse -> ELSE . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 118
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    final                          shift and go to state 117
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 41

    (123) imprimir -> PRINT . PIZQ expresion PDER
    (124) imprimir -> PRINT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 119


state 42

    (125) funcionStdin -> FUNCIONSTDIN .
    (183) valorString -> FUNCIONSTDIN .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 125 (funcionStdin -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 125 (funcionStdin -> FUNCIONSTDIN .)
    SUMA            reduce using rule 183 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 183 (valorString -> FUNCIONSTDIN .)

  ! PUNTOYCOMA      [ reduce using rule 183 (valorString -> FUNCIONSTDIN .) ]


state 43

    (126) funcionStdout -> FUNCIONSTDOUT . PIZQ expresion PDER
    (127) funcionStdout -> FUNCIONSTDOUT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 120


state 44

    (178) negacionBool -> NOT . PIZQ expresionBool PDER

    PIZQ            shift and go to state 121


state 45

    (132) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 122


state 46

    (160) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final

    PIZQ            shift and go to state 123


state 47

    (191) valorInt -> ENTERO .
    (134) valor -> ENTERO .

    SUMA            reduce using rule 191 (valorInt -> ENTERO .)
    RESTA           reduce using rule 191 (valorInt -> ENTERO .)
    MULTI           reduce using rule 191 (valorInt -> ENTERO .)
    DIV             reduce using rule 191 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 191 (valorInt -> ENTERO .)
    MOD             reduce using rule 191 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 191 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 191 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 191 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 191 (valorInt -> ENTERO .)
    MENOR           reduce using rule 191 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 191 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 191 (valorInt -> ENTERO .)
    IS              reduce using rule 134 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 134 (valor -> ENTERO .)


state 48

    (70) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (74) expresionLista -> LIST . MENOR INT MAYOR VARIABLE
    (75) expresionLista -> LIST . MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> LIST . MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (78) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (89) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (93) expresionLista -> LIST . MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> LIST . MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (56) expListaLista -> LIST . MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> LIST . MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList

    MENOR           shift and go to state 124


state 49

    (73) expresionLista -> CIZQ . expListString CDER
    (77) expresionLista -> CIZQ . expListInt CDER
    (81) expresionLista -> CIZQ . expListNum CDER
    (88) expresionLista -> CIZQ . expListBool CDER
    (92) expresionLista -> CIZQ . expListDynamic CDER
    (69) expresionNewList -> CIZQ . CDER
    (95) expListString -> . STRING
    (96) expListString -> . STRING COMA expListString
    (97) expListInt -> . ENTERO
    (98) expListInt -> . ENTERO COMA expListInt
    (99) expListNum -> . ENTERO
    (100) expListNum -> . DOUBLE
    (101) expListNum -> . ENTERO COMA expListNum
    (102) expListNum -> . DOUBLE COMA expListNum
    (103) expListBool -> . BOOL
    (104) expListBool -> . BOOL COMA expListBool
    (105) expListDynamic -> . STRING
    (106) expListDynamic -> . ENTERO
    (107) expListDynamic -> . DOUBLE
    (108) expListDynamic -> . BOOL
    (109) expListDynamic -> . STRING COMA expListDynamic
    (110) expListDynamic -> . ENTERO COMA expListDynamic
    (111) expListDynamic -> . DOUBLE COMA expListDynamic
    (112) expListDynamic -> . BOOL COMA expListDynamic

    CDER            shift and go to state 126
    STRING          shift and go to state 131
    ENTERO          shift and go to state 132
    DOUBLE          shift and go to state 133
    BOOL            shift and go to state 134

    expListString                  shift and go to state 125
    expListInt                     shift and go to state 127
    expListNum                     shift and go to state 128
    expListBool                    shift and go to state 129
    expListDynamic                 shift and go to state 130

state 50

    (67) expresionNewList -> NEWLIST . PIZQ PDER
    (68) expresionNewList -> NEWLIST . PIZQ ENTERO PDER

    PIZQ            shift and go to state 135


state 51

    (195) valorDouble -> DOUBLE .
    (136) valor -> DOUBLE .

    SUMA            reduce using rule 195 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 195 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 195 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 195 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 195 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 195 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 195 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 195 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 195 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 195 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 195 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 195 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 195 (valorDouble -> DOUBLE .)
    IS              reduce using rule 136 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 136 (valor -> DOUBLE .)


state 52

    (181) valorString -> STRING .
    (137) valor -> STRING .

    SUMA            reduce using rule 181 (valorString -> STRING .)
    CIZQ            reduce using rule 181 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 181 (valorString -> STRING .)
    IS              reduce using rule 137 (valor -> STRING .)
    ISNEGADO        reduce using rule 137 (valor -> STRING .)


state 53

    (184) valorString -> expresionIndexString .

    SUMA            reduce using rule 184 (valorString -> expresionIndexString .)
    CIZQ            reduce using rule 184 (valorString -> expresionIndexString .)
    PUNTOYCOMA      reduce using rule 184 (valorString -> expresionIndexString .)
    PDER            reduce using rule 184 (valorString -> expresionIndexString .)


state 54

    (167) valorBool -> BOOL .

    PUNTOYCOMA      reduce using rule 167 (valorBool -> BOOL .)
    AND             reduce using rule 167 (valorBool -> BOOL .)
    OR              reduce using rule 167 (valorBool -> BOOL .)
    PDER            reduce using rule 167 (valorBool -> BOOL .)


state 55

    (1) final -> asignacion PUNTOYCOMA .
    (2) final -> asignacion PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    LDER            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]

    asignacion                     shift and go to state 2
    final                          shift and go to state 136
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 56

    (3) final -> expresionInt PUNTOYCOMA .
    (4) final -> expresionInt PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    LDER            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]

    expresionInt                   shift and go to state 3
    final                          shift and go to state 137
    asignacion                     shift and go to state 2
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 57

    (5) final -> expresionDouble PUNTOYCOMA .
    (6) final -> expresionDouble PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    LDER            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]

    expresionDouble                shift and go to state 4
    final                          shift and go to state 138
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 58

    (7) final -> expresionString PUNTOYCOMA .
    (8) final -> expresionString PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    LDER            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]

    expresionString                shift and go to state 5
    final                          shift and go to state 139
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 59

    (9) final -> expresionBool PUNTOYCOMA .
    (10) final -> expresionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    LDER            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]

    expresionBool                  shift and go to state 6
    final                          shift and go to state 140
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 60

    (179) comparacionBool -> expresionBool operadorLogico . expresionBool
    (180) comparacionBool -> expresionBool operadorLogico . comparacionBool
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 144
    DOUBLE          shift and go to state 51
    BOOL            shift and go to state 54
    NOT             shift and go to state 44
    ENTERO          shift and go to state 148
    STRING          shift and go to state 149

    expresionBool                  shift and go to state 141
    comparacionBool                shift and go to state 142
    valorDouble                    shift and go to state 143
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    valor                          shift and go to state 36
    valorInt                       shift and go to state 147

state 61

    (211) operadorLogico -> AND .

    VARIABLE        reduce using rule 211 (operadorLogico -> AND .)
    DOUBLE          reduce using rule 211 (operadorLogico -> AND .)
    BOOL            reduce using rule 211 (operadorLogico -> AND .)
    NOT             reduce using rule 211 (operadorLogico -> AND .)
    ENTERO          reduce using rule 211 (operadorLogico -> AND .)
    STRING          reduce using rule 211 (operadorLogico -> AND .)


state 62

    (212) operadorLogico -> OR .

    VARIABLE        reduce using rule 212 (operadorLogico -> OR .)
    DOUBLE          reduce using rule 212 (operadorLogico -> OR .)
    BOOL            reduce using rule 212 (operadorLogico -> OR .)
    NOT             reduce using rule 212 (operadorLogico -> OR .)
    ENTERO          reduce using rule 212 (operadorLogico -> OR .)
    STRING          reduce using rule 212 (operadorLogico -> OR .)


state 63

    (11) final -> expresionBoolFor PUNTOYCOMA .
    (12) final -> expresionBoolFor PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    LDER            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 150
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 64

    (14) final -> sentenciaWhile final .

    $end            reduce using rule 14 (final -> sentenciaWhile final .)
    PUNTOYCOMA      reduce using rule 14 (final -> sentenciaWhile final .)
    VARIABLE        reduce using rule 14 (final -> sentenciaWhile final .)
    INT             reduce using rule 14 (final -> sentenciaWhile final .)
    DOUBLER         reduce using rule 14 (final -> sentenciaWhile final .)
    NUM             reduce using rule 14 (final -> sentenciaWhile final .)
    STRINGR         reduce using rule 14 (final -> sentenciaWhile final .)
    BOOLR           reduce using rule 14 (final -> sentenciaWhile final .)
    DYNAMIC         reduce using rule 14 (final -> sentenciaWhile final .)
    VAR             reduce using rule 14 (final -> sentenciaWhile final .)
    WHILE           reduce using rule 14 (final -> sentenciaWhile final .)
    DO              reduce using rule 14 (final -> sentenciaWhile final .)
    IF              reduce using rule 14 (final -> sentenciaWhile final .)
    ELSE            reduce using rule 14 (final -> sentenciaWhile final .)
    PRINT           reduce using rule 14 (final -> sentenciaWhile final .)
    FUNCIONSTDIN    reduce using rule 14 (final -> sentenciaWhile final .)
    FUNCIONSTDOUT   reduce using rule 14 (final -> sentenciaWhile final .)
    NOT             reduce using rule 14 (final -> sentenciaWhile final .)
    ELSEIF          reduce using rule 14 (final -> sentenciaWhile final .)
    FOR             reduce using rule 14 (final -> sentenciaWhile final .)
    LIST            reduce using rule 14 (final -> sentenciaWhile final .)
    CIZQ            reduce using rule 14 (final -> sentenciaWhile final .)
    NEWLIST         reduce using rule 14 (final -> sentenciaWhile final .)
    ENTERO          reduce using rule 14 (final -> sentenciaWhile final .)
    DOUBLE          reduce using rule 14 (final -> sentenciaWhile final .)
    STRING          reduce using rule 14 (final -> sentenciaWhile final .)
    BOOL            reduce using rule 14 (final -> sentenciaWhile final .)
    LDER            reduce using rule 14 (final -> sentenciaWhile final .)


state 65

    (15) final -> sentenciaWhile PUNTOYCOMA .
    (16) final -> sentenciaWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    LDER            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 151
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 66

    (17) final -> sentenciaDoWhile PUNTOYCOMA .
    (18) final -> sentenciaDoWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    LDER            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]

    sentenciaDoWhile               shift and go to state 9
    final                          shift and go to state 152
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 67

    (19) final -> sentenciaIf PUNTOYCOMA .
    (20) final -> sentenciaIf PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    LDER            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 153
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 68

    (22) final -> sentenciaIf final .

    $end            reduce using rule 22 (final -> sentenciaIf final .)
    PUNTOYCOMA      reduce using rule 22 (final -> sentenciaIf final .)
    VARIABLE        reduce using rule 22 (final -> sentenciaIf final .)
    INT             reduce using rule 22 (final -> sentenciaIf final .)
    DOUBLER         reduce using rule 22 (final -> sentenciaIf final .)
    NUM             reduce using rule 22 (final -> sentenciaIf final .)
    STRINGR         reduce using rule 22 (final -> sentenciaIf final .)
    BOOLR           reduce using rule 22 (final -> sentenciaIf final .)
    DYNAMIC         reduce using rule 22 (final -> sentenciaIf final .)
    VAR             reduce using rule 22 (final -> sentenciaIf final .)
    WHILE           reduce using rule 22 (final -> sentenciaIf final .)
    DO              reduce using rule 22 (final -> sentenciaIf final .)
    IF              reduce using rule 22 (final -> sentenciaIf final .)
    ELSE            reduce using rule 22 (final -> sentenciaIf final .)
    PRINT           reduce using rule 22 (final -> sentenciaIf final .)
    FUNCIONSTDIN    reduce using rule 22 (final -> sentenciaIf final .)
    FUNCIONSTDOUT   reduce using rule 22 (final -> sentenciaIf final .)
    NOT             reduce using rule 22 (final -> sentenciaIf final .)
    ELSEIF          reduce using rule 22 (final -> sentenciaIf final .)
    FOR             reduce using rule 22 (final -> sentenciaIf final .)
    LIST            reduce using rule 22 (final -> sentenciaIf final .)
    CIZQ            reduce using rule 22 (final -> sentenciaIf final .)
    NEWLIST         reduce using rule 22 (final -> sentenciaIf final .)
    ENTERO          reduce using rule 22 (final -> sentenciaIf final .)
    DOUBLE          reduce using rule 22 (final -> sentenciaIf final .)
    STRING          reduce using rule 22 (final -> sentenciaIf final .)
    BOOL            reduce using rule 22 (final -> sentenciaIf final .)
    LDER            reduce using rule 22 (final -> sentenciaIf final .)


state 69

    (23) final -> sentenciaElse PUNTOYCOMA .
    (24) final -> sentenciaElse PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    LDER            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 154
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 70

    (26) final -> sentenciaElse final .

    $end            reduce using rule 26 (final -> sentenciaElse final .)
    PUNTOYCOMA      reduce using rule 26 (final -> sentenciaElse final .)
    VARIABLE        reduce using rule 26 (final -> sentenciaElse final .)
    INT             reduce using rule 26 (final -> sentenciaElse final .)
    DOUBLER         reduce using rule 26 (final -> sentenciaElse final .)
    NUM             reduce using rule 26 (final -> sentenciaElse final .)
    STRINGR         reduce using rule 26 (final -> sentenciaElse final .)
    BOOLR           reduce using rule 26 (final -> sentenciaElse final .)
    DYNAMIC         reduce using rule 26 (final -> sentenciaElse final .)
    VAR             reduce using rule 26 (final -> sentenciaElse final .)
    WHILE           reduce using rule 26 (final -> sentenciaElse final .)
    DO              reduce using rule 26 (final -> sentenciaElse final .)
    IF              reduce using rule 26 (final -> sentenciaElse final .)
    ELSE            reduce using rule 26 (final -> sentenciaElse final .)
    PRINT           reduce using rule 26 (final -> sentenciaElse final .)
    FUNCIONSTDIN    reduce using rule 26 (final -> sentenciaElse final .)
    FUNCIONSTDOUT   reduce using rule 26 (final -> sentenciaElse final .)
    NOT             reduce using rule 26 (final -> sentenciaElse final .)
    ELSEIF          reduce using rule 26 (final -> sentenciaElse final .)
    FOR             reduce using rule 26 (final -> sentenciaElse final .)
    LIST            reduce using rule 26 (final -> sentenciaElse final .)
    CIZQ            reduce using rule 26 (final -> sentenciaElse final .)
    NEWLIST         reduce using rule 26 (final -> sentenciaElse final .)
    ENTERO          reduce using rule 26 (final -> sentenciaElse final .)
    DOUBLE          reduce using rule 26 (final -> sentenciaElse final .)
    STRING          reduce using rule 26 (final -> sentenciaElse final .)
    BOOL            reduce using rule 26 (final -> sentenciaElse final .)
    LDER            reduce using rule 26 (final -> sentenciaElse final .)


state 71

    (27) final -> imprimir PUNTOYCOMA .
    (28) final -> imprimir PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    LDER            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]

    imprimir                       shift and go to state 12
    final                          shift and go to state 155
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 72

    (29) final -> funcionStdin PUNTOYCOMA .
    (30) final -> funcionStdin PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    LDER            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]

    funcionStdin                   shift and go to state 13
    final                          shift and go to state 156
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 73

    (31) final -> funcionStdout PUNTOYCOMA .
    (32) final -> funcionStdout PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    LDER            reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]

    funcionStdout                  shift and go to state 14
    final                          shift and go to state 157
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 74

    (33) final -> negacionBool PUNTOYCOMA .
    (34) final -> negacionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    LDER            reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]

    negacionBool                   shift and go to state 15
    final                          shift and go to state 158
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 75

    (35) final -> comparacionBool PUNTOYCOMA . final
    (36) final -> comparacionBool PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    LDER            reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]

    comparacionBool                shift and go to state 16
    final                          shift and go to state 159
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 76

    (37) final -> sentenciaElseIf PUNTOYCOMA . final
    (39) final -> sentenciaElseIf PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    LDER            reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 160
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 77

    (38) final -> sentenciaElseIf final .

    $end            reduce using rule 38 (final -> sentenciaElseIf final .)
    PUNTOYCOMA      reduce using rule 38 (final -> sentenciaElseIf final .)
    VARIABLE        reduce using rule 38 (final -> sentenciaElseIf final .)
    INT             reduce using rule 38 (final -> sentenciaElseIf final .)
    DOUBLER         reduce using rule 38 (final -> sentenciaElseIf final .)
    NUM             reduce using rule 38 (final -> sentenciaElseIf final .)
    STRINGR         reduce using rule 38 (final -> sentenciaElseIf final .)
    BOOLR           reduce using rule 38 (final -> sentenciaElseIf final .)
    DYNAMIC         reduce using rule 38 (final -> sentenciaElseIf final .)
    VAR             reduce using rule 38 (final -> sentenciaElseIf final .)
    WHILE           reduce using rule 38 (final -> sentenciaElseIf final .)
    DO              reduce using rule 38 (final -> sentenciaElseIf final .)
    IF              reduce using rule 38 (final -> sentenciaElseIf final .)
    ELSE            reduce using rule 38 (final -> sentenciaElseIf final .)
    PRINT           reduce using rule 38 (final -> sentenciaElseIf final .)
    FUNCIONSTDIN    reduce using rule 38 (final -> sentenciaElseIf final .)
    FUNCIONSTDOUT   reduce using rule 38 (final -> sentenciaElseIf final .)
    NOT             reduce using rule 38 (final -> sentenciaElseIf final .)
    ELSEIF          reduce using rule 38 (final -> sentenciaElseIf final .)
    FOR             reduce using rule 38 (final -> sentenciaElseIf final .)
    LIST            reduce using rule 38 (final -> sentenciaElseIf final .)
    CIZQ            reduce using rule 38 (final -> sentenciaElseIf final .)
    NEWLIST         reduce using rule 38 (final -> sentenciaElseIf final .)
    ENTERO          reduce using rule 38 (final -> sentenciaElseIf final .)
    DOUBLE          reduce using rule 38 (final -> sentenciaElseIf final .)
    STRING          reduce using rule 38 (final -> sentenciaElseIf final .)
    BOOL            reduce using rule 38 (final -> sentenciaElseIf final .)
    LDER            reduce using rule 38 (final -> sentenciaElseIf final .)


state 78

    (41) final -> sentenciaFor PUNTOYCOMA . final
    (42) final -> sentenciaFor PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    LDER            reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]

    sentenciaFor                   shift and go to state 18
    final                          shift and go to state 161
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 79

    (43) final -> sentenciaFor final .

    $end            reduce using rule 43 (final -> sentenciaFor final .)
    PUNTOYCOMA      reduce using rule 43 (final -> sentenciaFor final .)
    VARIABLE        reduce using rule 43 (final -> sentenciaFor final .)
    INT             reduce using rule 43 (final -> sentenciaFor final .)
    DOUBLER         reduce using rule 43 (final -> sentenciaFor final .)
    NUM             reduce using rule 43 (final -> sentenciaFor final .)
    STRINGR         reduce using rule 43 (final -> sentenciaFor final .)
    BOOLR           reduce using rule 43 (final -> sentenciaFor final .)
    DYNAMIC         reduce using rule 43 (final -> sentenciaFor final .)
    VAR             reduce using rule 43 (final -> sentenciaFor final .)
    WHILE           reduce using rule 43 (final -> sentenciaFor final .)
    DO              reduce using rule 43 (final -> sentenciaFor final .)
    IF              reduce using rule 43 (final -> sentenciaFor final .)
    ELSE            reduce using rule 43 (final -> sentenciaFor final .)
    PRINT           reduce using rule 43 (final -> sentenciaFor final .)
    FUNCIONSTDIN    reduce using rule 43 (final -> sentenciaFor final .)
    FUNCIONSTDOUT   reduce using rule 43 (final -> sentenciaFor final .)
    NOT             reduce using rule 43 (final -> sentenciaFor final .)
    ELSEIF          reduce using rule 43 (final -> sentenciaFor final .)
    FOR             reduce using rule 43 (final -> sentenciaFor final .)
    LIST            reduce using rule 43 (final -> sentenciaFor final .)
    CIZQ            reduce using rule 43 (final -> sentenciaFor final .)
    NEWLIST         reduce using rule 43 (final -> sentenciaFor final .)
    ENTERO          reduce using rule 43 (final -> sentenciaFor final .)
    DOUBLE          reduce using rule 43 (final -> sentenciaFor final .)
    STRING          reduce using rule 43 (final -> sentenciaFor final .)
    BOOL            reduce using rule 43 (final -> sentenciaFor final .)
    LDER            reduce using rule 43 (final -> sentenciaFor final .)


state 80

    (45) final -> sentenciaSubstring PUNTOYCOMA . final
    (46) final -> sentenciaSubstring PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    LDER            reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]

    sentenciaSubstring             shift and go to state 19
    final                          shift and go to state 162
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 81

    (47) final -> VARIABLE DSUMA . PUNTOYCOMA final
    (48) final -> VARIABLE DSUMA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 163


state 82

    (49) final -> VARIABLE DRESTA . PUNTOYCOMA final
    (50) final -> VARIABLE DRESTA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 164


state 83

    (170) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (171) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (154) expresionBoolFor -> VARIABLE comparadorMat . expresionDouble
    (155) expresionBoolFor -> VARIABLE comparadorMat . VARIABLE
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 165
    DOUBLE          shift and go to state 168
    ENTERO          shift and go to state 169

    expresionDouble                shift and go to state 166
    valorDouble                    shift and go to state 167
    valorInt                       shift and go to state 147

state 84

    (189) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO PDER
    (190) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO COMA ENTERO PDER

    PIZQ            shift and go to state 170


state 85

    (122) asignacionSimple -> VARIABLE IGUAL . expresion
    (138) expresion -> . valor operadorMat expresion
    (139) expresion -> . valor
    (140) expresion -> . expresionString
    (141) expresion -> . expresionInt
    (142) expresion -> . expresionDouble
    (143) expresion -> . expresionBool
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 148
    VARIABLE        shift and go to state 171
    DOUBLE          shift and go to state 178
    STRING          shift and go to state 179
    FUNCIONSTDIN    shift and go to state 182
    BOOL            shift and go to state 54
    NOT             shift and go to state 44

    expresion                      shift and go to state 172
    valor                          shift and go to state 173
    expresionString                shift and go to state 174
    expresionInt                   shift and go to state 175
    expresionDouble                shift and go to state 176
    expresionBool                  shift and go to state 177
    valorString                    shift and go to state 34
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 180
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    expresionIndexString           shift and go to state 53
    sentenciaSubstring             shift and go to state 183

state 86

    (205) comparadorMat -> DIGUAL .

    VARIABLE        reduce using rule 205 (comparadorMat -> DIGUAL .)
    DOUBLE          reduce using rule 205 (comparadorMat -> DIGUAL .)
    ENTERO          reduce using rule 205 (comparadorMat -> DIGUAL .)


state 87

    (206) comparadorMat -> NOIGUAL .

    VARIABLE        reduce using rule 206 (comparadorMat -> NOIGUAL .)
    DOUBLE          reduce using rule 206 (comparadorMat -> NOIGUAL .)
    ENTERO          reduce using rule 206 (comparadorMat -> NOIGUAL .)


state 88

    (207) comparadorMat -> MAYOR .

    VARIABLE        reduce using rule 207 (comparadorMat -> MAYOR .)
    DOUBLE          reduce using rule 207 (comparadorMat -> MAYOR .)
    ENTERO          reduce using rule 207 (comparadorMat -> MAYOR .)


state 89

    (208) comparadorMat -> MENOR .

    VARIABLE        reduce using rule 208 (comparadorMat -> MENOR .)
    DOUBLE          reduce using rule 208 (comparadorMat -> MENOR .)
    ENTERO          reduce using rule 208 (comparadorMat -> MENOR .)


state 90

    (209) comparadorMat -> MAYIGUAL .

    VARIABLE        reduce using rule 209 (comparadorMat -> MAYIGUAL .)
    DOUBLE          reduce using rule 209 (comparadorMat -> MAYIGUAL .)
    ENTERO          reduce using rule 209 (comparadorMat -> MAYIGUAL .)


state 91

    (210) comparadorMat -> MENIGUAL .

    VARIABLE        reduce using rule 210 (comparadorMat -> MENIGUAL .)
    DOUBLE          reduce using rule 210 (comparadorMat -> MENIGUAL .)
    ENTERO          reduce using rule 210 (comparadorMat -> MENIGUAL .)


state 92

    (51) final -> expresionLista PUNTOYCOMA .
    (52) final -> expresionLista PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    LDER            reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]

    expresionLista                 shift and go to state 21
    final                          shift and go to state 184
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 93

    (53) final -> expresionNewList PUNTOYCOMA .
    (54) final -> expresionNewList PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    LDER            reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]

    expresionNewList               shift and go to state 22
    final                          shift and go to state 185
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 94

    (114) asignacion -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 186


state 95

    (115) asignacion -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 187


state 96

    (116) asignacion -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 188


state 97

    (117) asignacion -> STRINGR VARIABLE . IGUAL expresionString

    IGUAL           shift and go to state 189


state 98

    (118) asignacion -> BOOLR VARIABLE . IGUAL expresionBool

    IGUAL           shift and go to state 190


state 99

    (119) asignacion -> DYNAMIC VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 191


state 100

    (120) asignacion -> VAR VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 192


state 101

    (193) expresionInt -> valorInt operadorMat . expresionInt
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE

    ENTERO          shift and go to state 169
    VARIABLE        shift and go to state 195

    valorInt                       shift and go to state 193
    expresionInt                   shift and go to state 194

state 102

    (199) operadorMat -> SUMA .

    ENTERO          reduce using rule 199 (operadorMat -> SUMA .)
    VARIABLE        reduce using rule 199 (operadorMat -> SUMA .)
    DOUBLE          reduce using rule 199 (operadorMat -> SUMA .)
    STRING          reduce using rule 199 (operadorMat -> SUMA .)
    FUNCIONSTDIN    reduce using rule 199 (operadorMat -> SUMA .)
    BOOL            reduce using rule 199 (operadorMat -> SUMA .)
    NOT             reduce using rule 199 (operadorMat -> SUMA .)


state 103

    (200) operadorMat -> RESTA .

    ENTERO          reduce using rule 200 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 200 (operadorMat -> RESTA .)
    DOUBLE          reduce using rule 200 (operadorMat -> RESTA .)
    STRING          reduce using rule 200 (operadorMat -> RESTA .)
    FUNCIONSTDIN    reduce using rule 200 (operadorMat -> RESTA .)
    BOOL            reduce using rule 200 (operadorMat -> RESTA .)
    NOT             reduce using rule 200 (operadorMat -> RESTA .)


state 104

    (201) operadorMat -> MULTI .

    ENTERO          reduce using rule 201 (operadorMat -> MULTI .)
    VARIABLE        reduce using rule 201 (operadorMat -> MULTI .)
    DOUBLE          reduce using rule 201 (operadorMat -> MULTI .)
    STRING          reduce using rule 201 (operadorMat -> MULTI .)
    FUNCIONSTDIN    reduce using rule 201 (operadorMat -> MULTI .)
    BOOL            reduce using rule 201 (operadorMat -> MULTI .)
    NOT             reduce using rule 201 (operadorMat -> MULTI .)


state 105

    (202) operadorMat -> DIV .

    ENTERO          reduce using rule 202 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 202 (operadorMat -> DIV .)
    DOUBLE          reduce using rule 202 (operadorMat -> DIV .)
    STRING          reduce using rule 202 (operadorMat -> DIV .)
    FUNCIONSTDIN    reduce using rule 202 (operadorMat -> DIV .)
    BOOL            reduce using rule 202 (operadorMat -> DIV .)
    NOT             reduce using rule 202 (operadorMat -> DIV .)


state 106

    (203) operadorMat -> DIVENTERO .

    ENTERO          reduce using rule 203 (operadorMat -> DIVENTERO .)
    VARIABLE        reduce using rule 203 (operadorMat -> DIVENTERO .)
    DOUBLE          reduce using rule 203 (operadorMat -> DIVENTERO .)
    STRING          reduce using rule 203 (operadorMat -> DIVENTERO .)
    FUNCIONSTDIN    reduce using rule 203 (operadorMat -> DIVENTERO .)
    BOOL            reduce using rule 203 (operadorMat -> DIVENTERO .)
    NOT             reduce using rule 203 (operadorMat -> DIVENTERO .)


state 107

    (204) operadorMat -> MOD .

    ENTERO          reduce using rule 204 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 204 (operadorMat -> MOD .)
    DOUBLE          reduce using rule 204 (operadorMat -> MOD .)
    STRING          reduce using rule 204 (operadorMat -> MOD .)
    FUNCIONSTDIN    reduce using rule 204 (operadorMat -> MOD .)
    BOOL            reduce using rule 204 (operadorMat -> MOD .)
    NOT             reduce using rule 204 (operadorMat -> MOD .)


state 108

    (197) expresionDouble -> valorDouble operadorMat . expresionDouble
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 168
    ENTERO          shift and go to state 169
    VARIABLE        shift and go to state 195

    valorDouble                    shift and go to state 167
    expresionDouble                shift and go to state 196
    valorInt                       shift and go to state 147

state 109

    (169) expresionBool -> valorDouble comparadorMat . expresionDouble
    (172) expresionBool -> valorDouble comparadorMat . VARIABLE
    (153) expresionBoolFor -> valorDouble comparadorMat . expresionDouble
    (156) expresionBoolFor -> valorDouble comparadorMat . VARIABLE
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 198
    DOUBLE          shift and go to state 168
    ENTERO          shift and go to state 169

    valorDouble                    shift and go to state 167
    expresionDouble                shift and go to state 197
    valorInt                       shift and go to state 147

state 110

    (186) expresionString -> valorString SUMA . expresionString
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 200
    VARIABLE        shift and go to state 201
    FUNCIONSTDIN    shift and go to state 182

    valorString                    shift and go to state 34
    expresionString                shift and go to state 199
    expresionIndexString           shift and go to state 53
    sentenciaSubstring             shift and go to state 183

state 111

    (188) expresionIndexString -> valorString CIZQ . ENTERO CDER

    ENTERO          shift and go to state 202


state 112

    (176) expresionBool -> valor IS . objeto
    (213) objeto -> . STRINGR
    (214) objeto -> . INT
    (215) objeto -> . DOUBLER
    (216) objeto -> . NUM
    (217) objeto -> . VAR
    (218) objeto -> . DYNAMIC
    (219) objeto -> . LIST
    (220) objeto -> . BOOL
    (221) objeto -> . MAP
    (222) objeto -> . SET

    STRINGR         shift and go to state 204
    INT             shift and go to state 205
    DOUBLER         shift and go to state 206
    NUM             shift and go to state 207
    VAR             shift and go to state 208
    DYNAMIC         shift and go to state 209
    LIST            shift and go to state 210
    BOOL            shift and go to state 211
    MAP             shift and go to state 212
    SET             shift and go to state 213

    objeto                         shift and go to state 203

state 113

    (177) expresionBool -> valor ISNEGADO . objeto
    (213) objeto -> . STRINGR
    (214) objeto -> . INT
    (215) objeto -> . DOUBLER
    (216) objeto -> . NUM
    (217) objeto -> . VAR
    (218) objeto -> . DYNAMIC
    (219) objeto -> . LIST
    (220) objeto -> . BOOL
    (221) objeto -> . MAP
    (222) objeto -> . SET

    STRINGR         shift and go to state 204
    INT             shift and go to state 205
    DOUBLER         shift and go to state 206
    NUM             shift and go to state 207
    VAR             shift and go to state 208
    DYNAMIC         shift and go to state 209
    LIST            shift and go to state 210
    BOOL            shift and go to state 211
    MAP             shift and go to state 212
    SET             shift and go to state 213

    objeto                         shift and go to state 214

state 114

    (164) sentenciaWhile -> WHILE PIZQ . expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> WHILE PIZQ . expresionBool PDER final
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 144
    DOUBLE          shift and go to state 51
    BOOL            shift and go to state 54
    NOT             shift and go to state 44
    ENTERO          shift and go to state 148
    STRING          shift and go to state 149

    expresionBool                  shift and go to state 215
    valorDouble                    shift and go to state 143
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    valor                          shift and go to state 36
    valorInt                       shift and go to state 147

state 115

    (166) sentenciaDoWhile -> DO LIZQ . final LDER WHILE PIZQ expresionBool PDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    final                          shift and go to state 216
    expresionBool                  shift and go to state 6
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 116

    (128) sentenciaIf -> IF PIZQ . expresionBool PDER final
    (129) sentenciaIf -> IF PIZQ . expresionBool PDER LIZQ final LDER
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 144
    DOUBLE          shift and go to state 51
    BOOL            shift and go to state 54
    NOT             shift and go to state 44
    ENTERO          shift and go to state 148
    STRING          shift and go to state 149

    expresionBool                  shift and go to state 217
    valorDouble                    shift and go to state 143
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    valor                          shift and go to state 36
    valorInt                       shift and go to state 147

state 117

    (130) sentenciaElse -> ELSE final .

    PUNTOYCOMA      reduce using rule 130 (sentenciaElse -> ELSE final .)
    VARIABLE        reduce using rule 130 (sentenciaElse -> ELSE final .)
    INT             reduce using rule 130 (sentenciaElse -> ELSE final .)
    DOUBLER         reduce using rule 130 (sentenciaElse -> ELSE final .)
    NUM             reduce using rule 130 (sentenciaElse -> ELSE final .)
    STRINGR         reduce using rule 130 (sentenciaElse -> ELSE final .)
    BOOLR           reduce using rule 130 (sentenciaElse -> ELSE final .)
    DYNAMIC         reduce using rule 130 (sentenciaElse -> ELSE final .)
    VAR             reduce using rule 130 (sentenciaElse -> ELSE final .)
    WHILE           reduce using rule 130 (sentenciaElse -> ELSE final .)
    DO              reduce using rule 130 (sentenciaElse -> ELSE final .)
    IF              reduce using rule 130 (sentenciaElse -> ELSE final .)
    ELSE            reduce using rule 130 (sentenciaElse -> ELSE final .)
    PRINT           reduce using rule 130 (sentenciaElse -> ELSE final .)
    FUNCIONSTDIN    reduce using rule 130 (sentenciaElse -> ELSE final .)
    FUNCIONSTDOUT   reduce using rule 130 (sentenciaElse -> ELSE final .)
    NOT             reduce using rule 130 (sentenciaElse -> ELSE final .)
    ELSEIF          reduce using rule 130 (sentenciaElse -> ELSE final .)
    FOR             reduce using rule 130 (sentenciaElse -> ELSE final .)
    LIST            reduce using rule 130 (sentenciaElse -> ELSE final .)
    CIZQ            reduce using rule 130 (sentenciaElse -> ELSE final .)
    NEWLIST         reduce using rule 130 (sentenciaElse -> ELSE final .)
    ENTERO          reduce using rule 130 (sentenciaElse -> ELSE final .)
    DOUBLE          reduce using rule 130 (sentenciaElse -> ELSE final .)
    STRING          reduce using rule 130 (sentenciaElse -> ELSE final .)
    BOOL            reduce using rule 130 (sentenciaElse -> ELSE final .)
    $end            reduce using rule 130 (sentenciaElse -> ELSE final .)
    LDER            reduce using rule 130 (sentenciaElse -> ELSE final .)


state 118

    (131) sentenciaElse -> ELSE LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    final                          shift and go to state 218
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 119

    (123) imprimir -> PRINT PIZQ . expresion PDER
    (124) imprimir -> PRINT PIZQ . asignacionSimple PDER
    (138) expresion -> . valor operadorMat expresion
    (139) expresion -> . valor
    (140) expresion -> . expresionString
    (141) expresion -> . expresionInt
    (142) expresion -> . expresionDouble
    (143) expresion -> . expresionBool
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 221
    ENTERO          shift and go to state 148
    DOUBLE          shift and go to state 178
    STRING          shift and go to state 179
    FUNCIONSTDIN    shift and go to state 182
    BOOL            shift and go to state 54
    NOT             shift and go to state 44

    expresion                      shift and go to state 219
    asignacionSimple               shift and go to state 220
    valor                          shift and go to state 173
    expresionString                shift and go to state 174
    expresionInt                   shift and go to state 175
    expresionDouble                shift and go to state 176
    expresionBool                  shift and go to state 177
    valorString                    shift and go to state 34
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 180
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    expresionIndexString           shift and go to state 53
    sentenciaSubstring             shift and go to state 183

state 120

    (126) funcionStdout -> FUNCIONSTDOUT PIZQ . expresion PDER
    (127) funcionStdout -> FUNCIONSTDOUT PIZQ . asignacionSimple PDER
    (138) expresion -> . valor operadorMat expresion
    (139) expresion -> . valor
    (140) expresion -> . expresionString
    (141) expresion -> . expresionInt
    (142) expresion -> . expresionDouble
    (143) expresion -> . expresionBool
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 221
    ENTERO          shift and go to state 148
    DOUBLE          shift and go to state 178
    STRING          shift and go to state 179
    FUNCIONSTDIN    shift and go to state 182
    BOOL            shift and go to state 54
    NOT             shift and go to state 44

    expresion                      shift and go to state 222
    asignacionSimple               shift and go to state 223
    valor                          shift and go to state 173
    expresionString                shift and go to state 174
    expresionInt                   shift and go to state 175
    expresionDouble                shift and go to state 176
    expresionBool                  shift and go to state 177
    valorString                    shift and go to state 34
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 180
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    expresionIndexString           shift and go to state 53
    sentenciaSubstring             shift and go to state 183

state 121

    (178) negacionBool -> NOT PIZQ . expresionBool PDER
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 144
    DOUBLE          shift and go to state 51
    BOOL            shift and go to state 54
    NOT             shift and go to state 44
    ENTERO          shift and go to state 148
    STRING          shift and go to state 149

    expresionBool                  shift and go to state 224
    valorDouble                    shift and go to state 143
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    valor                          shift and go to state 36
    valorInt                       shift and go to state 147

state 122

    (132) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER final
    (133) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER LIZQ final LDER
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 144
    DOUBLE          shift and go to state 51
    BOOL            shift and go to state 54
    NOT             shift and go to state 44
    ENTERO          shift and go to state 148
    STRING          shift and go to state 149

    expresionBool                  shift and go to state 225
    valorDouble                    shift and go to state 143
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    valor                          shift and go to state 36
    valorInt                       shift and go to state 147

state 123

    (160) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (144) asignacionFor -> . INT VARIABLE IGUAL expresionInt
    (145) asignacionFor -> . DOUBLER VARIABLE IGUAL expresionDouble
    (146) asignacionFor -> . NUM VARIABLE IGUAL expresionDouble
    (147) asignacionFor -> . DYNAMIC VARIABLE IGUAL expresionInt
    (148) asignacionFor -> . DYNAMIC VARIABLE IGUAL expresionDouble
    (149) asignacionFor -> . VAR VARIABLE IGUAL expresionInt
    (150) asignacionFor -> . VAR VARIABLE IGUAL expresionDouble
    (151) asignacionFor -> . VARIABLE IGUAL expresionInt
    (152) asignacionFor -> . VARIABLE IGUAL expresionDouble

    INT             shift and go to state 228
    DOUBLER         shift and go to state 229
    NUM             shift and go to state 230
    DYNAMIC         shift and go to state 231
    VAR             shift and go to state 232
    VARIABLE        shift and go to state 227

    asignacionFor                  shift and go to state 226

state 124

    (70) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE
    (71) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (74) expresionLista -> LIST MENOR . INT MAYOR VARIABLE
    (75) expresionLista -> LIST MENOR . INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> LIST MENOR . INT MAYOR VARIABLE IGUAL expresionNewList
    (78) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE
    (79) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE
    (83) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE
    (86) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (89) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (93) expresionLista -> LIST MENOR . VARIABLE MAYOR VARIABLE
    (94) expresionLista -> LIST MENOR . VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (56) expListaLista -> LIST MENOR . LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> LIST MENOR . LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList

    STRINGR         shift and go to state 234
    INT             shift and go to state 236
    DOUBLER         shift and go to state 237
    NUM             shift and go to state 238
    BOOLR           shift and go to state 239
    DYNAMIC         shift and go to state 240
    VARIABLE        shift and go to state 235
    LIST            shift and go to state 233


state 125

    (73) expresionLista -> CIZQ expListString . CDER

    CDER            shift and go to state 241


state 126

    (69) expresionNewList -> CIZQ CDER .

    PUNTOYCOMA      reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    $end            reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    VARIABLE        reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    INT             reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    DOUBLER         reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    NUM             reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    STRINGR         reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    BOOLR           reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    DYNAMIC         reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    VAR             reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    WHILE           reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    DO              reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    IF              reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    ELSE            reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    PRINT           reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    FUNCIONSTDIN    reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    FUNCIONSTDOUT   reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    NOT             reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    ELSEIF          reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    FOR             reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    LIST            reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    CIZQ            reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    NEWLIST         reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    ENTERO          reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    DOUBLE          reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    STRING          reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    BOOL            reduce using rule 69 (expresionNewList -> CIZQ CDER .)
    LDER            reduce using rule 69 (expresionNewList -> CIZQ CDER .)


state 127

    (77) expresionLista -> CIZQ expListInt . CDER

    CDER            shift and go to state 242


state 128

    (81) expresionLista -> CIZQ expListNum . CDER

    CDER            shift and go to state 243


state 129

    (88) expresionLista -> CIZQ expListBool . CDER

    CDER            shift and go to state 244


state 130

    (92) expresionLista -> CIZQ expListDynamic . CDER

    CDER            shift and go to state 245


state 131

    (95) expListString -> STRING .
    (96) expListString -> STRING . COMA expListString
    (105) expListDynamic -> STRING .
    (109) expListDynamic -> STRING . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 95 (expListString -> STRING .)
    CDER            reduce using rule 95 (expListString -> STRING .)
    COMA            shift and go to state 246

  ! CDER            [ reduce using rule 105 (expListDynamic -> STRING .) ]


state 132

    (97) expListInt -> ENTERO .
    (98) expListInt -> ENTERO . COMA expListInt
    (99) expListNum -> ENTERO .
    (101) expListNum -> ENTERO . COMA expListNum
    (106) expListDynamic -> ENTERO .
    (110) expListDynamic -> ENTERO . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 97 (expListInt -> ENTERO .)
  ! reduce/reduce conflict for CDER resolved using rule 97 (expListInt -> ENTERO .)
    CDER            reduce using rule 97 (expListInt -> ENTERO .)
    COMA            shift and go to state 247

  ! CDER            [ reduce using rule 99 (expListNum -> ENTERO .) ]
  ! CDER            [ reduce using rule 106 (expListDynamic -> ENTERO .) ]


state 133

    (100) expListNum -> DOUBLE .
    (102) expListNum -> DOUBLE . COMA expListNum
    (107) expListDynamic -> DOUBLE .
    (111) expListDynamic -> DOUBLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 100 (expListNum -> DOUBLE .)
    CDER            reduce using rule 100 (expListNum -> DOUBLE .)
    COMA            shift and go to state 248

  ! CDER            [ reduce using rule 107 (expListDynamic -> DOUBLE .) ]


state 134

    (103) expListBool -> BOOL .
    (104) expListBool -> BOOL . COMA expListBool
    (108) expListDynamic -> BOOL .
    (112) expListDynamic -> BOOL . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 103 (expListBool -> BOOL .)
    CDER            reduce using rule 103 (expListBool -> BOOL .)
    COMA            shift and go to state 249

  ! CDER            [ reduce using rule 108 (expListDynamic -> BOOL .) ]


state 135

    (67) expresionNewList -> NEWLIST PIZQ . PDER
    (68) expresionNewList -> NEWLIST PIZQ . ENTERO PDER

    PDER            shift and go to state 250
    ENTERO          shift and go to state 251


state 136

    (2) final -> asignacion PUNTOYCOMA final .

    $end            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VARIABLE        reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    INT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLER         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NUM             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRINGR         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOLR           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VAR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    WHILE           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DO              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    IF              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSE            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PRINT           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NOT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSEIF          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FOR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LIST            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    CIZQ            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NEWLIST         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ENTERO          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLE          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRING          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOL            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LDER            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)


state 137

    (4) final -> expresionInt PUNTOYCOMA final .

    $end            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VARIABLE        reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    INT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLER         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NUM             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRINGR         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOLR           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VAR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    WHILE           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DO              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    IF              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSE            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PRINT           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NOT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSEIF          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FOR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LIST            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    CIZQ            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NEWLIST         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ENTERO          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLE          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRING          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOL            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LDER            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)


state 138

    (6) final -> expresionDouble PUNTOYCOMA final .

    $end            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VARIABLE        reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    INT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLER         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NUM             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRINGR         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOLR           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VAR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    WHILE           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DO              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    IF              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSE            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PRINT           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NOT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSEIF          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FOR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LIST            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    CIZQ            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NEWLIST         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ENTERO          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLE          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRING          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOL            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LDER            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)


state 139

    (8) final -> expresionString PUNTOYCOMA final .

    $end            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VARIABLE        reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    INT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLER         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NUM             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRINGR         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOLR           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VAR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    WHILE           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DO              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    IF              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSE            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PRINT           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NOT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSEIF          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FOR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LIST            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    CIZQ            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NEWLIST         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ENTERO          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLE          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRING          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOL            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LDER            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)


state 140

    (10) final -> expresionBool PUNTOYCOMA final .

    $end            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    INT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NUM             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VAR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DO              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    IF              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NOT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FOR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LIST            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRING          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LDER            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)


state 141

    (179) comparacionBool -> expresionBool operadorLogico expresionBool .
    (179) comparacionBool -> expresionBool . operadorLogico expresionBool
    (180) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (211) operadorLogico -> . AND
    (212) operadorLogico -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNTOYCOMA      reduce using rule 179 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    PDER            reduce using rule 179 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    AND             shift and go to state 61
    OR              shift and go to state 62

  ! AND             [ reduce using rule 179 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]
  ! OR              [ reduce using rule 179 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]

    operadorLogico                 shift and go to state 60

state 142

    (180) comparacionBool -> expresionBool operadorLogico comparacionBool .
    (175) expresionBool -> comparacionBool .

  ! reduce/reduce conflict for AND resolved using rule 175 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for OR resolved using rule 175 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 175 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PDER resolved using rule 175 (expresionBool -> comparacionBool .)
    AND             reduce using rule 175 (expresionBool -> comparacionBool .)
    OR              reduce using rule 175 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 175 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 175 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 180 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! AND             [ reduce using rule 180 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! OR              [ reduce using rule 180 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! PDER            [ reduce using rule 180 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]


state 143

    (169) expresionBool -> valorDouble . comparadorMat expresionDouble
    (172) expresionBool -> valorDouble . comparadorMat VARIABLE
    (205) comparadorMat -> . DIGUAL
    (206) comparadorMat -> . NOIGUAL
    (207) comparadorMat -> . MAYOR
    (208) comparadorMat -> . MENOR
    (209) comparadorMat -> . MAYIGUAL
    (210) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 86
    NOIGUAL         shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYIGUAL        shift and go to state 90
    MENIGUAL        shift and go to state 91

    comparadorMat                  shift and go to state 252

state 144

    (170) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (171) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (168) valorBool -> VARIABLE .
    (135) valor -> VARIABLE .
    (192) valorInt -> VARIABLE .
    (205) comparadorMat -> . DIGUAL
    (206) comparadorMat -> . NOIGUAL
    (207) comparadorMat -> . MAYOR
    (208) comparadorMat -> . MENOR
    (209) comparadorMat -> . MAYIGUAL
    (210) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    AND             reduce using rule 168 (valorBool -> VARIABLE .)
    OR              reduce using rule 168 (valorBool -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 168 (valorBool -> VARIABLE .)
    PDER            reduce using rule 168 (valorBool -> VARIABLE .)
    IS              reduce using rule 135 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 135 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 86
    NOIGUAL         shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYIGUAL        shift and go to state 90
    MENIGUAL        shift and go to state 91

  ! DIGUAL          [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 192 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 253

state 145

    (173) expresionBool -> valorBool .

    AND             reduce using rule 173 (expresionBool -> valorBool .)
    OR              reduce using rule 173 (expresionBool -> valorBool .)
    PUNTOYCOMA      reduce using rule 173 (expresionBool -> valorBool .)
    PDER            reduce using rule 173 (expresionBool -> valorBool .)


state 146

    (174) expresionBool -> negacionBool .

    AND             reduce using rule 174 (expresionBool -> negacionBool .)
    OR              reduce using rule 174 (expresionBool -> negacionBool .)
    PUNTOYCOMA      reduce using rule 174 (expresionBool -> negacionBool .)
    PDER            reduce using rule 174 (expresionBool -> negacionBool .)


state 147

    (196) valorDouble -> valorInt .

    DIGUAL          reduce using rule 196 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 196 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 196 (valorDouble -> valorInt .)
    MENOR           reduce using rule 196 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 196 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 196 (valorDouble -> valorInt .)
    SUMA            reduce using rule 196 (valorDouble -> valorInt .)
    RESTA           reduce using rule 196 (valorDouble -> valorInt .)
    MULTI           reduce using rule 196 (valorDouble -> valorInt .)
    DIV             reduce using rule 196 (valorDouble -> valorInt .)
    DIVENTERO       reduce using rule 196 (valorDouble -> valorInt .)
    MOD             reduce using rule 196 (valorDouble -> valorInt .)
    PUNTOYCOMA      reduce using rule 196 (valorDouble -> valorInt .)
    AND             reduce using rule 196 (valorDouble -> valorInt .)
    OR              reduce using rule 196 (valorDouble -> valorInt .)
    PDER            reduce using rule 196 (valorDouble -> valorInt .)


state 148

    (134) valor -> ENTERO .
    (191) valorInt -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 134 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 134 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 134 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 134 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 134 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 134 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 134 (valor -> ENTERO .)
  ! reduce/reduce conflict for PDER resolved using rule 134 (valor -> ENTERO .)
    IS              reduce using rule 134 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 134 (valor -> ENTERO .)
    SUMA            reduce using rule 134 (valor -> ENTERO .)
    RESTA           reduce using rule 134 (valor -> ENTERO .)
    MULTI           reduce using rule 134 (valor -> ENTERO .)
    DIV             reduce using rule 134 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 134 (valor -> ENTERO .)
    MOD             reduce using rule 134 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 134 (valor -> ENTERO .)
    PDER            reduce using rule 134 (valor -> ENTERO .)
    DIGUAL          reduce using rule 191 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 191 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 191 (valorInt -> ENTERO .)
    MENOR           reduce using rule 191 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 191 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 191 (valorInt -> ENTERO .)

  ! SUMA            [ reduce using rule 191 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 191 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 191 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 191 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 191 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 191 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 191 (valorInt -> ENTERO .) ]
  ! PDER            [ reduce using rule 191 (valorInt -> ENTERO .) ]


state 149

    (137) valor -> STRING .

    IS              reduce using rule 137 (valor -> STRING .)
    ISNEGADO        reduce using rule 137 (valor -> STRING .)


state 150

    (12) final -> expresionBoolFor PUNTOYCOMA final .

    $end            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    VARIABLE        reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    INT             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DOUBLER         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NUM             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    STRINGR         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BOOLR           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    VAR             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    WHILE           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DO              reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    IF              reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ELSE            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    PRINT           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NOT             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ELSEIF          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FOR             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LIST            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    CIZQ            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NEWLIST         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ENTERO          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DOUBLE          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    STRING          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BOOL            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LDER            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)


state 151

    (16) final -> sentenciaWhile PUNTOYCOMA final .

    $end            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    INT             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NUM             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    VAR             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DO              reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    IF              reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NOT             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FOR             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LIST            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    CIZQ            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NEWLIST         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRING          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LDER            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)


state 152

    (18) final -> sentenciaDoWhile PUNTOYCOMA final .

    $end            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    INT             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NUM             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VAR             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DO              reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    IF              reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NOT             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FOR             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LIST            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    CIZQ            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NEWLIST         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRING          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LDER            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)


state 153

    (20) final -> sentenciaIf PUNTOYCOMA final .

    $end            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    INT             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NUM             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    VAR             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    WHILE           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DO              reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    IF              reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSE            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    PRINT           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NOT             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FOR             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LIST            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    CIZQ            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NEWLIST         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    STRING          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOL            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LDER            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)


state 154

    (24) final -> sentenciaElse PUNTOYCOMA final .

    $end            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    VARIABLE        reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    INT             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DOUBLER         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NUM             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    STRINGR         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    BOOLR           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    VAR             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    WHILE           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DO              reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    IF              reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ELSE            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    PRINT           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NOT             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ELSEIF          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FOR             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LIST            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    CIZQ            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NEWLIST         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ENTERO          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DOUBLE          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    STRING          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    BOOL            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LDER            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)


state 155

    (28) final -> imprimir PUNTOYCOMA final .

    $end            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    VARIABLE        reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    INT             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DOUBLER         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NUM             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    STRINGR         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    BOOLR           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    VAR             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    WHILE           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DO              reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    IF              reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ELSE            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    PRINT           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NOT             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ELSEIF          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FOR             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LIST            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    CIZQ            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NEWLIST         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ENTERO          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DOUBLE          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    STRING          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    BOOL            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LDER            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)


state 156

    (30) final -> funcionStdin PUNTOYCOMA final .

    $end            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    VARIABLE        reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    INT             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLER         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NUM             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    STRINGR         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    BOOLR           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    VAR             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    WHILE           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DO              reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    IF              reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ELSE            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    PRINT           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NOT             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ELSEIF          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FOR             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LIST            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    CIZQ            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NEWLIST         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ENTERO          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLE          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    STRING          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    BOOL            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LDER            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)


state 157

    (32) final -> funcionStdout PUNTOYCOMA final .

    $end            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    VARIABLE        reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    INT             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLER         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NUM             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    STRINGR         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    BOOLR           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    VAR             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    WHILE           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DO              reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    IF              reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ELSE            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    PRINT           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NOT             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ELSEIF          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FOR             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LIST            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    CIZQ            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NEWLIST         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ENTERO          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLE          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    STRING          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    BOOL            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LDER            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)


state 158

    (34) final -> negacionBool PUNTOYCOMA final .

    $end            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    INT             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DO              reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    IF              reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FOR             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LIST            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)


state 159

    (35) final -> comparacionBool PUNTOYCOMA final .

    $end            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    INT             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DO              reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    IF              reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FOR             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LIST            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)


state 160

    (37) final -> sentenciaElseIf PUNTOYCOMA final .

    $end            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    INT             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NUM             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    VAR             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    WHILE           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DO              reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    IF              reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ELSE            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    PRINT           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NOT             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FOR             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LIST            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    CIZQ            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NEWLIST         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    STRING          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BOOL            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LDER            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)


state 161

    (41) final -> sentenciaFor PUNTOYCOMA final .

    $end            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    VARIABLE        reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    INT             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DOUBLER         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NUM             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    STRINGR         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    BOOLR           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    VAR             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    WHILE           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DO              reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    IF              reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ELSE            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    PRINT           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NOT             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ELSEIF          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FOR             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LIST            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    CIZQ            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NEWLIST         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ENTERO          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DOUBLE          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    STRING          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    BOOL            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LDER            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)


state 162

    (45) final -> sentenciaSubstring PUNTOYCOMA final .

    $end            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VARIABLE        reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    INT             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLER         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NUM             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRINGR         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOLR           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VAR             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    WHILE           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DO              reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    IF              reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSE            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PRINT           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NOT             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSEIF          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FOR             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LIST            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    CIZQ            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NEWLIST         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ENTERO          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLE          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRING          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOL            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LDER            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)


state 163

    (47) final -> VARIABLE DSUMA PUNTOYCOMA . final
    (48) final -> VARIABLE DSUMA PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    LDER            reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]

    final                          shift and go to state 254
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 164

    (49) final -> VARIABLE DRESTA PUNTOYCOMA . final
    (50) final -> VARIABLE DRESTA PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    LDER            reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

  ! VARIABLE        [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]

    final                          shift and go to state 255
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 165

    (171) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (155) expresionBoolFor -> VARIABLE comparadorMat VARIABLE .
    (192) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 155 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 155 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 171 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 171 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 171 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 171 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 155 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 192 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 192 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 192 (valorInt -> VARIABLE .)
    DIV             reduce using rule 192 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 192 (valorInt -> VARIABLE .)
    MOD             reduce using rule 192 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 171 (expresionBool -> VARIABLE comparadorMat VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 192 (valorInt -> VARIABLE .) ]


state 166

    (170) expresionBool -> VARIABLE comparadorMat expresionDouble .
    (154) expresionBoolFor -> VARIABLE comparadorMat expresionDouble .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 154 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 170 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 170 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 154 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 170 (expresionBool -> VARIABLE comparadorMat expresionDouble .) ]


state 167

    (197) expresionDouble -> valorDouble . operadorMat expresionDouble
    (198) expresionDouble -> valorDouble .
    (199) operadorMat -> . SUMA
    (200) operadorMat -> . RESTA
    (201) operadorMat -> . MULTI
    (202) operadorMat -> . DIV
    (203) operadorMat -> . DIVENTERO
    (204) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 198 (expresionDouble -> valorDouble .)
    AND             reduce using rule 198 (expresionDouble -> valorDouble .)
    OR              reduce using rule 198 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 198 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 102
    RESTA           shift and go to state 103
    MULTI           shift and go to state 104
    DIV             shift and go to state 105
    DIVENTERO       shift and go to state 106
    MOD             shift and go to state 107

    operadorMat                    shift and go to state 108

state 168

    (195) valorDouble -> DOUBLE .

    SUMA            reduce using rule 195 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 195 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 195 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 195 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 195 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 195 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 195 (valorDouble -> DOUBLE .)
    AND             reduce using rule 195 (valorDouble -> DOUBLE .)
    OR              reduce using rule 195 (valorDouble -> DOUBLE .)
    PDER            reduce using rule 195 (valorDouble -> DOUBLE .)


state 169

    (191) valorInt -> ENTERO .

    SUMA            reduce using rule 191 (valorInt -> ENTERO .)
    RESTA           reduce using rule 191 (valorInt -> ENTERO .)
    MULTI           reduce using rule 191 (valorInt -> ENTERO .)
    DIV             reduce using rule 191 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 191 (valorInt -> ENTERO .)
    MOD             reduce using rule 191 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 191 (valorInt -> ENTERO .)
    AND             reduce using rule 191 (valorInt -> ENTERO .)
    OR              reduce using rule 191 (valorInt -> ENTERO .)
    PDER            reduce using rule 191 (valorInt -> ENTERO .)


state 170

    (189) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO PDER
    (190) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 256


state 171

    (135) valor -> VARIABLE .
    (170) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (171) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (182) valorString -> VARIABLE .
    (192) valorInt -> VARIABLE .
    (168) valorBool -> VARIABLE .
    (189) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (205) comparadorMat -> . DIGUAL
    (206) comparadorMat -> . NOIGUAL
    (207) comparadorMat -> . MAYOR
    (208) comparadorMat -> . MENOR
    (209) comparadorMat -> . MAYIGUAL
    (210) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 135 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 135 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 135 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 135 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 135 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 135 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 135 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 135 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 135 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 135 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 135 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 135 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 135 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IS              reduce using rule 135 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 135 (valor -> VARIABLE .)
    SUMA            reduce using rule 135 (valor -> VARIABLE .)
    RESTA           reduce using rule 135 (valor -> VARIABLE .)
    MULTI           reduce using rule 135 (valor -> VARIABLE .)
    DIV             reduce using rule 135 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 135 (valor -> VARIABLE .)
    MOD             reduce using rule 135 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 135 (valor -> VARIABLE .)
    PDER            reduce using rule 135 (valor -> VARIABLE .)
    CIZQ            reduce using rule 182 (valorString -> VARIABLE .)
    AND             reduce using rule 168 (valorBool -> VARIABLE .)
    OR              reduce using rule 168 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 84
    DIGUAL          shift and go to state 86
    NOIGUAL         shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYIGUAL        shift and go to state 90
    MENIGUAL        shift and go to state 91

  ! SUMA            [ reduce using rule 182 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 182 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 182 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 168 (valorBool -> VARIABLE .) ]
  ! PDER            [ reduce using rule 168 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 253

state 172

    (122) asignacionSimple -> VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 122 (asignacionSimple -> VARIABLE IGUAL expresion .)
    PDER            reduce using rule 122 (asignacionSimple -> VARIABLE IGUAL expresion .)


state 173

    (138) expresion -> valor . operadorMat expresion
    (139) expresion -> valor .
    (176) expresionBool -> valor . IS objeto
    (177) expresionBool -> valor . ISNEGADO objeto
    (199) operadorMat -> . SUMA
    (200) operadorMat -> . RESTA
    (201) operadorMat -> . MULTI
    (202) operadorMat -> . DIV
    (203) operadorMat -> . DIVENTERO
    (204) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 139 (expresion -> valor .)
    PDER            reduce using rule 139 (expresion -> valor .)
    IS              shift and go to state 112
    ISNEGADO        shift and go to state 113
    SUMA            shift and go to state 102
    RESTA           shift and go to state 103
    MULTI           shift and go to state 104
    DIV             shift and go to state 105
    DIVENTERO       shift and go to state 106
    MOD             shift and go to state 107

    operadorMat                    shift and go to state 257

state 174

    (140) expresion -> expresionString .

    PUNTOYCOMA      reduce using rule 140 (expresion -> expresionString .)
    PDER            reduce using rule 140 (expresion -> expresionString .)


state 175

    (141) expresion -> expresionInt .

    PUNTOYCOMA      reduce using rule 141 (expresion -> expresionInt .)
    PDER            reduce using rule 141 (expresion -> expresionInt .)


state 176

    (142) expresion -> expresionDouble .

    PUNTOYCOMA      reduce using rule 142 (expresion -> expresionDouble .)
    PDER            reduce using rule 142 (expresion -> expresionDouble .)


state 177

    (143) expresion -> expresionBool .
    (179) comparacionBool -> expresionBool . operadorLogico expresionBool
    (180) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (211) operadorLogico -> . AND
    (212) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 143 (expresion -> expresionBool .)
    PDER            reduce using rule 143 (expresion -> expresionBool .)
    AND             shift and go to state 61
    OR              shift and go to state 62

    operadorLogico                 shift and go to state 60

state 178

    (136) valor -> DOUBLE .
    (195) valorDouble -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 136 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 136 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 136 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 136 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 136 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 136 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 136 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PDER resolved using rule 136 (valor -> DOUBLE .)
    IS              reduce using rule 136 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 136 (valor -> DOUBLE .)
    SUMA            reduce using rule 136 (valor -> DOUBLE .)
    RESTA           reduce using rule 136 (valor -> DOUBLE .)
    MULTI           reduce using rule 136 (valor -> DOUBLE .)
    DIV             reduce using rule 136 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 136 (valor -> DOUBLE .)
    MOD             reduce using rule 136 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 136 (valor -> DOUBLE .)
    PDER            reduce using rule 136 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 195 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 195 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 195 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 195 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 195 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 195 (valorDouble -> DOUBLE .)

  ! SUMA            [ reduce using rule 195 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 195 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 195 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 195 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 195 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 195 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 195 (valorDouble -> DOUBLE .) ]
  ! PDER            [ reduce using rule 195 (valorDouble -> DOUBLE .) ]


state 179

    (137) valor -> STRING .
    (181) valorString -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 137 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 137 (valor -> STRING .)
  ! reduce/reduce conflict for PDER resolved using rule 137 (valor -> STRING .)
    IS              reduce using rule 137 (valor -> STRING .)
    ISNEGADO        reduce using rule 137 (valor -> STRING .)
    SUMA            reduce using rule 137 (valor -> STRING .)
    RESTA           reduce using rule 137 (valor -> STRING .)
    MULTI           reduce using rule 137 (valor -> STRING .)
    DIV             reduce using rule 137 (valor -> STRING .)
    DIVENTERO       reduce using rule 137 (valor -> STRING .)
    MOD             reduce using rule 137 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 137 (valor -> STRING .)
    PDER            reduce using rule 137 (valor -> STRING .)
    CIZQ            reduce using rule 181 (valorString -> STRING .)

  ! SUMA            [ reduce using rule 181 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 181 (valorString -> STRING .) ]
  ! PDER            [ reduce using rule 181 (valorString -> STRING .) ]


state 180

    (197) expresionDouble -> valorDouble . operadorMat expresionDouble
    (198) expresionDouble -> valorDouble .
    (169) expresionBool -> valorDouble . comparadorMat expresionDouble
    (172) expresionBool -> valorDouble . comparadorMat VARIABLE
    (199) operadorMat -> . SUMA
    (200) operadorMat -> . RESTA
    (201) operadorMat -> . MULTI
    (202) operadorMat -> . DIV
    (203) operadorMat -> . DIVENTERO
    (204) operadorMat -> . MOD
    (205) comparadorMat -> . DIGUAL
    (206) comparadorMat -> . NOIGUAL
    (207) comparadorMat -> . MAYOR
    (208) comparadorMat -> . MENOR
    (209) comparadorMat -> . MAYIGUAL
    (210) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 198 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 198 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 102
    RESTA           shift and go to state 103
    MULTI           shift and go to state 104
    DIV             shift and go to state 105
    DIVENTERO       shift and go to state 106
    MOD             shift and go to state 107
    DIGUAL          shift and go to state 86
    NOIGUAL         shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYIGUAL        shift and go to state 90
    MENIGUAL        shift and go to state 91

    operadorMat                    shift and go to state 108
    comparadorMat                  shift and go to state 252

state 181

    (175) expresionBool -> comparacionBool .

    AND             reduce using rule 175 (expresionBool -> comparacionBool .)
    OR              reduce using rule 175 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 175 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 175 (expresionBool -> comparacionBool .)


state 182

    (183) valorString -> FUNCIONSTDIN .

    SUMA            reduce using rule 183 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 183 (valorString -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 183 (valorString -> FUNCIONSTDIN .)
    PDER            reduce using rule 183 (valorString -> FUNCIONSTDIN .)


state 183

    (185) valorString -> sentenciaSubstring .

    SUMA            reduce using rule 185 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 185 (valorString -> sentenciaSubstring .)
    PUNTOYCOMA      reduce using rule 185 (valorString -> sentenciaSubstring .)
    PDER            reduce using rule 185 (valorString -> sentenciaSubstring .)


state 184

    (52) final -> expresionLista PUNTOYCOMA final .

    $end            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    VARIABLE        reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    INT             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DOUBLER         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NUM             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    STRINGR         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    BOOLR           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    VAR             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    WHILE           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DO              reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    IF              reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ELSE            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    PRINT           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NOT             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ELSEIF          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FOR             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LIST            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    CIZQ            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NEWLIST         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ENTERO          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DOUBLE          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    STRING          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    BOOL            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LDER            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)


state 185

    (54) final -> expresionNewList PUNTOYCOMA final .

    $end            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    VARIABLE        reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    INT             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DOUBLER         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NUM             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    STRINGR         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    BOOLR           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    VAR             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    WHILE           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DO              reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    IF              reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ELSE            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    PRINT           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NOT             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ELSEIF          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FOR             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LIST            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    CIZQ            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NEWLIST         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ENTERO          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DOUBLE          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    STRING          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    BOOL            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LDER            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)


state 186

    (114) asignacion -> INT VARIABLE IGUAL . expresionInt
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE

    ENTERO          shift and go to state 169
    VARIABLE        shift and go to state 195

    expresionInt                   shift and go to state 258
    valorInt                       shift and go to state 193

state 187

    (115) asignacion -> DOUBLER VARIABLE IGUAL . expresionDouble
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 168
    ENTERO          shift and go to state 169
    VARIABLE        shift and go to state 195

    expresionDouble                shift and go to state 259
    valorDouble                    shift and go to state 167
    valorInt                       shift and go to state 147

state 188

    (116) asignacion -> NUM VARIABLE IGUAL . expresionDouble
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 168
    ENTERO          shift and go to state 169
    VARIABLE        shift and go to state 195

    expresionDouble                shift and go to state 260
    valorDouble                    shift and go to state 167
    valorInt                       shift and go to state 147

state 189

    (117) asignacion -> STRINGR VARIABLE IGUAL . expresionString
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 200
    VARIABLE        shift and go to state 201
    FUNCIONSTDIN    shift and go to state 182

    expresionString                shift and go to state 261
    valorString                    shift and go to state 34
    expresionIndexString           shift and go to state 53
    sentenciaSubstring             shift and go to state 183

state 190

    (118) asignacion -> BOOLR VARIABLE IGUAL . expresionBool
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 144
    DOUBLE          shift and go to state 51
    BOOL            shift and go to state 54
    NOT             shift and go to state 44
    ENTERO          shift and go to state 148
    STRING          shift and go to state 149

    expresionBool                  shift and go to state 262
    valorDouble                    shift and go to state 143
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    valor                          shift and go to state 36
    valorInt                       shift and go to state 147

state 191

    (119) asignacion -> DYNAMIC VARIABLE IGUAL . expresion
    (138) expresion -> . valor operadorMat expresion
    (139) expresion -> . valor
    (140) expresion -> . expresionString
    (141) expresion -> . expresionInt
    (142) expresion -> . expresionDouble
    (143) expresion -> . expresionBool
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 148
    VARIABLE        shift and go to state 171
    DOUBLE          shift and go to state 178
    STRING          shift and go to state 179
    FUNCIONSTDIN    shift and go to state 182
    BOOL            shift and go to state 54
    NOT             shift and go to state 44

    expresion                      shift and go to state 263
    valor                          shift and go to state 173
    expresionString                shift and go to state 174
    expresionInt                   shift and go to state 175
    expresionDouble                shift and go to state 176
    expresionBool                  shift and go to state 177
    valorString                    shift and go to state 34
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 180
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    expresionIndexString           shift and go to state 53
    sentenciaSubstring             shift and go to state 183

state 192

    (120) asignacion -> VAR VARIABLE IGUAL . expresion
    (138) expresion -> . valor operadorMat expresion
    (139) expresion -> . valor
    (140) expresion -> . expresionString
    (141) expresion -> . expresionInt
    (142) expresion -> . expresionDouble
    (143) expresion -> . expresionBool
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 148
    VARIABLE        shift and go to state 171
    DOUBLE          shift and go to state 178
    STRING          shift and go to state 179
    FUNCIONSTDIN    shift and go to state 182
    BOOL            shift and go to state 54
    NOT             shift and go to state 44

    expresion                      shift and go to state 264
    valor                          shift and go to state 173
    expresionString                shift and go to state 174
    expresionInt                   shift and go to state 175
    expresionDouble                shift and go to state 176
    expresionBool                  shift and go to state 177
    valorString                    shift and go to state 34
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 180
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    expresionIndexString           shift and go to state 53
    sentenciaSubstring             shift and go to state 183

state 193

    (193) expresionInt -> valorInt . operadorMat expresionInt
    (194) expresionInt -> valorInt .
    (199) operadorMat -> . SUMA
    (200) operadorMat -> . RESTA
    (201) operadorMat -> . MULTI
    (202) operadorMat -> . DIV
    (203) operadorMat -> . DIVENTERO
    (204) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 194 (expresionInt -> valorInt .)
    PDER            reduce using rule 194 (expresionInt -> valorInt .)
    SUMA            shift and go to state 102
    RESTA           shift and go to state 103
    MULTI           shift and go to state 104
    DIV             shift and go to state 105
    DIVENTERO       shift and go to state 106
    MOD             shift and go to state 107

    operadorMat                    shift and go to state 101

state 194

    (193) expresionInt -> valorInt operadorMat expresionInt .

    PUNTOYCOMA      reduce using rule 193 (expresionInt -> valorInt operadorMat expresionInt .)
    PDER            reduce using rule 193 (expresionInt -> valorInt operadorMat expresionInt .)


state 195

    (192) valorInt -> VARIABLE .

    SUMA            reduce using rule 192 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 192 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 192 (valorInt -> VARIABLE .)
    DIV             reduce using rule 192 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 192 (valorInt -> VARIABLE .)
    MOD             reduce using rule 192 (valorInt -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 192 (valorInt -> VARIABLE .)
    PDER            reduce using rule 192 (valorInt -> VARIABLE .)
    AND             reduce using rule 192 (valorInt -> VARIABLE .)
    OR              reduce using rule 192 (valorInt -> VARIABLE .)


state 196

    (197) expresionDouble -> valorDouble operadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 197 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    AND             reduce using rule 197 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    OR              reduce using rule 197 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PDER            reduce using rule 197 (expresionDouble -> valorDouble operadorMat expresionDouble .)


state 197

    (169) expresionBool -> valorDouble comparadorMat expresionDouble .
    (153) expresionBoolFor -> valorDouble comparadorMat expresionDouble .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 153 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 169 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 169 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 153 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 169 (expresionBool -> valorDouble comparadorMat expresionDouble .) ]


state 198

    (172) expresionBool -> valorDouble comparadorMat VARIABLE .
    (156) expresionBoolFor -> valorDouble comparadorMat VARIABLE .
    (192) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 156 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 156 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 172 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 172 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 172 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 172 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 156 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 192 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 192 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 192 (valorInt -> VARIABLE .)
    DIV             reduce using rule 192 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 192 (valorInt -> VARIABLE .)
    MOD             reduce using rule 192 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 172 (expresionBool -> valorDouble comparadorMat VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 192 (valorInt -> VARIABLE .) ]


state 199

    (186) expresionString -> valorString SUMA expresionString .

    PUNTOYCOMA      reduce using rule 186 (expresionString -> valorString SUMA expresionString .)
    PDER            reduce using rule 186 (expresionString -> valorString SUMA expresionString .)


state 200

    (181) valorString -> STRING .

    SUMA            reduce using rule 181 (valorString -> STRING .)
    CIZQ            reduce using rule 181 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 181 (valorString -> STRING .)
    PDER            reduce using rule 181 (valorString -> STRING .)


state 201

    (182) valorString -> VARIABLE .
    (189) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    SUMA            reduce using rule 182 (valorString -> VARIABLE .)
    CIZQ            reduce using rule 182 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 182 (valorString -> VARIABLE .)
    PDER            reduce using rule 182 (valorString -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 84


state 202

    (188) expresionIndexString -> valorString CIZQ ENTERO . CDER

    CDER            shift and go to state 265


state 203

    (176) expresionBool -> valor IS objeto .

    PUNTOYCOMA      reduce using rule 176 (expresionBool -> valor IS objeto .)
    AND             reduce using rule 176 (expresionBool -> valor IS objeto .)
    OR              reduce using rule 176 (expresionBool -> valor IS objeto .)
    PDER            reduce using rule 176 (expresionBool -> valor IS objeto .)


state 204

    (213) objeto -> STRINGR .

    PUNTOYCOMA      reduce using rule 213 (objeto -> STRINGR .)
    AND             reduce using rule 213 (objeto -> STRINGR .)
    OR              reduce using rule 213 (objeto -> STRINGR .)
    PDER            reduce using rule 213 (objeto -> STRINGR .)


state 205

    (214) objeto -> INT .

    PUNTOYCOMA      reduce using rule 214 (objeto -> INT .)
    AND             reduce using rule 214 (objeto -> INT .)
    OR              reduce using rule 214 (objeto -> INT .)
    PDER            reduce using rule 214 (objeto -> INT .)


state 206

    (215) objeto -> DOUBLER .

    PUNTOYCOMA      reduce using rule 215 (objeto -> DOUBLER .)
    AND             reduce using rule 215 (objeto -> DOUBLER .)
    OR              reduce using rule 215 (objeto -> DOUBLER .)
    PDER            reduce using rule 215 (objeto -> DOUBLER .)


state 207

    (216) objeto -> NUM .

    PUNTOYCOMA      reduce using rule 216 (objeto -> NUM .)
    AND             reduce using rule 216 (objeto -> NUM .)
    OR              reduce using rule 216 (objeto -> NUM .)
    PDER            reduce using rule 216 (objeto -> NUM .)


state 208

    (217) objeto -> VAR .

    PUNTOYCOMA      reduce using rule 217 (objeto -> VAR .)
    AND             reduce using rule 217 (objeto -> VAR .)
    OR              reduce using rule 217 (objeto -> VAR .)
    PDER            reduce using rule 217 (objeto -> VAR .)


state 209

    (218) objeto -> DYNAMIC .

    PUNTOYCOMA      reduce using rule 218 (objeto -> DYNAMIC .)
    AND             reduce using rule 218 (objeto -> DYNAMIC .)
    OR              reduce using rule 218 (objeto -> DYNAMIC .)
    PDER            reduce using rule 218 (objeto -> DYNAMIC .)


state 210

    (219) objeto -> LIST .

    PUNTOYCOMA      reduce using rule 219 (objeto -> LIST .)
    AND             reduce using rule 219 (objeto -> LIST .)
    OR              reduce using rule 219 (objeto -> LIST .)
    PDER            reduce using rule 219 (objeto -> LIST .)


state 211

    (220) objeto -> BOOL .

    PUNTOYCOMA      reduce using rule 220 (objeto -> BOOL .)
    AND             reduce using rule 220 (objeto -> BOOL .)
    OR              reduce using rule 220 (objeto -> BOOL .)
    PDER            reduce using rule 220 (objeto -> BOOL .)


state 212

    (221) objeto -> MAP .

    PUNTOYCOMA      reduce using rule 221 (objeto -> MAP .)
    AND             reduce using rule 221 (objeto -> MAP .)
    OR              reduce using rule 221 (objeto -> MAP .)
    PDER            reduce using rule 221 (objeto -> MAP .)


state 213

    (222) objeto -> SET .

    PUNTOYCOMA      reduce using rule 222 (objeto -> SET .)
    AND             reduce using rule 222 (objeto -> SET .)
    OR              reduce using rule 222 (objeto -> SET .)
    PDER            reduce using rule 222 (objeto -> SET .)


state 214

    (177) expresionBool -> valor ISNEGADO objeto .

    PUNTOYCOMA      reduce using rule 177 (expresionBool -> valor ISNEGADO objeto .)
    AND             reduce using rule 177 (expresionBool -> valor ISNEGADO objeto .)
    OR              reduce using rule 177 (expresionBool -> valor ISNEGADO objeto .)
    PDER            reduce using rule 177 (expresionBool -> valor ISNEGADO objeto .)


state 215

    (164) sentenciaWhile -> WHILE PIZQ expresionBool . PDER LIZQ final LDER
    (165) sentenciaWhile -> WHILE PIZQ expresionBool . PDER final
    (179) comparacionBool -> expresionBool . operadorLogico expresionBool
    (180) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (211) operadorLogico -> . AND
    (212) operadorLogico -> . OR

    PDER            shift and go to state 266
    AND             shift and go to state 61
    OR              shift and go to state 62

    operadorLogico                 shift and go to state 60

state 216

    (166) sentenciaDoWhile -> DO LIZQ final . LDER WHILE PIZQ expresionBool PDER

    LDER            shift and go to state 267


state 217

    (128) sentenciaIf -> IF PIZQ expresionBool . PDER final
    (129) sentenciaIf -> IF PIZQ expresionBool . PDER LIZQ final LDER
    (179) comparacionBool -> expresionBool . operadorLogico expresionBool
    (180) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (211) operadorLogico -> . AND
    (212) operadorLogico -> . OR

    PDER            shift and go to state 268
    AND             shift and go to state 61
    OR              shift and go to state 62

    operadorLogico                 shift and go to state 60

state 218

    (131) sentenciaElse -> ELSE LIZQ final . LDER

    LDER            shift and go to state 269


state 219

    (123) imprimir -> PRINT PIZQ expresion . PDER

    PDER            shift and go to state 270


state 220

    (124) imprimir -> PRINT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 271


state 221

    (122) asignacionSimple -> VARIABLE . IGUAL expresion
    (135) valor -> VARIABLE .
    (170) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (171) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (182) valorString -> VARIABLE .
    (192) valorInt -> VARIABLE .
    (168) valorBool -> VARIABLE .
    (189) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (205) comparadorMat -> . DIGUAL
    (206) comparadorMat -> . NOIGUAL
    (207) comparadorMat -> . MAYOR
    (208) comparadorMat -> . MENOR
    (209) comparadorMat -> . MAYIGUAL
    (210) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 135 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 135 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 135 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 135 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 135 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 135 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 135 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 135 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 135 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 135 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 85
    IS              reduce using rule 135 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 135 (valor -> VARIABLE .)
    SUMA            reduce using rule 135 (valor -> VARIABLE .)
    RESTA           reduce using rule 135 (valor -> VARIABLE .)
    MULTI           reduce using rule 135 (valor -> VARIABLE .)
    DIV             reduce using rule 135 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 135 (valor -> VARIABLE .)
    MOD             reduce using rule 135 (valor -> VARIABLE .)
    PDER            reduce using rule 135 (valor -> VARIABLE .)
    CIZQ            reduce using rule 182 (valorString -> VARIABLE .)
    AND             reduce using rule 168 (valorBool -> VARIABLE .)
    OR              reduce using rule 168 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 84
    DIGUAL          shift and go to state 86
    NOIGUAL         shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYIGUAL        shift and go to state 90
    MENIGUAL        shift and go to state 91

  ! SUMA            [ reduce using rule 182 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 182 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 168 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 253

state 222

    (126) funcionStdout -> FUNCIONSTDOUT PIZQ expresion . PDER

    PDER            shift and go to state 272


state 223

    (127) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 273


state 224

    (178) negacionBool -> NOT PIZQ expresionBool . PDER
    (179) comparacionBool -> expresionBool . operadorLogico expresionBool
    (180) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (211) operadorLogico -> . AND
    (212) operadorLogico -> . OR

    PDER            shift and go to state 274
    AND             shift and go to state 61
    OR              shift and go to state 62

    operadorLogico                 shift and go to state 60

state 225

    (132) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER final
    (133) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER LIZQ final LDER
    (179) comparacionBool -> expresionBool . operadorLogico expresionBool
    (180) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (211) operadorLogico -> . AND
    (212) operadorLogico -> . OR

    PDER            shift and go to state 275
    AND             shift and go to state 61
    OR              shift and go to state 62

    operadorLogico                 shift and go to state 60

state 226

    (160) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final

    PUNTOYCOMA      shift and go to state 276


state 227

    (151) asignacionFor -> VARIABLE . IGUAL expresionInt
    (152) asignacionFor -> VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 277


state 228

    (144) asignacionFor -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 278


state 229

    (145) asignacionFor -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 279


state 230

    (146) asignacionFor -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 280


state 231

    (147) asignacionFor -> DYNAMIC . VARIABLE IGUAL expresionInt
    (148) asignacionFor -> DYNAMIC . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 281


state 232

    (149) asignacionFor -> VAR . VARIABLE IGUAL expresionInt
    (150) asignacionFor -> VAR . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 282


state 233

    (56) expListaLista -> LIST MENOR LIST . MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> LIST MENOR LIST . MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList

    MENOR           shift and go to state 283


state 234

    (70) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE
    (71) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 284


state 235

    (93) expresionLista -> LIST MENOR VARIABLE . MAYOR VARIABLE
    (94) expresionLista -> LIST MENOR VARIABLE . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 285


state 236

    (74) expresionLista -> LIST MENOR INT . MAYOR VARIABLE
    (75) expresionLista -> LIST MENOR INT . MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> LIST MENOR INT . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 286


state 237

    (78) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE
    (79) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 287


state 238

    (82) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE
    (83) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 288


state 239

    (85) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE
    (86) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 289


state 240

    (89) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE
    (90) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 290


state 241

    (73) expresionLista -> CIZQ expListString CDER .

    PUNTOYCOMA      reduce using rule 73 (expresionLista -> CIZQ expListString CDER .)


state 242

    (77) expresionLista -> CIZQ expListInt CDER .

    PUNTOYCOMA      reduce using rule 77 (expresionLista -> CIZQ expListInt CDER .)


state 243

    (81) expresionLista -> CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 81 (expresionLista -> CIZQ expListNum CDER .)


state 244

    (88) expresionLista -> CIZQ expListBool CDER .

    PUNTOYCOMA      reduce using rule 88 (expresionLista -> CIZQ expListBool CDER .)


state 245

    (92) expresionLista -> CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 92 (expresionLista -> CIZQ expListDynamic CDER .)


state 246

    (96) expListString -> STRING COMA . expListString
    (109) expListDynamic -> STRING COMA . expListDynamic
    (95) expListString -> . STRING
    (96) expListString -> . STRING COMA expListString
    (105) expListDynamic -> . STRING
    (106) expListDynamic -> . ENTERO
    (107) expListDynamic -> . DOUBLE
    (108) expListDynamic -> . BOOL
    (109) expListDynamic -> . STRING COMA expListDynamic
    (110) expListDynamic -> . ENTERO COMA expListDynamic
    (111) expListDynamic -> . DOUBLE COMA expListDynamic
    (112) expListDynamic -> . BOOL COMA expListDynamic

    STRING          shift and go to state 131
    ENTERO          shift and go to state 293
    DOUBLE          shift and go to state 294
    BOOL            shift and go to state 295

    expListString                  shift and go to state 291
    expListDynamic                 shift and go to state 292

state 247

    (98) expListInt -> ENTERO COMA . expListInt
    (101) expListNum -> ENTERO COMA . expListNum
    (110) expListDynamic -> ENTERO COMA . expListDynamic
    (97) expListInt -> . ENTERO
    (98) expListInt -> . ENTERO COMA expListInt
    (99) expListNum -> . ENTERO
    (100) expListNum -> . DOUBLE
    (101) expListNum -> . ENTERO COMA expListNum
    (102) expListNum -> . DOUBLE COMA expListNum
    (105) expListDynamic -> . STRING
    (106) expListDynamic -> . ENTERO
    (107) expListDynamic -> . DOUBLE
    (108) expListDynamic -> . BOOL
    (109) expListDynamic -> . STRING COMA expListDynamic
    (110) expListDynamic -> . ENTERO COMA expListDynamic
    (111) expListDynamic -> . DOUBLE COMA expListDynamic
    (112) expListDynamic -> . BOOL COMA expListDynamic

    ENTERO          shift and go to state 132
    DOUBLE          shift and go to state 133
    STRING          shift and go to state 299
    BOOL            shift and go to state 295

    expListInt                     shift and go to state 296
    expListNum                     shift and go to state 297
    expListDynamic                 shift and go to state 298

state 248

    (102) expListNum -> DOUBLE COMA . expListNum
    (111) expListDynamic -> DOUBLE COMA . expListDynamic
    (99) expListNum -> . ENTERO
    (100) expListNum -> . DOUBLE
    (101) expListNum -> . ENTERO COMA expListNum
    (102) expListNum -> . DOUBLE COMA expListNum
    (105) expListDynamic -> . STRING
    (106) expListDynamic -> . ENTERO
    (107) expListDynamic -> . DOUBLE
    (108) expListDynamic -> . BOOL
    (109) expListDynamic -> . STRING COMA expListDynamic
    (110) expListDynamic -> . ENTERO COMA expListDynamic
    (111) expListDynamic -> . DOUBLE COMA expListDynamic
    (112) expListDynamic -> . BOOL COMA expListDynamic

    ENTERO          shift and go to state 302
    DOUBLE          shift and go to state 133
    STRING          shift and go to state 299
    BOOL            shift and go to state 295

    expListNum                     shift and go to state 300
    expListDynamic                 shift and go to state 301

state 249

    (104) expListBool -> BOOL COMA . expListBool
    (112) expListDynamic -> BOOL COMA . expListDynamic
    (103) expListBool -> . BOOL
    (104) expListBool -> . BOOL COMA expListBool
    (105) expListDynamic -> . STRING
    (106) expListDynamic -> . ENTERO
    (107) expListDynamic -> . DOUBLE
    (108) expListDynamic -> . BOOL
    (109) expListDynamic -> . STRING COMA expListDynamic
    (110) expListDynamic -> . ENTERO COMA expListDynamic
    (111) expListDynamic -> . DOUBLE COMA expListDynamic
    (112) expListDynamic -> . BOOL COMA expListDynamic

    BOOL            shift and go to state 134
    STRING          shift and go to state 299
    ENTERO          shift and go to state 293
    DOUBLE          shift and go to state 294

    expListBool                    shift and go to state 303
    expListDynamic                 shift and go to state 304

state 250

    (67) expresionNewList -> NEWLIST PIZQ PDER .

    PUNTOYCOMA      reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    $end            reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    VARIABLE        reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    INT             reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    DOUBLER         reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    NUM             reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    STRINGR         reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    BOOLR           reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    DYNAMIC         reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    VAR             reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    WHILE           reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    DO              reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    IF              reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    ELSE            reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    PRINT           reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    FUNCIONSTDIN    reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    FUNCIONSTDOUT   reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    NOT             reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    ELSEIF          reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    FOR             reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    LIST            reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    CIZQ            reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    NEWLIST         reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    ENTERO          reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    DOUBLE          reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    STRING          reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    BOOL            reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)
    LDER            reduce using rule 67 (expresionNewList -> NEWLIST PIZQ PDER .)


state 251

    (68) expresionNewList -> NEWLIST PIZQ ENTERO . PDER

    PDER            shift and go to state 305


state 252

    (169) expresionBool -> valorDouble comparadorMat . expresionDouble
    (172) expresionBool -> valorDouble comparadorMat . VARIABLE
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 307
    DOUBLE          shift and go to state 168
    ENTERO          shift and go to state 169

    valorDouble                    shift and go to state 167
    expresionDouble                shift and go to state 306
    valorInt                       shift and go to state 147

state 253

    (170) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (171) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 308
    DOUBLE          shift and go to state 168
    ENTERO          shift and go to state 169

    expresionDouble                shift and go to state 309
    valorDouble                    shift and go to state 167
    valorInt                       shift and go to state 147

state 254

    (47) final -> VARIABLE DSUMA PUNTOYCOMA final .

    $end            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    VARIABLE        reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    INT             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DOUBLER         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NUM             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    STRINGR         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BOOLR           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    VAR             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    WHILE           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DO              reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    IF              reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ELSE            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    PRINT           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NOT             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ELSEIF          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FOR             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LIST            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    CIZQ            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NEWLIST         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ENTERO          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DOUBLE          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    STRING          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BOOL            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LDER            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)


state 255

    (49) final -> VARIABLE DRESTA PUNTOYCOMA final .

    $end            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    VARIABLE        reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    INT             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DOUBLER         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NUM             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    STRINGR         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BOOLR           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    VAR             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    WHILE           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DO              reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    IF              reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ELSE            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    PRINT           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NOT             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ELSEIF          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FOR             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LIST            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    CIZQ            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NEWLIST         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ENTERO          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DOUBLE          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    STRING          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BOOL            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LDER            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)


state 256

    (189) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . PDER
    (190) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . COMA ENTERO PDER

    PDER            shift and go to state 310
    COMA            shift and go to state 311


state 257

    (138) expresion -> valor operadorMat . expresion
    (138) expresion -> . valor operadorMat expresion
    (139) expresion -> . valor
    (140) expresion -> . expresionString
    (141) expresion -> . expresionInt
    (142) expresion -> . expresionDouble
    (143) expresion -> . expresionBool
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 148
    VARIABLE        shift and go to state 171
    DOUBLE          shift and go to state 178
    STRING          shift and go to state 179
    FUNCIONSTDIN    shift and go to state 182
    BOOL            shift and go to state 54
    NOT             shift and go to state 44

    valor                          shift and go to state 173
    expresion                      shift and go to state 312
    expresionString                shift and go to state 174
    expresionInt                   shift and go to state 175
    expresionDouble                shift and go to state 176
    expresionBool                  shift and go to state 177
    valorString                    shift and go to state 34
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 180
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    expresionIndexString           shift and go to state 53
    sentenciaSubstring             shift and go to state 183

state 258

    (114) asignacion -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 114 (asignacion -> INT VARIABLE IGUAL expresionInt .)


state 259

    (115) asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 115 (asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 260

    (116) asignacion -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 116 (asignacion -> NUM VARIABLE IGUAL expresionDouble .)


state 261

    (117) asignacion -> STRINGR VARIABLE IGUAL expresionString .

    PUNTOYCOMA      reduce using rule 117 (asignacion -> STRINGR VARIABLE IGUAL expresionString .)


state 262

    (118) asignacion -> BOOLR VARIABLE IGUAL expresionBool .
    (179) comparacionBool -> expresionBool . operadorLogico expresionBool
    (180) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (211) operadorLogico -> . AND
    (212) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 118 (asignacion -> BOOLR VARIABLE IGUAL expresionBool .)
    AND             shift and go to state 61
    OR              shift and go to state 62

    operadorLogico                 shift and go to state 60

state 263

    (119) asignacion -> DYNAMIC VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 119 (asignacion -> DYNAMIC VARIABLE IGUAL expresion .)


state 264

    (120) asignacion -> VAR VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 120 (asignacion -> VAR VARIABLE IGUAL expresion .)


state 265

    (188) expresionIndexString -> valorString CIZQ ENTERO CDER .

    SUMA            reduce using rule 188 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    CIZQ            reduce using rule 188 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PUNTOYCOMA      reduce using rule 188 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PDER            reduce using rule 188 (expresionIndexString -> valorString CIZQ ENTERO CDER .)


state 266

    (164) sentenciaWhile -> WHILE PIZQ expresionBool PDER . LIZQ final LDER
    (165) sentenciaWhile -> WHILE PIZQ expresionBool PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 313
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    expresionBool                  shift and go to state 6
    final                          shift and go to state 314
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 267

    (166) sentenciaDoWhile -> DO LIZQ final LDER . WHILE PIZQ expresionBool PDER

    WHILE           shift and go to state 315


state 268

    (128) sentenciaIf -> IF PIZQ expresionBool PDER . final
    (129) sentenciaIf -> IF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 317
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    expresionBool                  shift and go to state 6
    final                          shift and go to state 316
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 269

    (131) sentenciaElse -> ELSE LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    VARIABLE        reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    INT             reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLER         reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    NUM             reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRINGR         reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOLR           reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    DYNAMIC         reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    VAR             reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    WHILE           reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    DO              reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    IF              reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSE            reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    PRINT           reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    NOT             reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSEIF          reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    FOR             reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    LIST            reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    CIZQ            reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    NEWLIST         reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    ENTERO          reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLE          reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRING          reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOL            reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    $end            reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)
    LDER            reduce using rule 131 (sentenciaElse -> ELSE LIZQ final LDER .)


state 270

    (123) imprimir -> PRINT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 123 (imprimir -> PRINT PIZQ expresion PDER .)


state 271

    (124) imprimir -> PRINT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 124 (imprimir -> PRINT PIZQ asignacionSimple PDER .)


state 272

    (126) funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 126 (funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .)


state 273

    (127) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 127 (funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .)


state 274

    (178) negacionBool -> NOT PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 178 (negacionBool -> NOT PIZQ expresionBool PDER .)
    AND             reduce using rule 178 (negacionBool -> NOT PIZQ expresionBool PDER .)
    OR              reduce using rule 178 (negacionBool -> NOT PIZQ expresionBool PDER .)
    PDER            reduce using rule 178 (negacionBool -> NOT PIZQ expresionBool PDER .)


state 275

    (132) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . final
    (133) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 319
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    expresionBool                  shift and go to state 6
    final                          shift and go to state 318
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 276

    (160) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING

    VARIABLE        shift and go to state 321
    DOUBLE          shift and go to state 51
    BOOL            shift and go to state 54
    NOT             shift and go to state 44
    ENTERO          shift and go to state 47
    STRING          shift and go to state 149

    expresionBoolFor               shift and go to state 320
    valorDouble                    shift and go to state 322
    valorBool                      shift and go to state 323
    negacionBool                   shift and go to state 324
    comparacionBool                shift and go to state 325
    valorInt                       shift and go to state 147
    expresionBool                  shift and go to state 326
    valor                          shift and go to state 36

state 277

    (151) asignacionFor -> VARIABLE IGUAL . expresionInt
    (152) asignacionFor -> VARIABLE IGUAL . expresionDouble
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt

    ENTERO          shift and go to state 169
    VARIABLE        shift and go to state 195
    DOUBLE          shift and go to state 168

    expresionInt                   shift and go to state 327
    expresionDouble                shift and go to state 328
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 167

state 278

    (144) asignacionFor -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 329


state 279

    (145) asignacionFor -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 330


state 280

    (146) asignacionFor -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 331


state 281

    (147) asignacionFor -> DYNAMIC VARIABLE . IGUAL expresionInt
    (148) asignacionFor -> DYNAMIC VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 332


state 282

    (149) asignacionFor -> VAR VARIABLE . IGUAL expresionInt
    (150) asignacionFor -> VAR VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 333


state 283

    (56) expListaLista -> LIST MENOR LIST MENOR . tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> LIST MENOR LIST MENOR . tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (58) tipo -> . STRINGR
    (59) tipo -> . INT
    (60) tipo -> . DOUBLER
    (61) tipo -> . NUM
    (62) tipo -> . DYNAMIC
    (63) tipo -> . BOOL
    (64) tipo -> . MAP
    (65) tipo -> . SET
    (66) tipo -> . LIST MENOR tipo MAYOR

    STRINGR         shift and go to state 336
    INT             shift and go to state 337
    DOUBLER         shift and go to state 338
    NUM             shift and go to state 339
    DYNAMIC         shift and go to state 340
    BOOL            shift and go to state 341
    MAP             shift and go to state 342
    SET             shift and go to state 343
    LIST            shift and go to state 334

    tipo                           shift and go to state 335

state 284

    (70) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE
    (71) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 344


state 285

    (93) expresionLista -> LIST MENOR VARIABLE MAYOR . VARIABLE
    (94) expresionLista -> LIST MENOR VARIABLE MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 345


state 286

    (74) expresionLista -> LIST MENOR INT MAYOR . VARIABLE
    (75) expresionLista -> LIST MENOR INT MAYOR . VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> LIST MENOR INT MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 346


state 287

    (78) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE
    (79) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 347


state 288

    (82) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE
    (83) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 348


state 289

    (85) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE
    (86) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 349


state 290

    (89) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE
    (90) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 350


state 291

    (96) expListString -> STRING COMA expListString .

    CDER            reduce using rule 96 (expListString -> STRING COMA expListString .)


state 292

    (109) expListDynamic -> STRING COMA expListDynamic .

    CDER            reduce using rule 109 (expListDynamic -> STRING COMA expListDynamic .)


state 293

    (106) expListDynamic -> ENTERO .
    (110) expListDynamic -> ENTERO . COMA expListDynamic

    CDER            reduce using rule 106 (expListDynamic -> ENTERO .)
    COMA            shift and go to state 351


state 294

    (107) expListDynamic -> DOUBLE .
    (111) expListDynamic -> DOUBLE . COMA expListDynamic

    CDER            reduce using rule 107 (expListDynamic -> DOUBLE .)
    COMA            shift and go to state 352


state 295

    (108) expListDynamic -> BOOL .
    (112) expListDynamic -> BOOL . COMA expListDynamic

    CDER            reduce using rule 108 (expListDynamic -> BOOL .)
    COMA            shift and go to state 353


state 296

    (98) expListInt -> ENTERO COMA expListInt .

    CDER            reduce using rule 98 (expListInt -> ENTERO COMA expListInt .)


state 297

    (101) expListNum -> ENTERO COMA expListNum .

    CDER            reduce using rule 101 (expListNum -> ENTERO COMA expListNum .)


state 298

    (110) expListDynamic -> ENTERO COMA expListDynamic .

    CDER            reduce using rule 110 (expListDynamic -> ENTERO COMA expListDynamic .)


state 299

    (105) expListDynamic -> STRING .
    (109) expListDynamic -> STRING . COMA expListDynamic

    CDER            reduce using rule 105 (expListDynamic -> STRING .)
    COMA            shift and go to state 354


state 300

    (102) expListNum -> DOUBLE COMA expListNum .

    CDER            reduce using rule 102 (expListNum -> DOUBLE COMA expListNum .)


state 301

    (111) expListDynamic -> DOUBLE COMA expListDynamic .

    CDER            reduce using rule 111 (expListDynamic -> DOUBLE COMA expListDynamic .)


state 302

    (99) expListNum -> ENTERO .
    (101) expListNum -> ENTERO . COMA expListNum
    (106) expListDynamic -> ENTERO .
    (110) expListDynamic -> ENTERO . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 99 (expListNum -> ENTERO .)
    CDER            reduce using rule 99 (expListNum -> ENTERO .)
    COMA            shift and go to state 355

  ! CDER            [ reduce using rule 106 (expListDynamic -> ENTERO .) ]


state 303

    (104) expListBool -> BOOL COMA expListBool .

    CDER            reduce using rule 104 (expListBool -> BOOL COMA expListBool .)


state 304

    (112) expListDynamic -> BOOL COMA expListDynamic .

    CDER            reduce using rule 112 (expListDynamic -> BOOL COMA expListDynamic .)


state 305

    (68) expresionNewList -> NEWLIST PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    $end            reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    VARIABLE        reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    INT             reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    DOUBLER         reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    NUM             reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    STRINGR         reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    BOOLR           reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    DYNAMIC         reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    VAR             reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    WHILE           reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    DO              reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    IF              reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    ELSE            reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    PRINT           reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    FUNCIONSTDIN    reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    FUNCIONSTDOUT   reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    NOT             reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    ELSEIF          reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    FOR             reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    LIST            reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    CIZQ            reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    NEWLIST         reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    ENTERO          reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    DOUBLE          reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    STRING          reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    BOOL            reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    LDER            reduce using rule 68 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)


state 306

    (169) expresionBool -> valorDouble comparadorMat expresionDouble .

    AND             reduce using rule 169 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 169 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 169 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PDER            reduce using rule 169 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 307

    (172) expresionBool -> valorDouble comparadorMat VARIABLE .
    (192) valorInt -> VARIABLE .

  ! reduce/reduce conflict for AND resolved using rule 172 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 172 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 172 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 172 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 172 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 172 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 172 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PDER            reduce using rule 172 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 192 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 192 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 192 (valorInt -> VARIABLE .)
    DIV             reduce using rule 192 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 192 (valorInt -> VARIABLE .)
    MOD             reduce using rule 192 (valorInt -> VARIABLE .)

  ! AND             [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 192 (valorInt -> VARIABLE .) ]


state 308

    (171) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (192) valorInt -> VARIABLE .

  ! reduce/reduce conflict for AND resolved using rule 171 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 171 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 171 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 171 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 171 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 171 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 171 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PDER            reduce using rule 171 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 192 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 192 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 192 (valorInt -> VARIABLE .)
    DIV             reduce using rule 192 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 192 (valorInt -> VARIABLE .)
    MOD             reduce using rule 192 (valorInt -> VARIABLE .)

  ! AND             [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 192 (valorInt -> VARIABLE .) ]


state 309

    (170) expresionBool -> VARIABLE comparadorMat expresionDouble .

    AND             reduce using rule 170 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 170 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 170 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PDER            reduce using rule 170 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 310

    (189) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 189 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    SUMA            reduce using rule 189 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    CIZQ            reduce using rule 189 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    PDER            reduce using rule 189 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)


state 311

    (190) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA . ENTERO PDER

    ENTERO          shift and go to state 356


state 312

    (138) expresion -> valor operadorMat expresion .

    PUNTOYCOMA      reduce using rule 138 (expresion -> valor operadorMat expresion .)
    PDER            reduce using rule 138 (expresion -> valor operadorMat expresion .)


state 313

    (164) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    expresionBool                  shift and go to state 6
    final                          shift and go to state 357
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 314

    (165) sentenciaWhile -> WHILE PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    INT             reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NUM             reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VAR             reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DO              reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    IF              reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NOT             reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FOR             reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LIST            reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRING          reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    $end            reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LDER            reduce using rule 165 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)


state 315

    (166) sentenciaDoWhile -> DO LIZQ final LDER WHILE . PIZQ expresionBool PDER

    PIZQ            shift and go to state 358


state 316

    (128) sentenciaIf -> IF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    INT             reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DO              reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    IF              reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FOR             reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LIST            reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    $end            reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 128 (sentenciaIf -> IF PIZQ expresionBool PDER final .)


state 317

    (129) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    expresionBool                  shift and go to state 6
    final                          shift and go to state 359
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 318

    (132) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    INT             reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DO              reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    IF              reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FOR             reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LIST            reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    $end            reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 132 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)


state 319

    (133) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    expresionBool                  shift and go to state 6
    final                          shift and go to state 360
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 320

    (160) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DRESTA PDER final

    PUNTOYCOMA      shift and go to state 361


state 321

    (154) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (155) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (168) valorBool -> VARIABLE .
    (192) valorInt -> VARIABLE .
    (170) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (171) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (135) valor -> VARIABLE .
    (205) comparadorMat -> . DIGUAL
    (206) comparadorMat -> . NOIGUAL
    (207) comparadorMat -> . MAYOR
    (208) comparadorMat -> . MENOR
    (209) comparadorMat -> . MAYIGUAL
    (210) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    PUNTOYCOMA      reduce using rule 168 (valorBool -> VARIABLE .)
    AND             reduce using rule 168 (valorBool -> VARIABLE .)
    OR              reduce using rule 168 (valorBool -> VARIABLE .)
    IS              reduce using rule 135 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 135 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 86
    NOIGUAL         shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYIGUAL        shift and go to state 90
    MENIGUAL        shift and go to state 91

  ! DIGUAL          [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 192 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 362

state 322

    (153) expresionBoolFor -> valorDouble . comparadorMat expresionDouble
    (156) expresionBoolFor -> valorDouble . comparadorMat VARIABLE
    (169) expresionBool -> valorDouble . comparadorMat expresionDouble
    (172) expresionBool -> valorDouble . comparadorMat VARIABLE
    (205) comparadorMat -> . DIGUAL
    (206) comparadorMat -> . NOIGUAL
    (207) comparadorMat -> . MAYOR
    (208) comparadorMat -> . MENOR
    (209) comparadorMat -> . MAYIGUAL
    (210) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 86
    NOIGUAL         shift and go to state 87
    MAYOR           shift and go to state 88
    MENOR           shift and go to state 89
    MAYIGUAL        shift and go to state 90
    MENIGUAL        shift and go to state 91

    comparadorMat                  shift and go to state 363

state 323

    (157) expresionBoolFor -> valorBool .
    (173) expresionBool -> valorBool .

    PUNTOYCOMA      reduce using rule 157 (expresionBoolFor -> valorBool .)
    AND             reduce using rule 173 (expresionBool -> valorBool .)
    OR              reduce using rule 173 (expresionBool -> valorBool .)


state 324

    (158) expresionBoolFor -> negacionBool .
    (174) expresionBool -> negacionBool .

    PUNTOYCOMA      reduce using rule 158 (expresionBoolFor -> negacionBool .)
    AND             reduce using rule 174 (expresionBool -> negacionBool .)
    OR              reduce using rule 174 (expresionBool -> negacionBool .)


state 325

    (159) expresionBoolFor -> comparacionBool .
    (175) expresionBool -> comparacionBool .

    PUNTOYCOMA      reduce using rule 159 (expresionBoolFor -> comparacionBool .)
    AND             reduce using rule 175 (expresionBool -> comparacionBool .)
    OR              reduce using rule 175 (expresionBool -> comparacionBool .)


state 326

    (179) comparacionBool -> expresionBool . operadorLogico expresionBool
    (180) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (211) operadorLogico -> . AND
    (212) operadorLogico -> . OR

    AND             shift and go to state 61
    OR              shift and go to state 62

    operadorLogico                 shift and go to state 60

state 327

    (151) asignacionFor -> VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 151 (asignacionFor -> VARIABLE IGUAL expresionInt .)


state 328

    (152) asignacionFor -> VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 152 (asignacionFor -> VARIABLE IGUAL expresionDouble .)


state 329

    (144) asignacionFor -> INT VARIABLE IGUAL . expresionInt
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE

    ENTERO          shift and go to state 169
    VARIABLE        shift and go to state 195

    expresionInt                   shift and go to state 364
    valorInt                       shift and go to state 193

state 330

    (145) asignacionFor -> DOUBLER VARIABLE IGUAL . expresionDouble
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 168
    ENTERO          shift and go to state 169
    VARIABLE        shift and go to state 195

    expresionDouble                shift and go to state 365
    valorDouble                    shift and go to state 167
    valorInt                       shift and go to state 147

state 331

    (146) asignacionFor -> NUM VARIABLE IGUAL . expresionDouble
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 168
    ENTERO          shift and go to state 169
    VARIABLE        shift and go to state 195

    expresionDouble                shift and go to state 366
    valorDouble                    shift and go to state 167
    valorInt                       shift and go to state 147

state 332

    (147) asignacionFor -> DYNAMIC VARIABLE IGUAL . expresionInt
    (148) asignacionFor -> DYNAMIC VARIABLE IGUAL . expresionDouble
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt

    ENTERO          shift and go to state 169
    VARIABLE        shift and go to state 195
    DOUBLE          shift and go to state 168

    expresionInt                   shift and go to state 367
    expresionDouble                shift and go to state 368
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 167

state 333

    (149) asignacionFor -> VAR VARIABLE IGUAL . expresionInt
    (150) asignacionFor -> VAR VARIABLE IGUAL . expresionDouble
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt

    ENTERO          shift and go to state 169
    VARIABLE        shift and go to state 195
    DOUBLE          shift and go to state 168

    expresionInt                   shift and go to state 369
    expresionDouble                shift and go to state 370
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 167

state 334

    (66) tipo -> LIST . MENOR tipo MAYOR

    MENOR           shift and go to state 371


state 335

    (56) expListaLista -> LIST MENOR LIST MENOR tipo . MAYOR MAYOR VARIABLE
    (57) expListaLista -> LIST MENOR LIST MENOR tipo . MAYOR MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 372


state 336

    (58) tipo -> STRINGR .

    MAYOR           reduce using rule 58 (tipo -> STRINGR .)


state 337

    (59) tipo -> INT .

    MAYOR           reduce using rule 59 (tipo -> INT .)


state 338

    (60) tipo -> DOUBLER .

    MAYOR           reduce using rule 60 (tipo -> DOUBLER .)


state 339

    (61) tipo -> NUM .

    MAYOR           reduce using rule 61 (tipo -> NUM .)


state 340

    (62) tipo -> DYNAMIC .

    MAYOR           reduce using rule 62 (tipo -> DYNAMIC .)


state 341

    (63) tipo -> BOOL .

    MAYOR           reduce using rule 63 (tipo -> BOOL .)


state 342

    (64) tipo -> MAP .

    MAYOR           reduce using rule 64 (tipo -> MAP .)


state 343

    (65) tipo -> SET .

    MAYOR           reduce using rule 65 (tipo -> SET .)


state 344

    (70) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE .
    (71) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE . IGUAL CIZQ expListString CDER
    (72) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 70 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE .)
    IGUAL           shift and go to state 373


state 345

    (93) expresionLista -> LIST MENOR VARIABLE MAYOR VARIABLE .
    (94) expresionLista -> LIST MENOR VARIABLE MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 93 (expresionLista -> LIST MENOR VARIABLE MAYOR VARIABLE .)
    IGUAL           shift and go to state 374


state 346

    (74) expresionLista -> LIST MENOR INT MAYOR VARIABLE .
    (75) expresionLista -> LIST MENOR INT MAYOR VARIABLE . IGUAL CIZQ expListInt CDER
    (76) expresionLista -> LIST MENOR INT MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 74 (expresionLista -> LIST MENOR INT MAYOR VARIABLE .)
    IGUAL           shift and go to state 375


state 347

    (78) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE .
    (79) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE . IGUAL CIZQ expListNum CDER
    (80) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 78 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE .)
    IGUAL           shift and go to state 376


state 348

    (82) expresionLista -> LIST MENOR NUM MAYOR VARIABLE .
    (83) expresionLista -> LIST MENOR NUM MAYOR VARIABLE . IGUAL CIZQ expListNum CDER
    (84) expresionLista -> LIST MENOR NUM MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 82 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE .)
    IGUAL           shift and go to state 377


state 349

    (85) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE .
    (86) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE . IGUAL CIZQ expListBool CDER
    (87) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 85 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE .)
    IGUAL           shift and go to state 378


state 350

    (89) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE .
    (90) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE . IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 89 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE .)
    IGUAL           shift and go to state 379


state 351

    (110) expListDynamic -> ENTERO COMA . expListDynamic
    (105) expListDynamic -> . STRING
    (106) expListDynamic -> . ENTERO
    (107) expListDynamic -> . DOUBLE
    (108) expListDynamic -> . BOOL
    (109) expListDynamic -> . STRING COMA expListDynamic
    (110) expListDynamic -> . ENTERO COMA expListDynamic
    (111) expListDynamic -> . DOUBLE COMA expListDynamic
    (112) expListDynamic -> . BOOL COMA expListDynamic

    STRING          shift and go to state 299
    ENTERO          shift and go to state 293
    DOUBLE          shift and go to state 294
    BOOL            shift and go to state 295

    expListDynamic                 shift and go to state 298

state 352

    (111) expListDynamic -> DOUBLE COMA . expListDynamic
    (105) expListDynamic -> . STRING
    (106) expListDynamic -> . ENTERO
    (107) expListDynamic -> . DOUBLE
    (108) expListDynamic -> . BOOL
    (109) expListDynamic -> . STRING COMA expListDynamic
    (110) expListDynamic -> . ENTERO COMA expListDynamic
    (111) expListDynamic -> . DOUBLE COMA expListDynamic
    (112) expListDynamic -> . BOOL COMA expListDynamic

    STRING          shift and go to state 299
    ENTERO          shift and go to state 293
    DOUBLE          shift and go to state 294
    BOOL            shift and go to state 295

    expListDynamic                 shift and go to state 301

state 353

    (112) expListDynamic -> BOOL COMA . expListDynamic
    (105) expListDynamic -> . STRING
    (106) expListDynamic -> . ENTERO
    (107) expListDynamic -> . DOUBLE
    (108) expListDynamic -> . BOOL
    (109) expListDynamic -> . STRING COMA expListDynamic
    (110) expListDynamic -> . ENTERO COMA expListDynamic
    (111) expListDynamic -> . DOUBLE COMA expListDynamic
    (112) expListDynamic -> . BOOL COMA expListDynamic

    STRING          shift and go to state 299
    ENTERO          shift and go to state 293
    DOUBLE          shift and go to state 294
    BOOL            shift and go to state 295

    expListDynamic                 shift and go to state 304

state 354

    (109) expListDynamic -> STRING COMA . expListDynamic
    (105) expListDynamic -> . STRING
    (106) expListDynamic -> . ENTERO
    (107) expListDynamic -> . DOUBLE
    (108) expListDynamic -> . BOOL
    (109) expListDynamic -> . STRING COMA expListDynamic
    (110) expListDynamic -> . ENTERO COMA expListDynamic
    (111) expListDynamic -> . DOUBLE COMA expListDynamic
    (112) expListDynamic -> . BOOL COMA expListDynamic

    STRING          shift and go to state 299
    ENTERO          shift and go to state 293
    DOUBLE          shift and go to state 294
    BOOL            shift and go to state 295

    expListDynamic                 shift and go to state 292

state 355

    (101) expListNum -> ENTERO COMA . expListNum
    (110) expListDynamic -> ENTERO COMA . expListDynamic
    (99) expListNum -> . ENTERO
    (100) expListNum -> . DOUBLE
    (101) expListNum -> . ENTERO COMA expListNum
    (102) expListNum -> . DOUBLE COMA expListNum
    (105) expListDynamic -> . STRING
    (106) expListDynamic -> . ENTERO
    (107) expListDynamic -> . DOUBLE
    (108) expListDynamic -> . BOOL
    (109) expListDynamic -> . STRING COMA expListDynamic
    (110) expListDynamic -> . ENTERO COMA expListDynamic
    (111) expListDynamic -> . DOUBLE COMA expListDynamic
    (112) expListDynamic -> . BOOL COMA expListDynamic

    ENTERO          shift and go to state 302
    DOUBLE          shift and go to state 133
    STRING          shift and go to state 299
    BOOL            shift and go to state 295

    expListNum                     shift and go to state 297
    expListDynamic                 shift and go to state 298

state 356

    (190) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO . PDER

    PDER            shift and go to state 380


state 357

    (164) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 381


state 358

    (166) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ . expresionBool PDER
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 144
    DOUBLE          shift and go to state 51
    BOOL            shift and go to state 54
    NOT             shift and go to state 44
    ENTERO          shift and go to state 148
    STRING          shift and go to state 149

    expresionBool                  shift and go to state 382
    valorDouble                    shift and go to state 143
    valorBool                      shift and go to state 145
    negacionBool                   shift and go to state 146
    comparacionBool                shift and go to state 181
    valor                          shift and go to state 36
    valorInt                       shift and go to state 147

state 359

    (129) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 383


state 360

    (133) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 384


state 361

    (160) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DSUMA PDER final
    (162) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DRESTA PDER final

    VARIABLE        shift and go to state 385


state 362

    (154) expresionBoolFor -> VARIABLE comparadorMat . expresionDouble
    (155) expresionBoolFor -> VARIABLE comparadorMat . VARIABLE
    (170) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (171) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 386
    DOUBLE          shift and go to state 168
    ENTERO          shift and go to state 169

    expresionDouble                shift and go to state 387
    valorDouble                    shift and go to state 167
    valorInt                       shift and go to state 147

state 363

    (153) expresionBoolFor -> valorDouble comparadorMat . expresionDouble
    (156) expresionBoolFor -> valorDouble comparadorMat . VARIABLE
    (169) expresionBool -> valorDouble comparadorMat . expresionDouble
    (172) expresionBool -> valorDouble comparadorMat . VARIABLE
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 389
    DOUBLE          shift and go to state 168
    ENTERO          shift and go to state 169

    valorDouble                    shift and go to state 167
    expresionDouble                shift and go to state 388
    valorInt                       shift and go to state 147

state 364

    (144) asignacionFor -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 144 (asignacionFor -> INT VARIABLE IGUAL expresionInt .)


state 365

    (145) asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 145 (asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 366

    (146) asignacionFor -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 146 (asignacionFor -> NUM VARIABLE IGUAL expresionDouble .)


state 367

    (147) asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 147 (asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt .)


state 368

    (148) asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 148 (asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble .)


state 369

    (149) asignacionFor -> VAR VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 149 (asignacionFor -> VAR VARIABLE IGUAL expresionInt .)


state 370

    (150) asignacionFor -> VAR VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 150 (asignacionFor -> VAR VARIABLE IGUAL expresionDouble .)


state 371

    (66) tipo -> LIST MENOR . tipo MAYOR
    (58) tipo -> . STRINGR
    (59) tipo -> . INT
    (60) tipo -> . DOUBLER
    (61) tipo -> . NUM
    (62) tipo -> . DYNAMIC
    (63) tipo -> . BOOL
    (64) tipo -> . MAP
    (65) tipo -> . SET
    (66) tipo -> . LIST MENOR tipo MAYOR

    STRINGR         shift and go to state 336
    INT             shift and go to state 337
    DOUBLER         shift and go to state 338
    NUM             shift and go to state 339
    DYNAMIC         shift and go to state 340
    BOOL            shift and go to state 341
    MAP             shift and go to state 342
    SET             shift and go to state 343
    LIST            shift and go to state 334

    tipo                           shift and go to state 390

state 372

    (56) expListaLista -> LIST MENOR LIST MENOR tipo MAYOR . MAYOR VARIABLE
    (57) expListaLista -> LIST MENOR LIST MENOR tipo MAYOR . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 391


state 373

    (71) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL . CIZQ expListString CDER
    (72) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL . expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 392
    NEWLIST         shift and go to state 50

    expresionNewList               shift and go to state 393

state 374

    (94) expresionLista -> LIST MENOR VARIABLE MAYOR VARIABLE IGUAL . expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER

    NEWLIST         shift and go to state 50
    CIZQ            shift and go to state 395

    expresionNewList               shift and go to state 394

state 375

    (75) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL . CIZQ expListInt CDER
    (76) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL . expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 396
    NEWLIST         shift and go to state 50

    expresionNewList               shift and go to state 397

state 376

    (79) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL . CIZQ expListNum CDER
    (80) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL . expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 398
    NEWLIST         shift and go to state 50

    expresionNewList               shift and go to state 399

state 377

    (83) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL . CIZQ expListNum CDER
    (84) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL . expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 400
    NEWLIST         shift and go to state 50

    expresionNewList               shift and go to state 401

state 378

    (86) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL . CIZQ expListBool CDER
    (87) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL . expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 402
    NEWLIST         shift and go to state 50

    expresionNewList               shift and go to state 403

state 379

    (90) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL . CIZQ expListDynamic CDER
    (91) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL . expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 404
    NEWLIST         shift and go to state 50

    expresionNewList               shift and go to state 405

state 380

    (190) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .

    PUNTOYCOMA      reduce using rule 190 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    SUMA            reduce using rule 190 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    CIZQ            reduce using rule 190 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    PDER            reduce using rule 190 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)


state 381

    (164) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 164 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)


state 382

    (166) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool . PDER
    (179) comparacionBool -> expresionBool . operadorLogico expresionBool
    (180) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (211) operadorLogico -> . AND
    (212) operadorLogico -> . OR

    PDER            shift and go to state 406
    AND             shift and go to state 61
    OR              shift and go to state 62

    operadorLogico                 shift and go to state 60

state 383

    (129) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 129 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)


state 384

    (133) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 133 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)


state 385

    (160) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DSUMA PDER final
    (162) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DRESTA PDER final

    DSUMA           shift and go to state 407
    DRESTA          shift and go to state 408


state 386

    (155) expresionBoolFor -> VARIABLE comparadorMat VARIABLE .
    (171) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (192) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 155 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 171 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 171 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 155 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 171 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 171 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 192 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 192 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 192 (valorInt -> VARIABLE .)
    DIV             reduce using rule 192 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 192 (valorInt -> VARIABLE .)
    MOD             reduce using rule 192 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 192 (valorInt -> VARIABLE .) ]


state 387

    (154) expresionBoolFor -> VARIABLE comparadorMat expresionDouble .
    (170) expresionBool -> VARIABLE comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 154 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 170 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 170 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 388

    (153) expresionBoolFor -> valorDouble comparadorMat expresionDouble .
    (169) expresionBool -> valorDouble comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 153 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 169 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 169 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 389

    (156) expresionBoolFor -> valorDouble comparadorMat VARIABLE .
    (172) expresionBool -> valorDouble comparadorMat VARIABLE .
    (192) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 156 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 172 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 172 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 156 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 172 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 172 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 192 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 192 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 192 (valorInt -> VARIABLE .)
    DIV             reduce using rule 192 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 192 (valorInt -> VARIABLE .)
    MOD             reduce using rule 192 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 192 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 192 (valorInt -> VARIABLE .) ]


state 390

    (66) tipo -> LIST MENOR tipo . MAYOR

    MAYOR           shift and go to state 409


state 391

    (56) expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR . VARIABLE
    (57) expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 410


state 392

    (71) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ . expListString CDER
    (69) expresionNewList -> CIZQ . CDER
    (95) expListString -> . STRING
    (96) expListString -> . STRING COMA expListString

    CDER            shift and go to state 126
    STRING          shift and go to state 412

    expListString                  shift and go to state 411

state 393

    (72) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 72 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList .)


state 394

    (94) expresionLista -> LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 94 (expresionLista -> LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList .)


state 395

    (69) expresionNewList -> CIZQ . CDER

    CDER            shift and go to state 126


state 396

    (75) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ . expListInt CDER
    (69) expresionNewList -> CIZQ . CDER
    (97) expListInt -> . ENTERO
    (98) expListInt -> . ENTERO COMA expListInt

    CDER            shift and go to state 126
    ENTERO          shift and go to state 414

    expListInt                     shift and go to state 413

state 397

    (76) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 76 (expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList .)


state 398

    (79) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ . expListNum CDER
    (69) expresionNewList -> CIZQ . CDER
    (99) expListNum -> . ENTERO
    (100) expListNum -> . DOUBLE
    (101) expListNum -> . ENTERO COMA expListNum
    (102) expListNum -> . DOUBLE COMA expListNum

    CDER            shift and go to state 126
    ENTERO          shift and go to state 416
    DOUBLE          shift and go to state 417

    expListNum                     shift and go to state 415

state 399

    (80) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 80 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList .)


state 400

    (83) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ . expListNum CDER
    (69) expresionNewList -> CIZQ . CDER
    (99) expListNum -> . ENTERO
    (100) expListNum -> . DOUBLE
    (101) expListNum -> . ENTERO COMA expListNum
    (102) expListNum -> . DOUBLE COMA expListNum

    CDER            shift and go to state 126
    ENTERO          shift and go to state 416
    DOUBLE          shift and go to state 417

    expListNum                     shift and go to state 418

state 401

    (84) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 84 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList .)


state 402

    (86) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ . expListBool CDER
    (69) expresionNewList -> CIZQ . CDER
    (103) expListBool -> . BOOL
    (104) expListBool -> . BOOL COMA expListBool

    CDER            shift and go to state 126
    BOOL            shift and go to state 420

    expListBool                    shift and go to state 419

state 403

    (87) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 87 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList .)


state 404

    (90) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ . expListDynamic CDER
    (69) expresionNewList -> CIZQ . CDER
    (105) expListDynamic -> . STRING
    (106) expListDynamic -> . ENTERO
    (107) expListDynamic -> . DOUBLE
    (108) expListDynamic -> . BOOL
    (109) expListDynamic -> . STRING COMA expListDynamic
    (110) expListDynamic -> . ENTERO COMA expListDynamic
    (111) expListDynamic -> . DOUBLE COMA expListDynamic
    (112) expListDynamic -> . BOOL COMA expListDynamic

    CDER            shift and go to state 126
    STRING          shift and go to state 299
    ENTERO          shift and go to state 293
    DOUBLE          shift and go to state 294
    BOOL            shift and go to state 295

    expListDynamic                 shift and go to state 421

state 405

    (91) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 91 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList .)


state 406

    (166) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 166 (sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .)


state 407

    (160) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA . PDER LIZQ final LDER
    (161) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA . PDER final

    PDER            shift and go to state 422


state 408

    (162) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA . PDER LIZQ final LDER
    (163) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA . PDER final

    PDER            shift and go to state 423


state 409

    (66) tipo -> LIST MENOR tipo MAYOR .

    MAYOR           reduce using rule 66 (tipo -> LIST MENOR tipo MAYOR .)


state 410

    (56) expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .
    (57) expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE . IGUAL expresionNewList

    $end            reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    PUNTOYCOMA      reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    VARIABLE        reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    INT             reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    DOUBLER         reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    NUM             reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    STRINGR         reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    BOOLR           reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    DYNAMIC         reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    VAR             reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    WHILE           reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    DO              reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    IF              reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    ELSE            reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    PRINT           reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    FUNCIONSTDIN    reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    FUNCIONSTDOUT   reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    NOT             reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    ELSEIF          reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    FOR             reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    LIST            reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    CIZQ            reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    NEWLIST         reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    ENTERO          reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    DOUBLE          reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    STRING          reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    BOOL            reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    LDER            reduce using rule 56 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE .)
    IGUAL           shift and go to state 424


state 411

    (71) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString . CDER

    CDER            shift and go to state 425


state 412

    (95) expListString -> STRING .
    (96) expListString -> STRING . COMA expListString

    CDER            reduce using rule 95 (expListString -> STRING .)
    COMA            shift and go to state 426


state 413

    (75) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt . CDER

    CDER            shift and go to state 427


state 414

    (97) expListInt -> ENTERO .
    (98) expListInt -> ENTERO . COMA expListInt

    CDER            reduce using rule 97 (expListInt -> ENTERO .)
    COMA            shift and go to state 428


state 415

    (79) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum . CDER

    CDER            shift and go to state 429


state 416

    (99) expListNum -> ENTERO .
    (101) expListNum -> ENTERO . COMA expListNum

    CDER            reduce using rule 99 (expListNum -> ENTERO .)
    COMA            shift and go to state 430


state 417

    (100) expListNum -> DOUBLE .
    (102) expListNum -> DOUBLE . COMA expListNum

    CDER            reduce using rule 100 (expListNum -> DOUBLE .)
    COMA            shift and go to state 431


state 418

    (83) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum . CDER

    CDER            shift and go to state 432


state 419

    (86) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool . CDER

    CDER            shift and go to state 433


state 420

    (103) expListBool -> BOOL .
    (104) expListBool -> BOOL . COMA expListBool

    CDER            reduce using rule 103 (expListBool -> BOOL .)
    COMA            shift and go to state 434


state 421

    (90) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic . CDER

    CDER            shift and go to state 435


state 422

    (160) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER . LIZQ final LDER
    (161) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 436
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 437
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 423

    (162) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER . LIZQ final LDER
    (163) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 438
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 439
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 424

    (57) expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL . expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER

    NEWLIST         shift and go to state 50
    CIZQ            shift and go to state 395

    expresionNewList               shift and go to state 440

state 425

    (71) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER .

    PUNTOYCOMA      reduce using rule 71 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER .)


state 426

    (96) expListString -> STRING COMA . expListString
    (95) expListString -> . STRING
    (96) expListString -> . STRING COMA expListString

    STRING          shift and go to state 412

    expListString                  shift and go to state 291

state 427

    (75) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER .

    PUNTOYCOMA      reduce using rule 75 (expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER .)


state 428

    (98) expListInt -> ENTERO COMA . expListInt
    (97) expListInt -> . ENTERO
    (98) expListInt -> . ENTERO COMA expListInt

    ENTERO          shift and go to state 414

    expListInt                     shift and go to state 296

state 429

    (79) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 79 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER .)


state 430

    (101) expListNum -> ENTERO COMA . expListNum
    (99) expListNum -> . ENTERO
    (100) expListNum -> . DOUBLE
    (101) expListNum -> . ENTERO COMA expListNum
    (102) expListNum -> . DOUBLE COMA expListNum

    ENTERO          shift and go to state 416
    DOUBLE          shift and go to state 417

    expListNum                     shift and go to state 297

state 431

    (102) expListNum -> DOUBLE COMA . expListNum
    (99) expListNum -> . ENTERO
    (100) expListNum -> . DOUBLE
    (101) expListNum -> . ENTERO COMA expListNum
    (102) expListNum -> . DOUBLE COMA expListNum

    ENTERO          shift and go to state 416
    DOUBLE          shift and go to state 417

    expListNum                     shift and go to state 300

state 432

    (83) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 83 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER .)


state 433

    (86) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER .

    PUNTOYCOMA      reduce using rule 86 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER .)


state 434

    (104) expListBool -> BOOL COMA . expListBool
    (103) expListBool -> . BOOL
    (104) expListBool -> . BOOL COMA expListBool

    BOOL            shift and go to state 420

    expListBool                    shift and go to state 303

state 435

    (90) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 90 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER .)


state 436

    (160) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 441
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 437

    (161) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .

    PUNTOYCOMA      reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    VARIABLE        reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    INT             reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DOUBLER         reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NUM             reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    STRINGR         reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BOOLR           reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DYNAMIC         reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    VAR             reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    WHILE           reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DO              reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    IF              reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ELSE            reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    PRINT           reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FUNCIONSTDIN    reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FUNCIONSTDOUT   reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NOT             reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ELSEIF          reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FOR             reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LIST            reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    CIZQ            reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NEWLIST         reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ENTERO          reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DOUBLE          reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    STRING          reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BOOL            reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    $end            reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LDER            reduce using rule 161 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)


state 438

    (162) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expListaLista
    (114) asignacion -> . INT VARIABLE IGUAL expresionInt
    (115) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (116) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (117) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (118) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (119) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (120) asignacion -> . VAR VARIABLE IGUAL expresion
    (121) asignacion -> . asignacionSimple
    (193) expresionInt -> . valorInt operadorMat expresionInt
    (194) expresionInt -> . valorInt
    (197) expresionDouble -> . valorDouble operadorMat expresionDouble
    (198) expresionDouble -> . valorDouble
    (186) expresionString -> . valorString SUMA expresionString
    (187) expresionString -> . valorString
    (169) expresionBool -> . valorDouble comparadorMat expresionDouble
    (170) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (171) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (172) expresionBool -> . valorDouble comparadorMat VARIABLE
    (173) expresionBool -> . valorBool
    (174) expresionBool -> . negacionBool
    (175) expresionBool -> . comparacionBool
    (176) expresionBool -> . valor IS objeto
    (177) expresionBool -> . valor ISNEGADO objeto
    (153) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (154) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (155) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (156) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (157) expresionBoolFor -> . valorBool
    (158) expresionBoolFor -> . negacionBool
    (159) expresionBoolFor -> . comparacionBool
    (164) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (165) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (166) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (128) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (129) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (130) sentenciaElse -> . ELSE final
    (131) sentenciaElse -> . ELSE LIZQ final LDER
    (123) imprimir -> . PRINT PIZQ expresion PDER
    (124) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (125) funcionStdin -> . FUNCIONSTDIN
    (126) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (127) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (178) negacionBool -> . NOT PIZQ expresionBool PDER
    (179) comparacionBool -> . expresionBool operadorLogico expresionBool
    (180) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (132) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (133) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (160) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (161) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (162) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (163) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (189) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (190) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (70) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (71) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (72) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> . CIZQ expListString CDER
    (74) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (75) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (76) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> . CIZQ expListInt CDER
    (78) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (79) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (80) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (81) expresionLista -> . CIZQ expListNum CDER
    (82) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (83) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (84) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (85) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (86) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (87) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> . CIZQ expListBool CDER
    (89) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (91) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListDynamic CDER
    (93) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR VARIABLE MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionNewList -> . NEWLIST PIZQ PDER
    (68) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (69) expresionNewList -> . CIZQ CDER
    (56) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE
    (57) expListaLista -> . LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList
    (122) asignacionSimple -> . VARIABLE IGUAL expresion
    (191) valorInt -> . ENTERO
    (192) valorInt -> . VARIABLE
    (195) valorDouble -> . DOUBLE
    (196) valorDouble -> . valorInt
    (181) valorString -> . STRING
    (182) valorString -> . VARIABLE
    (183) valorString -> . FUNCIONSTDIN
    (184) valorString -> . expresionIndexString
    (185) valorString -> . sentenciaSubstring
    (167) valorBool -> . BOOL
    (168) valorBool -> . VARIABLE
    (134) valor -> . ENTERO
    (135) valor -> . VARIABLE
    (136) valor -> . DOUBLE
    (137) valor -> . STRING
    (188) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 54

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 442
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expListaLista                  shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 53

state 439

    (163) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .

    PUNTOYCOMA      reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    VARIABLE        reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    INT             reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DOUBLER         reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NUM             reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    STRINGR         reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BOOLR           reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DYNAMIC         reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    VAR             reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    WHILE           reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DO              reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    IF              reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ELSE            reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    PRINT           reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FUNCIONSTDIN    reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FUNCIONSTDOUT   reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NOT             reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ELSEIF          reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FOR             reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LIST            reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    CIZQ            reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NEWLIST         reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ENTERO          reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DOUBLE          reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    STRING          reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BOOL            reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    $end            reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LDER            reduce using rule 163 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)


state 440

    (57) expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .

    $end            reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    PUNTOYCOMA      reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    VARIABLE        reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    INT             reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    DOUBLER         reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    NUM             reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    STRINGR         reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    BOOLR           reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    DYNAMIC         reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    VAR             reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    WHILE           reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    DO              reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    IF              reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    ELSE            reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    PRINT           reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    FUNCIONSTDIN    reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    FUNCIONSTDOUT   reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    NOT             reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    ELSEIF          reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    FOR             reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    LIST            reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    CIZQ            reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    NEWLIST         reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    ENTERO          reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    DOUBLE          reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    STRING          reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    BOOL            reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)
    LDER            reduce using rule 57 (expListaLista -> LIST MENOR LIST MENOR tipo MAYOR MAYOR VARIABLE IGUAL expresionNewList .)


state 441

    (160) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final . LDER

    LDER            shift and go to state 443


state 442

    (162) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final . LDER

    LDER            shift and go to state 444


state 443

    (160) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    INT             reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NUM             reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    STRINGR         reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BOOLR           reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    VAR             reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    WHILE           reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DO              reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    IF              reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ELSE            reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    PRINT           reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NOT             reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FOR             reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LIST            reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    CIZQ            reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ENTERO          reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    STRING          reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BOOL            reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    $end            reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LDER            reduce using rule 160 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)


state 444

    (162) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    INT             reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NUM             reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    STRINGR         reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BOOLR           reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    VAR             reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    WHILE           reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DO              reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    IF              reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ELSE            reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    PRINT           reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NOT             reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FOR             reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LIST            reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    CIZQ            reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ENTERO          reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    STRING          reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BOOL            reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    $end            reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LDER            reduce using rule 162 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 8 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 8 resolved as shift
WARNING: shift/reduce conflict for INT in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 8 resolved as shift
WARNING: shift/reduce conflict for NUM in state 8 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 8 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 8 resolved as shift
WARNING: shift/reduce conflict for VAR in state 8 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 8 resolved as shift
WARNING: shift/reduce conflict for DO in state 8 resolved as shift
WARNING: shift/reduce conflict for IF in state 8 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 8 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 8 resolved as shift
WARNING: shift/reduce conflict for NOT in state 8 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 8 resolved as shift
WARNING: shift/reduce conflict for FOR in state 8 resolved as shift
WARNING: shift/reduce conflict for LIST in state 8 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 8 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 8 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 8 resolved as shift
WARNING: shift/reduce conflict for STRING in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 8 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 10 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 10 resolved as shift
WARNING: shift/reduce conflict for INT in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 10 resolved as shift
WARNING: shift/reduce conflict for NUM in state 10 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 10 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 10 resolved as shift
WARNING: shift/reduce conflict for VAR in state 10 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 10 resolved as shift
WARNING: shift/reduce conflict for DO in state 10 resolved as shift
WARNING: shift/reduce conflict for IF in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 10 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 10 resolved as shift
WARNING: shift/reduce conflict for NOT in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 10 resolved as shift
WARNING: shift/reduce conflict for FOR in state 10 resolved as shift
WARNING: shift/reduce conflict for LIST in state 10 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 10 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 10 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 10 resolved as shift
WARNING: shift/reduce conflict for STRING in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 10 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 11 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 11 resolved as shift
WARNING: shift/reduce conflict for INT in state 11 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 11 resolved as shift
WARNING: shift/reduce conflict for NUM in state 11 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 11 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 11 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 11 resolved as shift
WARNING: shift/reduce conflict for VAR in state 11 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 11 resolved as shift
WARNING: shift/reduce conflict for DO in state 11 resolved as shift
WARNING: shift/reduce conflict for IF in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 11 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 11 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 11 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 11 resolved as shift
WARNING: shift/reduce conflict for NOT in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 11 resolved as shift
WARNING: shift/reduce conflict for FOR in state 11 resolved as shift
WARNING: shift/reduce conflict for LIST in state 11 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 11 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 11 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 11 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 11 resolved as shift
WARNING: shift/reduce conflict for STRING in state 11 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 11 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 17 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 17 resolved as shift
WARNING: shift/reduce conflict for INT in state 17 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 17 resolved as shift
WARNING: shift/reduce conflict for NUM in state 17 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 17 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 17 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 17 resolved as shift
WARNING: shift/reduce conflict for VAR in state 17 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 17 resolved as shift
WARNING: shift/reduce conflict for DO in state 17 resolved as shift
WARNING: shift/reduce conflict for IF in state 17 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 17 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 17 resolved as shift
WARNING: shift/reduce conflict for NOT in state 17 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 17 resolved as shift
WARNING: shift/reduce conflict for FOR in state 17 resolved as shift
WARNING: shift/reduce conflict for LIST in state 17 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 17 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 17 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 17 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 17 resolved as shift
WARNING: shift/reduce conflict for STRING in state 17 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 17 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 18 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 18 resolved as shift
WARNING: shift/reduce conflict for INT in state 18 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 18 resolved as shift
WARNING: shift/reduce conflict for NUM in state 18 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 18 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 18 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 18 resolved as shift
WARNING: shift/reduce conflict for VAR in state 18 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 18 resolved as shift
WARNING: shift/reduce conflict for DO in state 18 resolved as shift
WARNING: shift/reduce conflict for IF in state 18 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 18 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 18 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 18 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 18 resolved as shift
WARNING: shift/reduce conflict for NOT in state 18 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 18 resolved as shift
WARNING: shift/reduce conflict for FOR in state 18 resolved as shift
WARNING: shift/reduce conflict for LIST in state 18 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 18 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 18 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 18 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 18 resolved as shift
WARNING: shift/reduce conflict for STRING in state 18 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 18 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 19 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 32 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 32 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 32 resolved as shift
WARNING: shift/reduce conflict for DIV in state 32 resolved as shift
WARNING: shift/reduce conflict for DIVENTERO in state 32 resolved as shift
WARNING: shift/reduce conflict for MOD in state 32 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 55 resolved as shift
WARNING: shift/reduce conflict for INT in state 55 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 55 resolved as shift
WARNING: shift/reduce conflict for NUM in state 55 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 55 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 55 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 55 resolved as shift
WARNING: shift/reduce conflict for VAR in state 55 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 55 resolved as shift
WARNING: shift/reduce conflict for DO in state 55 resolved as shift
WARNING: shift/reduce conflict for IF in state 55 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 55 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 55 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 55 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 55 resolved as shift
WARNING: shift/reduce conflict for NOT in state 55 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 55 resolved as shift
WARNING: shift/reduce conflict for FOR in state 55 resolved as shift
WARNING: shift/reduce conflict for LIST in state 55 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 55 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 55 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 55 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 55 resolved as shift
WARNING: shift/reduce conflict for STRING in state 55 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 55 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 56 resolved as shift
WARNING: shift/reduce conflict for INT in state 56 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 56 resolved as shift
WARNING: shift/reduce conflict for NUM in state 56 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 56 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 56 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 56 resolved as shift
WARNING: shift/reduce conflict for VAR in state 56 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 56 resolved as shift
WARNING: shift/reduce conflict for DO in state 56 resolved as shift
WARNING: shift/reduce conflict for IF in state 56 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 56 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 56 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 56 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 56 resolved as shift
WARNING: shift/reduce conflict for NOT in state 56 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 56 resolved as shift
WARNING: shift/reduce conflict for FOR in state 56 resolved as shift
WARNING: shift/reduce conflict for LIST in state 56 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 56 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 56 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 56 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 56 resolved as shift
WARNING: shift/reduce conflict for STRING in state 56 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 56 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 57 resolved as shift
WARNING: shift/reduce conflict for INT in state 57 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 57 resolved as shift
WARNING: shift/reduce conflict for NUM in state 57 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 57 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 57 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 57 resolved as shift
WARNING: shift/reduce conflict for VAR in state 57 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 57 resolved as shift
WARNING: shift/reduce conflict for DO in state 57 resolved as shift
WARNING: shift/reduce conflict for IF in state 57 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 57 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 57 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 57 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 57 resolved as shift
WARNING: shift/reduce conflict for NOT in state 57 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 57 resolved as shift
WARNING: shift/reduce conflict for FOR in state 57 resolved as shift
WARNING: shift/reduce conflict for LIST in state 57 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 57 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 57 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 57 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 57 resolved as shift
WARNING: shift/reduce conflict for STRING in state 57 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 57 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 58 resolved as shift
WARNING: shift/reduce conflict for INT in state 58 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 58 resolved as shift
WARNING: shift/reduce conflict for NUM in state 58 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 58 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 58 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 58 resolved as shift
WARNING: shift/reduce conflict for VAR in state 58 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 58 resolved as shift
WARNING: shift/reduce conflict for DO in state 58 resolved as shift
WARNING: shift/reduce conflict for IF in state 58 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 58 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 58 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 58 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 58 resolved as shift
WARNING: shift/reduce conflict for NOT in state 58 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 58 resolved as shift
WARNING: shift/reduce conflict for FOR in state 58 resolved as shift
WARNING: shift/reduce conflict for LIST in state 58 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 58 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 58 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 58 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 58 resolved as shift
WARNING: shift/reduce conflict for STRING in state 58 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 58 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 59 resolved as shift
WARNING: shift/reduce conflict for INT in state 59 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 59 resolved as shift
WARNING: shift/reduce conflict for NUM in state 59 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 59 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 59 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 59 resolved as shift
WARNING: shift/reduce conflict for VAR in state 59 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 59 resolved as shift
WARNING: shift/reduce conflict for DO in state 59 resolved as shift
WARNING: shift/reduce conflict for IF in state 59 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 59 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 59 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 59 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 59 resolved as shift
WARNING: shift/reduce conflict for NOT in state 59 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 59 resolved as shift
WARNING: shift/reduce conflict for FOR in state 59 resolved as shift
WARNING: shift/reduce conflict for LIST in state 59 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 59 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 59 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 59 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 59 resolved as shift
WARNING: shift/reduce conflict for STRING in state 59 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 59 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 63 resolved as shift
WARNING: shift/reduce conflict for INT in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 63 resolved as shift
WARNING: shift/reduce conflict for NUM in state 63 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 63 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 63 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 63 resolved as shift
WARNING: shift/reduce conflict for VAR in state 63 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 63 resolved as shift
WARNING: shift/reduce conflict for DO in state 63 resolved as shift
WARNING: shift/reduce conflict for IF in state 63 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 63 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 63 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 63 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 63 resolved as shift
WARNING: shift/reduce conflict for NOT in state 63 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 63 resolved as shift
WARNING: shift/reduce conflict for FOR in state 63 resolved as shift
WARNING: shift/reduce conflict for LIST in state 63 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 63 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 63 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 63 resolved as shift
WARNING: shift/reduce conflict for STRING in state 63 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 63 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 65 resolved as shift
WARNING: shift/reduce conflict for INT in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 65 resolved as shift
WARNING: shift/reduce conflict for NUM in state 65 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 65 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 65 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 65 resolved as shift
WARNING: shift/reduce conflict for VAR in state 65 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 65 resolved as shift
WARNING: shift/reduce conflict for DO in state 65 resolved as shift
WARNING: shift/reduce conflict for IF in state 65 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 65 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 65 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 65 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 65 resolved as shift
WARNING: shift/reduce conflict for NOT in state 65 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 65 resolved as shift
WARNING: shift/reduce conflict for FOR in state 65 resolved as shift
WARNING: shift/reduce conflict for LIST in state 65 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 65 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 65 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 65 resolved as shift
WARNING: shift/reduce conflict for STRING in state 65 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 65 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 66 resolved as shift
WARNING: shift/reduce conflict for INT in state 66 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 66 resolved as shift
WARNING: shift/reduce conflict for NUM in state 66 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 66 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 66 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 66 resolved as shift
WARNING: shift/reduce conflict for VAR in state 66 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 66 resolved as shift
WARNING: shift/reduce conflict for DO in state 66 resolved as shift
WARNING: shift/reduce conflict for IF in state 66 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 66 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 66 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 66 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 66 resolved as shift
WARNING: shift/reduce conflict for NOT in state 66 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 66 resolved as shift
WARNING: shift/reduce conflict for FOR in state 66 resolved as shift
WARNING: shift/reduce conflict for LIST in state 66 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 66 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 66 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 66 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 66 resolved as shift
WARNING: shift/reduce conflict for STRING in state 66 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 66 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 67 resolved as shift
WARNING: shift/reduce conflict for INT in state 67 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 67 resolved as shift
WARNING: shift/reduce conflict for NUM in state 67 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 67 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 67 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 67 resolved as shift
WARNING: shift/reduce conflict for VAR in state 67 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 67 resolved as shift
WARNING: shift/reduce conflict for DO in state 67 resolved as shift
WARNING: shift/reduce conflict for IF in state 67 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 67 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 67 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 67 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 67 resolved as shift
WARNING: shift/reduce conflict for NOT in state 67 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 67 resolved as shift
WARNING: shift/reduce conflict for FOR in state 67 resolved as shift
WARNING: shift/reduce conflict for LIST in state 67 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 67 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 67 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 67 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 67 resolved as shift
WARNING: shift/reduce conflict for STRING in state 67 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 67 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 69 resolved as shift
WARNING: shift/reduce conflict for INT in state 69 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 69 resolved as shift
WARNING: shift/reduce conflict for NUM in state 69 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 69 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 69 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 69 resolved as shift
WARNING: shift/reduce conflict for VAR in state 69 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 69 resolved as shift
WARNING: shift/reduce conflict for DO in state 69 resolved as shift
WARNING: shift/reduce conflict for IF in state 69 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 69 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 69 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 69 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 69 resolved as shift
WARNING: shift/reduce conflict for NOT in state 69 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 69 resolved as shift
WARNING: shift/reduce conflict for FOR in state 69 resolved as shift
WARNING: shift/reduce conflict for LIST in state 69 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 69 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 69 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 69 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 69 resolved as shift
WARNING: shift/reduce conflict for STRING in state 69 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 69 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 71 resolved as shift
WARNING: shift/reduce conflict for INT in state 71 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 71 resolved as shift
WARNING: shift/reduce conflict for NUM in state 71 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 71 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 71 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 71 resolved as shift
WARNING: shift/reduce conflict for VAR in state 71 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 71 resolved as shift
WARNING: shift/reduce conflict for DO in state 71 resolved as shift
WARNING: shift/reduce conflict for IF in state 71 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 71 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 71 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 71 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 71 resolved as shift
WARNING: shift/reduce conflict for NOT in state 71 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 71 resolved as shift
WARNING: shift/reduce conflict for FOR in state 71 resolved as shift
WARNING: shift/reduce conflict for LIST in state 71 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 71 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 71 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 71 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 71 resolved as shift
WARNING: shift/reduce conflict for STRING in state 71 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 71 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 72 resolved as shift
WARNING: shift/reduce conflict for INT in state 72 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 72 resolved as shift
WARNING: shift/reduce conflict for NUM in state 72 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 72 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 72 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 72 resolved as shift
WARNING: shift/reduce conflict for VAR in state 72 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 72 resolved as shift
WARNING: shift/reduce conflict for DO in state 72 resolved as shift
WARNING: shift/reduce conflict for IF in state 72 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 72 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 72 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 72 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 72 resolved as shift
WARNING: shift/reduce conflict for NOT in state 72 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 72 resolved as shift
WARNING: shift/reduce conflict for FOR in state 72 resolved as shift
WARNING: shift/reduce conflict for LIST in state 72 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 72 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 72 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 72 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 72 resolved as shift
WARNING: shift/reduce conflict for STRING in state 72 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 72 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 73 resolved as shift
WARNING: shift/reduce conflict for INT in state 73 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 73 resolved as shift
WARNING: shift/reduce conflict for NUM in state 73 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 73 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 73 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 73 resolved as shift
WARNING: shift/reduce conflict for VAR in state 73 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 73 resolved as shift
WARNING: shift/reduce conflict for DO in state 73 resolved as shift
WARNING: shift/reduce conflict for IF in state 73 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 73 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 73 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 73 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 73 resolved as shift
WARNING: shift/reduce conflict for NOT in state 73 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 73 resolved as shift
WARNING: shift/reduce conflict for FOR in state 73 resolved as shift
WARNING: shift/reduce conflict for LIST in state 73 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 73 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 73 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 73 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 73 resolved as shift
WARNING: shift/reduce conflict for STRING in state 73 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 73 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 74 resolved as shift
WARNING: shift/reduce conflict for INT in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 74 resolved as shift
WARNING: shift/reduce conflict for NUM in state 74 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 74 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 74 resolved as shift
WARNING: shift/reduce conflict for VAR in state 74 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 74 resolved as shift
WARNING: shift/reduce conflict for DO in state 74 resolved as shift
WARNING: shift/reduce conflict for IF in state 74 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 74 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 74 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 74 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 74 resolved as shift
WARNING: shift/reduce conflict for NOT in state 74 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 74 resolved as shift
WARNING: shift/reduce conflict for FOR in state 74 resolved as shift
WARNING: shift/reduce conflict for LIST in state 74 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 74 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 74 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 74 resolved as shift
WARNING: shift/reduce conflict for STRING in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 74 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 75 resolved as shift
WARNING: shift/reduce conflict for INT in state 75 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 75 resolved as shift
WARNING: shift/reduce conflict for NUM in state 75 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 75 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 75 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 75 resolved as shift
WARNING: shift/reduce conflict for VAR in state 75 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 75 resolved as shift
WARNING: shift/reduce conflict for DO in state 75 resolved as shift
WARNING: shift/reduce conflict for IF in state 75 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 75 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 75 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 75 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 75 resolved as shift
WARNING: shift/reduce conflict for NOT in state 75 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 75 resolved as shift
WARNING: shift/reduce conflict for FOR in state 75 resolved as shift
WARNING: shift/reduce conflict for LIST in state 75 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 75 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 75 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 75 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 75 resolved as shift
WARNING: shift/reduce conflict for STRING in state 75 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 75 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 76 resolved as shift
WARNING: shift/reduce conflict for INT in state 76 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 76 resolved as shift
WARNING: shift/reduce conflict for NUM in state 76 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 76 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 76 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 76 resolved as shift
WARNING: shift/reduce conflict for VAR in state 76 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 76 resolved as shift
WARNING: shift/reduce conflict for DO in state 76 resolved as shift
WARNING: shift/reduce conflict for IF in state 76 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 76 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 76 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 76 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 76 resolved as shift
WARNING: shift/reduce conflict for NOT in state 76 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 76 resolved as shift
WARNING: shift/reduce conflict for FOR in state 76 resolved as shift
WARNING: shift/reduce conflict for LIST in state 76 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 76 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 76 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 76 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 76 resolved as shift
WARNING: shift/reduce conflict for STRING in state 76 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 76 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 78 resolved as shift
WARNING: shift/reduce conflict for INT in state 78 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 78 resolved as shift
WARNING: shift/reduce conflict for NUM in state 78 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 78 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 78 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 78 resolved as shift
WARNING: shift/reduce conflict for VAR in state 78 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 78 resolved as shift
WARNING: shift/reduce conflict for DO in state 78 resolved as shift
WARNING: shift/reduce conflict for IF in state 78 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 78 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 78 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 78 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 78 resolved as shift
WARNING: shift/reduce conflict for NOT in state 78 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 78 resolved as shift
WARNING: shift/reduce conflict for FOR in state 78 resolved as shift
WARNING: shift/reduce conflict for LIST in state 78 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 78 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 78 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 78 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 78 resolved as shift
WARNING: shift/reduce conflict for STRING in state 78 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 78 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 80 resolved as shift
WARNING: shift/reduce conflict for INT in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 80 resolved as shift
WARNING: shift/reduce conflict for NUM in state 80 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 80 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 80 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 80 resolved as shift
WARNING: shift/reduce conflict for VAR in state 80 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 80 resolved as shift
WARNING: shift/reduce conflict for DO in state 80 resolved as shift
WARNING: shift/reduce conflict for IF in state 80 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 80 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 80 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 80 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 80 resolved as shift
WARNING: shift/reduce conflict for NOT in state 80 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 80 resolved as shift
WARNING: shift/reduce conflict for FOR in state 80 resolved as shift
WARNING: shift/reduce conflict for LIST in state 80 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 80 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 80 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 80 resolved as shift
WARNING: shift/reduce conflict for STRING in state 80 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 80 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 92 resolved as shift
WARNING: shift/reduce conflict for INT in state 92 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 92 resolved as shift
WARNING: shift/reduce conflict for NUM in state 92 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 92 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 92 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 92 resolved as shift
WARNING: shift/reduce conflict for VAR in state 92 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 92 resolved as shift
WARNING: shift/reduce conflict for DO in state 92 resolved as shift
WARNING: shift/reduce conflict for IF in state 92 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 92 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 92 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 92 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 92 resolved as shift
WARNING: shift/reduce conflict for NOT in state 92 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 92 resolved as shift
WARNING: shift/reduce conflict for FOR in state 92 resolved as shift
WARNING: shift/reduce conflict for LIST in state 92 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 92 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 92 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 92 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 92 resolved as shift
WARNING: shift/reduce conflict for STRING in state 92 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 92 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 93 resolved as shift
WARNING: shift/reduce conflict for INT in state 93 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 93 resolved as shift
WARNING: shift/reduce conflict for NUM in state 93 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 93 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 93 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 93 resolved as shift
WARNING: shift/reduce conflict for VAR in state 93 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 93 resolved as shift
WARNING: shift/reduce conflict for DO in state 93 resolved as shift
WARNING: shift/reduce conflict for IF in state 93 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 93 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 93 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 93 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 93 resolved as shift
WARNING: shift/reduce conflict for NOT in state 93 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 93 resolved as shift
WARNING: shift/reduce conflict for FOR in state 93 resolved as shift
WARNING: shift/reduce conflict for LIST in state 93 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 93 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 93 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 93 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 93 resolved as shift
WARNING: shift/reduce conflict for STRING in state 93 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 93 resolved as shift
WARNING: shift/reduce conflict for AND in state 141 resolved as shift
WARNING: shift/reduce conflict for OR in state 141 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 144 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 144 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 144 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 144 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 144 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 144 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 163 resolved as shift
WARNING: shift/reduce conflict for INT in state 163 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 163 resolved as shift
WARNING: shift/reduce conflict for NUM in state 163 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 163 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 163 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 163 resolved as shift
WARNING: shift/reduce conflict for VAR in state 163 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 163 resolved as shift
WARNING: shift/reduce conflict for DO in state 163 resolved as shift
WARNING: shift/reduce conflict for IF in state 163 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 163 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 163 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 163 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 163 resolved as shift
WARNING: shift/reduce conflict for NOT in state 163 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 163 resolved as shift
WARNING: shift/reduce conflict for FOR in state 163 resolved as shift
WARNING: shift/reduce conflict for LIST in state 163 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 163 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 163 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 163 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 163 resolved as shift
WARNING: shift/reduce conflict for STRING in state 163 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 163 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 164 resolved as shift
WARNING: shift/reduce conflict for INT in state 164 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 164 resolved as shift
WARNING: shift/reduce conflict for NUM in state 164 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 164 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 164 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 164 resolved as shift
WARNING: shift/reduce conflict for VAR in state 164 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 164 resolved as shift
WARNING: shift/reduce conflict for DO in state 164 resolved as shift
WARNING: shift/reduce conflict for IF in state 164 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 164 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 164 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 164 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 164 resolved as shift
WARNING: shift/reduce conflict for NOT in state 164 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 164 resolved as shift
WARNING: shift/reduce conflict for FOR in state 164 resolved as shift
WARNING: shift/reduce conflict for LIST in state 164 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 164 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 164 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 164 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 164 resolved as shift
WARNING: shift/reduce conflict for STRING in state 164 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 164 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 171 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 171 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 171 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 171 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 171 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 171 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 221 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 221 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 221 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 221 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 221 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 221 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 321 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 321 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 321 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 321 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 321 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 321 resolved as shift
WARNING: reduce/reduce conflict in state 20 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 32 resolved using rule (expresionInt -> valorInt)
WARNING: rejected rule (valorDouble -> valorInt) in state 32
WARNING: reduce/reduce conflict in state 35 resolved using rule (expresionBoolFor -> valorBool)
WARNING: rejected rule (expresionBool -> valorBool) in state 35
WARNING: reduce/reduce conflict in state 42 resolved using rule (funcionStdin -> FUNCIONSTDIN)
WARNING: rejected rule (valorString -> FUNCIONSTDIN) in state 42
WARNING: reduce/reduce conflict in state 131 resolved using rule (expListString -> STRING)
WARNING: rejected rule (expListDynamic -> STRING) in state 131
WARNING: reduce/reduce conflict in state 132 resolved using rule (expListInt -> ENTERO)
WARNING: rejected rule (expListNum -> ENTERO) in state 132
WARNING: reduce/reduce conflict in state 132 resolved using rule (expListInt -> ENTERO)
WARNING: rejected rule (expListDynamic -> ENTERO) in state 132
WARNING: reduce/reduce conflict in state 133 resolved using rule (expListNum -> DOUBLE)
WARNING: rejected rule (expListDynamic -> DOUBLE) in state 133
WARNING: reduce/reduce conflict in state 134 resolved using rule (expListBool -> BOOL)
WARNING: rejected rule (expListDynamic -> BOOL) in state 134
WARNING: reduce/reduce conflict in state 142 resolved using rule (expresionBool -> comparacionBool)
WARNING: rejected rule (comparacionBool -> expresionBool operadorLogico comparacionBool) in state 142
WARNING: reduce/reduce conflict in state 148 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 148
WARNING: reduce/reduce conflict in state 165 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (expresionBool -> VARIABLE comparadorMat VARIABLE) in state 165
WARNING: reduce/reduce conflict in state 165 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 165
WARNING: reduce/reduce conflict in state 165 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 165
WARNING: reduce/reduce conflict in state 166 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat expresionDouble)
WARNING: rejected rule (expresionBool -> VARIABLE comparadorMat expresionDouble) in state 166
WARNING: reduce/reduce conflict in state 171 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 171
WARNING: reduce/reduce conflict in state 171 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 171
WARNING: reduce/reduce conflict in state 171 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 171
WARNING: reduce/reduce conflict in state 178 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 178
WARNING: reduce/reduce conflict in state 179 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 179
WARNING: reduce/reduce conflict in state 197 resolved using rule (expresionBoolFor -> valorDouble comparadorMat expresionDouble)
WARNING: rejected rule (expresionBool -> valorDouble comparadorMat expresionDouble) in state 197
WARNING: reduce/reduce conflict in state 198 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (expresionBool -> valorDouble comparadorMat VARIABLE) in state 198
WARNING: reduce/reduce conflict in state 198 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 198
WARNING: reduce/reduce conflict in state 198 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 198
WARNING: reduce/reduce conflict in state 221 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 221
WARNING: reduce/reduce conflict in state 221 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 221
WARNING: reduce/reduce conflict in state 221 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 221
WARNING: reduce/reduce conflict in state 302 resolved using rule (expListNum -> ENTERO)
WARNING: rejected rule (expListDynamic -> ENTERO) in state 302
WARNING: reduce/reduce conflict in state 307 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 307
WARNING: reduce/reduce conflict in state 308 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 308
WARNING: reduce/reduce conflict in state 386 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 386
WARNING: reduce/reduce conflict in state 386 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 386
WARNING: reduce/reduce conflict in state 389 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 389
WARNING: reduce/reduce conflict in state 389 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 389
WARNING: Rule (comparacionBool -> expresionBool operadorLogico comparacionBool) is never reduced
