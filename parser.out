Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    BREAK
    CASE
    COMILLAD
    COMILLAS
    DOSPUNTOS
    FLECHA
    FUNCIONARR
    FUNCIONRANGE
    FUNCIONTAKE
    RETURN
    SWITCH

Grammar

Rule 0     S' -> final
Rule 1     final -> asignacion PUNTOYCOMA
Rule 2     final -> asignacion PUNTOYCOMA final
Rule 3     final -> expresionInt PUNTOYCOMA
Rule 4     final -> expresionInt PUNTOYCOMA final
Rule 5     final -> expresionDouble PUNTOYCOMA
Rule 6     final -> expresionDouble PUNTOYCOMA final
Rule 7     final -> expresionString PUNTOYCOMA
Rule 8     final -> expresionString PUNTOYCOMA final
Rule 9     final -> expresionBool PUNTOYCOMA
Rule 10    final -> expresionBool PUNTOYCOMA final
Rule 11    final -> expresionBoolFor PUNTOYCOMA
Rule 12    final -> expresionBoolFor PUNTOYCOMA final
Rule 13    final -> sentenciaWhile
Rule 14    final -> sentenciaWhile final
Rule 15    final -> sentenciaWhile PUNTOYCOMA
Rule 16    final -> sentenciaWhile PUNTOYCOMA final
Rule 17    final -> sentenciaDoWhile PUNTOYCOMA
Rule 18    final -> sentenciaDoWhile PUNTOYCOMA final
Rule 19    final -> sentenciaIf PUNTOYCOMA
Rule 20    final -> sentenciaIf PUNTOYCOMA final
Rule 21    final -> sentenciaIf
Rule 22    final -> sentenciaIf final
Rule 23    final -> sentenciaElse PUNTOYCOMA
Rule 24    final -> sentenciaElse PUNTOYCOMA final
Rule 25    final -> sentenciaElse
Rule 26    final -> sentenciaElse final
Rule 27    final -> imprimir PUNTOYCOMA
Rule 28    final -> imprimir PUNTOYCOMA final
Rule 29    final -> funcionStdin PUNTOYCOMA
Rule 30    final -> funcionStdin PUNTOYCOMA final
Rule 31    final -> funcionStdout PUNTOYCOMA
Rule 32    final -> funcionStdout PUNTOYCOMA final
Rule 33    final -> negacionBool PUNTOYCOMA
Rule 34    final -> negacionBool PUNTOYCOMA final
Rule 35    final -> comparacionBool PUNTOYCOMA final
Rule 36    final -> comparacionBool PUNTOYCOMA
Rule 37    final -> sentenciaElseIf PUNTOYCOMA final
Rule 38    final -> sentenciaElseIf final
Rule 39    final -> sentenciaElseIf PUNTOYCOMA
Rule 40    final -> sentenciaElseIf
Rule 41    final -> sentenciaFor PUNTOYCOMA final
Rule 42    final -> sentenciaFor PUNTOYCOMA
Rule 43    final -> sentenciaFor final
Rule 44    final -> sentenciaFor
Rule 45    final -> sentenciaSubstring PUNTOYCOMA final
Rule 46    final -> sentenciaSubstring PUNTOYCOMA
Rule 47    final -> VARIABLE DSUMA PUNTOYCOMA final
Rule 48    final -> VARIABLE DSUMA PUNTOYCOMA
Rule 49    final -> VARIABLE DRESTA PUNTOYCOMA final
Rule 50    final -> VARIABLE DRESTA PUNTOYCOMA
Rule 51    final -> expresionLista PUNTOYCOMA
Rule 52    final -> expresionLista PUNTOYCOMA final
Rule 53    final -> expresionNewList PUNTOYCOMA
Rule 54    final -> expresionNewList PUNTOYCOMA final
Rule 55    final -> expresionSet PUNTOYCOMA
Rule 56    final -> expresionSet PUNTOYCOMA final
Rule 57    expresionSet -> SET VARIABLE
Rule 58    expresionSet -> SETFROM PIZQ CIZQ CDER PDER
Rule 59    expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
Rule 60    expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 61    expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 62    expresionNewList -> NEWLIST PIZQ PDER
Rule 63    expresionNewList -> NEWLIST PIZQ ENTERO PDER
Rule 64    expresionNewList -> CIZQ CDER
Rule 65    expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE
Rule 66    expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
Rule 67    expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
Rule 68    expresionLista -> CIZQ expListString CDER
Rule 69    expresionLista -> LIST MENOR INT MAYOR VARIABLE
Rule 70    expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
Rule 71    expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
Rule 72    expresionLista -> CIZQ expListInt CDER
Rule 73    expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE
Rule 74    expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
Rule 75    expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
Rule 76    expresionLista -> CIZQ expListNum CDER
Rule 77    expresionLista -> LIST MENOR NUM MAYOR VARIABLE
Rule 78    expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
Rule 79    expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
Rule 80    expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE
Rule 81    expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
Rule 82    expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
Rule 83    expresionLista -> CIZQ expListBool CDER
Rule 84    expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE
Rule 85    expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
Rule 86    expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
Rule 87    expresionLista -> CIZQ expListDynamic CDER
Rule 88    expresionLista -> LIST MENOR SET MAYOR VARIABLE
Rule 89    expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
Rule 90    expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
Rule 91    expresionLista -> CIZQ expListSet CDER
Rule 92    expListString -> STRING
Rule 93    expListString -> STRING COMA expListString
Rule 94    expListString -> VARIABLE
Rule 95    expListString -> VARIABLE COMA expListString
Rule 96    expListInt -> ENTERO
Rule 97    expListInt -> ENTERO COMA expListInt
Rule 98    expListInt -> VARIABLE
Rule 99    expListInt -> VARIABLE COMA expListInt
Rule 100   expListNum -> ENTERO
Rule 101   expListNum -> DOUBLE
Rule 102   expListNum -> ENTERO COMA expListNum
Rule 103   expListNum -> DOUBLE COMA expListNum
Rule 104   expListNum -> VARIABLE
Rule 105   expListNum -> VARIABLE COMA expListNum
Rule 106   expListBool -> BOOL
Rule 107   expListBool -> BOOL COMA expListBool
Rule 108   expListBool -> VARIABLE
Rule 109   expListBool -> VARIABLE COMA expListBool
Rule 110   expListDynamic -> STRING
Rule 111   expListDynamic -> ENTERO
Rule 112   expListDynamic -> DOUBLE
Rule 113   expListDynamic -> BOOL
Rule 114   expListDynamic -> STRING COMA expListDynamic
Rule 115   expListDynamic -> ENTERO COMA expListDynamic
Rule 116   expListDynamic -> DOUBLE COMA expListDynamic
Rule 117   expListDynamic -> BOOL COMA expListDynamic
Rule 118   expListDynamic -> VARIABLE
Rule 119   expListDynamic -> VARIABLE COMA expListDynamic
Rule 120   expListSet -> SETFROM PIZQ CIZQ CDER PDER
Rule 121   expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 122   expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet
Rule 123   expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
Rule 124   expListSet -> VARIABLE
Rule 125   expListSet -> VARIABLE COMA expListSet
Rule 126   asignacion -> INT VARIABLE IGUAL expresionInt
Rule 127   asignacion -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 128   asignacion -> NUM VARIABLE IGUAL expresionDouble
Rule 129   asignacion -> STRINGR VARIABLE IGUAL expresionString
Rule 130   asignacion -> BOOLR VARIABLE IGUAL expresionBool
Rule 131   asignacion -> DYNAMIC VARIABLE IGUAL expresion
Rule 132   asignacion -> VAR VARIABLE IGUAL expresion
Rule 133   asignacion -> asignacionSimple
Rule 134   asignacionSimple -> VARIABLE IGUAL expresion
Rule 135   imprimir -> PRINT PIZQ expresion PDER
Rule 136   imprimir -> PRINT PIZQ asignacionSimple PDER
Rule 137   funcionStdin -> FUNCIONSTDIN
Rule 138   funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER
Rule 139   funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER
Rule 140   sentenciaIf -> IF PIZQ expresionBool PDER final
Rule 141   sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER
Rule 142   sentenciaElse -> ELSE final
Rule 143   sentenciaElse -> ELSE LIZQ final LDER
Rule 144   sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final
Rule 145   sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER
Rule 146   valor -> ENTERO
Rule 147   valor -> VARIABLE
Rule 148   valor -> DOUBLE
Rule 149   valor -> STRING
Rule 150   expresion -> valor operadorMat expresion
Rule 151   expresion -> valor
Rule 152   expresion -> expresionString
Rule 153   expresion -> expresionInt
Rule 154   expresion -> expresionDouble
Rule 155   expresion -> expresionBool
Rule 156   asignacionFor -> INT VARIABLE IGUAL expresionInt
Rule 157   asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 158   asignacionFor -> NUM VARIABLE IGUAL expresionDouble
Rule 159   asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt
Rule 160   asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble
Rule 161   asignacionFor -> VAR VARIABLE IGUAL expresionInt
Rule 162   asignacionFor -> VAR VARIABLE IGUAL expresionDouble
Rule 163   asignacionFor -> VARIABLE IGUAL expresionInt
Rule 164   asignacionFor -> VARIABLE IGUAL expresionDouble
Rule 165   expresionBoolFor -> valorDouble comparadorMat expresionDouble
Rule 166   expresionBoolFor -> VARIABLE comparadorMat expresionDouble
Rule 167   expresionBoolFor -> VARIABLE comparadorMat VARIABLE
Rule 168   expresionBoolFor -> valorDouble comparadorMat VARIABLE
Rule 169   expresionBoolFor -> valorBool
Rule 170   expresionBoolFor -> negacionBool
Rule 171   expresionBoolFor -> comparacionBool
Rule 172   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
Rule 173   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
Rule 174   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
Rule 175   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
Rule 176   sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER
Rule 177   sentenciaWhile -> WHILE PIZQ expresionBool PDER final
Rule 178   sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER
Rule 179   valorBool -> BOOL
Rule 180   valorBool -> VARIABLE
Rule 181   expresionBool -> valorDouble comparadorMat expresionDouble
Rule 182   expresionBool -> VARIABLE comparadorMat expresionDouble
Rule 183   expresionBool -> VARIABLE comparadorMat VARIABLE
Rule 184   expresionBool -> valorDouble comparadorMat VARIABLE
Rule 185   expresionBool -> valorBool
Rule 186   expresionBool -> negacionBool
Rule 187   expresionBool -> comparacionBool
Rule 188   expresionBool -> valor IS objeto
Rule 189   expresionBool -> valor ISNEGADO objeto
Rule 190   negacionBool -> NOT PIZQ expresionBool PDER
Rule 191   comparacionBool -> expresionBool operadorLogico expresionBool
Rule 192   comparacionBool -> expresionBool operadorLogico comparacionBool
Rule 193   valorString -> STRING
Rule 194   valorString -> VARIABLE
Rule 195   valorString -> FUNCIONSTDIN
Rule 196   valorString -> expresionIndexString
Rule 197   valorString -> sentenciaSubstring
Rule 198   expresionString -> valorString SUMA expresionString
Rule 199   expresionString -> valorString
Rule 200   expresionIndexString -> valorString CIZQ ENTERO CDER
Rule 201   sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
Rule 202   sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
Rule 203   valorInt -> ENTERO
Rule 204   valorInt -> VARIABLE
Rule 205   expresionInt -> valorInt operadorMat expresionInt
Rule 206   expresionInt -> valorInt
Rule 207   valorDouble -> DOUBLE
Rule 208   valorDouble -> valorInt
Rule 209   expresionDouble -> valorDouble operadorMat expresionDouble
Rule 210   expresionDouble -> valorDouble
Rule 211   operadorMat -> SUMA
Rule 212   operadorMat -> RESTA
Rule 213   operadorMat -> MULTI
Rule 214   operadorMat -> DIV
Rule 215   operadorMat -> DIVENTERO
Rule 216   operadorMat -> MOD
Rule 217   comparadorMat -> DIGUAL
Rule 218   comparadorMat -> NOIGUAL
Rule 219   comparadorMat -> MAYOR
Rule 220   comparadorMat -> MENOR
Rule 221   comparadorMat -> MAYIGUAL
Rule 222   comparadorMat -> MENIGUAL
Rule 223   operadorLogico -> AND
Rule 224   operadorLogico -> OR
Rule 225   objeto -> STRINGR
Rule 226   objeto -> INT
Rule 227   objeto -> DOUBLER
Rule 228   objeto -> NUM
Rule 229   objeto -> VAR
Rule 230   objeto -> DYNAMIC
Rule 231   objeto -> LIST
Rule 232   objeto -> BOOL
Rule 233   objeto -> MAP
Rule 234   objeto -> SET

Terminals, with rules where they appear

AND                  : 223
AS                   : 
BOOL                 : 106 107 113 117 179 232
BOOLR                : 80 81 82 130
BREAK                : 
CASE                 : 
CDER                 : 58 59 60 61 64 66 68 70 72 74 76 78 81 83 85 87 89 91 120 121 122 123 200
CIZQ                 : 58 59 60 61 64 66 68 70 72 74 76 78 81 83 85 87 89 91 120 121 122 123 200
COMA                 : 93 95 97 99 102 103 105 107 109 114 115 116 117 119 122 123 125 202
COMILLAD             : 
COMILLAS             : 
DIGUAL               : 217
DIV                  : 214
DIVENTERO            : 215
DO                   : 178
DOSPUNTOS            : 
DOUBLE               : 101 103 112 116 148 207
DOUBLER              : 73 74 75 127 157 227
DRESTA               : 49 50 174 175
DSUMA                : 47 48 172 173
DYNAMIC              : 84 85 86 131 159 160 230
ELSE                 : 142 143
ELSEIF               : 144 145
ENTERO               : 63 96 97 100 102 111 115 146 200 201 202 202 203
FLECHA               : 
FOR                  : 172 173 174 175
FUNCIONARR           : 
FUNCIONRANGE         : 
FUNCIONSTDIN         : 137 195
FUNCIONSTDOUT        : 138 139
FUNCIONSUBSTRING     : 201 202
FUNCIONTAKE          : 
IF                   : 140 141
IGUAL                : 59 61 66 67 70 71 74 75 78 79 81 82 85 86 89 90 126 127 128 129 130 131 132 134 156 157 158 159 160 161 162 163 164
INT                  : 69 70 71 126 156 226
IS                   : 188
ISNEGADO             : 189
LDER                 : 141 143 145 172 174 176 178
LIST                 : 65 66 67 69 70 71 73 74 75 77 78 79 80 81 82 84 85 86 88 89 90 231
LIZQ                 : 141 143 145 172 174 176 178
MAP                  : 233
MAYIGUAL             : 221
MAYOR                : 65 66 67 69 70 71 73 74 75 77 78 79 80 81 82 84 85 86 88 89 90 219
MENIGUAL             : 222
MENOR                : 65 66 67 69 70 71 73 74 75 77 78 79 80 81 82 84 85 86 88 89 90 220
MOD                  : 216
MULTI                : 213
NEWLIST              : 62 63
NOIGUAL              : 218
NOT                  : 190
NUM                  : 77 78 79 128 158 228
OR                   : 224
PDER                 : 58 59 60 61 62 63 120 121 122 123 135 136 138 139 140 141 144 145 172 173 174 175 176 177 178 190 201 202
PIZQ                 : 58 59 60 61 62 63 120 121 122 123 135 136 138 139 140 141 144 145 172 173 174 175 176 177 178 190 201 202
PRINT                : 135 136
PUNTOYCOMA           : 1 2 3 4 5 6 7 8 9 10 11 12 15 16 17 18 19 20 23 24 27 28 29 30 31 32 33 34 35 36 37 39 41 42 45 46 47 48 49 50 51 52 53 54 55 56 172 172 173 173 174 174 175 175
RESTA                : 212
RETURN               : 
SET                  : 57 59 61 88 89 90 234
SETFROM              : 58 59 60 61 120 121 122 123
STRING               : 92 93 110 114 149 193
STRINGR              : 65 66 67 129 225
SUMA                 : 198 211
SWITCH               : 
VAR                  : 132 161 162 229
VARIABLE             : 47 48 49 50 57 59 61 65 66 67 69 70 71 73 74 75 77 78 79 80 81 82 84 85 86 88 89 90 94 95 98 99 104 105 108 109 118 119 124 125 126 127 128 129 130 131 132 134 147 156 157 158 159 160 161 162 163 164 166 167 167 168 172 173 174 175 180 182 183 183 184 194 201 202 204
WHILE                : 176 177 178
error                : 

Nonterminals, with rules where they appear

asignacion           : 1 2
asignacionFor        : 172 173 174 175
asignacionSimple     : 133 136 139
comparacionBool      : 35 36 171 187 192
comparadorMat        : 165 166 167 168 181 182 183 184
expListBool          : 81 83 107 109
expListDynamic       : 60 61 85 87 114 115 116 117 119 121 123
expListInt           : 70 72 97 99
expListNum           : 74 76 78 102 103 105
expListSet           : 89 91 122 123 125
expListString        : 66 68 93 95
expresion            : 131 132 134 135 138 150
expresionBool        : 9 10 130 140 141 144 145 155 176 177 178 190 191 191 192
expresionBoolFor     : 11 12 172 173 174 175
expresionDouble      : 5 6 127 128 154 157 158 160 162 164 165 166 181 182 209
expresionIndexString : 196
expresionInt         : 3 4 126 153 156 159 161 163 205
expresionLista       : 51 52
expresionNewList     : 53 54 67 71 75 79 82 86 90
expresionSet         : 55 56
expresionString      : 7 8 129 152 198
final                : 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 35 37 38 41 43 45 47 49 52 54 56 140 141 142 143 144 145 172 173 174 175 176 177 178 0
funcionStdin         : 29 30
funcionStdout        : 31 32
imprimir             : 27 28
negacionBool         : 33 34 170 186
objeto               : 188 189
operadorLogico       : 191 192
operadorMat          : 150 205 209
sentenciaDoWhile     : 17 18
sentenciaElse        : 23 24 25 26
sentenciaElseIf      : 37 38 39 40
sentenciaFor         : 41 42 43 44
sentenciaIf          : 19 20 21 22
sentenciaSubstring   : 45 46 197
sentenciaWhile       : 13 14 15 16
valor                : 150 151 188 189
valorBool            : 169 185
valorDouble          : 165 168 181 184 209 210
valorInt             : 205 206 208
valorString          : 198 199 200

Parsing method: LALR

state 0

    (0) S' -> . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    final                          shift and go to state 1
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 1

    (0) S' -> final .



state 2

    (1) final -> asignacion . PUNTOYCOMA
    (2) final -> asignacion . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 57


state 3

    (3) final -> expresionInt . PUNTOYCOMA
    (4) final -> expresionInt . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 58


state 4

    (5) final -> expresionDouble . PUNTOYCOMA
    (6) final -> expresionDouble . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 59


state 5

    (7) final -> expresionString . PUNTOYCOMA
    (8) final -> expresionString . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 60


state 6

    (9) final -> expresionBool . PUNTOYCOMA
    (10) final -> expresionBool . PUNTOYCOMA final
    (191) comparacionBool -> expresionBool . operadorLogico expresionBool
    (192) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (223) operadorLogico -> . AND
    (224) operadorLogico -> . OR

    PUNTOYCOMA      shift and go to state 61
    AND             shift and go to state 63
    OR              shift and go to state 64

    operadorLogico                 shift and go to state 62

state 7

    (11) final -> expresionBoolFor . PUNTOYCOMA
    (12) final -> expresionBoolFor . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 65


state 8

    (13) final -> sentenciaWhile .
    (14) final -> sentenciaWhile . final
    (15) final -> sentenciaWhile . PUNTOYCOMA
    (16) final -> sentenciaWhile . PUNTOYCOMA final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 13 (final -> sentenciaWhile .)
    LDER            reduce using rule 13 (final -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 67
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! PUNTOYCOMA      [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! VARIABLE        [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! INT             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DOUBLER         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NUM             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! STRINGR         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! BOOLR           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DYNAMIC         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! VAR             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! WHILE           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DO              [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! IF              [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ELSE            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! PRINT           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDIN    [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NOT             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ELSEIF          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FOR             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! LIST            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! CIZQ            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NEWLIST         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! SET             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! SETFROM         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ENTERO          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DOUBLE          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! STRING          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! BOOL            [ reduce using rule 13 (final -> sentenciaWhile .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 66
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 9

    (17) final -> sentenciaDoWhile . PUNTOYCOMA
    (18) final -> sentenciaDoWhile . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 68


state 10

    (19) final -> sentenciaIf . PUNTOYCOMA
    (20) final -> sentenciaIf . PUNTOYCOMA final
    (21) final -> sentenciaIf .
    (22) final -> sentenciaIf . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 69
    $end            reduce using rule 21 (final -> sentenciaIf .)
    LDER            reduce using rule 21 (final -> sentenciaIf .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! PUNTOYCOMA      [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! VARIABLE        [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! INT             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DOUBLER         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NUM             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! STRINGR         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! BOOLR           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DYNAMIC         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! VAR             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! WHILE           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DO              [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! IF              [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ELSE            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! PRINT           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NOT             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ELSEIF          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FOR             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! LIST            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! CIZQ            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NEWLIST         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! SET             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! SETFROM         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ENTERO          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DOUBLE          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! STRING          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! BOOL            [ reduce using rule 21 (final -> sentenciaIf .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 70
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 11

    (23) final -> sentenciaElse . PUNTOYCOMA
    (24) final -> sentenciaElse . PUNTOYCOMA final
    (25) final -> sentenciaElse .
    (26) final -> sentenciaElse . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 71
    $end            reduce using rule 25 (final -> sentenciaElse .)
    LDER            reduce using rule 25 (final -> sentenciaElse .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! PUNTOYCOMA      [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! VARIABLE        [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! INT             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DOUBLER         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NUM             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! STRINGR         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! BOOLR           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DYNAMIC         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! VAR             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! WHILE           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DO              [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! IF              [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ELSE            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! PRINT           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FUNCIONSTDIN    [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NOT             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ELSEIF          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FOR             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! LIST            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! CIZQ            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NEWLIST         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! SET             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! SETFROM         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ENTERO          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DOUBLE          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! STRING          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! BOOL            [ reduce using rule 25 (final -> sentenciaElse .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 72
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 12

    (27) final -> imprimir . PUNTOYCOMA
    (28) final -> imprimir . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 73


state 13

    (29) final -> funcionStdin . PUNTOYCOMA
    (30) final -> funcionStdin . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 74


state 14

    (31) final -> funcionStdout . PUNTOYCOMA
    (32) final -> funcionStdout . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 75


state 15

    (33) final -> negacionBool . PUNTOYCOMA
    (34) final -> negacionBool . PUNTOYCOMA final
    (186) expresionBool -> negacionBool .
    (170) expresionBoolFor -> negacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 76
    AND             reduce using rule 186 (expresionBool -> negacionBool .)
    OR              reduce using rule 186 (expresionBool -> negacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 186 (expresionBool -> negacionBool .) ]
  ! PUNTOYCOMA      [ reduce using rule 170 (expresionBoolFor -> negacionBool .) ]


state 16

    (35) final -> comparacionBool . PUNTOYCOMA final
    (36) final -> comparacionBool . PUNTOYCOMA
    (187) expresionBool -> comparacionBool .
    (171) expresionBoolFor -> comparacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 77
    AND             reduce using rule 187 (expresionBool -> comparacionBool .)
    OR              reduce using rule 187 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 187 (expresionBool -> comparacionBool .) ]
  ! PUNTOYCOMA      [ reduce using rule 171 (expresionBoolFor -> comparacionBool .) ]


state 17

    (37) final -> sentenciaElseIf . PUNTOYCOMA final
    (38) final -> sentenciaElseIf . final
    (39) final -> sentenciaElseIf . PUNTOYCOMA
    (40) final -> sentenciaElseIf .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 78
    $end            reduce using rule 40 (final -> sentenciaElseIf .)
    LDER            reduce using rule 40 (final -> sentenciaElseIf .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! PUNTOYCOMA      [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! VARIABLE        [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! INT             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DOUBLER         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NUM             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! STRINGR         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! BOOLR           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DYNAMIC         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! VAR             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! WHILE           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DO              [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! IF              [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ELSE            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! PRINT           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NOT             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ELSEIF          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FOR             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! LIST            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! CIZQ            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NEWLIST         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! SET             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! SETFROM         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ENTERO          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DOUBLE          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! STRING          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! BOOL            [ reduce using rule 40 (final -> sentenciaElseIf .) ]

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 79
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 18

    (41) final -> sentenciaFor . PUNTOYCOMA final
    (42) final -> sentenciaFor . PUNTOYCOMA
    (43) final -> sentenciaFor . final
    (44) final -> sentenciaFor .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 80
    $end            reduce using rule 44 (final -> sentenciaFor .)
    LDER            reduce using rule 44 (final -> sentenciaFor .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! PUNTOYCOMA      [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! VARIABLE        [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! INT             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DOUBLER         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NUM             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! STRINGR         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! BOOLR           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DYNAMIC         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! VAR             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! WHILE           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DO              [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! IF              [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ELSE            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! PRINT           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FUNCIONSTDIN    [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NOT             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ELSEIF          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FOR             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! LIST            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! CIZQ            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NEWLIST         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! SET             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! SETFROM         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ENTERO          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DOUBLE          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! STRING          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! BOOL            [ reduce using rule 44 (final -> sentenciaFor .) ]

    sentenciaFor                   shift and go to state 18
    final                          shift and go to state 81
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 19

    (45) final -> sentenciaSubstring . PUNTOYCOMA final
    (46) final -> sentenciaSubstring . PUNTOYCOMA
    (197) valorString -> sentenciaSubstring .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 82
    SUMA            reduce using rule 197 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 197 (valorString -> sentenciaSubstring .)

  ! PUNTOYCOMA      [ reduce using rule 197 (valorString -> sentenciaSubstring .) ]


state 20

    (47) final -> VARIABLE . DSUMA PUNTOYCOMA final
    (48) final -> VARIABLE . DSUMA PUNTOYCOMA
    (49) final -> VARIABLE . DRESTA PUNTOYCOMA final
    (50) final -> VARIABLE . DRESTA PUNTOYCOMA
    (182) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (183) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (166) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (167) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (201) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (134) asignacionSimple -> VARIABLE . IGUAL expresion
    (204) valorInt -> VARIABLE .
    (194) valorString -> VARIABLE .
    (180) valorBool -> VARIABLE .
    (147) valor -> VARIABLE .
    (217) comparadorMat -> . DIGUAL
    (218) comparadorMat -> . NOIGUAL
    (219) comparadorMat -> . MAYOR
    (220) comparadorMat -> . MENOR
    (221) comparadorMat -> . MAYIGUAL
    (222) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 194 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 194 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 180 (valorBool -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    DSUMA           shift and go to state 83
    DRESTA          shift and go to state 84
    FUNCIONSUBSTRING shift and go to state 86
    IGUAL           shift and go to state 87
    RESTA           reduce using rule 204 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 204 (valorInt -> VARIABLE .)
    DIV             reduce using rule 204 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 204 (valorInt -> VARIABLE .)
    MOD             reduce using rule 204 (valorInt -> VARIABLE .)
    SUMA            reduce using rule 194 (valorString -> VARIABLE .)
    CIZQ            reduce using rule 194 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 180 (valorBool -> VARIABLE .)
    AND             reduce using rule 180 (valorBool -> VARIABLE .)
    OR              reduce using rule 180 (valorBool -> VARIABLE .)
    IS              reduce using rule 147 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 147 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 88
    NOIGUAL         shift and go to state 89
    MAYOR           shift and go to state 90
    MENOR           shift and go to state 91
    MAYIGUAL        shift and go to state 92
    MENIGUAL        shift and go to state 93

  ! SUMA            [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 194 (valorString -> VARIABLE .) ]

    comparadorMat                  shift and go to state 85

state 21

    (51) final -> expresionLista . PUNTOYCOMA
    (52) final -> expresionLista . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 94


state 22

    (53) final -> expresionNewList . PUNTOYCOMA
    (54) final -> expresionNewList . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 95


state 23

    (55) final -> expresionSet . PUNTOYCOMA
    (56) final -> expresionSet . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 96


state 24

    (126) asignacion -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 97


state 25

    (127) asignacion -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 98


state 26

    (128) asignacion -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 99


state 27

    (129) asignacion -> STRINGR . VARIABLE IGUAL expresionString

    VARIABLE        shift and go to state 100


state 28

    (130) asignacion -> BOOLR . VARIABLE IGUAL expresionBool

    VARIABLE        shift and go to state 101


state 29

    (131) asignacion -> DYNAMIC . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 102


state 30

    (132) asignacion -> VAR . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 103


state 31

    (133) asignacion -> asignacionSimple .

    PUNTOYCOMA      reduce using rule 133 (asignacion -> asignacionSimple .)


state 32

    (205) expresionInt -> valorInt . operadorMat expresionInt
    (206) expresionInt -> valorInt .
    (208) valorDouble -> valorInt .
    (211) operadorMat -> . SUMA
    (212) operadorMat -> . RESTA
    (213) operadorMat -> . MULTI
    (214) operadorMat -> . DIV
    (215) operadorMat -> . DIVENTERO
    (216) operadorMat -> . MOD

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 206 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PDER resolved using rule 206 (expresionInt -> valorInt .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DIVENTERO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PUNTOYCOMA      reduce using rule 206 (expresionInt -> valorInt .)
    PDER            reduce using rule 206 (expresionInt -> valorInt .)
    DIGUAL          reduce using rule 208 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 208 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 208 (valorDouble -> valorInt .)
    MENOR           reduce using rule 208 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 208 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 208 (valorDouble -> valorInt .)
    SUMA            shift and go to state 105
    RESTA           shift and go to state 106
    MULTI           shift and go to state 107
    DIV             shift and go to state 108
    DIVENTERO       shift and go to state 109
    MOD             shift and go to state 110

  ! SUMA            [ reduce using rule 208 (valorDouble -> valorInt .) ]
  ! RESTA           [ reduce using rule 208 (valorDouble -> valorInt .) ]
  ! MULTI           [ reduce using rule 208 (valorDouble -> valorInt .) ]
  ! DIV             [ reduce using rule 208 (valorDouble -> valorInt .) ]
  ! DIVENTERO       [ reduce using rule 208 (valorDouble -> valorInt .) ]
  ! MOD             [ reduce using rule 208 (valorDouble -> valorInt .) ]
  ! PUNTOYCOMA      [ reduce using rule 208 (valorDouble -> valorInt .) ]
  ! PDER            [ reduce using rule 208 (valorDouble -> valorInt .) ]

    operadorMat                    shift and go to state 104

state 33

    (209) expresionDouble -> valorDouble . operadorMat expresionDouble
    (210) expresionDouble -> valorDouble .
    (181) expresionBool -> valorDouble . comparadorMat expresionDouble
    (184) expresionBool -> valorDouble . comparadorMat VARIABLE
    (165) expresionBoolFor -> valorDouble . comparadorMat expresionDouble
    (168) expresionBoolFor -> valorDouble . comparadorMat VARIABLE
    (211) operadorMat -> . SUMA
    (212) operadorMat -> . RESTA
    (213) operadorMat -> . MULTI
    (214) operadorMat -> . DIV
    (215) operadorMat -> . DIVENTERO
    (216) operadorMat -> . MOD
    (217) comparadorMat -> . DIGUAL
    (218) comparadorMat -> . NOIGUAL
    (219) comparadorMat -> . MAYOR
    (220) comparadorMat -> . MENOR
    (221) comparadorMat -> . MAYIGUAL
    (222) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 210 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 105
    RESTA           shift and go to state 106
    MULTI           shift and go to state 107
    DIV             shift and go to state 108
    DIVENTERO       shift and go to state 109
    MOD             shift and go to state 110
    DIGUAL          shift and go to state 88
    NOIGUAL         shift and go to state 89
    MAYOR           shift and go to state 90
    MENOR           shift and go to state 91
    MAYIGUAL        shift and go to state 92
    MENIGUAL        shift and go to state 93

    operadorMat                    shift and go to state 111
    comparadorMat                  shift and go to state 112

state 34

    (198) expresionString -> valorString . SUMA expresionString
    (199) expresionString -> valorString .
    (200) expresionIndexString -> valorString . CIZQ ENTERO CDER

    SUMA            shift and go to state 113
    PUNTOYCOMA      reduce using rule 199 (expresionString -> valorString .)
    PDER            reduce using rule 199 (expresionString -> valorString .)
    CIZQ            shift and go to state 114


state 35

    (185) expresionBool -> valorBool .
    (169) expresionBoolFor -> valorBool .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 169 (expresionBoolFor -> valorBool .)
    AND             reduce using rule 185 (expresionBool -> valorBool .)
    OR              reduce using rule 185 (expresionBool -> valorBool .)
    PUNTOYCOMA      reduce using rule 169 (expresionBoolFor -> valorBool .)

  ! PUNTOYCOMA      [ reduce using rule 185 (expresionBool -> valorBool .) ]


state 36

    (188) expresionBool -> valor . IS objeto
    (189) expresionBool -> valor . ISNEGADO objeto

    IS              shift and go to state 115
    ISNEGADO        shift and go to state 116


state 37

    (176) sentenciaWhile -> WHILE . PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> WHILE . PIZQ expresionBool PDER final

    PIZQ            shift and go to state 117


state 38

    (178) sentenciaDoWhile -> DO . LIZQ final LDER WHILE PIZQ expresionBool PDER

    LIZQ            shift and go to state 118


state 39

    (140) sentenciaIf -> IF . PIZQ expresionBool PDER final
    (141) sentenciaIf -> IF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 119


state 40

    (142) sentenciaElse -> ELSE . final
    (143) sentenciaElse -> ELSE . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 121
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    final                          shift and go to state 120
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 41

    (135) imprimir -> PRINT . PIZQ expresion PDER
    (136) imprimir -> PRINT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 122


state 42

    (137) funcionStdin -> FUNCIONSTDIN .
    (195) valorString -> FUNCIONSTDIN .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 137 (funcionStdin -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 137 (funcionStdin -> FUNCIONSTDIN .)
    SUMA            reduce using rule 195 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 195 (valorString -> FUNCIONSTDIN .)

  ! PUNTOYCOMA      [ reduce using rule 195 (valorString -> FUNCIONSTDIN .) ]


state 43

    (138) funcionStdout -> FUNCIONSTDOUT . PIZQ expresion PDER
    (139) funcionStdout -> FUNCIONSTDOUT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 123


state 44

    (190) negacionBool -> NOT . PIZQ expresionBool PDER

    PIZQ            shift and go to state 124


state 45

    (144) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 125


state 46

    (172) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final

    PIZQ            shift and go to state 126


state 47

    (203) valorInt -> ENTERO .
    (146) valor -> ENTERO .

    SUMA            reduce using rule 203 (valorInt -> ENTERO .)
    RESTA           reduce using rule 203 (valorInt -> ENTERO .)
    MULTI           reduce using rule 203 (valorInt -> ENTERO .)
    DIV             reduce using rule 203 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 203 (valorInt -> ENTERO .)
    MOD             reduce using rule 203 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 203 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 203 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 203 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 203 (valorInt -> ENTERO .)
    MENOR           reduce using rule 203 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 203 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 203 (valorInt -> ENTERO .)
    IS              reduce using rule 146 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 146 (valor -> ENTERO .)


state 48

    (65) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (69) expresionLista -> LIST . MENOR INT MAYOR VARIABLE
    (70) expresionLista -> LIST . MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> LIST . MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (84) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> LIST . MENOR SET MAYOR VARIABLE
    (89) expresionLista -> LIST . MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> LIST . MENOR SET MAYOR VARIABLE IGUAL expresionNewList

    MENOR           shift and go to state 127


state 49

    (68) expresionLista -> CIZQ . expListString CDER
    (72) expresionLista -> CIZQ . expListInt CDER
    (76) expresionLista -> CIZQ . expListNum CDER
    (83) expresionLista -> CIZQ . expListBool CDER
    (87) expresionLista -> CIZQ . expListDynamic CDER
    (91) expresionLista -> CIZQ . expListSet CDER
    (64) expresionNewList -> CIZQ . CDER
    (92) expListString -> . STRING
    (93) expListString -> . STRING COMA expListString
    (94) expListString -> . VARIABLE
    (95) expListString -> . VARIABLE COMA expListString
    (96) expListInt -> . ENTERO
    (97) expListInt -> . ENTERO COMA expListInt
    (98) expListInt -> . VARIABLE
    (99) expListInt -> . VARIABLE COMA expListInt
    (100) expListNum -> . ENTERO
    (101) expListNum -> . DOUBLE
    (102) expListNum -> . ENTERO COMA expListNum
    (103) expListNum -> . DOUBLE COMA expListNum
    (104) expListNum -> . VARIABLE
    (105) expListNum -> . VARIABLE COMA expListNum
    (106) expListBool -> . BOOL
    (107) expListBool -> . BOOL COMA expListBool
    (108) expListBool -> . VARIABLE
    (109) expListBool -> . VARIABLE COMA expListBool
    (110) expListDynamic -> . STRING
    (111) expListDynamic -> . ENTERO
    (112) expListDynamic -> . DOUBLE
    (113) expListDynamic -> . BOOL
    (114) expListDynamic -> . STRING COMA expListDynamic
    (115) expListDynamic -> . ENTERO COMA expListDynamic
    (116) expListDynamic -> . DOUBLE COMA expListDynamic
    (117) expListDynamic -> . BOOL COMA expListDynamic
    (118) expListDynamic -> . VARIABLE
    (119) expListDynamic -> . VARIABLE COMA expListDynamic
    (120) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (121) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (122) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (123) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (124) expListSet -> . VARIABLE
    (125) expListSet -> . VARIABLE COMA expListSet

    CDER            shift and go to state 129
    STRING          shift and go to state 135
    VARIABLE        shift and go to state 136
    ENTERO          shift and go to state 137
    DOUBLE          shift and go to state 138
    BOOL            shift and go to state 139
    SETFROM         shift and go to state 140

    expListString                  shift and go to state 128
    expListInt                     shift and go to state 130
    expListNum                     shift and go to state 131
    expListBool                    shift and go to state 132
    expListDynamic                 shift and go to state 133
    expListSet                     shift and go to state 134

state 50

    (57) expresionSet -> SET . VARIABLE
    (59) expresionSet -> SET . VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (61) expresionSet -> SET . VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER

    VARIABLE        shift and go to state 141


state 51

    (62) expresionNewList -> NEWLIST . PIZQ PDER
    (63) expresionNewList -> NEWLIST . PIZQ ENTERO PDER

    PIZQ            shift and go to state 142


state 52

    (58) expresionSet -> SETFROM . PIZQ CIZQ CDER PDER
    (60) expresionSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 143


state 53

    (207) valorDouble -> DOUBLE .
    (148) valor -> DOUBLE .

    SUMA            reduce using rule 207 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 207 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 207 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 207 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 207 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 207 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 207 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 207 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 207 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 207 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 207 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 207 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 207 (valorDouble -> DOUBLE .)
    IS              reduce using rule 148 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 148 (valor -> DOUBLE .)


state 54

    (193) valorString -> STRING .
    (149) valor -> STRING .

    SUMA            reduce using rule 193 (valorString -> STRING .)
    CIZQ            reduce using rule 193 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 193 (valorString -> STRING .)
    IS              reduce using rule 149 (valor -> STRING .)
    ISNEGADO        reduce using rule 149 (valor -> STRING .)


state 55

    (196) valorString -> expresionIndexString .

    SUMA            reduce using rule 196 (valorString -> expresionIndexString .)
    CIZQ            reduce using rule 196 (valorString -> expresionIndexString .)
    PUNTOYCOMA      reduce using rule 196 (valorString -> expresionIndexString .)
    PDER            reduce using rule 196 (valorString -> expresionIndexString .)


state 56

    (179) valorBool -> BOOL .

    PUNTOYCOMA      reduce using rule 179 (valorBool -> BOOL .)
    AND             reduce using rule 179 (valorBool -> BOOL .)
    OR              reduce using rule 179 (valorBool -> BOOL .)
    PDER            reduce using rule 179 (valorBool -> BOOL .)


state 57

    (1) final -> asignacion PUNTOYCOMA .
    (2) final -> asignacion PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    LDER            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]

    asignacion                     shift and go to state 2
    final                          shift and go to state 144
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 58

    (3) final -> expresionInt PUNTOYCOMA .
    (4) final -> expresionInt PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    LDER            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]

    expresionInt                   shift and go to state 3
    final                          shift and go to state 145
    asignacion                     shift and go to state 2
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 59

    (5) final -> expresionDouble PUNTOYCOMA .
    (6) final -> expresionDouble PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    LDER            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]

    expresionDouble                shift and go to state 4
    final                          shift and go to state 146
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 60

    (7) final -> expresionString PUNTOYCOMA .
    (8) final -> expresionString PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    LDER            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]

    expresionString                shift and go to state 5
    final                          shift and go to state 147
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 61

    (9) final -> expresionBool PUNTOYCOMA .
    (10) final -> expresionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    LDER            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]

    expresionBool                  shift and go to state 6
    final                          shift and go to state 148
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 62

    (191) comparacionBool -> expresionBool operadorLogico . expresionBool
    (192) comparacionBool -> expresionBool operadorLogico . comparacionBool
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 152
    DOUBLE          shift and go to state 53
    BOOL            shift and go to state 56
    NOT             shift and go to state 44
    ENTERO          shift and go to state 156
    STRING          shift and go to state 157

    expresionBool                  shift and go to state 149
    comparacionBool                shift and go to state 150
    valorDouble                    shift and go to state 151
    valorBool                      shift and go to state 153
    negacionBool                   shift and go to state 154
    valor                          shift and go to state 36
    valorInt                       shift and go to state 155

state 63

    (223) operadorLogico -> AND .

    VARIABLE        reduce using rule 223 (operadorLogico -> AND .)
    DOUBLE          reduce using rule 223 (operadorLogico -> AND .)
    BOOL            reduce using rule 223 (operadorLogico -> AND .)
    NOT             reduce using rule 223 (operadorLogico -> AND .)
    ENTERO          reduce using rule 223 (operadorLogico -> AND .)
    STRING          reduce using rule 223 (operadorLogico -> AND .)


state 64

    (224) operadorLogico -> OR .

    VARIABLE        reduce using rule 224 (operadorLogico -> OR .)
    DOUBLE          reduce using rule 224 (operadorLogico -> OR .)
    BOOL            reduce using rule 224 (operadorLogico -> OR .)
    NOT             reduce using rule 224 (operadorLogico -> OR .)
    ENTERO          reduce using rule 224 (operadorLogico -> OR .)
    STRING          reduce using rule 224 (operadorLogico -> OR .)


state 65

    (11) final -> expresionBoolFor PUNTOYCOMA .
    (12) final -> expresionBoolFor PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    LDER            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 158
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 66

    (14) final -> sentenciaWhile final .

    $end            reduce using rule 14 (final -> sentenciaWhile final .)
    PUNTOYCOMA      reduce using rule 14 (final -> sentenciaWhile final .)
    VARIABLE        reduce using rule 14 (final -> sentenciaWhile final .)
    INT             reduce using rule 14 (final -> sentenciaWhile final .)
    DOUBLER         reduce using rule 14 (final -> sentenciaWhile final .)
    NUM             reduce using rule 14 (final -> sentenciaWhile final .)
    STRINGR         reduce using rule 14 (final -> sentenciaWhile final .)
    BOOLR           reduce using rule 14 (final -> sentenciaWhile final .)
    DYNAMIC         reduce using rule 14 (final -> sentenciaWhile final .)
    VAR             reduce using rule 14 (final -> sentenciaWhile final .)
    WHILE           reduce using rule 14 (final -> sentenciaWhile final .)
    DO              reduce using rule 14 (final -> sentenciaWhile final .)
    IF              reduce using rule 14 (final -> sentenciaWhile final .)
    ELSE            reduce using rule 14 (final -> sentenciaWhile final .)
    PRINT           reduce using rule 14 (final -> sentenciaWhile final .)
    FUNCIONSTDIN    reduce using rule 14 (final -> sentenciaWhile final .)
    FUNCIONSTDOUT   reduce using rule 14 (final -> sentenciaWhile final .)
    NOT             reduce using rule 14 (final -> sentenciaWhile final .)
    ELSEIF          reduce using rule 14 (final -> sentenciaWhile final .)
    FOR             reduce using rule 14 (final -> sentenciaWhile final .)
    LIST            reduce using rule 14 (final -> sentenciaWhile final .)
    CIZQ            reduce using rule 14 (final -> sentenciaWhile final .)
    NEWLIST         reduce using rule 14 (final -> sentenciaWhile final .)
    SET             reduce using rule 14 (final -> sentenciaWhile final .)
    SETFROM         reduce using rule 14 (final -> sentenciaWhile final .)
    ENTERO          reduce using rule 14 (final -> sentenciaWhile final .)
    DOUBLE          reduce using rule 14 (final -> sentenciaWhile final .)
    STRING          reduce using rule 14 (final -> sentenciaWhile final .)
    BOOL            reduce using rule 14 (final -> sentenciaWhile final .)
    LDER            reduce using rule 14 (final -> sentenciaWhile final .)


state 67

    (15) final -> sentenciaWhile PUNTOYCOMA .
    (16) final -> sentenciaWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    LDER            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 159
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 68

    (17) final -> sentenciaDoWhile PUNTOYCOMA .
    (18) final -> sentenciaDoWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    LDER            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]

    sentenciaDoWhile               shift and go to state 9
    final                          shift and go to state 160
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 69

    (19) final -> sentenciaIf PUNTOYCOMA .
    (20) final -> sentenciaIf PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    LDER            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 161
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 70

    (22) final -> sentenciaIf final .

    $end            reduce using rule 22 (final -> sentenciaIf final .)
    PUNTOYCOMA      reduce using rule 22 (final -> sentenciaIf final .)
    VARIABLE        reduce using rule 22 (final -> sentenciaIf final .)
    INT             reduce using rule 22 (final -> sentenciaIf final .)
    DOUBLER         reduce using rule 22 (final -> sentenciaIf final .)
    NUM             reduce using rule 22 (final -> sentenciaIf final .)
    STRINGR         reduce using rule 22 (final -> sentenciaIf final .)
    BOOLR           reduce using rule 22 (final -> sentenciaIf final .)
    DYNAMIC         reduce using rule 22 (final -> sentenciaIf final .)
    VAR             reduce using rule 22 (final -> sentenciaIf final .)
    WHILE           reduce using rule 22 (final -> sentenciaIf final .)
    DO              reduce using rule 22 (final -> sentenciaIf final .)
    IF              reduce using rule 22 (final -> sentenciaIf final .)
    ELSE            reduce using rule 22 (final -> sentenciaIf final .)
    PRINT           reduce using rule 22 (final -> sentenciaIf final .)
    FUNCIONSTDIN    reduce using rule 22 (final -> sentenciaIf final .)
    FUNCIONSTDOUT   reduce using rule 22 (final -> sentenciaIf final .)
    NOT             reduce using rule 22 (final -> sentenciaIf final .)
    ELSEIF          reduce using rule 22 (final -> sentenciaIf final .)
    FOR             reduce using rule 22 (final -> sentenciaIf final .)
    LIST            reduce using rule 22 (final -> sentenciaIf final .)
    CIZQ            reduce using rule 22 (final -> sentenciaIf final .)
    NEWLIST         reduce using rule 22 (final -> sentenciaIf final .)
    SET             reduce using rule 22 (final -> sentenciaIf final .)
    SETFROM         reduce using rule 22 (final -> sentenciaIf final .)
    ENTERO          reduce using rule 22 (final -> sentenciaIf final .)
    DOUBLE          reduce using rule 22 (final -> sentenciaIf final .)
    STRING          reduce using rule 22 (final -> sentenciaIf final .)
    BOOL            reduce using rule 22 (final -> sentenciaIf final .)
    LDER            reduce using rule 22 (final -> sentenciaIf final .)


state 71

    (23) final -> sentenciaElse PUNTOYCOMA .
    (24) final -> sentenciaElse PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    LDER            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 162
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 72

    (26) final -> sentenciaElse final .

    $end            reduce using rule 26 (final -> sentenciaElse final .)
    PUNTOYCOMA      reduce using rule 26 (final -> sentenciaElse final .)
    VARIABLE        reduce using rule 26 (final -> sentenciaElse final .)
    INT             reduce using rule 26 (final -> sentenciaElse final .)
    DOUBLER         reduce using rule 26 (final -> sentenciaElse final .)
    NUM             reduce using rule 26 (final -> sentenciaElse final .)
    STRINGR         reduce using rule 26 (final -> sentenciaElse final .)
    BOOLR           reduce using rule 26 (final -> sentenciaElse final .)
    DYNAMIC         reduce using rule 26 (final -> sentenciaElse final .)
    VAR             reduce using rule 26 (final -> sentenciaElse final .)
    WHILE           reduce using rule 26 (final -> sentenciaElse final .)
    DO              reduce using rule 26 (final -> sentenciaElse final .)
    IF              reduce using rule 26 (final -> sentenciaElse final .)
    ELSE            reduce using rule 26 (final -> sentenciaElse final .)
    PRINT           reduce using rule 26 (final -> sentenciaElse final .)
    FUNCIONSTDIN    reduce using rule 26 (final -> sentenciaElse final .)
    FUNCIONSTDOUT   reduce using rule 26 (final -> sentenciaElse final .)
    NOT             reduce using rule 26 (final -> sentenciaElse final .)
    ELSEIF          reduce using rule 26 (final -> sentenciaElse final .)
    FOR             reduce using rule 26 (final -> sentenciaElse final .)
    LIST            reduce using rule 26 (final -> sentenciaElse final .)
    CIZQ            reduce using rule 26 (final -> sentenciaElse final .)
    NEWLIST         reduce using rule 26 (final -> sentenciaElse final .)
    SET             reduce using rule 26 (final -> sentenciaElse final .)
    SETFROM         reduce using rule 26 (final -> sentenciaElse final .)
    ENTERO          reduce using rule 26 (final -> sentenciaElse final .)
    DOUBLE          reduce using rule 26 (final -> sentenciaElse final .)
    STRING          reduce using rule 26 (final -> sentenciaElse final .)
    BOOL            reduce using rule 26 (final -> sentenciaElse final .)
    LDER            reduce using rule 26 (final -> sentenciaElse final .)


state 73

    (27) final -> imprimir PUNTOYCOMA .
    (28) final -> imprimir PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    LDER            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]

    imprimir                       shift and go to state 12
    final                          shift and go to state 163
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 74

    (29) final -> funcionStdin PUNTOYCOMA .
    (30) final -> funcionStdin PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    LDER            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]

    funcionStdin                   shift and go to state 13
    final                          shift and go to state 164
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 75

    (31) final -> funcionStdout PUNTOYCOMA .
    (32) final -> funcionStdout PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    LDER            reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]

    funcionStdout                  shift and go to state 14
    final                          shift and go to state 165
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 76

    (33) final -> negacionBool PUNTOYCOMA .
    (34) final -> negacionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    LDER            reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]

    negacionBool                   shift and go to state 15
    final                          shift and go to state 166
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 77

    (35) final -> comparacionBool PUNTOYCOMA . final
    (36) final -> comparacionBool PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    LDER            reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]

    comparacionBool                shift and go to state 16
    final                          shift and go to state 167
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 78

    (37) final -> sentenciaElseIf PUNTOYCOMA . final
    (39) final -> sentenciaElseIf PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    LDER            reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 168
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 79

    (38) final -> sentenciaElseIf final .

    $end            reduce using rule 38 (final -> sentenciaElseIf final .)
    PUNTOYCOMA      reduce using rule 38 (final -> sentenciaElseIf final .)
    VARIABLE        reduce using rule 38 (final -> sentenciaElseIf final .)
    INT             reduce using rule 38 (final -> sentenciaElseIf final .)
    DOUBLER         reduce using rule 38 (final -> sentenciaElseIf final .)
    NUM             reduce using rule 38 (final -> sentenciaElseIf final .)
    STRINGR         reduce using rule 38 (final -> sentenciaElseIf final .)
    BOOLR           reduce using rule 38 (final -> sentenciaElseIf final .)
    DYNAMIC         reduce using rule 38 (final -> sentenciaElseIf final .)
    VAR             reduce using rule 38 (final -> sentenciaElseIf final .)
    WHILE           reduce using rule 38 (final -> sentenciaElseIf final .)
    DO              reduce using rule 38 (final -> sentenciaElseIf final .)
    IF              reduce using rule 38 (final -> sentenciaElseIf final .)
    ELSE            reduce using rule 38 (final -> sentenciaElseIf final .)
    PRINT           reduce using rule 38 (final -> sentenciaElseIf final .)
    FUNCIONSTDIN    reduce using rule 38 (final -> sentenciaElseIf final .)
    FUNCIONSTDOUT   reduce using rule 38 (final -> sentenciaElseIf final .)
    NOT             reduce using rule 38 (final -> sentenciaElseIf final .)
    ELSEIF          reduce using rule 38 (final -> sentenciaElseIf final .)
    FOR             reduce using rule 38 (final -> sentenciaElseIf final .)
    LIST            reduce using rule 38 (final -> sentenciaElseIf final .)
    CIZQ            reduce using rule 38 (final -> sentenciaElseIf final .)
    NEWLIST         reduce using rule 38 (final -> sentenciaElseIf final .)
    SET             reduce using rule 38 (final -> sentenciaElseIf final .)
    SETFROM         reduce using rule 38 (final -> sentenciaElseIf final .)
    ENTERO          reduce using rule 38 (final -> sentenciaElseIf final .)
    DOUBLE          reduce using rule 38 (final -> sentenciaElseIf final .)
    STRING          reduce using rule 38 (final -> sentenciaElseIf final .)
    BOOL            reduce using rule 38 (final -> sentenciaElseIf final .)
    LDER            reduce using rule 38 (final -> sentenciaElseIf final .)


state 80

    (41) final -> sentenciaFor PUNTOYCOMA . final
    (42) final -> sentenciaFor PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    LDER            reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]

    sentenciaFor                   shift and go to state 18
    final                          shift and go to state 169
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 81

    (43) final -> sentenciaFor final .

    $end            reduce using rule 43 (final -> sentenciaFor final .)
    PUNTOYCOMA      reduce using rule 43 (final -> sentenciaFor final .)
    VARIABLE        reduce using rule 43 (final -> sentenciaFor final .)
    INT             reduce using rule 43 (final -> sentenciaFor final .)
    DOUBLER         reduce using rule 43 (final -> sentenciaFor final .)
    NUM             reduce using rule 43 (final -> sentenciaFor final .)
    STRINGR         reduce using rule 43 (final -> sentenciaFor final .)
    BOOLR           reduce using rule 43 (final -> sentenciaFor final .)
    DYNAMIC         reduce using rule 43 (final -> sentenciaFor final .)
    VAR             reduce using rule 43 (final -> sentenciaFor final .)
    WHILE           reduce using rule 43 (final -> sentenciaFor final .)
    DO              reduce using rule 43 (final -> sentenciaFor final .)
    IF              reduce using rule 43 (final -> sentenciaFor final .)
    ELSE            reduce using rule 43 (final -> sentenciaFor final .)
    PRINT           reduce using rule 43 (final -> sentenciaFor final .)
    FUNCIONSTDIN    reduce using rule 43 (final -> sentenciaFor final .)
    FUNCIONSTDOUT   reduce using rule 43 (final -> sentenciaFor final .)
    NOT             reduce using rule 43 (final -> sentenciaFor final .)
    ELSEIF          reduce using rule 43 (final -> sentenciaFor final .)
    FOR             reduce using rule 43 (final -> sentenciaFor final .)
    LIST            reduce using rule 43 (final -> sentenciaFor final .)
    CIZQ            reduce using rule 43 (final -> sentenciaFor final .)
    NEWLIST         reduce using rule 43 (final -> sentenciaFor final .)
    SET             reduce using rule 43 (final -> sentenciaFor final .)
    SETFROM         reduce using rule 43 (final -> sentenciaFor final .)
    ENTERO          reduce using rule 43 (final -> sentenciaFor final .)
    DOUBLE          reduce using rule 43 (final -> sentenciaFor final .)
    STRING          reduce using rule 43 (final -> sentenciaFor final .)
    BOOL            reduce using rule 43 (final -> sentenciaFor final .)
    LDER            reduce using rule 43 (final -> sentenciaFor final .)


state 82

    (45) final -> sentenciaSubstring PUNTOYCOMA . final
    (46) final -> sentenciaSubstring PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    LDER            reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]

    sentenciaSubstring             shift and go to state 19
    final                          shift and go to state 170
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 83

    (47) final -> VARIABLE DSUMA . PUNTOYCOMA final
    (48) final -> VARIABLE DSUMA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 171


state 84

    (49) final -> VARIABLE DRESTA . PUNTOYCOMA final
    (50) final -> VARIABLE DRESTA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 172


state 85

    (182) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (183) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (166) expresionBoolFor -> VARIABLE comparadorMat . expresionDouble
    (167) expresionBoolFor -> VARIABLE comparadorMat . VARIABLE
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 173
    DOUBLE          shift and go to state 176
    ENTERO          shift and go to state 177

    expresionDouble                shift and go to state 174
    valorDouble                    shift and go to state 175
    valorInt                       shift and go to state 155

state 86

    (201) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO PDER
    (202) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO COMA ENTERO PDER

    PIZQ            shift and go to state 178


state 87

    (134) asignacionSimple -> VARIABLE IGUAL . expresion
    (150) expresion -> . valor operadorMat expresion
    (151) expresion -> . valor
    (152) expresion -> . expresionString
    (153) expresion -> . expresionInt
    (154) expresion -> . expresionDouble
    (155) expresion -> . expresionBool
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 156
    VARIABLE        shift and go to state 179
    DOUBLE          shift and go to state 186
    STRING          shift and go to state 187
    FUNCIONSTDIN    shift and go to state 190
    BOOL            shift and go to state 56
    NOT             shift and go to state 44

    expresion                      shift and go to state 180
    valor                          shift and go to state 181
    expresionString                shift and go to state 182
    expresionInt                   shift and go to state 183
    expresionDouble                shift and go to state 184
    expresionBool                  shift and go to state 185
    valorString                    shift and go to state 34
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 188
    valorBool                      shift and go to state 153
    negacionBool                   shift and go to state 154
    comparacionBool                shift and go to state 189
    expresionIndexString           shift and go to state 55
    sentenciaSubstring             shift and go to state 191

state 88

    (217) comparadorMat -> DIGUAL .

    VARIABLE        reduce using rule 217 (comparadorMat -> DIGUAL .)
    DOUBLE          reduce using rule 217 (comparadorMat -> DIGUAL .)
    ENTERO          reduce using rule 217 (comparadorMat -> DIGUAL .)


state 89

    (218) comparadorMat -> NOIGUAL .

    VARIABLE        reduce using rule 218 (comparadorMat -> NOIGUAL .)
    DOUBLE          reduce using rule 218 (comparadorMat -> NOIGUAL .)
    ENTERO          reduce using rule 218 (comparadorMat -> NOIGUAL .)


state 90

    (219) comparadorMat -> MAYOR .

    VARIABLE        reduce using rule 219 (comparadorMat -> MAYOR .)
    DOUBLE          reduce using rule 219 (comparadorMat -> MAYOR .)
    ENTERO          reduce using rule 219 (comparadorMat -> MAYOR .)


state 91

    (220) comparadorMat -> MENOR .

    VARIABLE        reduce using rule 220 (comparadorMat -> MENOR .)
    DOUBLE          reduce using rule 220 (comparadorMat -> MENOR .)
    ENTERO          reduce using rule 220 (comparadorMat -> MENOR .)


state 92

    (221) comparadorMat -> MAYIGUAL .

    VARIABLE        reduce using rule 221 (comparadorMat -> MAYIGUAL .)
    DOUBLE          reduce using rule 221 (comparadorMat -> MAYIGUAL .)
    ENTERO          reduce using rule 221 (comparadorMat -> MAYIGUAL .)


state 93

    (222) comparadorMat -> MENIGUAL .

    VARIABLE        reduce using rule 222 (comparadorMat -> MENIGUAL .)
    DOUBLE          reduce using rule 222 (comparadorMat -> MENIGUAL .)
    ENTERO          reduce using rule 222 (comparadorMat -> MENIGUAL .)


state 94

    (51) final -> expresionLista PUNTOYCOMA .
    (52) final -> expresionLista PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    LDER            reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]

    expresionLista                 shift and go to state 21
    final                          shift and go to state 192
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 95

    (53) final -> expresionNewList PUNTOYCOMA .
    (54) final -> expresionNewList PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    LDER            reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]

    expresionNewList               shift and go to state 22
    final                          shift and go to state 193
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 96

    (55) final -> expresionSet PUNTOYCOMA .
    (56) final -> expresionSet PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    LDER            reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]

    expresionSet                   shift and go to state 23
    final                          shift and go to state 194
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 97

    (126) asignacion -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 195


state 98

    (127) asignacion -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 196


state 99

    (128) asignacion -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 197


state 100

    (129) asignacion -> STRINGR VARIABLE . IGUAL expresionString

    IGUAL           shift and go to state 198


state 101

    (130) asignacion -> BOOLR VARIABLE . IGUAL expresionBool

    IGUAL           shift and go to state 199


state 102

    (131) asignacion -> DYNAMIC VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 200


state 103

    (132) asignacion -> VAR VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 201


state 104

    (205) expresionInt -> valorInt operadorMat . expresionInt
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE

    ENTERO          shift and go to state 177
    VARIABLE        shift and go to state 204

    valorInt                       shift and go to state 202
    expresionInt                   shift and go to state 203

state 105

    (211) operadorMat -> SUMA .

    ENTERO          reduce using rule 211 (operadorMat -> SUMA .)
    VARIABLE        reduce using rule 211 (operadorMat -> SUMA .)
    DOUBLE          reduce using rule 211 (operadorMat -> SUMA .)
    STRING          reduce using rule 211 (operadorMat -> SUMA .)
    FUNCIONSTDIN    reduce using rule 211 (operadorMat -> SUMA .)
    BOOL            reduce using rule 211 (operadorMat -> SUMA .)
    NOT             reduce using rule 211 (operadorMat -> SUMA .)


state 106

    (212) operadorMat -> RESTA .

    ENTERO          reduce using rule 212 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 212 (operadorMat -> RESTA .)
    DOUBLE          reduce using rule 212 (operadorMat -> RESTA .)
    STRING          reduce using rule 212 (operadorMat -> RESTA .)
    FUNCIONSTDIN    reduce using rule 212 (operadorMat -> RESTA .)
    BOOL            reduce using rule 212 (operadorMat -> RESTA .)
    NOT             reduce using rule 212 (operadorMat -> RESTA .)


state 107

    (213) operadorMat -> MULTI .

    ENTERO          reduce using rule 213 (operadorMat -> MULTI .)
    VARIABLE        reduce using rule 213 (operadorMat -> MULTI .)
    DOUBLE          reduce using rule 213 (operadorMat -> MULTI .)
    STRING          reduce using rule 213 (operadorMat -> MULTI .)
    FUNCIONSTDIN    reduce using rule 213 (operadorMat -> MULTI .)
    BOOL            reduce using rule 213 (operadorMat -> MULTI .)
    NOT             reduce using rule 213 (operadorMat -> MULTI .)


state 108

    (214) operadorMat -> DIV .

    ENTERO          reduce using rule 214 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 214 (operadorMat -> DIV .)
    DOUBLE          reduce using rule 214 (operadorMat -> DIV .)
    STRING          reduce using rule 214 (operadorMat -> DIV .)
    FUNCIONSTDIN    reduce using rule 214 (operadorMat -> DIV .)
    BOOL            reduce using rule 214 (operadorMat -> DIV .)
    NOT             reduce using rule 214 (operadorMat -> DIV .)


state 109

    (215) operadorMat -> DIVENTERO .

    ENTERO          reduce using rule 215 (operadorMat -> DIVENTERO .)
    VARIABLE        reduce using rule 215 (operadorMat -> DIVENTERO .)
    DOUBLE          reduce using rule 215 (operadorMat -> DIVENTERO .)
    STRING          reduce using rule 215 (operadorMat -> DIVENTERO .)
    FUNCIONSTDIN    reduce using rule 215 (operadorMat -> DIVENTERO .)
    BOOL            reduce using rule 215 (operadorMat -> DIVENTERO .)
    NOT             reduce using rule 215 (operadorMat -> DIVENTERO .)


state 110

    (216) operadorMat -> MOD .

    ENTERO          reduce using rule 216 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 216 (operadorMat -> MOD .)
    DOUBLE          reduce using rule 216 (operadorMat -> MOD .)
    STRING          reduce using rule 216 (operadorMat -> MOD .)
    FUNCIONSTDIN    reduce using rule 216 (operadorMat -> MOD .)
    BOOL            reduce using rule 216 (operadorMat -> MOD .)
    NOT             reduce using rule 216 (operadorMat -> MOD .)


state 111

    (209) expresionDouble -> valorDouble operadorMat . expresionDouble
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 176
    ENTERO          shift and go to state 177
    VARIABLE        shift and go to state 204

    valorDouble                    shift and go to state 175
    expresionDouble                shift and go to state 205
    valorInt                       shift and go to state 155

state 112

    (181) expresionBool -> valorDouble comparadorMat . expresionDouble
    (184) expresionBool -> valorDouble comparadorMat . VARIABLE
    (165) expresionBoolFor -> valorDouble comparadorMat . expresionDouble
    (168) expresionBoolFor -> valorDouble comparadorMat . VARIABLE
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 207
    DOUBLE          shift and go to state 176
    ENTERO          shift and go to state 177

    valorDouble                    shift and go to state 175
    expresionDouble                shift and go to state 206
    valorInt                       shift and go to state 155

state 113

    (198) expresionString -> valorString SUMA . expresionString
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 209
    VARIABLE        shift and go to state 210
    FUNCIONSTDIN    shift and go to state 190

    valorString                    shift and go to state 34
    expresionString                shift and go to state 208
    expresionIndexString           shift and go to state 55
    sentenciaSubstring             shift and go to state 191

state 114

    (200) expresionIndexString -> valorString CIZQ . ENTERO CDER

    ENTERO          shift and go to state 211


state 115

    (188) expresionBool -> valor IS . objeto
    (225) objeto -> . STRINGR
    (226) objeto -> . INT
    (227) objeto -> . DOUBLER
    (228) objeto -> . NUM
    (229) objeto -> . VAR
    (230) objeto -> . DYNAMIC
    (231) objeto -> . LIST
    (232) objeto -> . BOOL
    (233) objeto -> . MAP
    (234) objeto -> . SET

    STRINGR         shift and go to state 213
    INT             shift and go to state 214
    DOUBLER         shift and go to state 215
    NUM             shift and go to state 216
    VAR             shift and go to state 217
    DYNAMIC         shift and go to state 218
    LIST            shift and go to state 219
    BOOL            shift and go to state 220
    MAP             shift and go to state 221
    SET             shift and go to state 222

    objeto                         shift and go to state 212

state 116

    (189) expresionBool -> valor ISNEGADO . objeto
    (225) objeto -> . STRINGR
    (226) objeto -> . INT
    (227) objeto -> . DOUBLER
    (228) objeto -> . NUM
    (229) objeto -> . VAR
    (230) objeto -> . DYNAMIC
    (231) objeto -> . LIST
    (232) objeto -> . BOOL
    (233) objeto -> . MAP
    (234) objeto -> . SET

    STRINGR         shift and go to state 213
    INT             shift and go to state 214
    DOUBLER         shift and go to state 215
    NUM             shift and go to state 216
    VAR             shift and go to state 217
    DYNAMIC         shift and go to state 218
    LIST            shift and go to state 219
    BOOL            shift and go to state 220
    MAP             shift and go to state 221
    SET             shift and go to state 222

    objeto                         shift and go to state 223

state 117

    (176) sentenciaWhile -> WHILE PIZQ . expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> WHILE PIZQ . expresionBool PDER final
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 152
    DOUBLE          shift and go to state 53
    BOOL            shift and go to state 56
    NOT             shift and go to state 44
    ENTERO          shift and go to state 156
    STRING          shift and go to state 157

    expresionBool                  shift and go to state 224
    valorDouble                    shift and go to state 151
    valorBool                      shift and go to state 153
    negacionBool                   shift and go to state 154
    comparacionBool                shift and go to state 189
    valor                          shift and go to state 36
    valorInt                       shift and go to state 155

state 118

    (178) sentenciaDoWhile -> DO LIZQ . final LDER WHILE PIZQ expresionBool PDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    final                          shift and go to state 225
    expresionBool                  shift and go to state 6
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 119

    (140) sentenciaIf -> IF PIZQ . expresionBool PDER final
    (141) sentenciaIf -> IF PIZQ . expresionBool PDER LIZQ final LDER
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 152
    DOUBLE          shift and go to state 53
    BOOL            shift and go to state 56
    NOT             shift and go to state 44
    ENTERO          shift and go to state 156
    STRING          shift and go to state 157

    expresionBool                  shift and go to state 226
    valorDouble                    shift and go to state 151
    valorBool                      shift and go to state 153
    negacionBool                   shift and go to state 154
    comparacionBool                shift and go to state 189
    valor                          shift and go to state 36
    valorInt                       shift and go to state 155

state 120

    (142) sentenciaElse -> ELSE final .

    PUNTOYCOMA      reduce using rule 142 (sentenciaElse -> ELSE final .)
    VARIABLE        reduce using rule 142 (sentenciaElse -> ELSE final .)
    INT             reduce using rule 142 (sentenciaElse -> ELSE final .)
    DOUBLER         reduce using rule 142 (sentenciaElse -> ELSE final .)
    NUM             reduce using rule 142 (sentenciaElse -> ELSE final .)
    STRINGR         reduce using rule 142 (sentenciaElse -> ELSE final .)
    BOOLR           reduce using rule 142 (sentenciaElse -> ELSE final .)
    DYNAMIC         reduce using rule 142 (sentenciaElse -> ELSE final .)
    VAR             reduce using rule 142 (sentenciaElse -> ELSE final .)
    WHILE           reduce using rule 142 (sentenciaElse -> ELSE final .)
    DO              reduce using rule 142 (sentenciaElse -> ELSE final .)
    IF              reduce using rule 142 (sentenciaElse -> ELSE final .)
    ELSE            reduce using rule 142 (sentenciaElse -> ELSE final .)
    PRINT           reduce using rule 142 (sentenciaElse -> ELSE final .)
    FUNCIONSTDIN    reduce using rule 142 (sentenciaElse -> ELSE final .)
    FUNCIONSTDOUT   reduce using rule 142 (sentenciaElse -> ELSE final .)
    NOT             reduce using rule 142 (sentenciaElse -> ELSE final .)
    ELSEIF          reduce using rule 142 (sentenciaElse -> ELSE final .)
    FOR             reduce using rule 142 (sentenciaElse -> ELSE final .)
    LIST            reduce using rule 142 (sentenciaElse -> ELSE final .)
    CIZQ            reduce using rule 142 (sentenciaElse -> ELSE final .)
    NEWLIST         reduce using rule 142 (sentenciaElse -> ELSE final .)
    SET             reduce using rule 142 (sentenciaElse -> ELSE final .)
    SETFROM         reduce using rule 142 (sentenciaElse -> ELSE final .)
    ENTERO          reduce using rule 142 (sentenciaElse -> ELSE final .)
    DOUBLE          reduce using rule 142 (sentenciaElse -> ELSE final .)
    STRING          reduce using rule 142 (sentenciaElse -> ELSE final .)
    BOOL            reduce using rule 142 (sentenciaElse -> ELSE final .)
    $end            reduce using rule 142 (sentenciaElse -> ELSE final .)
    LDER            reduce using rule 142 (sentenciaElse -> ELSE final .)


state 121

    (143) sentenciaElse -> ELSE LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    final                          shift and go to state 227
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 122

    (135) imprimir -> PRINT PIZQ . expresion PDER
    (136) imprimir -> PRINT PIZQ . asignacionSimple PDER
    (150) expresion -> . valor operadorMat expresion
    (151) expresion -> . valor
    (152) expresion -> . expresionString
    (153) expresion -> . expresionInt
    (154) expresion -> . expresionDouble
    (155) expresion -> . expresionBool
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 230
    ENTERO          shift and go to state 156
    DOUBLE          shift and go to state 186
    STRING          shift and go to state 187
    FUNCIONSTDIN    shift and go to state 190
    BOOL            shift and go to state 56
    NOT             shift and go to state 44

    expresion                      shift and go to state 228
    asignacionSimple               shift and go to state 229
    valor                          shift and go to state 181
    expresionString                shift and go to state 182
    expresionInt                   shift and go to state 183
    expresionDouble                shift and go to state 184
    expresionBool                  shift and go to state 185
    valorString                    shift and go to state 34
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 188
    valorBool                      shift and go to state 153
    negacionBool                   shift and go to state 154
    comparacionBool                shift and go to state 189
    expresionIndexString           shift and go to state 55
    sentenciaSubstring             shift and go to state 191

state 123

    (138) funcionStdout -> FUNCIONSTDOUT PIZQ . expresion PDER
    (139) funcionStdout -> FUNCIONSTDOUT PIZQ . asignacionSimple PDER
    (150) expresion -> . valor operadorMat expresion
    (151) expresion -> . valor
    (152) expresion -> . expresionString
    (153) expresion -> . expresionInt
    (154) expresion -> . expresionDouble
    (155) expresion -> . expresionBool
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 230
    ENTERO          shift and go to state 156
    DOUBLE          shift and go to state 186
    STRING          shift and go to state 187
    FUNCIONSTDIN    shift and go to state 190
    BOOL            shift and go to state 56
    NOT             shift and go to state 44

    expresion                      shift and go to state 231
    asignacionSimple               shift and go to state 232
    valor                          shift and go to state 181
    expresionString                shift and go to state 182
    expresionInt                   shift and go to state 183
    expresionDouble                shift and go to state 184
    expresionBool                  shift and go to state 185
    valorString                    shift and go to state 34
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 188
    valorBool                      shift and go to state 153
    negacionBool                   shift and go to state 154
    comparacionBool                shift and go to state 189
    expresionIndexString           shift and go to state 55
    sentenciaSubstring             shift and go to state 191

state 124

    (190) negacionBool -> NOT PIZQ . expresionBool PDER
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 152
    DOUBLE          shift and go to state 53
    BOOL            shift and go to state 56
    NOT             shift and go to state 44
    ENTERO          shift and go to state 156
    STRING          shift and go to state 157

    expresionBool                  shift and go to state 233
    valorDouble                    shift and go to state 151
    valorBool                      shift and go to state 153
    negacionBool                   shift and go to state 154
    comparacionBool                shift and go to state 189
    valor                          shift and go to state 36
    valorInt                       shift and go to state 155

state 125

    (144) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER final
    (145) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER LIZQ final LDER
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 152
    DOUBLE          shift and go to state 53
    BOOL            shift and go to state 56
    NOT             shift and go to state 44
    ENTERO          shift and go to state 156
    STRING          shift and go to state 157

    expresionBool                  shift and go to state 234
    valorDouble                    shift and go to state 151
    valorBool                      shift and go to state 153
    negacionBool                   shift and go to state 154
    comparacionBool                shift and go to state 189
    valor                          shift and go to state 36
    valorInt                       shift and go to state 155

state 126

    (172) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (156) asignacionFor -> . INT VARIABLE IGUAL expresionInt
    (157) asignacionFor -> . DOUBLER VARIABLE IGUAL expresionDouble
    (158) asignacionFor -> . NUM VARIABLE IGUAL expresionDouble
    (159) asignacionFor -> . DYNAMIC VARIABLE IGUAL expresionInt
    (160) asignacionFor -> . DYNAMIC VARIABLE IGUAL expresionDouble
    (161) asignacionFor -> . VAR VARIABLE IGUAL expresionInt
    (162) asignacionFor -> . VAR VARIABLE IGUAL expresionDouble
    (163) asignacionFor -> . VARIABLE IGUAL expresionInt
    (164) asignacionFor -> . VARIABLE IGUAL expresionDouble

    INT             shift and go to state 237
    DOUBLER         shift and go to state 238
    NUM             shift and go to state 239
    DYNAMIC         shift and go to state 240
    VAR             shift and go to state 241
    VARIABLE        shift and go to state 236

    asignacionFor                  shift and go to state 235

state 127

    (65) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE
    (66) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (69) expresionLista -> LIST MENOR . INT MAYOR VARIABLE
    (70) expresionLista -> LIST MENOR . INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> LIST MENOR . INT MAYOR VARIABLE IGUAL expresionNewList
    (73) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE
    (74) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (77) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE
    (78) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE
    (81) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (84) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (88) expresionLista -> LIST MENOR . SET MAYOR VARIABLE
    (89) expresionLista -> LIST MENOR . SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> LIST MENOR . SET MAYOR VARIABLE IGUAL expresionNewList

    STRINGR         shift and go to state 242
    INT             shift and go to state 243
    DOUBLER         shift and go to state 244
    NUM             shift and go to state 245
    BOOLR           shift and go to state 246
    DYNAMIC         shift and go to state 247
    SET             shift and go to state 248


state 128

    (68) expresionLista -> CIZQ expListString . CDER

    CDER            shift and go to state 249


state 129

    (64) expresionNewList -> CIZQ CDER .

    PUNTOYCOMA      reduce using rule 64 (expresionNewList -> CIZQ CDER .)


state 130

    (72) expresionLista -> CIZQ expListInt . CDER

    CDER            shift and go to state 250


state 131

    (76) expresionLista -> CIZQ expListNum . CDER

    CDER            shift and go to state 251


state 132

    (83) expresionLista -> CIZQ expListBool . CDER

    CDER            shift and go to state 252


state 133

    (87) expresionLista -> CIZQ expListDynamic . CDER

    CDER            shift and go to state 253


state 134

    (91) expresionLista -> CIZQ expListSet . CDER

    CDER            shift and go to state 254


state 135

    (92) expListString -> STRING .
    (93) expListString -> STRING . COMA expListString
    (110) expListDynamic -> STRING .
    (114) expListDynamic -> STRING . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 92 (expListString -> STRING .)
    CDER            reduce using rule 92 (expListString -> STRING .)
    COMA            shift and go to state 255

  ! CDER            [ reduce using rule 110 (expListDynamic -> STRING .) ]


state 136

    (94) expListString -> VARIABLE .
    (95) expListString -> VARIABLE . COMA expListString
    (98) expListInt -> VARIABLE .
    (99) expListInt -> VARIABLE . COMA expListInt
    (104) expListNum -> VARIABLE .
    (105) expListNum -> VARIABLE . COMA expListNum
    (108) expListBool -> VARIABLE .
    (109) expListBool -> VARIABLE . COMA expListBool
    (118) expListDynamic -> VARIABLE .
    (119) expListDynamic -> VARIABLE . COMA expListDynamic
    (124) expListSet -> VARIABLE .
    (125) expListSet -> VARIABLE . COMA expListSet

  ! reduce/reduce conflict for CDER resolved using rule 94 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 94 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 94 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 94 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 94 (expListString -> VARIABLE .)
    CDER            reduce using rule 94 (expListString -> VARIABLE .)
    COMA            shift and go to state 256

  ! CDER            [ reduce using rule 98 (expListInt -> VARIABLE .) ]
  ! CDER            [ reduce using rule 104 (expListNum -> VARIABLE .) ]
  ! CDER            [ reduce using rule 108 (expListBool -> VARIABLE .) ]
  ! CDER            [ reduce using rule 118 (expListDynamic -> VARIABLE .) ]
  ! CDER            [ reduce using rule 124 (expListSet -> VARIABLE .) ]


state 137

    (96) expListInt -> ENTERO .
    (97) expListInt -> ENTERO . COMA expListInt
    (100) expListNum -> ENTERO .
    (102) expListNum -> ENTERO . COMA expListNum
    (111) expListDynamic -> ENTERO .
    (115) expListDynamic -> ENTERO . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 96 (expListInt -> ENTERO .)
  ! reduce/reduce conflict for CDER resolved using rule 96 (expListInt -> ENTERO .)
    CDER            reduce using rule 96 (expListInt -> ENTERO .)
    COMA            shift and go to state 257

  ! CDER            [ reduce using rule 100 (expListNum -> ENTERO .) ]
  ! CDER            [ reduce using rule 111 (expListDynamic -> ENTERO .) ]


state 138

    (101) expListNum -> DOUBLE .
    (103) expListNum -> DOUBLE . COMA expListNum
    (112) expListDynamic -> DOUBLE .
    (116) expListDynamic -> DOUBLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 101 (expListNum -> DOUBLE .)
    CDER            reduce using rule 101 (expListNum -> DOUBLE .)
    COMA            shift and go to state 258

  ! CDER            [ reduce using rule 112 (expListDynamic -> DOUBLE .) ]


state 139

    (106) expListBool -> BOOL .
    (107) expListBool -> BOOL . COMA expListBool
    (113) expListDynamic -> BOOL .
    (117) expListDynamic -> BOOL . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 106 (expListBool -> BOOL .)
    CDER            reduce using rule 106 (expListBool -> BOOL .)
    COMA            shift and go to state 259

  ! CDER            [ reduce using rule 113 (expListDynamic -> BOOL .) ]


state 140

    (120) expListSet -> SETFROM . PIZQ CIZQ CDER PDER
    (121) expListSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER
    (122) expListSet -> SETFROM . PIZQ CIZQ CDER PDER COMA expListSet
    (123) expListSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER COMA expListSet

    PIZQ            shift and go to state 260


state 141

    (57) expresionSet -> SET VARIABLE .
    (59) expresionSet -> SET VARIABLE . IGUAL SETFROM PIZQ CIZQ CDER PDER
    (61) expresionSet -> SET VARIABLE . IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER

    PUNTOYCOMA      reduce using rule 57 (expresionSet -> SET VARIABLE .)
    IGUAL           shift and go to state 261


state 142

    (62) expresionNewList -> NEWLIST PIZQ . PDER
    (63) expresionNewList -> NEWLIST PIZQ . ENTERO PDER

    PDER            shift and go to state 262
    ENTERO          shift and go to state 263


state 143

    (58) expresionSet -> SETFROM PIZQ . CIZQ CDER PDER
    (60) expresionSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 264


state 144

    (2) final -> asignacion PUNTOYCOMA final .

    $end            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VARIABLE        reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    INT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLER         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NUM             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRINGR         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOLR           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VAR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    WHILE           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DO              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    IF              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSE            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PRINT           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NOT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSEIF          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FOR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LIST            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    CIZQ            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NEWLIST         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    SET             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    SETFROM         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ENTERO          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLE          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRING          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOL            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LDER            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)


state 145

    (4) final -> expresionInt PUNTOYCOMA final .

    $end            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VARIABLE        reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    INT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLER         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NUM             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRINGR         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOLR           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VAR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    WHILE           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DO              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    IF              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSE            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PRINT           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NOT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSEIF          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FOR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LIST            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    CIZQ            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NEWLIST         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    SET             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    SETFROM         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ENTERO          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLE          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRING          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOL            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LDER            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)


state 146

    (6) final -> expresionDouble PUNTOYCOMA final .

    $end            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VARIABLE        reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    INT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLER         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NUM             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRINGR         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOLR           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VAR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    WHILE           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DO              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    IF              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSE            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PRINT           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NOT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSEIF          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FOR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LIST            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    CIZQ            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NEWLIST         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    SET             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    SETFROM         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ENTERO          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLE          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRING          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOL            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LDER            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)


state 147

    (8) final -> expresionString PUNTOYCOMA final .

    $end            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VARIABLE        reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    INT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLER         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NUM             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRINGR         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOLR           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VAR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    WHILE           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DO              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    IF              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSE            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PRINT           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NOT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSEIF          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FOR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LIST            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    CIZQ            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NEWLIST         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    SET             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    SETFROM         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ENTERO          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLE          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRING          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOL            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LDER            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)


state 148

    (10) final -> expresionBool PUNTOYCOMA final .

    $end            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    INT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NUM             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VAR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DO              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    IF              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NOT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FOR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LIST            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    SET             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRING          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LDER            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)


state 149

    (191) comparacionBool -> expresionBool operadorLogico expresionBool .
    (191) comparacionBool -> expresionBool . operadorLogico expresionBool
    (192) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (223) operadorLogico -> . AND
    (224) operadorLogico -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNTOYCOMA      reduce using rule 191 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    PDER            reduce using rule 191 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    AND             shift and go to state 63
    OR              shift and go to state 64

  ! AND             [ reduce using rule 191 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]
  ! OR              [ reduce using rule 191 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]

    operadorLogico                 shift and go to state 62

state 150

    (192) comparacionBool -> expresionBool operadorLogico comparacionBool .
    (187) expresionBool -> comparacionBool .

  ! reduce/reduce conflict for AND resolved using rule 187 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for OR resolved using rule 187 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 187 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PDER resolved using rule 187 (expresionBool -> comparacionBool .)
    AND             reduce using rule 187 (expresionBool -> comparacionBool .)
    OR              reduce using rule 187 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 187 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 187 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 192 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! AND             [ reduce using rule 192 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! OR              [ reduce using rule 192 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! PDER            [ reduce using rule 192 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]


state 151

    (181) expresionBool -> valorDouble . comparadorMat expresionDouble
    (184) expresionBool -> valorDouble . comparadorMat VARIABLE
    (217) comparadorMat -> . DIGUAL
    (218) comparadorMat -> . NOIGUAL
    (219) comparadorMat -> . MAYOR
    (220) comparadorMat -> . MENOR
    (221) comparadorMat -> . MAYIGUAL
    (222) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 88
    NOIGUAL         shift and go to state 89
    MAYOR           shift and go to state 90
    MENOR           shift and go to state 91
    MAYIGUAL        shift and go to state 92
    MENIGUAL        shift and go to state 93

    comparadorMat                  shift and go to state 265

state 152

    (182) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (183) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (180) valorBool -> VARIABLE .
    (147) valor -> VARIABLE .
    (204) valorInt -> VARIABLE .
    (217) comparadorMat -> . DIGUAL
    (218) comparadorMat -> . NOIGUAL
    (219) comparadorMat -> . MAYOR
    (220) comparadorMat -> . MENOR
    (221) comparadorMat -> . MAYIGUAL
    (222) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    AND             reduce using rule 180 (valorBool -> VARIABLE .)
    OR              reduce using rule 180 (valorBool -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 180 (valorBool -> VARIABLE .)
    PDER            reduce using rule 180 (valorBool -> VARIABLE .)
    IS              reduce using rule 147 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 147 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 88
    NOIGUAL         shift and go to state 89
    MAYOR           shift and go to state 90
    MENOR           shift and go to state 91
    MAYIGUAL        shift and go to state 92
    MENIGUAL        shift and go to state 93

  ! DIGUAL          [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 204 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 266

state 153

    (185) expresionBool -> valorBool .

    AND             reduce using rule 185 (expresionBool -> valorBool .)
    OR              reduce using rule 185 (expresionBool -> valorBool .)
    PUNTOYCOMA      reduce using rule 185 (expresionBool -> valorBool .)
    PDER            reduce using rule 185 (expresionBool -> valorBool .)


state 154

    (186) expresionBool -> negacionBool .

    AND             reduce using rule 186 (expresionBool -> negacionBool .)
    OR              reduce using rule 186 (expresionBool -> negacionBool .)
    PUNTOYCOMA      reduce using rule 186 (expresionBool -> negacionBool .)
    PDER            reduce using rule 186 (expresionBool -> negacionBool .)


state 155

    (208) valorDouble -> valorInt .

    DIGUAL          reduce using rule 208 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 208 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 208 (valorDouble -> valorInt .)
    MENOR           reduce using rule 208 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 208 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 208 (valorDouble -> valorInt .)
    SUMA            reduce using rule 208 (valorDouble -> valorInt .)
    RESTA           reduce using rule 208 (valorDouble -> valorInt .)
    MULTI           reduce using rule 208 (valorDouble -> valorInt .)
    DIV             reduce using rule 208 (valorDouble -> valorInt .)
    DIVENTERO       reduce using rule 208 (valorDouble -> valorInt .)
    MOD             reduce using rule 208 (valorDouble -> valorInt .)
    PUNTOYCOMA      reduce using rule 208 (valorDouble -> valorInt .)
    AND             reduce using rule 208 (valorDouble -> valorInt .)
    OR              reduce using rule 208 (valorDouble -> valorInt .)
    PDER            reduce using rule 208 (valorDouble -> valorInt .)


state 156

    (146) valor -> ENTERO .
    (203) valorInt -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 146 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 146 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 146 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 146 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 146 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 146 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 146 (valor -> ENTERO .)
  ! reduce/reduce conflict for PDER resolved using rule 146 (valor -> ENTERO .)
    IS              reduce using rule 146 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 146 (valor -> ENTERO .)
    SUMA            reduce using rule 146 (valor -> ENTERO .)
    RESTA           reduce using rule 146 (valor -> ENTERO .)
    MULTI           reduce using rule 146 (valor -> ENTERO .)
    DIV             reduce using rule 146 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 146 (valor -> ENTERO .)
    MOD             reduce using rule 146 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 146 (valor -> ENTERO .)
    PDER            reduce using rule 146 (valor -> ENTERO .)
    DIGUAL          reduce using rule 203 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 203 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 203 (valorInt -> ENTERO .)
    MENOR           reduce using rule 203 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 203 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 203 (valorInt -> ENTERO .)

  ! SUMA            [ reduce using rule 203 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 203 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 203 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 203 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 203 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 203 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 203 (valorInt -> ENTERO .) ]
  ! PDER            [ reduce using rule 203 (valorInt -> ENTERO .) ]


state 157

    (149) valor -> STRING .

    IS              reduce using rule 149 (valor -> STRING .)
    ISNEGADO        reduce using rule 149 (valor -> STRING .)


state 158

    (12) final -> expresionBoolFor PUNTOYCOMA final .

    $end            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    VARIABLE        reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    INT             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DOUBLER         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NUM             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    STRINGR         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BOOLR           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    VAR             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    WHILE           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DO              reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    IF              reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ELSE            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    PRINT           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NOT             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ELSEIF          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FOR             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LIST            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    CIZQ            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NEWLIST         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    SET             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    SETFROM         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ENTERO          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DOUBLE          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    STRING          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BOOL            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LDER            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)


state 159

    (16) final -> sentenciaWhile PUNTOYCOMA final .

    $end            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    INT             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NUM             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    VAR             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DO              reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    IF              reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NOT             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FOR             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LIST            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    CIZQ            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NEWLIST         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    SET             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    SETFROM         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRING          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LDER            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)


state 160

    (18) final -> sentenciaDoWhile PUNTOYCOMA final .

    $end            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    INT             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NUM             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VAR             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DO              reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    IF              reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NOT             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FOR             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LIST            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    CIZQ            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NEWLIST         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    SET             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    SETFROM         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRING          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LDER            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)


state 161

    (20) final -> sentenciaIf PUNTOYCOMA final .

    $end            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    INT             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NUM             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    VAR             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    WHILE           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DO              reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    IF              reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSE            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    PRINT           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NOT             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FOR             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LIST            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    CIZQ            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NEWLIST         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    SET             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    SETFROM         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    STRING          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOL            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LDER            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)


state 162

    (24) final -> sentenciaElse PUNTOYCOMA final .

    $end            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    VARIABLE        reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    INT             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DOUBLER         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NUM             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    STRINGR         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    BOOLR           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    VAR             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    WHILE           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DO              reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    IF              reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ELSE            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    PRINT           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NOT             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ELSEIF          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FOR             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LIST            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    CIZQ            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NEWLIST         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    SET             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    SETFROM         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ENTERO          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DOUBLE          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    STRING          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    BOOL            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LDER            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)


state 163

    (28) final -> imprimir PUNTOYCOMA final .

    $end            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    VARIABLE        reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    INT             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DOUBLER         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NUM             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    STRINGR         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    BOOLR           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    VAR             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    WHILE           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DO              reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    IF              reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ELSE            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    PRINT           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NOT             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ELSEIF          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FOR             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LIST            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    CIZQ            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NEWLIST         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    SET             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    SETFROM         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ENTERO          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DOUBLE          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    STRING          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    BOOL            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LDER            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)


state 164

    (30) final -> funcionStdin PUNTOYCOMA final .

    $end            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    VARIABLE        reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    INT             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLER         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NUM             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    STRINGR         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    BOOLR           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    VAR             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    WHILE           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DO              reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    IF              reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ELSE            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    PRINT           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NOT             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ELSEIF          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FOR             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LIST            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    CIZQ            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NEWLIST         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    SET             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    SETFROM         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ENTERO          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLE          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    STRING          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    BOOL            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LDER            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)


state 165

    (32) final -> funcionStdout PUNTOYCOMA final .

    $end            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    VARIABLE        reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    INT             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLER         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NUM             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    STRINGR         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    BOOLR           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    VAR             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    WHILE           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DO              reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    IF              reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ELSE            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    PRINT           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NOT             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ELSEIF          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FOR             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LIST            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    CIZQ            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NEWLIST         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    SET             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    SETFROM         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ENTERO          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLE          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    STRING          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    BOOL            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LDER            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)


state 166

    (34) final -> negacionBool PUNTOYCOMA final .

    $end            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    INT             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DO              reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    IF              reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FOR             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LIST            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    SET             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)


state 167

    (35) final -> comparacionBool PUNTOYCOMA final .

    $end            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    INT             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DO              reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    IF              reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FOR             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LIST            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    SET             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)


state 168

    (37) final -> sentenciaElseIf PUNTOYCOMA final .

    $end            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    INT             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NUM             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    VAR             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    WHILE           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DO              reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    IF              reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ELSE            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    PRINT           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NOT             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FOR             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LIST            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    CIZQ            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NEWLIST         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    SET             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    SETFROM         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    STRING          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BOOL            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LDER            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)


state 169

    (41) final -> sentenciaFor PUNTOYCOMA final .

    $end            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    VARIABLE        reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    INT             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DOUBLER         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NUM             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    STRINGR         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    BOOLR           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    VAR             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    WHILE           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DO              reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    IF              reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ELSE            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    PRINT           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NOT             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ELSEIF          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FOR             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LIST            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    CIZQ            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NEWLIST         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    SET             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    SETFROM         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ENTERO          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DOUBLE          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    STRING          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    BOOL            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LDER            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)


state 170

    (45) final -> sentenciaSubstring PUNTOYCOMA final .

    $end            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VARIABLE        reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    INT             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLER         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NUM             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRINGR         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOLR           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VAR             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    WHILE           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DO              reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    IF              reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSE            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PRINT           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NOT             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSEIF          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FOR             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LIST            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    CIZQ            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NEWLIST         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    SET             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    SETFROM         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ENTERO          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLE          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRING          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOL            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LDER            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)


state 171

    (47) final -> VARIABLE DSUMA PUNTOYCOMA . final
    (48) final -> VARIABLE DSUMA PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    LDER            reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]

    final                          shift and go to state 267
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 172

    (49) final -> VARIABLE DRESTA PUNTOYCOMA . final
    (50) final -> VARIABLE DRESTA PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    LDER            reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]

    final                          shift and go to state 268
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 173

    (183) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (167) expresionBoolFor -> VARIABLE comparadorMat VARIABLE .
    (204) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 167 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 167 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 183 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 183 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 183 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 183 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 167 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 204 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 204 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 204 (valorInt -> VARIABLE .)
    DIV             reduce using rule 204 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 204 (valorInt -> VARIABLE .)
    MOD             reduce using rule 204 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 183 (expresionBool -> VARIABLE comparadorMat VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 204 (valorInt -> VARIABLE .) ]


state 174

    (182) expresionBool -> VARIABLE comparadorMat expresionDouble .
    (166) expresionBoolFor -> VARIABLE comparadorMat expresionDouble .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 166 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 182 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 182 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 166 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 182 (expresionBool -> VARIABLE comparadorMat expresionDouble .) ]


state 175

    (209) expresionDouble -> valorDouble . operadorMat expresionDouble
    (210) expresionDouble -> valorDouble .
    (211) operadorMat -> . SUMA
    (212) operadorMat -> . RESTA
    (213) operadorMat -> . MULTI
    (214) operadorMat -> . DIV
    (215) operadorMat -> . DIVENTERO
    (216) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 210 (expresionDouble -> valorDouble .)
    AND             reduce using rule 210 (expresionDouble -> valorDouble .)
    OR              reduce using rule 210 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 210 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 105
    RESTA           shift and go to state 106
    MULTI           shift and go to state 107
    DIV             shift and go to state 108
    DIVENTERO       shift and go to state 109
    MOD             shift and go to state 110

    operadorMat                    shift and go to state 111

state 176

    (207) valorDouble -> DOUBLE .

    SUMA            reduce using rule 207 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 207 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 207 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 207 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 207 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 207 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 207 (valorDouble -> DOUBLE .)
    AND             reduce using rule 207 (valorDouble -> DOUBLE .)
    OR              reduce using rule 207 (valorDouble -> DOUBLE .)
    PDER            reduce using rule 207 (valorDouble -> DOUBLE .)


state 177

    (203) valorInt -> ENTERO .

    SUMA            reduce using rule 203 (valorInt -> ENTERO .)
    RESTA           reduce using rule 203 (valorInt -> ENTERO .)
    MULTI           reduce using rule 203 (valorInt -> ENTERO .)
    DIV             reduce using rule 203 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 203 (valorInt -> ENTERO .)
    MOD             reduce using rule 203 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 203 (valorInt -> ENTERO .)
    AND             reduce using rule 203 (valorInt -> ENTERO .)
    OR              reduce using rule 203 (valorInt -> ENTERO .)
    PDER            reduce using rule 203 (valorInt -> ENTERO .)


state 178

    (201) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO PDER
    (202) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 269


state 179

    (147) valor -> VARIABLE .
    (182) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (183) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (194) valorString -> VARIABLE .
    (204) valorInt -> VARIABLE .
    (180) valorBool -> VARIABLE .
    (201) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (217) comparadorMat -> . DIGUAL
    (218) comparadorMat -> . NOIGUAL
    (219) comparadorMat -> . MAYOR
    (220) comparadorMat -> . MENOR
    (221) comparadorMat -> . MAYIGUAL
    (222) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 147 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 147 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 147 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 147 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 147 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 147 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 147 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 147 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 147 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 147 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 147 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 147 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 147 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IS              reduce using rule 147 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 147 (valor -> VARIABLE .)
    SUMA            reduce using rule 147 (valor -> VARIABLE .)
    RESTA           reduce using rule 147 (valor -> VARIABLE .)
    MULTI           reduce using rule 147 (valor -> VARIABLE .)
    DIV             reduce using rule 147 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 147 (valor -> VARIABLE .)
    MOD             reduce using rule 147 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 147 (valor -> VARIABLE .)
    PDER            reduce using rule 147 (valor -> VARIABLE .)
    CIZQ            reduce using rule 194 (valorString -> VARIABLE .)
    AND             reduce using rule 180 (valorBool -> VARIABLE .)
    OR              reduce using rule 180 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 86
    DIGUAL          shift and go to state 88
    NOIGUAL         shift and go to state 89
    MAYOR           shift and go to state 90
    MENOR           shift and go to state 91
    MAYIGUAL        shift and go to state 92
    MENIGUAL        shift and go to state 93

  ! SUMA            [ reduce using rule 194 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 194 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 194 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 180 (valorBool -> VARIABLE .) ]
  ! PDER            [ reduce using rule 180 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 266

state 180

    (134) asignacionSimple -> VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 134 (asignacionSimple -> VARIABLE IGUAL expresion .)
    PDER            reduce using rule 134 (asignacionSimple -> VARIABLE IGUAL expresion .)


state 181

    (150) expresion -> valor . operadorMat expresion
    (151) expresion -> valor .
    (188) expresionBool -> valor . IS objeto
    (189) expresionBool -> valor . ISNEGADO objeto
    (211) operadorMat -> . SUMA
    (212) operadorMat -> . RESTA
    (213) operadorMat -> . MULTI
    (214) operadorMat -> . DIV
    (215) operadorMat -> . DIVENTERO
    (216) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 151 (expresion -> valor .)
    PDER            reduce using rule 151 (expresion -> valor .)
    IS              shift and go to state 115
    ISNEGADO        shift and go to state 116
    SUMA            shift and go to state 105
    RESTA           shift and go to state 106
    MULTI           shift and go to state 107
    DIV             shift and go to state 108
    DIVENTERO       shift and go to state 109
    MOD             shift and go to state 110

    operadorMat                    shift and go to state 270

state 182

    (152) expresion -> expresionString .

    PUNTOYCOMA      reduce using rule 152 (expresion -> expresionString .)
    PDER            reduce using rule 152 (expresion -> expresionString .)


state 183

    (153) expresion -> expresionInt .

    PUNTOYCOMA      reduce using rule 153 (expresion -> expresionInt .)
    PDER            reduce using rule 153 (expresion -> expresionInt .)


state 184

    (154) expresion -> expresionDouble .

    PUNTOYCOMA      reduce using rule 154 (expresion -> expresionDouble .)
    PDER            reduce using rule 154 (expresion -> expresionDouble .)


state 185

    (155) expresion -> expresionBool .
    (191) comparacionBool -> expresionBool . operadorLogico expresionBool
    (192) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (223) operadorLogico -> . AND
    (224) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 155 (expresion -> expresionBool .)
    PDER            reduce using rule 155 (expresion -> expresionBool .)
    AND             shift and go to state 63
    OR              shift and go to state 64

    operadorLogico                 shift and go to state 62

state 186

    (148) valor -> DOUBLE .
    (207) valorDouble -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 148 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 148 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 148 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 148 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 148 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 148 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 148 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PDER resolved using rule 148 (valor -> DOUBLE .)
    IS              reduce using rule 148 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 148 (valor -> DOUBLE .)
    SUMA            reduce using rule 148 (valor -> DOUBLE .)
    RESTA           reduce using rule 148 (valor -> DOUBLE .)
    MULTI           reduce using rule 148 (valor -> DOUBLE .)
    DIV             reduce using rule 148 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 148 (valor -> DOUBLE .)
    MOD             reduce using rule 148 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 148 (valor -> DOUBLE .)
    PDER            reduce using rule 148 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 207 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 207 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 207 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 207 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 207 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 207 (valorDouble -> DOUBLE .)

  ! SUMA            [ reduce using rule 207 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 207 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 207 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 207 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 207 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 207 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 207 (valorDouble -> DOUBLE .) ]
  ! PDER            [ reduce using rule 207 (valorDouble -> DOUBLE .) ]


state 187

    (149) valor -> STRING .
    (193) valorString -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 149 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 149 (valor -> STRING .)
  ! reduce/reduce conflict for PDER resolved using rule 149 (valor -> STRING .)
    IS              reduce using rule 149 (valor -> STRING .)
    ISNEGADO        reduce using rule 149 (valor -> STRING .)
    SUMA            reduce using rule 149 (valor -> STRING .)
    RESTA           reduce using rule 149 (valor -> STRING .)
    MULTI           reduce using rule 149 (valor -> STRING .)
    DIV             reduce using rule 149 (valor -> STRING .)
    DIVENTERO       reduce using rule 149 (valor -> STRING .)
    MOD             reduce using rule 149 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 149 (valor -> STRING .)
    PDER            reduce using rule 149 (valor -> STRING .)
    CIZQ            reduce using rule 193 (valorString -> STRING .)

  ! SUMA            [ reduce using rule 193 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 193 (valorString -> STRING .) ]
  ! PDER            [ reduce using rule 193 (valorString -> STRING .) ]


state 188

    (209) expresionDouble -> valorDouble . operadorMat expresionDouble
    (210) expresionDouble -> valorDouble .
    (181) expresionBool -> valorDouble . comparadorMat expresionDouble
    (184) expresionBool -> valorDouble . comparadorMat VARIABLE
    (211) operadorMat -> . SUMA
    (212) operadorMat -> . RESTA
    (213) operadorMat -> . MULTI
    (214) operadorMat -> . DIV
    (215) operadorMat -> . DIVENTERO
    (216) operadorMat -> . MOD
    (217) comparadorMat -> . DIGUAL
    (218) comparadorMat -> . NOIGUAL
    (219) comparadorMat -> . MAYOR
    (220) comparadorMat -> . MENOR
    (221) comparadorMat -> . MAYIGUAL
    (222) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 210 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 210 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 105
    RESTA           shift and go to state 106
    MULTI           shift and go to state 107
    DIV             shift and go to state 108
    DIVENTERO       shift and go to state 109
    MOD             shift and go to state 110
    DIGUAL          shift and go to state 88
    NOIGUAL         shift and go to state 89
    MAYOR           shift and go to state 90
    MENOR           shift and go to state 91
    MAYIGUAL        shift and go to state 92
    MENIGUAL        shift and go to state 93

    operadorMat                    shift and go to state 111
    comparadorMat                  shift and go to state 265

state 189

    (187) expresionBool -> comparacionBool .

    AND             reduce using rule 187 (expresionBool -> comparacionBool .)
    OR              reduce using rule 187 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 187 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 187 (expresionBool -> comparacionBool .)


state 190

    (195) valorString -> FUNCIONSTDIN .

    SUMA            reduce using rule 195 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 195 (valorString -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 195 (valorString -> FUNCIONSTDIN .)
    PDER            reduce using rule 195 (valorString -> FUNCIONSTDIN .)


state 191

    (197) valorString -> sentenciaSubstring .

    SUMA            reduce using rule 197 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 197 (valorString -> sentenciaSubstring .)
    PUNTOYCOMA      reduce using rule 197 (valorString -> sentenciaSubstring .)
    PDER            reduce using rule 197 (valorString -> sentenciaSubstring .)


state 192

    (52) final -> expresionLista PUNTOYCOMA final .

    $end            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    VARIABLE        reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    INT             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DOUBLER         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NUM             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    STRINGR         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    BOOLR           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    VAR             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    WHILE           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DO              reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    IF              reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ELSE            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    PRINT           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NOT             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ELSEIF          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FOR             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LIST            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    CIZQ            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NEWLIST         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    SET             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    SETFROM         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ENTERO          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DOUBLE          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    STRING          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    BOOL            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LDER            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)


state 193

    (54) final -> expresionNewList PUNTOYCOMA final .

    $end            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    VARIABLE        reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    INT             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DOUBLER         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NUM             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    STRINGR         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    BOOLR           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    VAR             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    WHILE           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DO              reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    IF              reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ELSE            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    PRINT           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NOT             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ELSEIF          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FOR             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LIST            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    CIZQ            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NEWLIST         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    SET             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    SETFROM         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ENTERO          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DOUBLE          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    STRING          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    BOOL            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LDER            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)


state 194

    (56) final -> expresionSet PUNTOYCOMA final .

    $end            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    VARIABLE        reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    INT             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DOUBLER         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    NUM             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    STRINGR         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    BOOLR           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    VAR             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    WHILE           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DO              reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    IF              reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    ELSE            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    PRINT           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    NOT             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    ELSEIF          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    FOR             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    LIST            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    CIZQ            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    NEWLIST         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    SET             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    SETFROM         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    ENTERO          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DOUBLE          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    STRING          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    BOOL            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    LDER            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)


state 195

    (126) asignacion -> INT VARIABLE IGUAL . expresionInt
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE

    ENTERO          shift and go to state 177
    VARIABLE        shift and go to state 204

    expresionInt                   shift and go to state 271
    valorInt                       shift and go to state 202

state 196

    (127) asignacion -> DOUBLER VARIABLE IGUAL . expresionDouble
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 176
    ENTERO          shift and go to state 177
    VARIABLE        shift and go to state 204

    expresionDouble                shift and go to state 272
    valorDouble                    shift and go to state 175
    valorInt                       shift and go to state 155

state 197

    (128) asignacion -> NUM VARIABLE IGUAL . expresionDouble
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 176
    ENTERO          shift and go to state 177
    VARIABLE        shift and go to state 204

    expresionDouble                shift and go to state 273
    valorDouble                    shift and go to state 175
    valorInt                       shift and go to state 155

state 198

    (129) asignacion -> STRINGR VARIABLE IGUAL . expresionString
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 209
    VARIABLE        shift and go to state 210
    FUNCIONSTDIN    shift and go to state 190

    expresionString                shift and go to state 274
    valorString                    shift and go to state 34
    expresionIndexString           shift and go to state 55
    sentenciaSubstring             shift and go to state 191

state 199

    (130) asignacion -> BOOLR VARIABLE IGUAL . expresionBool
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 152
    DOUBLE          shift and go to state 53
    BOOL            shift and go to state 56
    NOT             shift and go to state 44
    ENTERO          shift and go to state 156
    STRING          shift and go to state 157

    expresionBool                  shift and go to state 275
    valorDouble                    shift and go to state 151
    valorBool                      shift and go to state 153
    negacionBool                   shift and go to state 154
    comparacionBool                shift and go to state 189
    valor                          shift and go to state 36
    valorInt                       shift and go to state 155

state 200

    (131) asignacion -> DYNAMIC VARIABLE IGUAL . expresion
    (150) expresion -> . valor operadorMat expresion
    (151) expresion -> . valor
    (152) expresion -> . expresionString
    (153) expresion -> . expresionInt
    (154) expresion -> . expresionDouble
    (155) expresion -> . expresionBool
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 156
    VARIABLE        shift and go to state 179
    DOUBLE          shift and go to state 186
    STRING          shift and go to state 187
    FUNCIONSTDIN    shift and go to state 190
    BOOL            shift and go to state 56
    NOT             shift and go to state 44

    expresion                      shift and go to state 276
    valor                          shift and go to state 181
    expresionString                shift and go to state 182
    expresionInt                   shift and go to state 183
    expresionDouble                shift and go to state 184
    expresionBool                  shift and go to state 185
    valorString                    shift and go to state 34
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 188
    valorBool                      shift and go to state 153
    negacionBool                   shift and go to state 154
    comparacionBool                shift and go to state 189
    expresionIndexString           shift and go to state 55
    sentenciaSubstring             shift and go to state 191

state 201

    (132) asignacion -> VAR VARIABLE IGUAL . expresion
    (150) expresion -> . valor operadorMat expresion
    (151) expresion -> . valor
    (152) expresion -> . expresionString
    (153) expresion -> . expresionInt
    (154) expresion -> . expresionDouble
    (155) expresion -> . expresionBool
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 156
    VARIABLE        shift and go to state 179
    DOUBLE          shift and go to state 186
    STRING          shift and go to state 187
    FUNCIONSTDIN    shift and go to state 190
    BOOL            shift and go to state 56
    NOT             shift and go to state 44

    expresion                      shift and go to state 277
    valor                          shift and go to state 181
    expresionString                shift and go to state 182
    expresionInt                   shift and go to state 183
    expresionDouble                shift and go to state 184
    expresionBool                  shift and go to state 185
    valorString                    shift and go to state 34
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 188
    valorBool                      shift and go to state 153
    negacionBool                   shift and go to state 154
    comparacionBool                shift and go to state 189
    expresionIndexString           shift and go to state 55
    sentenciaSubstring             shift and go to state 191

state 202

    (205) expresionInt -> valorInt . operadorMat expresionInt
    (206) expresionInt -> valorInt .
    (211) operadorMat -> . SUMA
    (212) operadorMat -> . RESTA
    (213) operadorMat -> . MULTI
    (214) operadorMat -> . DIV
    (215) operadorMat -> . DIVENTERO
    (216) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 206 (expresionInt -> valorInt .)
    PDER            reduce using rule 206 (expresionInt -> valorInt .)
    SUMA            shift and go to state 105
    RESTA           shift and go to state 106
    MULTI           shift and go to state 107
    DIV             shift and go to state 108
    DIVENTERO       shift and go to state 109
    MOD             shift and go to state 110

    operadorMat                    shift and go to state 104

state 203

    (205) expresionInt -> valorInt operadorMat expresionInt .

    PUNTOYCOMA      reduce using rule 205 (expresionInt -> valorInt operadorMat expresionInt .)
    PDER            reduce using rule 205 (expresionInt -> valorInt operadorMat expresionInt .)


state 204

    (204) valorInt -> VARIABLE .

    SUMA            reduce using rule 204 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 204 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 204 (valorInt -> VARIABLE .)
    DIV             reduce using rule 204 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 204 (valorInt -> VARIABLE .)
    MOD             reduce using rule 204 (valorInt -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 204 (valorInt -> VARIABLE .)
    PDER            reduce using rule 204 (valorInt -> VARIABLE .)
    AND             reduce using rule 204 (valorInt -> VARIABLE .)
    OR              reduce using rule 204 (valorInt -> VARIABLE .)


state 205

    (209) expresionDouble -> valorDouble operadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 209 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    AND             reduce using rule 209 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    OR              reduce using rule 209 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PDER            reduce using rule 209 (expresionDouble -> valorDouble operadorMat expresionDouble .)


state 206

    (181) expresionBool -> valorDouble comparadorMat expresionDouble .
    (165) expresionBoolFor -> valorDouble comparadorMat expresionDouble .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 165 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 181 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 181 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 165 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 181 (expresionBool -> valorDouble comparadorMat expresionDouble .) ]


state 207

    (184) expresionBool -> valorDouble comparadorMat VARIABLE .
    (168) expresionBoolFor -> valorDouble comparadorMat VARIABLE .
    (204) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 168 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 168 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 184 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 184 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 184 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 184 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 168 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 204 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 204 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 204 (valorInt -> VARIABLE .)
    DIV             reduce using rule 204 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 204 (valorInt -> VARIABLE .)
    MOD             reduce using rule 204 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 184 (expresionBool -> valorDouble comparadorMat VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 204 (valorInt -> VARIABLE .) ]


state 208

    (198) expresionString -> valorString SUMA expresionString .

    PUNTOYCOMA      reduce using rule 198 (expresionString -> valorString SUMA expresionString .)
    PDER            reduce using rule 198 (expresionString -> valorString SUMA expresionString .)


state 209

    (193) valorString -> STRING .

    SUMA            reduce using rule 193 (valorString -> STRING .)
    CIZQ            reduce using rule 193 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 193 (valorString -> STRING .)
    PDER            reduce using rule 193 (valorString -> STRING .)


state 210

    (194) valorString -> VARIABLE .
    (201) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    SUMA            reduce using rule 194 (valorString -> VARIABLE .)
    CIZQ            reduce using rule 194 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 194 (valorString -> VARIABLE .)
    PDER            reduce using rule 194 (valorString -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 86


state 211

    (200) expresionIndexString -> valorString CIZQ ENTERO . CDER

    CDER            shift and go to state 278


state 212

    (188) expresionBool -> valor IS objeto .

    PUNTOYCOMA      reduce using rule 188 (expresionBool -> valor IS objeto .)
    AND             reduce using rule 188 (expresionBool -> valor IS objeto .)
    OR              reduce using rule 188 (expresionBool -> valor IS objeto .)
    PDER            reduce using rule 188 (expresionBool -> valor IS objeto .)


state 213

    (225) objeto -> STRINGR .

    PUNTOYCOMA      reduce using rule 225 (objeto -> STRINGR .)
    AND             reduce using rule 225 (objeto -> STRINGR .)
    OR              reduce using rule 225 (objeto -> STRINGR .)
    PDER            reduce using rule 225 (objeto -> STRINGR .)


state 214

    (226) objeto -> INT .

    PUNTOYCOMA      reduce using rule 226 (objeto -> INT .)
    AND             reduce using rule 226 (objeto -> INT .)
    OR              reduce using rule 226 (objeto -> INT .)
    PDER            reduce using rule 226 (objeto -> INT .)


state 215

    (227) objeto -> DOUBLER .

    PUNTOYCOMA      reduce using rule 227 (objeto -> DOUBLER .)
    AND             reduce using rule 227 (objeto -> DOUBLER .)
    OR              reduce using rule 227 (objeto -> DOUBLER .)
    PDER            reduce using rule 227 (objeto -> DOUBLER .)


state 216

    (228) objeto -> NUM .

    PUNTOYCOMA      reduce using rule 228 (objeto -> NUM .)
    AND             reduce using rule 228 (objeto -> NUM .)
    OR              reduce using rule 228 (objeto -> NUM .)
    PDER            reduce using rule 228 (objeto -> NUM .)


state 217

    (229) objeto -> VAR .

    PUNTOYCOMA      reduce using rule 229 (objeto -> VAR .)
    AND             reduce using rule 229 (objeto -> VAR .)
    OR              reduce using rule 229 (objeto -> VAR .)
    PDER            reduce using rule 229 (objeto -> VAR .)


state 218

    (230) objeto -> DYNAMIC .

    PUNTOYCOMA      reduce using rule 230 (objeto -> DYNAMIC .)
    AND             reduce using rule 230 (objeto -> DYNAMIC .)
    OR              reduce using rule 230 (objeto -> DYNAMIC .)
    PDER            reduce using rule 230 (objeto -> DYNAMIC .)


state 219

    (231) objeto -> LIST .

    PUNTOYCOMA      reduce using rule 231 (objeto -> LIST .)
    AND             reduce using rule 231 (objeto -> LIST .)
    OR              reduce using rule 231 (objeto -> LIST .)
    PDER            reduce using rule 231 (objeto -> LIST .)


state 220

    (232) objeto -> BOOL .

    PUNTOYCOMA      reduce using rule 232 (objeto -> BOOL .)
    AND             reduce using rule 232 (objeto -> BOOL .)
    OR              reduce using rule 232 (objeto -> BOOL .)
    PDER            reduce using rule 232 (objeto -> BOOL .)


state 221

    (233) objeto -> MAP .

    PUNTOYCOMA      reduce using rule 233 (objeto -> MAP .)
    AND             reduce using rule 233 (objeto -> MAP .)
    OR              reduce using rule 233 (objeto -> MAP .)
    PDER            reduce using rule 233 (objeto -> MAP .)


state 222

    (234) objeto -> SET .

    PUNTOYCOMA      reduce using rule 234 (objeto -> SET .)
    AND             reduce using rule 234 (objeto -> SET .)
    OR              reduce using rule 234 (objeto -> SET .)
    PDER            reduce using rule 234 (objeto -> SET .)


state 223

    (189) expresionBool -> valor ISNEGADO objeto .

    PUNTOYCOMA      reduce using rule 189 (expresionBool -> valor ISNEGADO objeto .)
    AND             reduce using rule 189 (expresionBool -> valor ISNEGADO objeto .)
    OR              reduce using rule 189 (expresionBool -> valor ISNEGADO objeto .)
    PDER            reduce using rule 189 (expresionBool -> valor ISNEGADO objeto .)


state 224

    (176) sentenciaWhile -> WHILE PIZQ expresionBool . PDER LIZQ final LDER
    (177) sentenciaWhile -> WHILE PIZQ expresionBool . PDER final
    (191) comparacionBool -> expresionBool . operadorLogico expresionBool
    (192) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (223) operadorLogico -> . AND
    (224) operadorLogico -> . OR

    PDER            shift and go to state 279
    AND             shift and go to state 63
    OR              shift and go to state 64

    operadorLogico                 shift and go to state 62

state 225

    (178) sentenciaDoWhile -> DO LIZQ final . LDER WHILE PIZQ expresionBool PDER

    LDER            shift and go to state 280


state 226

    (140) sentenciaIf -> IF PIZQ expresionBool . PDER final
    (141) sentenciaIf -> IF PIZQ expresionBool . PDER LIZQ final LDER
    (191) comparacionBool -> expresionBool . operadorLogico expresionBool
    (192) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (223) operadorLogico -> . AND
    (224) operadorLogico -> . OR

    PDER            shift and go to state 281
    AND             shift and go to state 63
    OR              shift and go to state 64

    operadorLogico                 shift and go to state 62

state 227

    (143) sentenciaElse -> ELSE LIZQ final . LDER

    LDER            shift and go to state 282


state 228

    (135) imprimir -> PRINT PIZQ expresion . PDER

    PDER            shift and go to state 283


state 229

    (136) imprimir -> PRINT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 284


state 230

    (134) asignacionSimple -> VARIABLE . IGUAL expresion
    (147) valor -> VARIABLE .
    (182) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (183) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (194) valorString -> VARIABLE .
    (204) valorInt -> VARIABLE .
    (180) valorBool -> VARIABLE .
    (201) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (217) comparadorMat -> . DIGUAL
    (218) comparadorMat -> . NOIGUAL
    (219) comparadorMat -> . MAYOR
    (220) comparadorMat -> . MENOR
    (221) comparadorMat -> . MAYIGUAL
    (222) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 147 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 147 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 147 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 147 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 147 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 147 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 147 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 147 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 147 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 147 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 87
    IS              reduce using rule 147 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 147 (valor -> VARIABLE .)
    SUMA            reduce using rule 147 (valor -> VARIABLE .)
    RESTA           reduce using rule 147 (valor -> VARIABLE .)
    MULTI           reduce using rule 147 (valor -> VARIABLE .)
    DIV             reduce using rule 147 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 147 (valor -> VARIABLE .)
    MOD             reduce using rule 147 (valor -> VARIABLE .)
    PDER            reduce using rule 147 (valor -> VARIABLE .)
    CIZQ            reduce using rule 194 (valorString -> VARIABLE .)
    AND             reduce using rule 180 (valorBool -> VARIABLE .)
    OR              reduce using rule 180 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 86
    DIGUAL          shift and go to state 88
    NOIGUAL         shift and go to state 89
    MAYOR           shift and go to state 90
    MENOR           shift and go to state 91
    MAYIGUAL        shift and go to state 92
    MENIGUAL        shift and go to state 93

  ! SUMA            [ reduce using rule 194 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 194 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 180 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 266

state 231

    (138) funcionStdout -> FUNCIONSTDOUT PIZQ expresion . PDER

    PDER            shift and go to state 285


state 232

    (139) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 286


state 233

    (190) negacionBool -> NOT PIZQ expresionBool . PDER
    (191) comparacionBool -> expresionBool . operadorLogico expresionBool
    (192) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (223) operadorLogico -> . AND
    (224) operadorLogico -> . OR

    PDER            shift and go to state 287
    AND             shift and go to state 63
    OR              shift and go to state 64

    operadorLogico                 shift and go to state 62

state 234

    (144) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER final
    (145) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER LIZQ final LDER
    (191) comparacionBool -> expresionBool . operadorLogico expresionBool
    (192) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (223) operadorLogico -> . AND
    (224) operadorLogico -> . OR

    PDER            shift and go to state 288
    AND             shift and go to state 63
    OR              shift and go to state 64

    operadorLogico                 shift and go to state 62

state 235

    (172) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final

    PUNTOYCOMA      shift and go to state 289


state 236

    (163) asignacionFor -> VARIABLE . IGUAL expresionInt
    (164) asignacionFor -> VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 290


state 237

    (156) asignacionFor -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 291


state 238

    (157) asignacionFor -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 292


state 239

    (158) asignacionFor -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 293


state 240

    (159) asignacionFor -> DYNAMIC . VARIABLE IGUAL expresionInt
    (160) asignacionFor -> DYNAMIC . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 294


state 241

    (161) asignacionFor -> VAR . VARIABLE IGUAL expresionInt
    (162) asignacionFor -> VAR . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 295


state 242

    (65) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE
    (66) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 296


state 243

    (69) expresionLista -> LIST MENOR INT . MAYOR VARIABLE
    (70) expresionLista -> LIST MENOR INT . MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> LIST MENOR INT . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 297


state 244

    (73) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE
    (74) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 298


state 245

    (77) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE
    (78) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 299


state 246

    (80) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE
    (81) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 300


state 247

    (84) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE
    (85) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 301


state 248

    (88) expresionLista -> LIST MENOR SET . MAYOR VARIABLE
    (89) expresionLista -> LIST MENOR SET . MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> LIST MENOR SET . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 302


state 249

    (68) expresionLista -> CIZQ expListString CDER .

    PUNTOYCOMA      reduce using rule 68 (expresionLista -> CIZQ expListString CDER .)


state 250

    (72) expresionLista -> CIZQ expListInt CDER .

    PUNTOYCOMA      reduce using rule 72 (expresionLista -> CIZQ expListInt CDER .)


state 251

    (76) expresionLista -> CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 76 (expresionLista -> CIZQ expListNum CDER .)


state 252

    (83) expresionLista -> CIZQ expListBool CDER .

    PUNTOYCOMA      reduce using rule 83 (expresionLista -> CIZQ expListBool CDER .)


state 253

    (87) expresionLista -> CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 87 (expresionLista -> CIZQ expListDynamic CDER .)


state 254

    (91) expresionLista -> CIZQ expListSet CDER .

    PUNTOYCOMA      reduce using rule 91 (expresionLista -> CIZQ expListSet CDER .)


state 255

    (93) expListString -> STRING COMA . expListString
    (114) expListDynamic -> STRING COMA . expListDynamic
    (92) expListString -> . STRING
    (93) expListString -> . STRING COMA expListString
    (94) expListString -> . VARIABLE
    (95) expListString -> . VARIABLE COMA expListString
    (110) expListDynamic -> . STRING
    (111) expListDynamic -> . ENTERO
    (112) expListDynamic -> . DOUBLE
    (113) expListDynamic -> . BOOL
    (114) expListDynamic -> . STRING COMA expListDynamic
    (115) expListDynamic -> . ENTERO COMA expListDynamic
    (116) expListDynamic -> . DOUBLE COMA expListDynamic
    (117) expListDynamic -> . BOOL COMA expListDynamic
    (118) expListDynamic -> . VARIABLE
    (119) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 135
    VARIABLE        shift and go to state 305
    ENTERO          shift and go to state 306
    DOUBLE          shift and go to state 307
    BOOL            shift and go to state 308

    expListString                  shift and go to state 303
    expListDynamic                 shift and go to state 304

state 256

    (95) expListString -> VARIABLE COMA . expListString
    (99) expListInt -> VARIABLE COMA . expListInt
    (105) expListNum -> VARIABLE COMA . expListNum
    (109) expListBool -> VARIABLE COMA . expListBool
    (119) expListDynamic -> VARIABLE COMA . expListDynamic
    (125) expListSet -> VARIABLE COMA . expListSet
    (92) expListString -> . STRING
    (93) expListString -> . STRING COMA expListString
    (94) expListString -> . VARIABLE
    (95) expListString -> . VARIABLE COMA expListString
    (96) expListInt -> . ENTERO
    (97) expListInt -> . ENTERO COMA expListInt
    (98) expListInt -> . VARIABLE
    (99) expListInt -> . VARIABLE COMA expListInt
    (100) expListNum -> . ENTERO
    (101) expListNum -> . DOUBLE
    (102) expListNum -> . ENTERO COMA expListNum
    (103) expListNum -> . DOUBLE COMA expListNum
    (104) expListNum -> . VARIABLE
    (105) expListNum -> . VARIABLE COMA expListNum
    (106) expListBool -> . BOOL
    (107) expListBool -> . BOOL COMA expListBool
    (108) expListBool -> . VARIABLE
    (109) expListBool -> . VARIABLE COMA expListBool
    (110) expListDynamic -> . STRING
    (111) expListDynamic -> . ENTERO
    (112) expListDynamic -> . DOUBLE
    (113) expListDynamic -> . BOOL
    (114) expListDynamic -> . STRING COMA expListDynamic
    (115) expListDynamic -> . ENTERO COMA expListDynamic
    (116) expListDynamic -> . DOUBLE COMA expListDynamic
    (117) expListDynamic -> . BOOL COMA expListDynamic
    (118) expListDynamic -> . VARIABLE
    (119) expListDynamic -> . VARIABLE COMA expListDynamic
    (120) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (121) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (122) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (123) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (124) expListSet -> . VARIABLE
    (125) expListSet -> . VARIABLE COMA expListSet

    STRING          shift and go to state 135
    VARIABLE        shift and go to state 136
    ENTERO          shift and go to state 137
    DOUBLE          shift and go to state 138
    BOOL            shift and go to state 139
    SETFROM         shift and go to state 140

    expListString                  shift and go to state 309
    expListInt                     shift and go to state 310
    expListNum                     shift and go to state 311
    expListBool                    shift and go to state 312
    expListDynamic                 shift and go to state 313
    expListSet                     shift and go to state 314

state 257

    (97) expListInt -> ENTERO COMA . expListInt
    (102) expListNum -> ENTERO COMA . expListNum
    (115) expListDynamic -> ENTERO COMA . expListDynamic
    (96) expListInt -> . ENTERO
    (97) expListInt -> . ENTERO COMA expListInt
    (98) expListInt -> . VARIABLE
    (99) expListInt -> . VARIABLE COMA expListInt
    (100) expListNum -> . ENTERO
    (101) expListNum -> . DOUBLE
    (102) expListNum -> . ENTERO COMA expListNum
    (103) expListNum -> . DOUBLE COMA expListNum
    (104) expListNum -> . VARIABLE
    (105) expListNum -> . VARIABLE COMA expListNum
    (110) expListDynamic -> . STRING
    (111) expListDynamic -> . ENTERO
    (112) expListDynamic -> . DOUBLE
    (113) expListDynamic -> . BOOL
    (114) expListDynamic -> . STRING COMA expListDynamic
    (115) expListDynamic -> . ENTERO COMA expListDynamic
    (116) expListDynamic -> . DOUBLE COMA expListDynamic
    (117) expListDynamic -> . BOOL COMA expListDynamic
    (118) expListDynamic -> . VARIABLE
    (119) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 137
    VARIABLE        shift and go to state 318
    DOUBLE          shift and go to state 138
    STRING          shift and go to state 319
    BOOL            shift and go to state 308

    expListInt                     shift and go to state 315
    expListNum                     shift and go to state 316
    expListDynamic                 shift and go to state 317

state 258

    (103) expListNum -> DOUBLE COMA . expListNum
    (116) expListDynamic -> DOUBLE COMA . expListDynamic
    (100) expListNum -> . ENTERO
    (101) expListNum -> . DOUBLE
    (102) expListNum -> . ENTERO COMA expListNum
    (103) expListNum -> . DOUBLE COMA expListNum
    (104) expListNum -> . VARIABLE
    (105) expListNum -> . VARIABLE COMA expListNum
    (110) expListDynamic -> . STRING
    (111) expListDynamic -> . ENTERO
    (112) expListDynamic -> . DOUBLE
    (113) expListDynamic -> . BOOL
    (114) expListDynamic -> . STRING COMA expListDynamic
    (115) expListDynamic -> . ENTERO COMA expListDynamic
    (116) expListDynamic -> . DOUBLE COMA expListDynamic
    (117) expListDynamic -> . BOOL COMA expListDynamic
    (118) expListDynamic -> . VARIABLE
    (119) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 322
    DOUBLE          shift and go to state 138
    VARIABLE        shift and go to state 323
    STRING          shift and go to state 319
    BOOL            shift and go to state 308

    expListNum                     shift and go to state 320
    expListDynamic                 shift and go to state 321

state 259

    (107) expListBool -> BOOL COMA . expListBool
    (117) expListDynamic -> BOOL COMA . expListDynamic
    (106) expListBool -> . BOOL
    (107) expListBool -> . BOOL COMA expListBool
    (108) expListBool -> . VARIABLE
    (109) expListBool -> . VARIABLE COMA expListBool
    (110) expListDynamic -> . STRING
    (111) expListDynamic -> . ENTERO
    (112) expListDynamic -> . DOUBLE
    (113) expListDynamic -> . BOOL
    (114) expListDynamic -> . STRING COMA expListDynamic
    (115) expListDynamic -> . ENTERO COMA expListDynamic
    (116) expListDynamic -> . DOUBLE COMA expListDynamic
    (117) expListDynamic -> . BOOL COMA expListDynamic
    (118) expListDynamic -> . VARIABLE
    (119) expListDynamic -> . VARIABLE COMA expListDynamic

    BOOL            shift and go to state 139
    VARIABLE        shift and go to state 326
    STRING          shift and go to state 319
    ENTERO          shift and go to state 306
    DOUBLE          shift and go to state 307

    expListBool                    shift and go to state 324
    expListDynamic                 shift and go to state 325

state 260

    (120) expListSet -> SETFROM PIZQ . CIZQ CDER PDER
    (121) expListSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER
    (122) expListSet -> SETFROM PIZQ . CIZQ CDER PDER COMA expListSet
    (123) expListSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER COMA expListSet

    CIZQ            shift and go to state 327


state 261

    (59) expresionSet -> SET VARIABLE IGUAL . SETFROM PIZQ CIZQ CDER PDER
    (61) expresionSet -> SET VARIABLE IGUAL . SETFROM PIZQ CIZQ expListDynamic CDER PDER

    SETFROM         shift and go to state 328


state 262

    (62) expresionNewList -> NEWLIST PIZQ PDER .

    PUNTOYCOMA      reduce using rule 62 (expresionNewList -> NEWLIST PIZQ PDER .)


state 263

    (63) expresionNewList -> NEWLIST PIZQ ENTERO . PDER

    PDER            shift and go to state 329


state 264

    (58) expresionSet -> SETFROM PIZQ CIZQ . CDER PDER
    (60) expresionSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (110) expListDynamic -> . STRING
    (111) expListDynamic -> . ENTERO
    (112) expListDynamic -> . DOUBLE
    (113) expListDynamic -> . BOOL
    (114) expListDynamic -> . STRING COMA expListDynamic
    (115) expListDynamic -> . ENTERO COMA expListDynamic
    (116) expListDynamic -> . DOUBLE COMA expListDynamic
    (117) expListDynamic -> . BOOL COMA expListDynamic
    (118) expListDynamic -> . VARIABLE
    (119) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 330
    STRING          shift and go to state 319
    ENTERO          shift and go to state 306
    DOUBLE          shift and go to state 307
    BOOL            shift and go to state 308
    VARIABLE        shift and go to state 332

    expListDynamic                 shift and go to state 331

state 265

    (181) expresionBool -> valorDouble comparadorMat . expresionDouble
    (184) expresionBool -> valorDouble comparadorMat . VARIABLE
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 334
    DOUBLE          shift and go to state 176
    ENTERO          shift and go to state 177

    valorDouble                    shift and go to state 175
    expresionDouble                shift and go to state 333
    valorInt                       shift and go to state 155

state 266

    (182) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (183) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 335
    DOUBLE          shift and go to state 176
    ENTERO          shift and go to state 177

    expresionDouble                shift and go to state 336
    valorDouble                    shift and go to state 175
    valorInt                       shift and go to state 155

state 267

    (47) final -> VARIABLE DSUMA PUNTOYCOMA final .

    $end            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    VARIABLE        reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    INT             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DOUBLER         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NUM             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    STRINGR         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BOOLR           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    VAR             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    WHILE           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DO              reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    IF              reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ELSE            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    PRINT           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NOT             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ELSEIF          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FOR             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LIST            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    CIZQ            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NEWLIST         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    SET             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    SETFROM         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ENTERO          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DOUBLE          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    STRING          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BOOL            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LDER            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)


state 268

    (49) final -> VARIABLE DRESTA PUNTOYCOMA final .

    $end            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    VARIABLE        reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    INT             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DOUBLER         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NUM             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    STRINGR         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BOOLR           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    VAR             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    WHILE           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DO              reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    IF              reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ELSE            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    PRINT           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NOT             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ELSEIF          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FOR             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LIST            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    CIZQ            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NEWLIST         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    SET             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    SETFROM         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ENTERO          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DOUBLE          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    STRING          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BOOL            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LDER            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)


state 269

    (201) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . PDER
    (202) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . COMA ENTERO PDER

    PDER            shift and go to state 337
    COMA            shift and go to state 338


state 270

    (150) expresion -> valor operadorMat . expresion
    (150) expresion -> . valor operadorMat expresion
    (151) expresion -> . valor
    (152) expresion -> . expresionString
    (153) expresion -> . expresionInt
    (154) expresion -> . expresionDouble
    (155) expresion -> . expresionBool
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 156
    VARIABLE        shift and go to state 179
    DOUBLE          shift and go to state 186
    STRING          shift and go to state 187
    FUNCIONSTDIN    shift and go to state 190
    BOOL            shift and go to state 56
    NOT             shift and go to state 44

    valor                          shift and go to state 181
    expresion                      shift and go to state 339
    expresionString                shift and go to state 182
    expresionInt                   shift and go to state 183
    expresionDouble                shift and go to state 184
    expresionBool                  shift and go to state 185
    valorString                    shift and go to state 34
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 188
    valorBool                      shift and go to state 153
    negacionBool                   shift and go to state 154
    comparacionBool                shift and go to state 189
    expresionIndexString           shift and go to state 55
    sentenciaSubstring             shift and go to state 191

state 271

    (126) asignacion -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 126 (asignacion -> INT VARIABLE IGUAL expresionInt .)


state 272

    (127) asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 127 (asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 273

    (128) asignacion -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 128 (asignacion -> NUM VARIABLE IGUAL expresionDouble .)


state 274

    (129) asignacion -> STRINGR VARIABLE IGUAL expresionString .

    PUNTOYCOMA      reduce using rule 129 (asignacion -> STRINGR VARIABLE IGUAL expresionString .)


state 275

    (130) asignacion -> BOOLR VARIABLE IGUAL expresionBool .
    (191) comparacionBool -> expresionBool . operadorLogico expresionBool
    (192) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (223) operadorLogico -> . AND
    (224) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 130 (asignacion -> BOOLR VARIABLE IGUAL expresionBool .)
    AND             shift and go to state 63
    OR              shift and go to state 64

    operadorLogico                 shift and go to state 62

state 276

    (131) asignacion -> DYNAMIC VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 131 (asignacion -> DYNAMIC VARIABLE IGUAL expresion .)


state 277

    (132) asignacion -> VAR VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 132 (asignacion -> VAR VARIABLE IGUAL expresion .)


state 278

    (200) expresionIndexString -> valorString CIZQ ENTERO CDER .

    SUMA            reduce using rule 200 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    CIZQ            reduce using rule 200 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PUNTOYCOMA      reduce using rule 200 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PDER            reduce using rule 200 (expresionIndexString -> valorString CIZQ ENTERO CDER .)


state 279

    (176) sentenciaWhile -> WHILE PIZQ expresionBool PDER . LIZQ final LDER
    (177) sentenciaWhile -> WHILE PIZQ expresionBool PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 340
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    expresionBool                  shift and go to state 6
    final                          shift and go to state 341
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 280

    (178) sentenciaDoWhile -> DO LIZQ final LDER . WHILE PIZQ expresionBool PDER

    WHILE           shift and go to state 342


state 281

    (140) sentenciaIf -> IF PIZQ expresionBool PDER . final
    (141) sentenciaIf -> IF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 344
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    expresionBool                  shift and go to state 6
    final                          shift and go to state 343
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 282

    (143) sentenciaElse -> ELSE LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    VARIABLE        reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    INT             reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLER         reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    NUM             reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRINGR         reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOLR           reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    DYNAMIC         reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    VAR             reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    WHILE           reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    DO              reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    IF              reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSE            reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    PRINT           reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    NOT             reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSEIF          reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    FOR             reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    LIST            reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    CIZQ            reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    NEWLIST         reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    SET             reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    SETFROM         reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    ENTERO          reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLE          reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRING          reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOL            reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    $end            reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)
    LDER            reduce using rule 143 (sentenciaElse -> ELSE LIZQ final LDER .)


state 283

    (135) imprimir -> PRINT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 135 (imprimir -> PRINT PIZQ expresion PDER .)


state 284

    (136) imprimir -> PRINT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 136 (imprimir -> PRINT PIZQ asignacionSimple PDER .)


state 285

    (138) funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 138 (funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .)


state 286

    (139) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 139 (funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .)


state 287

    (190) negacionBool -> NOT PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 190 (negacionBool -> NOT PIZQ expresionBool PDER .)
    AND             reduce using rule 190 (negacionBool -> NOT PIZQ expresionBool PDER .)
    OR              reduce using rule 190 (negacionBool -> NOT PIZQ expresionBool PDER .)
    PDER            reduce using rule 190 (negacionBool -> NOT PIZQ expresionBool PDER .)


state 288

    (144) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . final
    (145) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 346
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    expresionBool                  shift and go to state 6
    final                          shift and go to state 345
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 289

    (172) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING

    VARIABLE        shift and go to state 348
    DOUBLE          shift and go to state 53
    BOOL            shift and go to state 56
    NOT             shift and go to state 44
    ENTERO          shift and go to state 47
    STRING          shift and go to state 157

    expresionBoolFor               shift and go to state 347
    valorDouble                    shift and go to state 349
    valorBool                      shift and go to state 350
    negacionBool                   shift and go to state 351
    comparacionBool                shift and go to state 352
    valorInt                       shift and go to state 155
    expresionBool                  shift and go to state 353
    valor                          shift and go to state 36

state 290

    (163) asignacionFor -> VARIABLE IGUAL . expresionInt
    (164) asignacionFor -> VARIABLE IGUAL . expresionDouble
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt

    ENTERO          shift and go to state 177
    VARIABLE        shift and go to state 204
    DOUBLE          shift and go to state 176

    expresionInt                   shift and go to state 354
    expresionDouble                shift and go to state 355
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 175

state 291

    (156) asignacionFor -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 356


state 292

    (157) asignacionFor -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 357


state 293

    (158) asignacionFor -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 358


state 294

    (159) asignacionFor -> DYNAMIC VARIABLE . IGUAL expresionInt
    (160) asignacionFor -> DYNAMIC VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 359


state 295

    (161) asignacionFor -> VAR VARIABLE . IGUAL expresionInt
    (162) asignacionFor -> VAR VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 360


state 296

    (65) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE
    (66) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 361


state 297

    (69) expresionLista -> LIST MENOR INT MAYOR . VARIABLE
    (70) expresionLista -> LIST MENOR INT MAYOR . VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> LIST MENOR INT MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 362


state 298

    (73) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE
    (74) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 363


state 299

    (77) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE
    (78) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 364


state 300

    (80) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE
    (81) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 365


state 301

    (84) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE
    (85) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 366


state 302

    (88) expresionLista -> LIST MENOR SET MAYOR . VARIABLE
    (89) expresionLista -> LIST MENOR SET MAYOR . VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> LIST MENOR SET MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 367


state 303

    (93) expListString -> STRING COMA expListString .

    CDER            reduce using rule 93 (expListString -> STRING COMA expListString .)


state 304

    (114) expListDynamic -> STRING COMA expListDynamic .

    CDER            reduce using rule 114 (expListDynamic -> STRING COMA expListDynamic .)


state 305

    (94) expListString -> VARIABLE .
    (95) expListString -> VARIABLE . COMA expListString
    (118) expListDynamic -> VARIABLE .
    (119) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 94 (expListString -> VARIABLE .)
    CDER            reduce using rule 94 (expListString -> VARIABLE .)
    COMA            shift and go to state 368

  ! CDER            [ reduce using rule 118 (expListDynamic -> VARIABLE .) ]


state 306

    (111) expListDynamic -> ENTERO .
    (115) expListDynamic -> ENTERO . COMA expListDynamic

    CDER            reduce using rule 111 (expListDynamic -> ENTERO .)
    COMA            shift and go to state 369


state 307

    (112) expListDynamic -> DOUBLE .
    (116) expListDynamic -> DOUBLE . COMA expListDynamic

    CDER            reduce using rule 112 (expListDynamic -> DOUBLE .)
    COMA            shift and go to state 370


state 308

    (113) expListDynamic -> BOOL .
    (117) expListDynamic -> BOOL . COMA expListDynamic

    CDER            reduce using rule 113 (expListDynamic -> BOOL .)
    COMA            shift and go to state 371


state 309

    (95) expListString -> VARIABLE COMA expListString .

    CDER            reduce using rule 95 (expListString -> VARIABLE COMA expListString .)


state 310

    (99) expListInt -> VARIABLE COMA expListInt .

    CDER            reduce using rule 99 (expListInt -> VARIABLE COMA expListInt .)


state 311

    (105) expListNum -> VARIABLE COMA expListNum .

    CDER            reduce using rule 105 (expListNum -> VARIABLE COMA expListNum .)


state 312

    (109) expListBool -> VARIABLE COMA expListBool .

    CDER            reduce using rule 109 (expListBool -> VARIABLE COMA expListBool .)


state 313

    (119) expListDynamic -> VARIABLE COMA expListDynamic .

    CDER            reduce using rule 119 (expListDynamic -> VARIABLE COMA expListDynamic .)


state 314

    (125) expListSet -> VARIABLE COMA expListSet .

    CDER            reduce using rule 125 (expListSet -> VARIABLE COMA expListSet .)


state 315

    (97) expListInt -> ENTERO COMA expListInt .

    CDER            reduce using rule 97 (expListInt -> ENTERO COMA expListInt .)


state 316

    (102) expListNum -> ENTERO COMA expListNum .

    CDER            reduce using rule 102 (expListNum -> ENTERO COMA expListNum .)


state 317

    (115) expListDynamic -> ENTERO COMA expListDynamic .

    CDER            reduce using rule 115 (expListDynamic -> ENTERO COMA expListDynamic .)


state 318

    (98) expListInt -> VARIABLE .
    (99) expListInt -> VARIABLE . COMA expListInt
    (104) expListNum -> VARIABLE .
    (105) expListNum -> VARIABLE . COMA expListNum
    (118) expListDynamic -> VARIABLE .
    (119) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 98 (expListInt -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 98 (expListInt -> VARIABLE .)
    CDER            reduce using rule 98 (expListInt -> VARIABLE .)
    COMA            shift and go to state 372

  ! CDER            [ reduce using rule 104 (expListNum -> VARIABLE .) ]
  ! CDER            [ reduce using rule 118 (expListDynamic -> VARIABLE .) ]


state 319

    (110) expListDynamic -> STRING .
    (114) expListDynamic -> STRING . COMA expListDynamic

    CDER            reduce using rule 110 (expListDynamic -> STRING .)
    COMA            shift and go to state 373


state 320

    (103) expListNum -> DOUBLE COMA expListNum .

    CDER            reduce using rule 103 (expListNum -> DOUBLE COMA expListNum .)


state 321

    (116) expListDynamic -> DOUBLE COMA expListDynamic .

    CDER            reduce using rule 116 (expListDynamic -> DOUBLE COMA expListDynamic .)


state 322

    (100) expListNum -> ENTERO .
    (102) expListNum -> ENTERO . COMA expListNum
    (111) expListDynamic -> ENTERO .
    (115) expListDynamic -> ENTERO . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 100 (expListNum -> ENTERO .)
    CDER            reduce using rule 100 (expListNum -> ENTERO .)
    COMA            shift and go to state 374

  ! CDER            [ reduce using rule 111 (expListDynamic -> ENTERO .) ]


state 323

    (104) expListNum -> VARIABLE .
    (105) expListNum -> VARIABLE . COMA expListNum
    (118) expListDynamic -> VARIABLE .
    (119) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 104 (expListNum -> VARIABLE .)
    CDER            reduce using rule 104 (expListNum -> VARIABLE .)
    COMA            shift and go to state 375

  ! CDER            [ reduce using rule 118 (expListDynamic -> VARIABLE .) ]


state 324

    (107) expListBool -> BOOL COMA expListBool .

    CDER            reduce using rule 107 (expListBool -> BOOL COMA expListBool .)


state 325

    (117) expListDynamic -> BOOL COMA expListDynamic .

    CDER            reduce using rule 117 (expListDynamic -> BOOL COMA expListDynamic .)


state 326

    (108) expListBool -> VARIABLE .
    (109) expListBool -> VARIABLE . COMA expListBool
    (118) expListDynamic -> VARIABLE .
    (119) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 108 (expListBool -> VARIABLE .)
    CDER            reduce using rule 108 (expListBool -> VARIABLE .)
    COMA            shift and go to state 376

  ! CDER            [ reduce using rule 118 (expListDynamic -> VARIABLE .) ]


state 327

    (120) expListSet -> SETFROM PIZQ CIZQ . CDER PDER
    (121) expListSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (122) expListSet -> SETFROM PIZQ CIZQ . CDER PDER COMA expListSet
    (123) expListSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER COMA expListSet
    (110) expListDynamic -> . STRING
    (111) expListDynamic -> . ENTERO
    (112) expListDynamic -> . DOUBLE
    (113) expListDynamic -> . BOOL
    (114) expListDynamic -> . STRING COMA expListDynamic
    (115) expListDynamic -> . ENTERO COMA expListDynamic
    (116) expListDynamic -> . DOUBLE COMA expListDynamic
    (117) expListDynamic -> . BOOL COMA expListDynamic
    (118) expListDynamic -> . VARIABLE
    (119) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 377
    STRING          shift and go to state 319
    ENTERO          shift and go to state 306
    DOUBLE          shift and go to state 307
    BOOL            shift and go to state 308
    VARIABLE        shift and go to state 332

    expListDynamic                 shift and go to state 378

state 328

    (59) expresionSet -> SET VARIABLE IGUAL SETFROM . PIZQ CIZQ CDER PDER
    (61) expresionSet -> SET VARIABLE IGUAL SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 379


state 329

    (63) expresionNewList -> NEWLIST PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 63 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)


state 330

    (58) expresionSet -> SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 380


state 331

    (60) expresionSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 381


state 332

    (118) expListDynamic -> VARIABLE .
    (119) expListDynamic -> VARIABLE . COMA expListDynamic

    CDER            reduce using rule 118 (expListDynamic -> VARIABLE .)
    COMA            shift and go to state 382


state 333

    (181) expresionBool -> valorDouble comparadorMat expresionDouble .

    AND             reduce using rule 181 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 181 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 181 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PDER            reduce using rule 181 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 334

    (184) expresionBool -> valorDouble comparadorMat VARIABLE .
    (204) valorInt -> VARIABLE .

  ! reduce/reduce conflict for AND resolved using rule 184 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 184 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 184 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 184 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 184 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 184 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 184 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PDER            reduce using rule 184 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 204 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 204 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 204 (valorInt -> VARIABLE .)
    DIV             reduce using rule 204 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 204 (valorInt -> VARIABLE .)
    MOD             reduce using rule 204 (valorInt -> VARIABLE .)

  ! AND             [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 204 (valorInt -> VARIABLE .) ]


state 335

    (183) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (204) valorInt -> VARIABLE .

  ! reduce/reduce conflict for AND resolved using rule 183 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 183 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 183 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 183 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 183 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 183 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 183 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PDER            reduce using rule 183 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 204 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 204 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 204 (valorInt -> VARIABLE .)
    DIV             reduce using rule 204 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 204 (valorInt -> VARIABLE .)
    MOD             reduce using rule 204 (valorInt -> VARIABLE .)

  ! AND             [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 204 (valorInt -> VARIABLE .) ]


state 336

    (182) expresionBool -> VARIABLE comparadorMat expresionDouble .

    AND             reduce using rule 182 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 182 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 182 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PDER            reduce using rule 182 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 337

    (201) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 201 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    SUMA            reduce using rule 201 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    CIZQ            reduce using rule 201 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    PDER            reduce using rule 201 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)


state 338

    (202) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA . ENTERO PDER

    ENTERO          shift and go to state 383


state 339

    (150) expresion -> valor operadorMat expresion .

    PUNTOYCOMA      reduce using rule 150 (expresion -> valor operadorMat expresion .)
    PDER            reduce using rule 150 (expresion -> valor operadorMat expresion .)


state 340

    (176) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    expresionBool                  shift and go to state 6
    final                          shift and go to state 384
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 341

    (177) sentenciaWhile -> WHILE PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    INT             reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NUM             reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VAR             reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DO              reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    IF              reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NOT             reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FOR             reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LIST            reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    SET             reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRING          reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    $end            reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LDER            reduce using rule 177 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)


state 342

    (178) sentenciaDoWhile -> DO LIZQ final LDER WHILE . PIZQ expresionBool PDER

    PIZQ            shift and go to state 385


state 343

    (140) sentenciaIf -> IF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    INT             reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DO              reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    IF              reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FOR             reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LIST            reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    SET             reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    $end            reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 140 (sentenciaIf -> IF PIZQ expresionBool PDER final .)


state 344

    (141) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    expresionBool                  shift and go to state 6
    final                          shift and go to state 386
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 345

    (144) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    INT             reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DO              reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    IF              reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FOR             reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LIST            reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    SET             reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    $end            reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 144 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)


state 346

    (145) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    expresionBool                  shift and go to state 6
    final                          shift and go to state 387
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 347

    (172) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DRESTA PDER final

    PUNTOYCOMA      shift and go to state 388


state 348

    (166) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (167) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (180) valorBool -> VARIABLE .
    (204) valorInt -> VARIABLE .
    (182) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (183) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (147) valor -> VARIABLE .
    (217) comparadorMat -> . DIGUAL
    (218) comparadorMat -> . NOIGUAL
    (219) comparadorMat -> . MAYOR
    (220) comparadorMat -> . MENOR
    (221) comparadorMat -> . MAYIGUAL
    (222) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    PUNTOYCOMA      reduce using rule 180 (valorBool -> VARIABLE .)
    AND             reduce using rule 180 (valorBool -> VARIABLE .)
    OR              reduce using rule 180 (valorBool -> VARIABLE .)
    IS              reduce using rule 147 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 147 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 88
    NOIGUAL         shift and go to state 89
    MAYOR           shift and go to state 90
    MENOR           shift and go to state 91
    MAYIGUAL        shift and go to state 92
    MENIGUAL        shift and go to state 93

  ! DIGUAL          [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 204 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 389

state 349

    (165) expresionBoolFor -> valorDouble . comparadorMat expresionDouble
    (168) expresionBoolFor -> valorDouble . comparadorMat VARIABLE
    (181) expresionBool -> valorDouble . comparadorMat expresionDouble
    (184) expresionBool -> valorDouble . comparadorMat VARIABLE
    (217) comparadorMat -> . DIGUAL
    (218) comparadorMat -> . NOIGUAL
    (219) comparadorMat -> . MAYOR
    (220) comparadorMat -> . MENOR
    (221) comparadorMat -> . MAYIGUAL
    (222) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 88
    NOIGUAL         shift and go to state 89
    MAYOR           shift and go to state 90
    MENOR           shift and go to state 91
    MAYIGUAL        shift and go to state 92
    MENIGUAL        shift and go to state 93

    comparadorMat                  shift and go to state 390

state 350

    (169) expresionBoolFor -> valorBool .
    (185) expresionBool -> valorBool .

    PUNTOYCOMA      reduce using rule 169 (expresionBoolFor -> valorBool .)
    AND             reduce using rule 185 (expresionBool -> valorBool .)
    OR              reduce using rule 185 (expresionBool -> valorBool .)


state 351

    (170) expresionBoolFor -> negacionBool .
    (186) expresionBool -> negacionBool .

    PUNTOYCOMA      reduce using rule 170 (expresionBoolFor -> negacionBool .)
    AND             reduce using rule 186 (expresionBool -> negacionBool .)
    OR              reduce using rule 186 (expresionBool -> negacionBool .)


state 352

    (171) expresionBoolFor -> comparacionBool .
    (187) expresionBool -> comparacionBool .

    PUNTOYCOMA      reduce using rule 171 (expresionBoolFor -> comparacionBool .)
    AND             reduce using rule 187 (expresionBool -> comparacionBool .)
    OR              reduce using rule 187 (expresionBool -> comparacionBool .)


state 353

    (191) comparacionBool -> expresionBool . operadorLogico expresionBool
    (192) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (223) operadorLogico -> . AND
    (224) operadorLogico -> . OR

    AND             shift and go to state 63
    OR              shift and go to state 64

    operadorLogico                 shift and go to state 62

state 354

    (163) asignacionFor -> VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 163 (asignacionFor -> VARIABLE IGUAL expresionInt .)


state 355

    (164) asignacionFor -> VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 164 (asignacionFor -> VARIABLE IGUAL expresionDouble .)


state 356

    (156) asignacionFor -> INT VARIABLE IGUAL . expresionInt
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE

    ENTERO          shift and go to state 177
    VARIABLE        shift and go to state 204

    expresionInt                   shift and go to state 391
    valorInt                       shift and go to state 202

state 357

    (157) asignacionFor -> DOUBLER VARIABLE IGUAL . expresionDouble
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 176
    ENTERO          shift and go to state 177
    VARIABLE        shift and go to state 204

    expresionDouble                shift and go to state 392
    valorDouble                    shift and go to state 175
    valorInt                       shift and go to state 155

state 358

    (158) asignacionFor -> NUM VARIABLE IGUAL . expresionDouble
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 176
    ENTERO          shift and go to state 177
    VARIABLE        shift and go to state 204

    expresionDouble                shift and go to state 393
    valorDouble                    shift and go to state 175
    valorInt                       shift and go to state 155

state 359

    (159) asignacionFor -> DYNAMIC VARIABLE IGUAL . expresionInt
    (160) asignacionFor -> DYNAMIC VARIABLE IGUAL . expresionDouble
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt

    ENTERO          shift and go to state 177
    VARIABLE        shift and go to state 204
    DOUBLE          shift and go to state 176

    expresionInt                   shift and go to state 394
    expresionDouble                shift and go to state 395
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 175

state 360

    (161) asignacionFor -> VAR VARIABLE IGUAL . expresionInt
    (162) asignacionFor -> VAR VARIABLE IGUAL . expresionDouble
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt

    ENTERO          shift and go to state 177
    VARIABLE        shift and go to state 204
    DOUBLE          shift and go to state 176

    expresionInt                   shift and go to state 396
    expresionDouble                shift and go to state 397
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 175

state 361

    (65) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE .
    (66) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE . IGUAL CIZQ expListString CDER
    (67) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 65 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE .)
    IGUAL           shift and go to state 398


state 362

    (69) expresionLista -> LIST MENOR INT MAYOR VARIABLE .
    (70) expresionLista -> LIST MENOR INT MAYOR VARIABLE . IGUAL CIZQ expListInt CDER
    (71) expresionLista -> LIST MENOR INT MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 69 (expresionLista -> LIST MENOR INT MAYOR VARIABLE .)
    IGUAL           shift and go to state 399


state 363

    (73) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE .
    (74) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE . IGUAL CIZQ expListNum CDER
    (75) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 73 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE .)
    IGUAL           shift and go to state 400


state 364

    (77) expresionLista -> LIST MENOR NUM MAYOR VARIABLE .
    (78) expresionLista -> LIST MENOR NUM MAYOR VARIABLE . IGUAL CIZQ expListNum CDER
    (79) expresionLista -> LIST MENOR NUM MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 77 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE .)
    IGUAL           shift and go to state 401


state 365

    (80) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE .
    (81) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE . IGUAL CIZQ expListBool CDER
    (82) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 80 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE .)
    IGUAL           shift and go to state 402


state 366

    (84) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE .
    (85) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE . IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 84 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE .)
    IGUAL           shift and go to state 403


state 367

    (88) expresionLista -> LIST MENOR SET MAYOR VARIABLE .
    (89) expresionLista -> LIST MENOR SET MAYOR VARIABLE . IGUAL CIZQ expListSet CDER
    (90) expresionLista -> LIST MENOR SET MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 88 (expresionLista -> LIST MENOR SET MAYOR VARIABLE .)
    IGUAL           shift and go to state 404


state 368

    (95) expListString -> VARIABLE COMA . expListString
    (119) expListDynamic -> VARIABLE COMA . expListDynamic
    (92) expListString -> . STRING
    (93) expListString -> . STRING COMA expListString
    (94) expListString -> . VARIABLE
    (95) expListString -> . VARIABLE COMA expListString
    (110) expListDynamic -> . STRING
    (111) expListDynamic -> . ENTERO
    (112) expListDynamic -> . DOUBLE
    (113) expListDynamic -> . BOOL
    (114) expListDynamic -> . STRING COMA expListDynamic
    (115) expListDynamic -> . ENTERO COMA expListDynamic
    (116) expListDynamic -> . DOUBLE COMA expListDynamic
    (117) expListDynamic -> . BOOL COMA expListDynamic
    (118) expListDynamic -> . VARIABLE
    (119) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 135
    VARIABLE        shift and go to state 305
    ENTERO          shift and go to state 306
    DOUBLE          shift and go to state 307
    BOOL            shift and go to state 308

    expListString                  shift and go to state 309
    expListDynamic                 shift and go to state 313

state 369

    (115) expListDynamic -> ENTERO COMA . expListDynamic
    (110) expListDynamic -> . STRING
    (111) expListDynamic -> . ENTERO
    (112) expListDynamic -> . DOUBLE
    (113) expListDynamic -> . BOOL
    (114) expListDynamic -> . STRING COMA expListDynamic
    (115) expListDynamic -> . ENTERO COMA expListDynamic
    (116) expListDynamic -> . DOUBLE COMA expListDynamic
    (117) expListDynamic -> . BOOL COMA expListDynamic
    (118) expListDynamic -> . VARIABLE
    (119) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 319
    ENTERO          shift and go to state 306
    DOUBLE          shift and go to state 307
    BOOL            shift and go to state 308
    VARIABLE        shift and go to state 332

    expListDynamic                 shift and go to state 317

state 370

    (116) expListDynamic -> DOUBLE COMA . expListDynamic
    (110) expListDynamic -> . STRING
    (111) expListDynamic -> . ENTERO
    (112) expListDynamic -> . DOUBLE
    (113) expListDynamic -> . BOOL
    (114) expListDynamic -> . STRING COMA expListDynamic
    (115) expListDynamic -> . ENTERO COMA expListDynamic
    (116) expListDynamic -> . DOUBLE COMA expListDynamic
    (117) expListDynamic -> . BOOL COMA expListDynamic
    (118) expListDynamic -> . VARIABLE
    (119) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 319
    ENTERO          shift and go to state 306
    DOUBLE          shift and go to state 307
    BOOL            shift and go to state 308
    VARIABLE        shift and go to state 332

    expListDynamic                 shift and go to state 321

state 371

    (117) expListDynamic -> BOOL COMA . expListDynamic
    (110) expListDynamic -> . STRING
    (111) expListDynamic -> . ENTERO
    (112) expListDynamic -> . DOUBLE
    (113) expListDynamic -> . BOOL
    (114) expListDynamic -> . STRING COMA expListDynamic
    (115) expListDynamic -> . ENTERO COMA expListDynamic
    (116) expListDynamic -> . DOUBLE COMA expListDynamic
    (117) expListDynamic -> . BOOL COMA expListDynamic
    (118) expListDynamic -> . VARIABLE
    (119) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 319
    ENTERO          shift and go to state 306
    DOUBLE          shift and go to state 307
    BOOL            shift and go to state 308
    VARIABLE        shift and go to state 332

    expListDynamic                 shift and go to state 325

state 372

    (99) expListInt -> VARIABLE COMA . expListInt
    (105) expListNum -> VARIABLE COMA . expListNum
    (119) expListDynamic -> VARIABLE COMA . expListDynamic
    (96) expListInt -> . ENTERO
    (97) expListInt -> . ENTERO COMA expListInt
    (98) expListInt -> . VARIABLE
    (99) expListInt -> . VARIABLE COMA expListInt
    (100) expListNum -> . ENTERO
    (101) expListNum -> . DOUBLE
    (102) expListNum -> . ENTERO COMA expListNum
    (103) expListNum -> . DOUBLE COMA expListNum
    (104) expListNum -> . VARIABLE
    (105) expListNum -> . VARIABLE COMA expListNum
    (110) expListDynamic -> . STRING
    (111) expListDynamic -> . ENTERO
    (112) expListDynamic -> . DOUBLE
    (113) expListDynamic -> . BOOL
    (114) expListDynamic -> . STRING COMA expListDynamic
    (115) expListDynamic -> . ENTERO COMA expListDynamic
    (116) expListDynamic -> . DOUBLE COMA expListDynamic
    (117) expListDynamic -> . BOOL COMA expListDynamic
    (118) expListDynamic -> . VARIABLE
    (119) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 137
    VARIABLE        shift and go to state 318
    DOUBLE          shift and go to state 138
    STRING          shift and go to state 319
    BOOL            shift and go to state 308

    expListInt                     shift and go to state 310
    expListNum                     shift and go to state 311
    expListDynamic                 shift and go to state 313

state 373

    (114) expListDynamic -> STRING COMA . expListDynamic
    (110) expListDynamic -> . STRING
    (111) expListDynamic -> . ENTERO
    (112) expListDynamic -> . DOUBLE
    (113) expListDynamic -> . BOOL
    (114) expListDynamic -> . STRING COMA expListDynamic
    (115) expListDynamic -> . ENTERO COMA expListDynamic
    (116) expListDynamic -> . DOUBLE COMA expListDynamic
    (117) expListDynamic -> . BOOL COMA expListDynamic
    (118) expListDynamic -> . VARIABLE
    (119) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 319
    ENTERO          shift and go to state 306
    DOUBLE          shift and go to state 307
    BOOL            shift and go to state 308
    VARIABLE        shift and go to state 332

    expListDynamic                 shift and go to state 304

state 374

    (102) expListNum -> ENTERO COMA . expListNum
    (115) expListDynamic -> ENTERO COMA . expListDynamic
    (100) expListNum -> . ENTERO
    (101) expListNum -> . DOUBLE
    (102) expListNum -> . ENTERO COMA expListNum
    (103) expListNum -> . DOUBLE COMA expListNum
    (104) expListNum -> . VARIABLE
    (105) expListNum -> . VARIABLE COMA expListNum
    (110) expListDynamic -> . STRING
    (111) expListDynamic -> . ENTERO
    (112) expListDynamic -> . DOUBLE
    (113) expListDynamic -> . BOOL
    (114) expListDynamic -> . STRING COMA expListDynamic
    (115) expListDynamic -> . ENTERO COMA expListDynamic
    (116) expListDynamic -> . DOUBLE COMA expListDynamic
    (117) expListDynamic -> . BOOL COMA expListDynamic
    (118) expListDynamic -> . VARIABLE
    (119) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 322
    DOUBLE          shift and go to state 138
    VARIABLE        shift and go to state 323
    STRING          shift and go to state 319
    BOOL            shift and go to state 308

    expListNum                     shift and go to state 316
    expListDynamic                 shift and go to state 317

state 375

    (105) expListNum -> VARIABLE COMA . expListNum
    (119) expListDynamic -> VARIABLE COMA . expListDynamic
    (100) expListNum -> . ENTERO
    (101) expListNum -> . DOUBLE
    (102) expListNum -> . ENTERO COMA expListNum
    (103) expListNum -> . DOUBLE COMA expListNum
    (104) expListNum -> . VARIABLE
    (105) expListNum -> . VARIABLE COMA expListNum
    (110) expListDynamic -> . STRING
    (111) expListDynamic -> . ENTERO
    (112) expListDynamic -> . DOUBLE
    (113) expListDynamic -> . BOOL
    (114) expListDynamic -> . STRING COMA expListDynamic
    (115) expListDynamic -> . ENTERO COMA expListDynamic
    (116) expListDynamic -> . DOUBLE COMA expListDynamic
    (117) expListDynamic -> . BOOL COMA expListDynamic
    (118) expListDynamic -> . VARIABLE
    (119) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 322
    DOUBLE          shift and go to state 138
    VARIABLE        shift and go to state 323
    STRING          shift and go to state 319
    BOOL            shift and go to state 308

    expListNum                     shift and go to state 311
    expListDynamic                 shift and go to state 313

state 376

    (109) expListBool -> VARIABLE COMA . expListBool
    (119) expListDynamic -> VARIABLE COMA . expListDynamic
    (106) expListBool -> . BOOL
    (107) expListBool -> . BOOL COMA expListBool
    (108) expListBool -> . VARIABLE
    (109) expListBool -> . VARIABLE COMA expListBool
    (110) expListDynamic -> . STRING
    (111) expListDynamic -> . ENTERO
    (112) expListDynamic -> . DOUBLE
    (113) expListDynamic -> . BOOL
    (114) expListDynamic -> . STRING COMA expListDynamic
    (115) expListDynamic -> . ENTERO COMA expListDynamic
    (116) expListDynamic -> . DOUBLE COMA expListDynamic
    (117) expListDynamic -> . BOOL COMA expListDynamic
    (118) expListDynamic -> . VARIABLE
    (119) expListDynamic -> . VARIABLE COMA expListDynamic

    BOOL            shift and go to state 139
    VARIABLE        shift and go to state 326
    STRING          shift and go to state 319
    ENTERO          shift and go to state 306
    DOUBLE          shift and go to state 307

    expListBool                    shift and go to state 312
    expListDynamic                 shift and go to state 313

state 377

    (120) expListSet -> SETFROM PIZQ CIZQ CDER . PDER
    (122) expListSet -> SETFROM PIZQ CIZQ CDER . PDER COMA expListSet

    PDER            shift and go to state 405


state 378

    (121) expListSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER
    (123) expListSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER COMA expListSet

    CDER            shift and go to state 406


state 379

    (59) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ . CIZQ CDER PDER
    (61) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 407


state 380

    (58) expresionSet -> SETFROM PIZQ CIZQ CDER PDER .

    PUNTOYCOMA      reduce using rule 58 (expresionSet -> SETFROM PIZQ CIZQ CDER PDER .)


state 381

    (60) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 408


state 382

    (119) expListDynamic -> VARIABLE COMA . expListDynamic
    (110) expListDynamic -> . STRING
    (111) expListDynamic -> . ENTERO
    (112) expListDynamic -> . DOUBLE
    (113) expListDynamic -> . BOOL
    (114) expListDynamic -> . STRING COMA expListDynamic
    (115) expListDynamic -> . ENTERO COMA expListDynamic
    (116) expListDynamic -> . DOUBLE COMA expListDynamic
    (117) expListDynamic -> . BOOL COMA expListDynamic
    (118) expListDynamic -> . VARIABLE
    (119) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 319
    ENTERO          shift and go to state 306
    DOUBLE          shift and go to state 307
    BOOL            shift and go to state 308
    VARIABLE        shift and go to state 332

    expListDynamic                 shift and go to state 313

state 383

    (202) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO . PDER

    PDER            shift and go to state 409


state 384

    (176) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 410


state 385

    (178) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ . expresionBool PDER
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 152
    DOUBLE          shift and go to state 53
    BOOL            shift and go to state 56
    NOT             shift and go to state 44
    ENTERO          shift and go to state 156
    STRING          shift and go to state 157

    expresionBool                  shift and go to state 411
    valorDouble                    shift and go to state 151
    valorBool                      shift and go to state 153
    negacionBool                   shift and go to state 154
    comparacionBool                shift and go to state 189
    valor                          shift and go to state 36
    valorInt                       shift and go to state 155

state 386

    (141) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 412


state 387

    (145) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 413


state 388

    (172) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DSUMA PDER final
    (174) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DRESTA PDER final

    VARIABLE        shift and go to state 414


state 389

    (166) expresionBoolFor -> VARIABLE comparadorMat . expresionDouble
    (167) expresionBoolFor -> VARIABLE comparadorMat . VARIABLE
    (182) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (183) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 415
    DOUBLE          shift and go to state 176
    ENTERO          shift and go to state 177

    expresionDouble                shift and go to state 416
    valorDouble                    shift and go to state 175
    valorInt                       shift and go to state 155

state 390

    (165) expresionBoolFor -> valorDouble comparadorMat . expresionDouble
    (168) expresionBoolFor -> valorDouble comparadorMat . VARIABLE
    (181) expresionBool -> valorDouble comparadorMat . expresionDouble
    (184) expresionBool -> valorDouble comparadorMat . VARIABLE
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 418
    DOUBLE          shift and go to state 176
    ENTERO          shift and go to state 177

    valorDouble                    shift and go to state 175
    expresionDouble                shift and go to state 417
    valorInt                       shift and go to state 155

state 391

    (156) asignacionFor -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 156 (asignacionFor -> INT VARIABLE IGUAL expresionInt .)


state 392

    (157) asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 157 (asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 393

    (158) asignacionFor -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 158 (asignacionFor -> NUM VARIABLE IGUAL expresionDouble .)


state 394

    (159) asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 159 (asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt .)


state 395

    (160) asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 160 (asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble .)


state 396

    (161) asignacionFor -> VAR VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 161 (asignacionFor -> VAR VARIABLE IGUAL expresionInt .)


state 397

    (162) asignacionFor -> VAR VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 162 (asignacionFor -> VAR VARIABLE IGUAL expresionDouble .)


state 398

    (66) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL . CIZQ expListString CDER
    (67) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL . expresionNewList
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 419
    NEWLIST         shift and go to state 51

    expresionNewList               shift and go to state 420

state 399

    (70) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL . CIZQ expListInt CDER
    (71) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL . expresionNewList
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 421
    NEWLIST         shift and go to state 51

    expresionNewList               shift and go to state 422

state 400

    (74) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL . CIZQ expListNum CDER
    (75) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL . expresionNewList
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 423
    NEWLIST         shift and go to state 51

    expresionNewList               shift and go to state 424

state 401

    (78) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL . CIZQ expListNum CDER
    (79) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL . expresionNewList
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 425
    NEWLIST         shift and go to state 51

    expresionNewList               shift and go to state 426

state 402

    (81) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL . CIZQ expListBool CDER
    (82) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL . expresionNewList
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 427
    NEWLIST         shift and go to state 51

    expresionNewList               shift and go to state 428

state 403

    (85) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL . CIZQ expListDynamic CDER
    (86) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL . expresionNewList
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 429
    NEWLIST         shift and go to state 51

    expresionNewList               shift and go to state 430

state 404

    (89) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL . CIZQ expListSet CDER
    (90) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL . expresionNewList
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 431
    NEWLIST         shift and go to state 51

    expresionNewList               shift and go to state 432

state 405

    (120) expListSet -> SETFROM PIZQ CIZQ CDER PDER .
    (122) expListSet -> SETFROM PIZQ CIZQ CDER PDER . COMA expListSet

    CDER            reduce using rule 120 (expListSet -> SETFROM PIZQ CIZQ CDER PDER .)
    COMA            shift and go to state 433


state 406

    (121) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER
    (123) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER COMA expListSet

    PDER            shift and go to state 434


state 407

    (59) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ . CDER PDER
    (61) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (110) expListDynamic -> . STRING
    (111) expListDynamic -> . ENTERO
    (112) expListDynamic -> . DOUBLE
    (113) expListDynamic -> . BOOL
    (114) expListDynamic -> . STRING COMA expListDynamic
    (115) expListDynamic -> . ENTERO COMA expListDynamic
    (116) expListDynamic -> . DOUBLE COMA expListDynamic
    (117) expListDynamic -> . BOOL COMA expListDynamic
    (118) expListDynamic -> . VARIABLE
    (119) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 435
    STRING          shift and go to state 319
    ENTERO          shift and go to state 306
    DOUBLE          shift and go to state 307
    BOOL            shift and go to state 308
    VARIABLE        shift and go to state 332

    expListDynamic                 shift and go to state 436

state 408

    (60) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    PUNTOYCOMA      reduce using rule 60 (expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 409

    (202) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .

    PUNTOYCOMA      reduce using rule 202 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    SUMA            reduce using rule 202 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    CIZQ            reduce using rule 202 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    PDER            reduce using rule 202 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)


state 410

    (176) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 176 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)


state 411

    (178) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool . PDER
    (191) comparacionBool -> expresionBool . operadorLogico expresionBool
    (192) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (223) operadorLogico -> . AND
    (224) operadorLogico -> . OR

    PDER            shift and go to state 437
    AND             shift and go to state 63
    OR              shift and go to state 64

    operadorLogico                 shift and go to state 62

state 412

    (141) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 141 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)


state 413

    (145) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 145 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)


state 414

    (172) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DSUMA PDER final
    (174) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DRESTA PDER final

    DSUMA           shift and go to state 438
    DRESTA          shift and go to state 439


state 415

    (167) expresionBoolFor -> VARIABLE comparadorMat VARIABLE .
    (183) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (204) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 167 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 183 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 183 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 167 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 183 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 183 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 204 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 204 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 204 (valorInt -> VARIABLE .)
    DIV             reduce using rule 204 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 204 (valorInt -> VARIABLE .)
    MOD             reduce using rule 204 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 204 (valorInt -> VARIABLE .) ]


state 416

    (166) expresionBoolFor -> VARIABLE comparadorMat expresionDouble .
    (182) expresionBool -> VARIABLE comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 166 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 182 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 182 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 417

    (165) expresionBoolFor -> valorDouble comparadorMat expresionDouble .
    (181) expresionBool -> valorDouble comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 165 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 181 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 181 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 418

    (168) expresionBoolFor -> valorDouble comparadorMat VARIABLE .
    (184) expresionBool -> valorDouble comparadorMat VARIABLE .
    (204) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 168 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 184 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 184 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 168 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 184 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 184 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 204 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 204 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 204 (valorInt -> VARIABLE .)
    DIV             reduce using rule 204 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 204 (valorInt -> VARIABLE .)
    MOD             reduce using rule 204 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 204 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 204 (valorInt -> VARIABLE .) ]


state 419

    (66) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ . expListString CDER
    (64) expresionNewList -> CIZQ . CDER
    (92) expListString -> . STRING
    (93) expListString -> . STRING COMA expListString
    (94) expListString -> . VARIABLE
    (95) expListString -> . VARIABLE COMA expListString

    CDER            shift and go to state 129
    STRING          shift and go to state 442
    VARIABLE        shift and go to state 440

    expListString                  shift and go to state 441

state 420

    (67) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 67 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList .)


state 421

    (70) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ . expListInt CDER
    (64) expresionNewList -> CIZQ . CDER
    (96) expListInt -> . ENTERO
    (97) expListInt -> . ENTERO COMA expListInt
    (98) expListInt -> . VARIABLE
    (99) expListInt -> . VARIABLE COMA expListInt

    CDER            shift and go to state 129
    ENTERO          shift and go to state 445
    VARIABLE        shift and go to state 443

    expListInt                     shift and go to state 444

state 422

    (71) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 71 (expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList .)


state 423

    (74) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ . expListNum CDER
    (64) expresionNewList -> CIZQ . CDER
    (100) expListNum -> . ENTERO
    (101) expListNum -> . DOUBLE
    (102) expListNum -> . ENTERO COMA expListNum
    (103) expListNum -> . DOUBLE COMA expListNum
    (104) expListNum -> . VARIABLE
    (105) expListNum -> . VARIABLE COMA expListNum

    CDER            shift and go to state 129
    ENTERO          shift and go to state 448
    DOUBLE          shift and go to state 449
    VARIABLE        shift and go to state 446

    expListNum                     shift and go to state 447

state 424

    (75) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 75 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList .)


state 425

    (78) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ . expListNum CDER
    (64) expresionNewList -> CIZQ . CDER
    (100) expListNum -> . ENTERO
    (101) expListNum -> . DOUBLE
    (102) expListNum -> . ENTERO COMA expListNum
    (103) expListNum -> . DOUBLE COMA expListNum
    (104) expListNum -> . VARIABLE
    (105) expListNum -> . VARIABLE COMA expListNum

    CDER            shift and go to state 129
    ENTERO          shift and go to state 448
    DOUBLE          shift and go to state 449
    VARIABLE        shift and go to state 446

    expListNum                     shift and go to state 450

state 426

    (79) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 79 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList .)


state 427

    (81) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ . expListBool CDER
    (64) expresionNewList -> CIZQ . CDER
    (106) expListBool -> . BOOL
    (107) expListBool -> . BOOL COMA expListBool
    (108) expListBool -> . VARIABLE
    (109) expListBool -> . VARIABLE COMA expListBool

    CDER            shift and go to state 129
    BOOL            shift and go to state 453
    VARIABLE        shift and go to state 451

    expListBool                    shift and go to state 452

state 428

    (82) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 82 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList .)


state 429

    (85) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ . expListDynamic CDER
    (64) expresionNewList -> CIZQ . CDER
    (110) expListDynamic -> . STRING
    (111) expListDynamic -> . ENTERO
    (112) expListDynamic -> . DOUBLE
    (113) expListDynamic -> . BOOL
    (114) expListDynamic -> . STRING COMA expListDynamic
    (115) expListDynamic -> . ENTERO COMA expListDynamic
    (116) expListDynamic -> . DOUBLE COMA expListDynamic
    (117) expListDynamic -> . BOOL COMA expListDynamic
    (118) expListDynamic -> . VARIABLE
    (119) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 129
    STRING          shift and go to state 319
    ENTERO          shift and go to state 306
    DOUBLE          shift and go to state 307
    BOOL            shift and go to state 308
    VARIABLE        shift and go to state 332

    expListDynamic                 shift and go to state 454

state 430

    (86) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 86 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList .)


state 431

    (89) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ . expListSet CDER
    (64) expresionNewList -> CIZQ . CDER
    (120) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (121) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (122) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (123) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (124) expListSet -> . VARIABLE
    (125) expListSet -> . VARIABLE COMA expListSet

    CDER            shift and go to state 129
    SETFROM         shift and go to state 140
    VARIABLE        shift and go to state 455

    expListSet                     shift and go to state 456

state 432

    (90) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 90 (expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList .)


state 433

    (122) expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA . expListSet
    (120) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (121) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (122) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (123) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (124) expListSet -> . VARIABLE
    (125) expListSet -> . VARIABLE COMA expListSet

    SETFROM         shift and go to state 140
    VARIABLE        shift and go to state 455

    expListSet                     shift and go to state 457

state 434

    (121) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .
    (123) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER . COMA expListSet

    CDER            reduce using rule 121 (expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    COMA            shift and go to state 458


state 435

    (59) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 459


state 436

    (61) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 460


state 437

    (178) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 178 (sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .)


state 438

    (172) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA . PDER LIZQ final LDER
    (173) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA . PDER final

    PDER            shift and go to state 461


state 439

    (174) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA . PDER LIZQ final LDER
    (175) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA . PDER final

    PDER            shift and go to state 462


state 440

    (94) expListString -> VARIABLE .
    (95) expListString -> VARIABLE . COMA expListString

    CDER            reduce using rule 94 (expListString -> VARIABLE .)
    COMA            shift and go to state 463


state 441

    (66) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString . CDER

    CDER            shift and go to state 464


state 442

    (92) expListString -> STRING .
    (93) expListString -> STRING . COMA expListString

    CDER            reduce using rule 92 (expListString -> STRING .)
    COMA            shift and go to state 465


state 443

    (98) expListInt -> VARIABLE .
    (99) expListInt -> VARIABLE . COMA expListInt

    CDER            reduce using rule 98 (expListInt -> VARIABLE .)
    COMA            shift and go to state 466


state 444

    (70) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt . CDER

    CDER            shift and go to state 467


state 445

    (96) expListInt -> ENTERO .
    (97) expListInt -> ENTERO . COMA expListInt

    CDER            reduce using rule 96 (expListInt -> ENTERO .)
    COMA            shift and go to state 468


state 446

    (104) expListNum -> VARIABLE .
    (105) expListNum -> VARIABLE . COMA expListNum

    CDER            reduce using rule 104 (expListNum -> VARIABLE .)
    COMA            shift and go to state 469


state 447

    (74) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum . CDER

    CDER            shift and go to state 470


state 448

    (100) expListNum -> ENTERO .
    (102) expListNum -> ENTERO . COMA expListNum

    CDER            reduce using rule 100 (expListNum -> ENTERO .)
    COMA            shift and go to state 471


state 449

    (101) expListNum -> DOUBLE .
    (103) expListNum -> DOUBLE . COMA expListNum

    CDER            reduce using rule 101 (expListNum -> DOUBLE .)
    COMA            shift and go to state 472


state 450

    (78) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum . CDER

    CDER            shift and go to state 473


state 451

    (108) expListBool -> VARIABLE .
    (109) expListBool -> VARIABLE . COMA expListBool

    CDER            reduce using rule 108 (expListBool -> VARIABLE .)
    COMA            shift and go to state 474


state 452

    (81) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool . CDER

    CDER            shift and go to state 475


state 453

    (106) expListBool -> BOOL .
    (107) expListBool -> BOOL . COMA expListBool

    CDER            reduce using rule 106 (expListBool -> BOOL .)
    COMA            shift and go to state 476


state 454

    (85) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic . CDER

    CDER            shift and go to state 477


state 455

    (124) expListSet -> VARIABLE .
    (125) expListSet -> VARIABLE . COMA expListSet

    CDER            reduce using rule 124 (expListSet -> VARIABLE .)
    COMA            shift and go to state 478


state 456

    (89) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet . CDER

    CDER            shift and go to state 479


state 457

    (122) expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet .

    CDER            reduce using rule 122 (expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet .)


state 458

    (123) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA . expListSet
    (120) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (121) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (122) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (123) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (124) expListSet -> . VARIABLE
    (125) expListSet -> . VARIABLE COMA expListSet

    SETFROM         shift and go to state 140
    VARIABLE        shift and go to state 455

    expListSet                     shift and go to state 480

state 459

    (59) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER .

    PUNTOYCOMA      reduce using rule 59 (expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER .)


state 460

    (61) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 481


state 461

    (172) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER . LIZQ final LDER
    (173) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 482
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 483
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 462

    (174) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER . LIZQ final LDER
    (175) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 484
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 485
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 463

    (95) expListString -> VARIABLE COMA . expListString
    (92) expListString -> . STRING
    (93) expListString -> . STRING COMA expListString
    (94) expListString -> . VARIABLE
    (95) expListString -> . VARIABLE COMA expListString

    STRING          shift and go to state 442
    VARIABLE        shift and go to state 440

    expListString                  shift and go to state 309

state 464

    (66) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER .

    PUNTOYCOMA      reduce using rule 66 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER .)


state 465

    (93) expListString -> STRING COMA . expListString
    (92) expListString -> . STRING
    (93) expListString -> . STRING COMA expListString
    (94) expListString -> . VARIABLE
    (95) expListString -> . VARIABLE COMA expListString

    STRING          shift and go to state 442
    VARIABLE        shift and go to state 440

    expListString                  shift and go to state 303

state 466

    (99) expListInt -> VARIABLE COMA . expListInt
    (96) expListInt -> . ENTERO
    (97) expListInt -> . ENTERO COMA expListInt
    (98) expListInt -> . VARIABLE
    (99) expListInt -> . VARIABLE COMA expListInt

    ENTERO          shift and go to state 445
    VARIABLE        shift and go to state 443

    expListInt                     shift and go to state 310

state 467

    (70) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER .

    PUNTOYCOMA      reduce using rule 70 (expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER .)


state 468

    (97) expListInt -> ENTERO COMA . expListInt
    (96) expListInt -> . ENTERO
    (97) expListInt -> . ENTERO COMA expListInt
    (98) expListInt -> . VARIABLE
    (99) expListInt -> . VARIABLE COMA expListInt

    ENTERO          shift and go to state 445
    VARIABLE        shift and go to state 443

    expListInt                     shift and go to state 315

state 469

    (105) expListNum -> VARIABLE COMA . expListNum
    (100) expListNum -> . ENTERO
    (101) expListNum -> . DOUBLE
    (102) expListNum -> . ENTERO COMA expListNum
    (103) expListNum -> . DOUBLE COMA expListNum
    (104) expListNum -> . VARIABLE
    (105) expListNum -> . VARIABLE COMA expListNum

    ENTERO          shift and go to state 448
    DOUBLE          shift and go to state 449
    VARIABLE        shift and go to state 446

    expListNum                     shift and go to state 311

state 470

    (74) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 74 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER .)


state 471

    (102) expListNum -> ENTERO COMA . expListNum
    (100) expListNum -> . ENTERO
    (101) expListNum -> . DOUBLE
    (102) expListNum -> . ENTERO COMA expListNum
    (103) expListNum -> . DOUBLE COMA expListNum
    (104) expListNum -> . VARIABLE
    (105) expListNum -> . VARIABLE COMA expListNum

    ENTERO          shift and go to state 448
    DOUBLE          shift and go to state 449
    VARIABLE        shift and go to state 446

    expListNum                     shift and go to state 316

state 472

    (103) expListNum -> DOUBLE COMA . expListNum
    (100) expListNum -> . ENTERO
    (101) expListNum -> . DOUBLE
    (102) expListNum -> . ENTERO COMA expListNum
    (103) expListNum -> . DOUBLE COMA expListNum
    (104) expListNum -> . VARIABLE
    (105) expListNum -> . VARIABLE COMA expListNum

    ENTERO          shift and go to state 448
    DOUBLE          shift and go to state 449
    VARIABLE        shift and go to state 446

    expListNum                     shift and go to state 320

state 473

    (78) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 78 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER .)


state 474

    (109) expListBool -> VARIABLE COMA . expListBool
    (106) expListBool -> . BOOL
    (107) expListBool -> . BOOL COMA expListBool
    (108) expListBool -> . VARIABLE
    (109) expListBool -> . VARIABLE COMA expListBool

    BOOL            shift and go to state 453
    VARIABLE        shift and go to state 451

    expListBool                    shift and go to state 312

state 475

    (81) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER .

    PUNTOYCOMA      reduce using rule 81 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER .)


state 476

    (107) expListBool -> BOOL COMA . expListBool
    (106) expListBool -> . BOOL
    (107) expListBool -> . BOOL COMA expListBool
    (108) expListBool -> . VARIABLE
    (109) expListBool -> . VARIABLE COMA expListBool

    BOOL            shift and go to state 453
    VARIABLE        shift and go to state 451

    expListBool                    shift and go to state 324

state 477

    (85) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 85 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER .)


state 478

    (125) expListSet -> VARIABLE COMA . expListSet
    (120) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (121) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (122) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (123) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (124) expListSet -> . VARIABLE
    (125) expListSet -> . VARIABLE COMA expListSet

    SETFROM         shift and go to state 140
    VARIABLE        shift and go to state 455

    expListSet                     shift and go to state 314

state 479

    (89) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER .

    PUNTOYCOMA      reduce using rule 89 (expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER .)


state 480

    (123) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet .

    CDER            reduce using rule 123 (expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet .)


state 481

    (61) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    PUNTOYCOMA      reduce using rule 61 (expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 482

    (172) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 486
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 483

    (173) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .

    PUNTOYCOMA      reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    VARIABLE        reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    INT             reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DOUBLER         reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NUM             reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    STRINGR         reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BOOLR           reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DYNAMIC         reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    VAR             reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    WHILE           reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DO              reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    IF              reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ELSE            reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    PRINT           reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FUNCIONSTDIN    reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FUNCIONSTDOUT   reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NOT             reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ELSEIF          reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FOR             reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LIST            reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    CIZQ            reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NEWLIST         reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    SET             reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    SETFROM         reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ENTERO          reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DOUBLE          reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    STRING          reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BOOL            reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    $end            reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LDER            reduce using rule 173 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)


state 484

    (174) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (126) asignacion -> . INT VARIABLE IGUAL expresionInt
    (127) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (128) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (129) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (130) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (131) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (132) asignacion -> . VAR VARIABLE IGUAL expresion
    (133) asignacion -> . asignacionSimple
    (205) expresionInt -> . valorInt operadorMat expresionInt
    (206) expresionInt -> . valorInt
    (209) expresionDouble -> . valorDouble operadorMat expresionDouble
    (210) expresionDouble -> . valorDouble
    (198) expresionString -> . valorString SUMA expresionString
    (199) expresionString -> . valorString
    (181) expresionBool -> . valorDouble comparadorMat expresionDouble
    (182) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (183) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (184) expresionBool -> . valorDouble comparadorMat VARIABLE
    (185) expresionBool -> . valorBool
    (186) expresionBool -> . negacionBool
    (187) expresionBool -> . comparacionBool
    (188) expresionBool -> . valor IS objeto
    (189) expresionBool -> . valor ISNEGADO objeto
    (165) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (166) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (167) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (168) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (169) expresionBoolFor -> . valorBool
    (170) expresionBoolFor -> . negacionBool
    (171) expresionBoolFor -> . comparacionBool
    (176) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (177) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (178) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (140) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (141) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (142) sentenciaElse -> . ELSE final
    (143) sentenciaElse -> . ELSE LIZQ final LDER
    (135) imprimir -> . PRINT PIZQ expresion PDER
    (136) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (137) funcionStdin -> . FUNCIONSTDIN
    (138) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (139) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (190) negacionBool -> . NOT PIZQ expresionBool PDER
    (191) comparacionBool -> . expresionBool operadorLogico expresionBool
    (192) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (144) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (145) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (172) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (173) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (174) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (175) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (201) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (202) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (67) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> . CIZQ expListString CDER
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (71) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> . CIZQ expListInt CDER
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (75) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> . CIZQ expListNum CDER
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (79) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (82) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> . CIZQ expListBool CDER
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (86) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (87) expresionLista -> . CIZQ expListDynamic CDER
    (88) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (89) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (90) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (91) expresionLista -> . CIZQ expListSet CDER
    (62) expresionNewList -> . NEWLIST PIZQ PDER
    (63) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (64) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (61) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (134) asignacionSimple -> . VARIABLE IGUAL expresion
    (203) valorInt -> . ENTERO
    (204) valorInt -> . VARIABLE
    (207) valorDouble -> . DOUBLE
    (208) valorDouble -> . valorInt
    (193) valorString -> . STRING
    (194) valorString -> . VARIABLE
    (195) valorString -> . FUNCIONSTDIN
    (196) valorString -> . expresionIndexString
    (197) valorString -> . sentenciaSubstring
    (179) valorBool -> . BOOL
    (180) valorBool -> . VARIABLE
    (146) valor -> . ENTERO
    (147) valor -> . VARIABLE
    (148) valor -> . DOUBLE
    (149) valor -> . STRING
    (200) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 51
    SET             shift and go to state 50
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 487
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 485

    (175) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .

    PUNTOYCOMA      reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    VARIABLE        reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    INT             reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DOUBLER         reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NUM             reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    STRINGR         reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BOOLR           reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DYNAMIC         reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    VAR             reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    WHILE           reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DO              reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    IF              reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ELSE            reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    PRINT           reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FUNCIONSTDIN    reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FUNCIONSTDOUT   reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NOT             reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ELSEIF          reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FOR             reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LIST            reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    CIZQ            reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NEWLIST         reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    SET             reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    SETFROM         reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ENTERO          reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DOUBLE          reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    STRING          reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BOOL            reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    $end            reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LDER            reduce using rule 175 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)


state 486

    (172) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final . LDER

    LDER            shift and go to state 488


state 487

    (174) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final . LDER

    LDER            shift and go to state 489


state 488

    (172) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    INT             reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NUM             reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    STRINGR         reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BOOLR           reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    VAR             reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    WHILE           reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DO              reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    IF              reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ELSE            reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    PRINT           reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NOT             reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FOR             reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LIST            reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    CIZQ            reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    SET             reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    SETFROM         reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ENTERO          reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    STRING          reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BOOL            reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    $end            reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LDER            reduce using rule 172 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)


state 489

    (174) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    INT             reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NUM             reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    STRINGR         reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BOOLR           reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    VAR             reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    WHILE           reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DO              reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    IF              reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ELSE            reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    PRINT           reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NOT             reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FOR             reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LIST            reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    CIZQ            reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    SET             reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    SETFROM         reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ENTERO          reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    STRING          reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BOOL            reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    $end            reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LDER            reduce using rule 174 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 8 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 8 resolved as shift
WARNING: shift/reduce conflict for INT in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 8 resolved as shift
WARNING: shift/reduce conflict for NUM in state 8 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 8 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 8 resolved as shift
WARNING: shift/reduce conflict for VAR in state 8 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 8 resolved as shift
WARNING: shift/reduce conflict for DO in state 8 resolved as shift
WARNING: shift/reduce conflict for IF in state 8 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 8 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 8 resolved as shift
WARNING: shift/reduce conflict for NOT in state 8 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 8 resolved as shift
WARNING: shift/reduce conflict for FOR in state 8 resolved as shift
WARNING: shift/reduce conflict for LIST in state 8 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 8 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 8 resolved as shift
WARNING: shift/reduce conflict for SET in state 8 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 8 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 8 resolved as shift
WARNING: shift/reduce conflict for STRING in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 8 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 10 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 10 resolved as shift
WARNING: shift/reduce conflict for INT in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 10 resolved as shift
WARNING: shift/reduce conflict for NUM in state 10 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 10 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 10 resolved as shift
WARNING: shift/reduce conflict for VAR in state 10 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 10 resolved as shift
WARNING: shift/reduce conflict for DO in state 10 resolved as shift
WARNING: shift/reduce conflict for IF in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 10 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 10 resolved as shift
WARNING: shift/reduce conflict for NOT in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 10 resolved as shift
WARNING: shift/reduce conflict for FOR in state 10 resolved as shift
WARNING: shift/reduce conflict for LIST in state 10 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 10 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 10 resolved as shift
WARNING: shift/reduce conflict for SET in state 10 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 10 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 10 resolved as shift
WARNING: shift/reduce conflict for STRING in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 10 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 11 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 11 resolved as shift
WARNING: shift/reduce conflict for INT in state 11 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 11 resolved as shift
WARNING: shift/reduce conflict for NUM in state 11 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 11 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 11 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 11 resolved as shift
WARNING: shift/reduce conflict for VAR in state 11 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 11 resolved as shift
WARNING: shift/reduce conflict for DO in state 11 resolved as shift
WARNING: shift/reduce conflict for IF in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 11 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 11 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 11 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 11 resolved as shift
WARNING: shift/reduce conflict for NOT in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 11 resolved as shift
WARNING: shift/reduce conflict for FOR in state 11 resolved as shift
WARNING: shift/reduce conflict for LIST in state 11 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 11 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 11 resolved as shift
WARNING: shift/reduce conflict for SET in state 11 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 11 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 11 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 11 resolved as shift
WARNING: shift/reduce conflict for STRING in state 11 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 11 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 17 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 17 resolved as shift
WARNING: shift/reduce conflict for INT in state 17 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 17 resolved as shift
WARNING: shift/reduce conflict for NUM in state 17 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 17 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 17 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 17 resolved as shift
WARNING: shift/reduce conflict for VAR in state 17 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 17 resolved as shift
WARNING: shift/reduce conflict for DO in state 17 resolved as shift
WARNING: shift/reduce conflict for IF in state 17 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 17 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 17 resolved as shift
WARNING: shift/reduce conflict for NOT in state 17 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 17 resolved as shift
WARNING: shift/reduce conflict for FOR in state 17 resolved as shift
WARNING: shift/reduce conflict for LIST in state 17 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 17 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 17 resolved as shift
WARNING: shift/reduce conflict for SET in state 17 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 17 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 17 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 17 resolved as shift
WARNING: shift/reduce conflict for STRING in state 17 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 17 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 18 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 18 resolved as shift
WARNING: shift/reduce conflict for INT in state 18 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 18 resolved as shift
WARNING: shift/reduce conflict for NUM in state 18 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 18 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 18 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 18 resolved as shift
WARNING: shift/reduce conflict for VAR in state 18 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 18 resolved as shift
WARNING: shift/reduce conflict for DO in state 18 resolved as shift
WARNING: shift/reduce conflict for IF in state 18 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 18 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 18 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 18 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 18 resolved as shift
WARNING: shift/reduce conflict for NOT in state 18 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 18 resolved as shift
WARNING: shift/reduce conflict for FOR in state 18 resolved as shift
WARNING: shift/reduce conflict for LIST in state 18 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 18 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 18 resolved as shift
WARNING: shift/reduce conflict for SET in state 18 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 18 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 18 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 18 resolved as shift
WARNING: shift/reduce conflict for STRING in state 18 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 18 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 19 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 32 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 32 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 32 resolved as shift
WARNING: shift/reduce conflict for DIV in state 32 resolved as shift
WARNING: shift/reduce conflict for DIVENTERO in state 32 resolved as shift
WARNING: shift/reduce conflict for MOD in state 32 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 57 resolved as shift
WARNING: shift/reduce conflict for INT in state 57 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 57 resolved as shift
WARNING: shift/reduce conflict for NUM in state 57 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 57 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 57 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 57 resolved as shift
WARNING: shift/reduce conflict for VAR in state 57 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 57 resolved as shift
WARNING: shift/reduce conflict for DO in state 57 resolved as shift
WARNING: shift/reduce conflict for IF in state 57 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 57 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 57 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 57 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 57 resolved as shift
WARNING: shift/reduce conflict for NOT in state 57 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 57 resolved as shift
WARNING: shift/reduce conflict for FOR in state 57 resolved as shift
WARNING: shift/reduce conflict for LIST in state 57 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 57 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 57 resolved as shift
WARNING: shift/reduce conflict for SET in state 57 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 57 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 57 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 57 resolved as shift
WARNING: shift/reduce conflict for STRING in state 57 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 57 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 58 resolved as shift
WARNING: shift/reduce conflict for INT in state 58 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 58 resolved as shift
WARNING: shift/reduce conflict for NUM in state 58 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 58 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 58 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 58 resolved as shift
WARNING: shift/reduce conflict for VAR in state 58 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 58 resolved as shift
WARNING: shift/reduce conflict for DO in state 58 resolved as shift
WARNING: shift/reduce conflict for IF in state 58 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 58 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 58 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 58 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 58 resolved as shift
WARNING: shift/reduce conflict for NOT in state 58 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 58 resolved as shift
WARNING: shift/reduce conflict for FOR in state 58 resolved as shift
WARNING: shift/reduce conflict for LIST in state 58 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 58 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 58 resolved as shift
WARNING: shift/reduce conflict for SET in state 58 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 58 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 58 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 58 resolved as shift
WARNING: shift/reduce conflict for STRING in state 58 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 58 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 59 resolved as shift
WARNING: shift/reduce conflict for INT in state 59 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 59 resolved as shift
WARNING: shift/reduce conflict for NUM in state 59 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 59 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 59 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 59 resolved as shift
WARNING: shift/reduce conflict for VAR in state 59 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 59 resolved as shift
WARNING: shift/reduce conflict for DO in state 59 resolved as shift
WARNING: shift/reduce conflict for IF in state 59 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 59 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 59 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 59 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 59 resolved as shift
WARNING: shift/reduce conflict for NOT in state 59 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 59 resolved as shift
WARNING: shift/reduce conflict for FOR in state 59 resolved as shift
WARNING: shift/reduce conflict for LIST in state 59 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 59 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 59 resolved as shift
WARNING: shift/reduce conflict for SET in state 59 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 59 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 59 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 59 resolved as shift
WARNING: shift/reduce conflict for STRING in state 59 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 59 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 60 resolved as shift
WARNING: shift/reduce conflict for INT in state 60 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 60 resolved as shift
WARNING: shift/reduce conflict for NUM in state 60 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 60 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 60 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 60 resolved as shift
WARNING: shift/reduce conflict for VAR in state 60 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 60 resolved as shift
WARNING: shift/reduce conflict for DO in state 60 resolved as shift
WARNING: shift/reduce conflict for IF in state 60 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 60 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 60 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 60 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 60 resolved as shift
WARNING: shift/reduce conflict for NOT in state 60 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 60 resolved as shift
WARNING: shift/reduce conflict for FOR in state 60 resolved as shift
WARNING: shift/reduce conflict for LIST in state 60 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 60 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 60 resolved as shift
WARNING: shift/reduce conflict for SET in state 60 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 60 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 60 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 60 resolved as shift
WARNING: shift/reduce conflict for STRING in state 60 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 60 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 61 resolved as shift
WARNING: shift/reduce conflict for INT in state 61 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 61 resolved as shift
WARNING: shift/reduce conflict for NUM in state 61 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 61 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 61 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 61 resolved as shift
WARNING: shift/reduce conflict for VAR in state 61 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 61 resolved as shift
WARNING: shift/reduce conflict for DO in state 61 resolved as shift
WARNING: shift/reduce conflict for IF in state 61 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 61 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 61 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 61 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 61 resolved as shift
WARNING: shift/reduce conflict for NOT in state 61 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 61 resolved as shift
WARNING: shift/reduce conflict for FOR in state 61 resolved as shift
WARNING: shift/reduce conflict for LIST in state 61 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 61 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 61 resolved as shift
WARNING: shift/reduce conflict for SET in state 61 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 61 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 61 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 61 resolved as shift
WARNING: shift/reduce conflict for STRING in state 61 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 61 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 65 resolved as shift
WARNING: shift/reduce conflict for INT in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 65 resolved as shift
WARNING: shift/reduce conflict for NUM in state 65 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 65 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 65 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 65 resolved as shift
WARNING: shift/reduce conflict for VAR in state 65 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 65 resolved as shift
WARNING: shift/reduce conflict for DO in state 65 resolved as shift
WARNING: shift/reduce conflict for IF in state 65 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 65 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 65 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 65 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 65 resolved as shift
WARNING: shift/reduce conflict for NOT in state 65 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 65 resolved as shift
WARNING: shift/reduce conflict for FOR in state 65 resolved as shift
WARNING: shift/reduce conflict for LIST in state 65 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 65 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 65 resolved as shift
WARNING: shift/reduce conflict for SET in state 65 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 65 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 65 resolved as shift
WARNING: shift/reduce conflict for STRING in state 65 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 65 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 67 resolved as shift
WARNING: shift/reduce conflict for INT in state 67 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 67 resolved as shift
WARNING: shift/reduce conflict for NUM in state 67 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 67 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 67 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 67 resolved as shift
WARNING: shift/reduce conflict for VAR in state 67 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 67 resolved as shift
WARNING: shift/reduce conflict for DO in state 67 resolved as shift
WARNING: shift/reduce conflict for IF in state 67 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 67 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 67 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 67 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 67 resolved as shift
WARNING: shift/reduce conflict for NOT in state 67 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 67 resolved as shift
WARNING: shift/reduce conflict for FOR in state 67 resolved as shift
WARNING: shift/reduce conflict for LIST in state 67 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 67 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 67 resolved as shift
WARNING: shift/reduce conflict for SET in state 67 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 67 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 67 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 67 resolved as shift
WARNING: shift/reduce conflict for STRING in state 67 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 67 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 68 resolved as shift
WARNING: shift/reduce conflict for INT in state 68 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 68 resolved as shift
WARNING: shift/reduce conflict for NUM in state 68 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 68 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 68 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 68 resolved as shift
WARNING: shift/reduce conflict for VAR in state 68 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 68 resolved as shift
WARNING: shift/reduce conflict for DO in state 68 resolved as shift
WARNING: shift/reduce conflict for IF in state 68 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 68 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 68 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 68 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 68 resolved as shift
WARNING: shift/reduce conflict for NOT in state 68 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 68 resolved as shift
WARNING: shift/reduce conflict for FOR in state 68 resolved as shift
WARNING: shift/reduce conflict for LIST in state 68 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 68 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 68 resolved as shift
WARNING: shift/reduce conflict for SET in state 68 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 68 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 68 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 68 resolved as shift
WARNING: shift/reduce conflict for STRING in state 68 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 68 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 69 resolved as shift
WARNING: shift/reduce conflict for INT in state 69 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 69 resolved as shift
WARNING: shift/reduce conflict for NUM in state 69 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 69 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 69 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 69 resolved as shift
WARNING: shift/reduce conflict for VAR in state 69 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 69 resolved as shift
WARNING: shift/reduce conflict for DO in state 69 resolved as shift
WARNING: shift/reduce conflict for IF in state 69 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 69 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 69 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 69 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 69 resolved as shift
WARNING: shift/reduce conflict for NOT in state 69 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 69 resolved as shift
WARNING: shift/reduce conflict for FOR in state 69 resolved as shift
WARNING: shift/reduce conflict for LIST in state 69 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 69 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 69 resolved as shift
WARNING: shift/reduce conflict for SET in state 69 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 69 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 69 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 69 resolved as shift
WARNING: shift/reduce conflict for STRING in state 69 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 69 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 71 resolved as shift
WARNING: shift/reduce conflict for INT in state 71 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 71 resolved as shift
WARNING: shift/reduce conflict for NUM in state 71 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 71 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 71 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 71 resolved as shift
WARNING: shift/reduce conflict for VAR in state 71 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 71 resolved as shift
WARNING: shift/reduce conflict for DO in state 71 resolved as shift
WARNING: shift/reduce conflict for IF in state 71 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 71 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 71 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 71 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 71 resolved as shift
WARNING: shift/reduce conflict for NOT in state 71 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 71 resolved as shift
WARNING: shift/reduce conflict for FOR in state 71 resolved as shift
WARNING: shift/reduce conflict for LIST in state 71 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 71 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 71 resolved as shift
WARNING: shift/reduce conflict for SET in state 71 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 71 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 71 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 71 resolved as shift
WARNING: shift/reduce conflict for STRING in state 71 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 71 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 73 resolved as shift
WARNING: shift/reduce conflict for INT in state 73 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 73 resolved as shift
WARNING: shift/reduce conflict for NUM in state 73 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 73 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 73 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 73 resolved as shift
WARNING: shift/reduce conflict for VAR in state 73 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 73 resolved as shift
WARNING: shift/reduce conflict for DO in state 73 resolved as shift
WARNING: shift/reduce conflict for IF in state 73 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 73 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 73 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 73 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 73 resolved as shift
WARNING: shift/reduce conflict for NOT in state 73 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 73 resolved as shift
WARNING: shift/reduce conflict for FOR in state 73 resolved as shift
WARNING: shift/reduce conflict for LIST in state 73 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 73 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 73 resolved as shift
WARNING: shift/reduce conflict for SET in state 73 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 73 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 73 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 73 resolved as shift
WARNING: shift/reduce conflict for STRING in state 73 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 73 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 74 resolved as shift
WARNING: shift/reduce conflict for INT in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 74 resolved as shift
WARNING: shift/reduce conflict for NUM in state 74 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 74 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 74 resolved as shift
WARNING: shift/reduce conflict for VAR in state 74 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 74 resolved as shift
WARNING: shift/reduce conflict for DO in state 74 resolved as shift
WARNING: shift/reduce conflict for IF in state 74 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 74 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 74 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 74 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 74 resolved as shift
WARNING: shift/reduce conflict for NOT in state 74 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 74 resolved as shift
WARNING: shift/reduce conflict for FOR in state 74 resolved as shift
WARNING: shift/reduce conflict for LIST in state 74 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 74 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 74 resolved as shift
WARNING: shift/reduce conflict for SET in state 74 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 74 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 74 resolved as shift
WARNING: shift/reduce conflict for STRING in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 74 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 75 resolved as shift
WARNING: shift/reduce conflict for INT in state 75 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 75 resolved as shift
WARNING: shift/reduce conflict for NUM in state 75 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 75 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 75 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 75 resolved as shift
WARNING: shift/reduce conflict for VAR in state 75 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 75 resolved as shift
WARNING: shift/reduce conflict for DO in state 75 resolved as shift
WARNING: shift/reduce conflict for IF in state 75 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 75 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 75 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 75 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 75 resolved as shift
WARNING: shift/reduce conflict for NOT in state 75 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 75 resolved as shift
WARNING: shift/reduce conflict for FOR in state 75 resolved as shift
WARNING: shift/reduce conflict for LIST in state 75 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 75 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 75 resolved as shift
WARNING: shift/reduce conflict for SET in state 75 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 75 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 75 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 75 resolved as shift
WARNING: shift/reduce conflict for STRING in state 75 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 75 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 76 resolved as shift
WARNING: shift/reduce conflict for INT in state 76 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 76 resolved as shift
WARNING: shift/reduce conflict for NUM in state 76 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 76 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 76 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 76 resolved as shift
WARNING: shift/reduce conflict for VAR in state 76 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 76 resolved as shift
WARNING: shift/reduce conflict for DO in state 76 resolved as shift
WARNING: shift/reduce conflict for IF in state 76 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 76 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 76 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 76 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 76 resolved as shift
WARNING: shift/reduce conflict for NOT in state 76 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 76 resolved as shift
WARNING: shift/reduce conflict for FOR in state 76 resolved as shift
WARNING: shift/reduce conflict for LIST in state 76 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 76 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 76 resolved as shift
WARNING: shift/reduce conflict for SET in state 76 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 76 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 76 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 76 resolved as shift
WARNING: shift/reduce conflict for STRING in state 76 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 76 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 77 resolved as shift
WARNING: shift/reduce conflict for INT in state 77 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 77 resolved as shift
WARNING: shift/reduce conflict for NUM in state 77 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 77 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 77 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 77 resolved as shift
WARNING: shift/reduce conflict for VAR in state 77 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 77 resolved as shift
WARNING: shift/reduce conflict for DO in state 77 resolved as shift
WARNING: shift/reduce conflict for IF in state 77 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 77 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 77 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 77 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 77 resolved as shift
WARNING: shift/reduce conflict for NOT in state 77 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 77 resolved as shift
WARNING: shift/reduce conflict for FOR in state 77 resolved as shift
WARNING: shift/reduce conflict for LIST in state 77 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 77 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 77 resolved as shift
WARNING: shift/reduce conflict for SET in state 77 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 77 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 77 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 77 resolved as shift
WARNING: shift/reduce conflict for STRING in state 77 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 77 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 78 resolved as shift
WARNING: shift/reduce conflict for INT in state 78 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 78 resolved as shift
WARNING: shift/reduce conflict for NUM in state 78 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 78 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 78 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 78 resolved as shift
WARNING: shift/reduce conflict for VAR in state 78 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 78 resolved as shift
WARNING: shift/reduce conflict for DO in state 78 resolved as shift
WARNING: shift/reduce conflict for IF in state 78 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 78 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 78 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 78 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 78 resolved as shift
WARNING: shift/reduce conflict for NOT in state 78 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 78 resolved as shift
WARNING: shift/reduce conflict for FOR in state 78 resolved as shift
WARNING: shift/reduce conflict for LIST in state 78 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 78 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 78 resolved as shift
WARNING: shift/reduce conflict for SET in state 78 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 78 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 78 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 78 resolved as shift
WARNING: shift/reduce conflict for STRING in state 78 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 78 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 80 resolved as shift
WARNING: shift/reduce conflict for INT in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 80 resolved as shift
WARNING: shift/reduce conflict for NUM in state 80 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 80 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 80 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 80 resolved as shift
WARNING: shift/reduce conflict for VAR in state 80 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 80 resolved as shift
WARNING: shift/reduce conflict for DO in state 80 resolved as shift
WARNING: shift/reduce conflict for IF in state 80 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 80 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 80 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 80 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 80 resolved as shift
WARNING: shift/reduce conflict for NOT in state 80 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 80 resolved as shift
WARNING: shift/reduce conflict for FOR in state 80 resolved as shift
WARNING: shift/reduce conflict for LIST in state 80 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 80 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 80 resolved as shift
WARNING: shift/reduce conflict for SET in state 80 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 80 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 80 resolved as shift
WARNING: shift/reduce conflict for STRING in state 80 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 80 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 82 resolved as shift
WARNING: shift/reduce conflict for INT in state 82 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 82 resolved as shift
WARNING: shift/reduce conflict for NUM in state 82 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 82 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 82 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 82 resolved as shift
WARNING: shift/reduce conflict for VAR in state 82 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 82 resolved as shift
WARNING: shift/reduce conflict for DO in state 82 resolved as shift
WARNING: shift/reduce conflict for IF in state 82 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 82 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 82 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 82 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 82 resolved as shift
WARNING: shift/reduce conflict for NOT in state 82 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 82 resolved as shift
WARNING: shift/reduce conflict for FOR in state 82 resolved as shift
WARNING: shift/reduce conflict for LIST in state 82 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 82 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 82 resolved as shift
WARNING: shift/reduce conflict for SET in state 82 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 82 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 82 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 82 resolved as shift
WARNING: shift/reduce conflict for STRING in state 82 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 82 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 94 resolved as shift
WARNING: shift/reduce conflict for INT in state 94 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 94 resolved as shift
WARNING: shift/reduce conflict for NUM in state 94 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 94 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 94 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 94 resolved as shift
WARNING: shift/reduce conflict for VAR in state 94 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 94 resolved as shift
WARNING: shift/reduce conflict for DO in state 94 resolved as shift
WARNING: shift/reduce conflict for IF in state 94 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 94 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 94 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 94 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 94 resolved as shift
WARNING: shift/reduce conflict for NOT in state 94 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 94 resolved as shift
WARNING: shift/reduce conflict for FOR in state 94 resolved as shift
WARNING: shift/reduce conflict for LIST in state 94 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 94 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 94 resolved as shift
WARNING: shift/reduce conflict for SET in state 94 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 94 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 94 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 94 resolved as shift
WARNING: shift/reduce conflict for STRING in state 94 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 94 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 95 resolved as shift
WARNING: shift/reduce conflict for INT in state 95 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 95 resolved as shift
WARNING: shift/reduce conflict for NUM in state 95 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 95 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 95 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 95 resolved as shift
WARNING: shift/reduce conflict for VAR in state 95 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 95 resolved as shift
WARNING: shift/reduce conflict for DO in state 95 resolved as shift
WARNING: shift/reduce conflict for IF in state 95 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 95 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 95 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 95 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 95 resolved as shift
WARNING: shift/reduce conflict for NOT in state 95 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 95 resolved as shift
WARNING: shift/reduce conflict for FOR in state 95 resolved as shift
WARNING: shift/reduce conflict for LIST in state 95 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 95 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 95 resolved as shift
WARNING: shift/reduce conflict for SET in state 95 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 95 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 95 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 95 resolved as shift
WARNING: shift/reduce conflict for STRING in state 95 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 95 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 96 resolved as shift
WARNING: shift/reduce conflict for INT in state 96 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 96 resolved as shift
WARNING: shift/reduce conflict for NUM in state 96 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 96 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 96 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 96 resolved as shift
WARNING: shift/reduce conflict for VAR in state 96 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 96 resolved as shift
WARNING: shift/reduce conflict for DO in state 96 resolved as shift
WARNING: shift/reduce conflict for IF in state 96 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 96 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 96 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 96 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 96 resolved as shift
WARNING: shift/reduce conflict for NOT in state 96 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 96 resolved as shift
WARNING: shift/reduce conflict for FOR in state 96 resolved as shift
WARNING: shift/reduce conflict for LIST in state 96 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 96 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 96 resolved as shift
WARNING: shift/reduce conflict for SET in state 96 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 96 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 96 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 96 resolved as shift
WARNING: shift/reduce conflict for STRING in state 96 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 96 resolved as shift
WARNING: shift/reduce conflict for AND in state 149 resolved as shift
WARNING: shift/reduce conflict for OR in state 149 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 152 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 152 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 152 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 152 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 152 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 152 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 171 resolved as shift
WARNING: shift/reduce conflict for INT in state 171 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 171 resolved as shift
WARNING: shift/reduce conflict for NUM in state 171 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 171 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 171 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 171 resolved as shift
WARNING: shift/reduce conflict for VAR in state 171 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 171 resolved as shift
WARNING: shift/reduce conflict for DO in state 171 resolved as shift
WARNING: shift/reduce conflict for IF in state 171 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 171 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 171 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 171 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 171 resolved as shift
WARNING: shift/reduce conflict for NOT in state 171 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 171 resolved as shift
WARNING: shift/reduce conflict for FOR in state 171 resolved as shift
WARNING: shift/reduce conflict for LIST in state 171 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 171 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 171 resolved as shift
WARNING: shift/reduce conflict for SET in state 171 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 171 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 171 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 171 resolved as shift
WARNING: shift/reduce conflict for STRING in state 171 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 171 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 172 resolved as shift
WARNING: shift/reduce conflict for INT in state 172 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 172 resolved as shift
WARNING: shift/reduce conflict for NUM in state 172 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 172 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 172 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 172 resolved as shift
WARNING: shift/reduce conflict for VAR in state 172 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 172 resolved as shift
WARNING: shift/reduce conflict for DO in state 172 resolved as shift
WARNING: shift/reduce conflict for IF in state 172 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 172 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 172 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 172 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 172 resolved as shift
WARNING: shift/reduce conflict for NOT in state 172 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 172 resolved as shift
WARNING: shift/reduce conflict for FOR in state 172 resolved as shift
WARNING: shift/reduce conflict for LIST in state 172 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 172 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 172 resolved as shift
WARNING: shift/reduce conflict for SET in state 172 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 172 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 172 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 172 resolved as shift
WARNING: shift/reduce conflict for STRING in state 172 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 172 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 179 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 179 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 179 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 179 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 179 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 179 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 230 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 230 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 230 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 230 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 230 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 230 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 348 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 348 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 348 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 348 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 348 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 348 resolved as shift
WARNING: reduce/reduce conflict in state 20 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 32 resolved using rule (expresionInt -> valorInt)
WARNING: rejected rule (valorDouble -> valorInt) in state 32
WARNING: reduce/reduce conflict in state 35 resolved using rule (expresionBoolFor -> valorBool)
WARNING: rejected rule (expresionBool -> valorBool) in state 35
WARNING: reduce/reduce conflict in state 42 resolved using rule (funcionStdin -> FUNCIONSTDIN)
WARNING: rejected rule (valorString -> FUNCIONSTDIN) in state 42
WARNING: reduce/reduce conflict in state 135 resolved using rule (expListString -> STRING)
WARNING: rejected rule (expListDynamic -> STRING) in state 135
WARNING: reduce/reduce conflict in state 136 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListInt -> VARIABLE) in state 136
WARNING: reduce/reduce conflict in state 136 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListNum -> VARIABLE) in state 136
WARNING: reduce/reduce conflict in state 136 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListBool -> VARIABLE) in state 136
WARNING: reduce/reduce conflict in state 136 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 136
WARNING: reduce/reduce conflict in state 136 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListSet -> VARIABLE) in state 136
WARNING: reduce/reduce conflict in state 137 resolved using rule (expListInt -> ENTERO)
WARNING: rejected rule (expListNum -> ENTERO) in state 137
WARNING: reduce/reduce conflict in state 137 resolved using rule (expListInt -> ENTERO)
WARNING: rejected rule (expListDynamic -> ENTERO) in state 137
WARNING: reduce/reduce conflict in state 138 resolved using rule (expListNum -> DOUBLE)
WARNING: rejected rule (expListDynamic -> DOUBLE) in state 138
WARNING: reduce/reduce conflict in state 139 resolved using rule (expListBool -> BOOL)
WARNING: rejected rule (expListDynamic -> BOOL) in state 139
WARNING: reduce/reduce conflict in state 150 resolved using rule (expresionBool -> comparacionBool)
WARNING: rejected rule (comparacionBool -> expresionBool operadorLogico comparacionBool) in state 150
WARNING: reduce/reduce conflict in state 156 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 156
WARNING: reduce/reduce conflict in state 173 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (expresionBool -> VARIABLE comparadorMat VARIABLE) in state 173
WARNING: reduce/reduce conflict in state 173 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 173
WARNING: reduce/reduce conflict in state 173 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 173
WARNING: reduce/reduce conflict in state 174 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat expresionDouble)
WARNING: rejected rule (expresionBool -> VARIABLE comparadorMat expresionDouble) in state 174
WARNING: reduce/reduce conflict in state 179 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 179
WARNING: reduce/reduce conflict in state 179 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 179
WARNING: reduce/reduce conflict in state 179 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 179
WARNING: reduce/reduce conflict in state 186 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 186
WARNING: reduce/reduce conflict in state 187 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 187
WARNING: reduce/reduce conflict in state 206 resolved using rule (expresionBoolFor -> valorDouble comparadorMat expresionDouble)
WARNING: rejected rule (expresionBool -> valorDouble comparadorMat expresionDouble) in state 206
WARNING: reduce/reduce conflict in state 207 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (expresionBool -> valorDouble comparadorMat VARIABLE) in state 207
WARNING: reduce/reduce conflict in state 207 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 207
WARNING: reduce/reduce conflict in state 207 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 207
WARNING: reduce/reduce conflict in state 230 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 230
WARNING: reduce/reduce conflict in state 230 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 230
WARNING: reduce/reduce conflict in state 230 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 230
WARNING: reduce/reduce conflict in state 305 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 305
WARNING: reduce/reduce conflict in state 318 resolved using rule (expListInt -> VARIABLE)
WARNING: rejected rule (expListNum -> VARIABLE) in state 318
WARNING: reduce/reduce conflict in state 318 resolved using rule (expListInt -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 318
WARNING: reduce/reduce conflict in state 322 resolved using rule (expListNum -> ENTERO)
WARNING: rejected rule (expListDynamic -> ENTERO) in state 322
WARNING: reduce/reduce conflict in state 323 resolved using rule (expListNum -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 323
WARNING: reduce/reduce conflict in state 326 resolved using rule (expListBool -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 326
WARNING: reduce/reduce conflict in state 334 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 334
WARNING: reduce/reduce conflict in state 335 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 335
WARNING: reduce/reduce conflict in state 415 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 415
WARNING: reduce/reduce conflict in state 415 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 415
WARNING: reduce/reduce conflict in state 418 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 418
WARNING: reduce/reduce conflict in state 418 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 418
WARNING: Rule (comparacionBool -> expresionBool operadorLogico comparacionBool) is never reduced
