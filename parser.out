Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    BREAK
    CASE
    COMILLAD
    COMILLAS
    DOSPUNTOS
    FLECHA
    FUNCIONARR
    FUNCIONRANGE
    FUNCIONTAKE
    RETURN
    SWITCH

Grammar

Rule 0     S' -> final
Rule 1     final -> asignacion PUNTOYCOMA
Rule 2     final -> asignacion PUNTOYCOMA final
Rule 3     final -> expresionInt PUNTOYCOMA
Rule 4     final -> expresionInt PUNTOYCOMA final
Rule 5     final -> expresionDouble PUNTOYCOMA
Rule 6     final -> expresionDouble PUNTOYCOMA final
Rule 7     final -> expresionString PUNTOYCOMA
Rule 8     final -> expresionString PUNTOYCOMA final
Rule 9     final -> expresionBool PUNTOYCOMA
Rule 10    final -> expresionBool PUNTOYCOMA final
Rule 11    final -> expresionBoolFor PUNTOYCOMA
Rule 12    final -> expresionBoolFor PUNTOYCOMA final
Rule 13    final -> sentenciaWhile
Rule 14    final -> sentenciaWhile final
Rule 15    final -> sentenciaWhile PUNTOYCOMA
Rule 16    final -> sentenciaWhile PUNTOYCOMA final
Rule 17    final -> sentenciaDoWhile PUNTOYCOMA
Rule 18    final -> sentenciaDoWhile PUNTOYCOMA final
Rule 19    final -> sentenciaIf PUNTOYCOMA
Rule 20    final -> sentenciaIf PUNTOYCOMA final
Rule 21    final -> sentenciaIf
Rule 22    final -> sentenciaIf final
Rule 23    final -> sentenciaElse PUNTOYCOMA
Rule 24    final -> sentenciaElse PUNTOYCOMA final
Rule 25    final -> sentenciaElse
Rule 26    final -> sentenciaElse final
Rule 27    final -> imprimir PUNTOYCOMA
Rule 28    final -> imprimir PUNTOYCOMA final
Rule 29    final -> funcionStdin PUNTOYCOMA
Rule 30    final -> funcionStdin PUNTOYCOMA final
Rule 31    final -> funcionStdout PUNTOYCOMA
Rule 32    final -> funcionStdout PUNTOYCOMA final
Rule 33    final -> negacionBool PUNTOYCOMA
Rule 34    final -> negacionBool PUNTOYCOMA final
Rule 35    final -> comparacionBool PUNTOYCOMA final
Rule 36    final -> comparacionBool PUNTOYCOMA
Rule 37    final -> sentenciaElseIf PUNTOYCOMA final
Rule 38    final -> sentenciaElseIf final
Rule 39    final -> sentenciaElseIf PUNTOYCOMA
Rule 40    final -> sentenciaElseIf
Rule 41    final -> sentenciaFor PUNTOYCOMA final
Rule 42    final -> sentenciaFor PUNTOYCOMA
Rule 43    final -> sentenciaFor final
Rule 44    final -> sentenciaFor
Rule 45    final -> sentenciaSubstring PUNTOYCOMA final
Rule 46    final -> sentenciaSubstring PUNTOYCOMA
Rule 47    final -> VARIABLE DSUMA PUNTOYCOMA final
Rule 48    final -> VARIABLE DSUMA PUNTOYCOMA
Rule 49    final -> VARIABLE DRESTA PUNTOYCOMA final
Rule 50    final -> VARIABLE DRESTA PUNTOYCOMA
Rule 51    final -> expresionLista PUNTOYCOMA
Rule 52    final -> expresionLista PUNTOYCOMA final
Rule 53    final -> expresionNewList PUNTOYCOMA
Rule 54    final -> expresionNewList PUNTOYCOMA final
Rule 55    final -> expresionSet PUNTOYCOMA
Rule 56    final -> expresionSet PUNTOYCOMA final
Rule 57    expresionSet -> SET VARIABLE
Rule 58    expresionSet -> SETFROM PIZQ CIZQ CDER PDER
Rule 59    expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
Rule 60    expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 61    expresionNewList -> NEWLIST PIZQ PDER
Rule 62    expresionNewList -> NEWLIST PIZQ ENTERO PDER
Rule 63    expresionNewList -> CIZQ CDER
Rule 64    expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE
Rule 65    expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
Rule 66    expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
Rule 67    expresionLista -> CIZQ expListString CDER
Rule 68    expresionLista -> LIST MENOR INT MAYOR VARIABLE
Rule 69    expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
Rule 70    expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
Rule 71    expresionLista -> CIZQ expListInt CDER
Rule 72    expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE
Rule 73    expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
Rule 74    expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
Rule 75    expresionLista -> CIZQ expListNum CDER
Rule 76    expresionLista -> LIST MENOR NUM MAYOR VARIABLE
Rule 77    expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
Rule 78    expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
Rule 79    expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE
Rule 80    expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
Rule 81    expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
Rule 82    expresionLista -> CIZQ expListBool CDER
Rule 83    expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE
Rule 84    expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
Rule 85    expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
Rule 86    expresionLista -> CIZQ expListDynamic CDER
Rule 87    expListString -> STRING
Rule 88    expListString -> STRING COMA expListString
Rule 89    expListInt -> ENTERO
Rule 90    expListInt -> ENTERO COMA expListInt
Rule 91    expListNum -> ENTERO
Rule 92    expListNum -> DOUBLE
Rule 93    expListNum -> ENTERO COMA expListNum
Rule 94    expListNum -> DOUBLE COMA expListNum
Rule 95    expListBool -> BOOL
Rule 96    expListBool -> BOOL COMA expListBool
Rule 97    expListDynamic -> STRING
Rule 98    expListDynamic -> ENTERO
Rule 99    expListDynamic -> DOUBLE
Rule 100   expListDynamic -> BOOL
Rule 101   expListDynamic -> STRING COMA expListDynamic
Rule 102   expListDynamic -> ENTERO COMA expListDynamic
Rule 103   expListDynamic -> DOUBLE COMA expListDynamic
Rule 104   expListDynamic -> BOOL COMA expListDynamic
Rule 105   expListList -> VAR
Rule 106   asignacion -> INT VARIABLE IGUAL expresionInt
Rule 107   asignacion -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 108   asignacion -> NUM VARIABLE IGUAL expresionDouble
Rule 109   asignacion -> STRINGR VARIABLE IGUAL expresionString
Rule 110   asignacion -> BOOLR VARIABLE IGUAL expresionBool
Rule 111   asignacion -> DYNAMIC VARIABLE IGUAL expresion
Rule 112   asignacion -> VAR VARIABLE IGUAL expresion
Rule 113   asignacion -> asignacionSimple
Rule 114   asignacionSimple -> VARIABLE IGUAL expresion
Rule 115   imprimir -> PRINT PIZQ expresion PDER
Rule 116   imprimir -> PRINT PIZQ asignacionSimple PDER
Rule 117   funcionStdin -> FUNCIONSTDIN
Rule 118   funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER
Rule 119   funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER
Rule 120   sentenciaIf -> IF PIZQ expresionBool PDER final
Rule 121   sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER
Rule 122   sentenciaElse -> ELSE final
Rule 123   sentenciaElse -> ELSE LIZQ final LDER
Rule 124   sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final
Rule 125   sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER
Rule 126   valor -> ENTERO
Rule 127   valor -> VARIABLE
Rule 128   valor -> DOUBLE
Rule 129   valor -> STRING
Rule 130   expresion -> valor operadorMat expresion
Rule 131   expresion -> valor
Rule 132   expresion -> expresionString
Rule 133   expresion -> expresionInt
Rule 134   expresion -> expresionDouble
Rule 135   expresion -> expresionBool
Rule 136   asignacionFor -> INT VARIABLE IGUAL expresionInt
Rule 137   asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 138   asignacionFor -> NUM VARIABLE IGUAL expresionDouble
Rule 139   asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt
Rule 140   asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble
Rule 141   asignacionFor -> VAR VARIABLE IGUAL expresionInt
Rule 142   asignacionFor -> VAR VARIABLE IGUAL expresionDouble
Rule 143   asignacionFor -> VARIABLE IGUAL expresionInt
Rule 144   asignacionFor -> VARIABLE IGUAL expresionDouble
Rule 145   expresionBoolFor -> valorDouble comparadorMat expresionDouble
Rule 146   expresionBoolFor -> VARIABLE comparadorMat expresionDouble
Rule 147   expresionBoolFor -> VARIABLE comparadorMat VARIABLE
Rule 148   expresionBoolFor -> valorDouble comparadorMat VARIABLE
Rule 149   expresionBoolFor -> valorBool
Rule 150   expresionBoolFor -> negacionBool
Rule 151   expresionBoolFor -> comparacionBool
Rule 152   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
Rule 153   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
Rule 154   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
Rule 155   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
Rule 156   sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER
Rule 157   sentenciaWhile -> WHILE PIZQ expresionBool PDER final
Rule 158   sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER
Rule 159   valorBool -> BOOL
Rule 160   valorBool -> VARIABLE
Rule 161   expresionBool -> valorDouble comparadorMat expresionDouble
Rule 162   expresionBool -> VARIABLE comparadorMat expresionDouble
Rule 163   expresionBool -> VARIABLE comparadorMat VARIABLE
Rule 164   expresionBool -> valorDouble comparadorMat VARIABLE
Rule 165   expresionBool -> valorBool
Rule 166   expresionBool -> negacionBool
Rule 167   expresionBool -> comparacionBool
Rule 168   expresionBool -> valor IS objeto
Rule 169   expresionBool -> valor ISNEGADO objeto
Rule 170   negacionBool -> NOT PIZQ expresionBool PDER
Rule 171   comparacionBool -> expresionBool operadorLogico expresionBool
Rule 172   comparacionBool -> expresionBool operadorLogico comparacionBool
Rule 173   valorString -> STRING
Rule 174   valorString -> VARIABLE
Rule 175   valorString -> FUNCIONSTDIN
Rule 176   valorString -> expresionIndexString
Rule 177   valorString -> sentenciaSubstring
Rule 178   expresionString -> valorString SUMA expresionString
Rule 179   expresionString -> valorString
Rule 180   expresionIndexString -> valorString CIZQ ENTERO CDER
Rule 181   sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
Rule 182   sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
Rule 183   valorInt -> ENTERO
Rule 184   valorInt -> VARIABLE
Rule 185   expresionInt -> valorInt operadorMat expresionInt
Rule 186   expresionInt -> valorInt
Rule 187   valorDouble -> DOUBLE
Rule 188   valorDouble -> valorInt
Rule 189   expresionDouble -> valorDouble operadorMat expresionDouble
Rule 190   expresionDouble -> valorDouble
Rule 191   operadorMat -> SUMA
Rule 192   operadorMat -> RESTA
Rule 193   operadorMat -> MULTI
Rule 194   operadorMat -> DIV
Rule 195   operadorMat -> DIVENTERO
Rule 196   operadorMat -> MOD
Rule 197   comparadorMat -> DIGUAL
Rule 198   comparadorMat -> NOIGUAL
Rule 199   comparadorMat -> MAYOR
Rule 200   comparadorMat -> MENOR
Rule 201   comparadorMat -> MAYIGUAL
Rule 202   comparadorMat -> MENIGUAL
Rule 203   operadorLogico -> AND
Rule 204   operadorLogico -> OR
Rule 205   objeto -> STRINGR
Rule 206   objeto -> INT
Rule 207   objeto -> DOUBLER
Rule 208   objeto -> NUM
Rule 209   objeto -> VAR
Rule 210   objeto -> DYNAMIC
Rule 211   objeto -> LIST
Rule 212   objeto -> BOOL
Rule 213   objeto -> MAP
Rule 214   objeto -> SET

Terminals, with rules where they appear

AND                  : 203
AS                   : 
BOOL                 : 95 96 100 104 159 212
BOOLR                : 79 80 81 110
BREAK                : 
CASE                 : 
CDER                 : 58 59 60 63 65 67 69 71 73 75 77 80 82 84 86 180
CIZQ                 : 58 59 60 63 65 67 69 71 73 75 77 80 82 84 86 180
COMA                 : 88 90 93 94 96 101 102 103 104 182
COMILLAD             : 
COMILLAS             : 
DIGUAL               : 197
DIV                  : 194
DIVENTERO            : 195
DO                   : 158
DOSPUNTOS            : 
DOUBLE               : 92 94 99 103 128 187
DOUBLER              : 72 73 74 107 137 207
DRESTA               : 49 50 154 155
DSUMA                : 47 48 152 153
DYNAMIC              : 83 84 85 111 139 140 210
ELSE                 : 122 123
ELSEIF               : 124 125
ENTERO               : 62 89 90 91 93 98 102 126 180 181 182 182 183
FLECHA               : 
FOR                  : 152 153 154 155
FUNCIONARR           : 
FUNCIONRANGE         : 
FUNCIONSTDIN         : 117 175
FUNCIONSTDOUT        : 118 119
FUNCIONSUBSTRING     : 181 182
FUNCIONTAKE          : 
IF                   : 120 121
IGUAL                : 59 60 65 66 69 70 73 74 77 78 80 81 84 85 106 107 108 109 110 111 112 114 136 137 138 139 140 141 142 143 144
INT                  : 68 69 70 106 136 206
IS                   : 168
ISNEGADO             : 169
LDER                 : 121 123 125 152 154 156 158
LIST                 : 64 65 66 68 69 70 72 73 74 76 77 78 79 80 81 83 84 85 211
LIZQ                 : 121 123 125 152 154 156 158
MAP                  : 213
MAYIGUAL             : 201
MAYOR                : 64 65 66 68 69 70 72 73 74 76 77 78 79 80 81 83 84 85 199
MENIGUAL             : 202
MENOR                : 64 65 66 68 69 70 72 73 74 76 77 78 79 80 81 83 84 85 200
MOD                  : 196
MULTI                : 193
NEWLIST              : 61 62
NOIGUAL              : 198
NOT                  : 170
NUM                  : 76 77 78 108 138 208
OR                   : 204
PDER                 : 58 59 60 61 62 115 116 118 119 120 121 124 125 152 153 154 155 156 157 158 170 181 182
PIZQ                 : 58 59 60 61 62 115 116 118 119 120 121 124 125 152 153 154 155 156 157 158 170 181 182
PRINT                : 115 116
PUNTOYCOMA           : 1 2 3 4 5 6 7 8 9 10 11 12 15 16 17 18 19 20 23 24 27 28 29 30 31 32 33 34 35 36 37 39 41 42 45 46 47 48 49 50 51 52 53 54 55 56 152 152 153 153 154 154 155 155
RESTA                : 192
RETURN               : 
SET                  : 57 59 60 214
SETFROM              : 58 59 60
STRING               : 87 88 97 101 129 173
STRINGR              : 64 65 66 109 205
SUMA                 : 178 191
SWITCH               : 
VAR                  : 105 112 141 142 209
VARIABLE             : 47 48 49 50 57 59 60 64 65 66 68 69 70 72 73 74 76 77 78 79 80 81 83 84 85 106 107 108 109 110 111 112 114 127 136 137 138 139 140 141 142 143 144 146 147 147 148 152 153 154 155 160 162 163 163 164 174 181 182 184
WHILE                : 156 157 158
error                : 

Nonterminals, with rules where they appear

asignacion           : 1 2
asignacionFor        : 152 153 154 155
asignacionSimple     : 113 116 119
comparacionBool      : 35 36 151 167 172
comparadorMat        : 145 146 147 148 161 162 163 164
expListBool          : 80 82 96
expListDynamic       : 60 84 86 101 102 103 104
expListInt           : 69 71 90
expListList          : 
expListNum           : 73 75 77 93 94
expListString        : 65 67 88
expresion            : 111 112 114 115 118 130
expresionBool        : 9 10 110 120 121 124 125 135 156 157 158 170 171 171 172
expresionBoolFor     : 11 12 152 153 154 155
expresionDouble      : 5 6 107 108 134 137 138 140 142 144 145 146 161 162 189
expresionIndexString : 176
expresionInt         : 3 4 106 133 136 139 141 143 185
expresionLista       : 51 52
expresionNewList     : 53 54 66 70 74 78 81 85
expresionSet         : 55 56
expresionString      : 7 8 109 132 178
final                : 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 35 37 38 41 43 45 47 49 52 54 56 120 121 122 123 124 125 152 153 154 155 156 157 158 0
funcionStdin         : 29 30
funcionStdout        : 31 32
imprimir             : 27 28
negacionBool         : 33 34 150 166
objeto               : 168 169
operadorLogico       : 171 172
operadorMat          : 130 185 189
sentenciaDoWhile     : 17 18
sentenciaElse        : 23 24 25 26
sentenciaElseIf      : 37 38 39 40
sentenciaFor         : 41 42 43 44
sentenciaIf          : 19 20 21 22
sentenciaSubstring   : 45 46 177
sentenciaWhile       : 13 14 15 16
valor                : 130 131 168 169
valorBool            : 149 165
valorDouble          : 145 148 161 164 189 190
valorInt             : 185 186 188
valorString          : 178 179 180

Parsing method: LALR

state 0

    (0) S' -> . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    final                          shift and go to state 1
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 1

    (0) S' -> final .



state 2

    (1) final -> asignacion . PUNTOYCOMA
    (2) final -> asignacion . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 57


state 3

    (3) final -> expresionInt . PUNTOYCOMA
    (4) final -> expresionInt . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 58


state 4

    (5) final -> expresionDouble . PUNTOYCOMA
    (6) final -> expresionDouble . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 59


state 5

    (7) final -> expresionString . PUNTOYCOMA
    (8) final -> expresionString . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 60


state 6

    (9) final -> expresionBool . PUNTOYCOMA
    (10) final -> expresionBool . PUNTOYCOMA final
    (171) comparacionBool -> expresionBool . operadorLogico expresionBool
    (172) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (203) operadorLogico -> . AND
    (204) operadorLogico -> . OR

    PUNTOYCOMA      shift and go to state 61
    AND             shift and go to state 63
    OR              shift and go to state 64

    operadorLogico                 shift and go to state 62

state 7

    (11) final -> expresionBoolFor . PUNTOYCOMA
    (12) final -> expresionBoolFor . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 65


state 8

    (13) final -> sentenciaWhile .
    (14) final -> sentenciaWhile . final
    (15) final -> sentenciaWhile . PUNTOYCOMA
    (16) final -> sentenciaWhile . PUNTOYCOMA final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 13 (final -> sentenciaWhile .)
    LDER            reduce using rule 13 (final -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 67
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! PUNTOYCOMA      [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! VARIABLE        [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! INT             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DOUBLER         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NUM             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! STRINGR         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! BOOLR           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DYNAMIC         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! VAR             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! WHILE           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DO              [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! IF              [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ELSE            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! PRINT           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDIN    [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NOT             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ELSEIF          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FOR             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! LIST            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! CIZQ            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NEWLIST         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! SET             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! SETFROM         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ENTERO          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DOUBLE          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! STRING          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! BOOL            [ reduce using rule 13 (final -> sentenciaWhile .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 66
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 9

    (17) final -> sentenciaDoWhile . PUNTOYCOMA
    (18) final -> sentenciaDoWhile . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 68


state 10

    (19) final -> sentenciaIf . PUNTOYCOMA
    (20) final -> sentenciaIf . PUNTOYCOMA final
    (21) final -> sentenciaIf .
    (22) final -> sentenciaIf . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 69
    $end            reduce using rule 21 (final -> sentenciaIf .)
    LDER            reduce using rule 21 (final -> sentenciaIf .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! PUNTOYCOMA      [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! VARIABLE        [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! INT             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DOUBLER         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NUM             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! STRINGR         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! BOOLR           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DYNAMIC         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! VAR             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! WHILE           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DO              [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! IF              [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ELSE            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! PRINT           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NOT             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ELSEIF          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FOR             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! LIST            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! CIZQ            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NEWLIST         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! SET             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! SETFROM         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ENTERO          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DOUBLE          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! STRING          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! BOOL            [ reduce using rule 21 (final -> sentenciaIf .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 70
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 11

    (23) final -> sentenciaElse . PUNTOYCOMA
    (24) final -> sentenciaElse . PUNTOYCOMA final
    (25) final -> sentenciaElse .
    (26) final -> sentenciaElse . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 71
    $end            reduce using rule 25 (final -> sentenciaElse .)
    LDER            reduce using rule 25 (final -> sentenciaElse .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! PUNTOYCOMA      [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! VARIABLE        [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! INT             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DOUBLER         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NUM             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! STRINGR         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! BOOLR           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DYNAMIC         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! VAR             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! WHILE           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DO              [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! IF              [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ELSE            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! PRINT           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FUNCIONSTDIN    [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NOT             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ELSEIF          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FOR             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! LIST            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! CIZQ            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NEWLIST         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! SET             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! SETFROM         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ENTERO          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DOUBLE          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! STRING          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! BOOL            [ reduce using rule 25 (final -> sentenciaElse .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 72
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 12

    (27) final -> imprimir . PUNTOYCOMA
    (28) final -> imprimir . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 73


state 13

    (29) final -> funcionStdin . PUNTOYCOMA
    (30) final -> funcionStdin . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 74


state 14

    (31) final -> funcionStdout . PUNTOYCOMA
    (32) final -> funcionStdout . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 75


state 15

    (33) final -> negacionBool . PUNTOYCOMA
    (34) final -> negacionBool . PUNTOYCOMA final
    (166) expresionBool -> negacionBool .
    (150) expresionBoolFor -> negacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 76
    AND             reduce using rule 166 (expresionBool -> negacionBool .)
    OR              reduce using rule 166 (expresionBool -> negacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 166 (expresionBool -> negacionBool .) ]
  ! PUNTOYCOMA      [ reduce using rule 150 (expresionBoolFor -> negacionBool .) ]


state 16

    (35) final -> comparacionBool . PUNTOYCOMA final
    (36) final -> comparacionBool . PUNTOYCOMA
    (167) expresionBool -> comparacionBool .
    (151) expresionBoolFor -> comparacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 77
    AND             reduce using rule 167 (expresionBool -> comparacionBool .)
    OR              reduce using rule 167 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 167 (expresionBool -> comparacionBool .) ]
  ! PUNTOYCOMA      [ reduce using rule 151 (expresionBoolFor -> comparacionBool .) ]


state 17

    (37) final -> sentenciaElseIf . PUNTOYCOMA final
    (38) final -> sentenciaElseIf . final
    (39) final -> sentenciaElseIf . PUNTOYCOMA
    (40) final -> sentenciaElseIf .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 78
    $end            reduce using rule 40 (final -> sentenciaElseIf .)
    LDER            reduce using rule 40 (final -> sentenciaElseIf .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! PUNTOYCOMA      [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! VARIABLE        [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! INT             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DOUBLER         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NUM             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! STRINGR         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! BOOLR           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DYNAMIC         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! VAR             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! WHILE           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DO              [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! IF              [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ELSE            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! PRINT           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NOT             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ELSEIF          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FOR             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! LIST            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! CIZQ            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NEWLIST         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! SET             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! SETFROM         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ENTERO          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DOUBLE          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! STRING          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! BOOL            [ reduce using rule 40 (final -> sentenciaElseIf .) ]

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 79
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 18

    (41) final -> sentenciaFor . PUNTOYCOMA final
    (42) final -> sentenciaFor . PUNTOYCOMA
    (43) final -> sentenciaFor . final
    (44) final -> sentenciaFor .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 80
    $end            reduce using rule 44 (final -> sentenciaFor .)
    LDER            reduce using rule 44 (final -> sentenciaFor .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! PUNTOYCOMA      [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! VARIABLE        [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! INT             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DOUBLER         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NUM             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! STRINGR         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! BOOLR           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DYNAMIC         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! VAR             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! WHILE           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DO              [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! IF              [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ELSE            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! PRINT           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FUNCIONSTDIN    [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NOT             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ELSEIF          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FOR             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! LIST            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! CIZQ            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NEWLIST         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! SET             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! SETFROM         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ENTERO          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DOUBLE          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! STRING          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! BOOL            [ reduce using rule 44 (final -> sentenciaFor .) ]

    sentenciaFor                   shift and go to state 18
    final                          shift and go to state 81
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 19

    (45) final -> sentenciaSubstring . PUNTOYCOMA final
    (46) final -> sentenciaSubstring . PUNTOYCOMA
    (177) valorString -> sentenciaSubstring .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 82
    SUMA            reduce using rule 177 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 177 (valorString -> sentenciaSubstring .)

  ! PUNTOYCOMA      [ reduce using rule 177 (valorString -> sentenciaSubstring .) ]


state 20

    (47) final -> VARIABLE . DSUMA PUNTOYCOMA final
    (48) final -> VARIABLE . DSUMA PUNTOYCOMA
    (49) final -> VARIABLE . DRESTA PUNTOYCOMA final
    (50) final -> VARIABLE . DRESTA PUNTOYCOMA
    (162) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (163) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (146) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (147) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (181) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (114) asignacionSimple -> VARIABLE . IGUAL expresion
    (184) valorInt -> VARIABLE .
    (174) valorString -> VARIABLE .
    (160) valorBool -> VARIABLE .
    (127) valor -> VARIABLE .
    (197) comparadorMat -> . DIGUAL
    (198) comparadorMat -> . NOIGUAL
    (199) comparadorMat -> . MAYOR
    (200) comparadorMat -> . MENOR
    (201) comparadorMat -> . MAYIGUAL
    (202) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 174 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 174 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 160 (valorBool -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    DSUMA           shift and go to state 83
    DRESTA          shift and go to state 84
    FUNCIONSUBSTRING shift and go to state 86
    IGUAL           shift and go to state 87
    RESTA           reduce using rule 184 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 184 (valorInt -> VARIABLE .)
    DIV             reduce using rule 184 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 184 (valorInt -> VARIABLE .)
    MOD             reduce using rule 184 (valorInt -> VARIABLE .)
    SUMA            reduce using rule 174 (valorString -> VARIABLE .)
    CIZQ            reduce using rule 174 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 160 (valorBool -> VARIABLE .)
    AND             reduce using rule 160 (valorBool -> VARIABLE .)
    OR              reduce using rule 160 (valorBool -> VARIABLE .)
    IS              reduce using rule 127 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 127 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 88
    NOIGUAL         shift and go to state 89
    MAYOR           shift and go to state 90
    MENOR           shift and go to state 91
    MAYIGUAL        shift and go to state 92
    MENIGUAL        shift and go to state 93

  ! SUMA            [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 174 (valorString -> VARIABLE .) ]

    comparadorMat                  shift and go to state 85

state 21

    (51) final -> expresionLista . PUNTOYCOMA
    (52) final -> expresionLista . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 94


state 22

    (53) final -> expresionNewList . PUNTOYCOMA
    (54) final -> expresionNewList . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 95


state 23

    (55) final -> expresionSet . PUNTOYCOMA
    (56) final -> expresionSet . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 96


state 24

    (106) asignacion -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 97


state 25

    (107) asignacion -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 98


state 26

    (108) asignacion -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 99


state 27

    (109) asignacion -> STRINGR . VARIABLE IGUAL expresionString

    VARIABLE        shift and go to state 100


state 28

    (110) asignacion -> BOOLR . VARIABLE IGUAL expresionBool

    VARIABLE        shift and go to state 101


state 29

    (111) asignacion -> DYNAMIC . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 102


state 30

    (112) asignacion -> VAR . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 103


state 31

    (113) asignacion -> asignacionSimple .

    PUNTOYCOMA      reduce using rule 113 (asignacion -> asignacionSimple .)


state 32

    (185) expresionInt -> valorInt . operadorMat expresionInt
    (186) expresionInt -> valorInt .
    (188) valorDouble -> valorInt .
    (191) operadorMat -> . SUMA
    (192) operadorMat -> . RESTA
    (193) operadorMat -> . MULTI
    (194) operadorMat -> . DIV
    (195) operadorMat -> . DIVENTERO
    (196) operadorMat -> . MOD

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 186 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PDER resolved using rule 186 (expresionInt -> valorInt .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DIVENTERO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PUNTOYCOMA      reduce using rule 186 (expresionInt -> valorInt .)
    PDER            reduce using rule 186 (expresionInt -> valorInt .)
    DIGUAL          reduce using rule 188 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 188 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 188 (valorDouble -> valorInt .)
    MENOR           reduce using rule 188 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 188 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 188 (valorDouble -> valorInt .)
    SUMA            shift and go to state 105
    RESTA           shift and go to state 106
    MULTI           shift and go to state 107
    DIV             shift and go to state 108
    DIVENTERO       shift and go to state 109
    MOD             shift and go to state 110

  ! SUMA            [ reduce using rule 188 (valorDouble -> valorInt .) ]
  ! RESTA           [ reduce using rule 188 (valorDouble -> valorInt .) ]
  ! MULTI           [ reduce using rule 188 (valorDouble -> valorInt .) ]
  ! DIV             [ reduce using rule 188 (valorDouble -> valorInt .) ]
  ! DIVENTERO       [ reduce using rule 188 (valorDouble -> valorInt .) ]
  ! MOD             [ reduce using rule 188 (valorDouble -> valorInt .) ]
  ! PUNTOYCOMA      [ reduce using rule 188 (valorDouble -> valorInt .) ]
  ! PDER            [ reduce using rule 188 (valorDouble -> valorInt .) ]

    operadorMat                    shift and go to state 104

state 33

    (189) expresionDouble -> valorDouble . operadorMat expresionDouble
    (190) expresionDouble -> valorDouble .
    (161) expresionBool -> valorDouble . comparadorMat expresionDouble
    (164) expresionBool -> valorDouble . comparadorMat VARIABLE
    (145) expresionBoolFor -> valorDouble . comparadorMat expresionDouble
    (148) expresionBoolFor -> valorDouble . comparadorMat VARIABLE
    (191) operadorMat -> . SUMA
    (192) operadorMat -> . RESTA
    (193) operadorMat -> . MULTI
    (194) operadorMat -> . DIV
    (195) operadorMat -> . DIVENTERO
    (196) operadorMat -> . MOD
    (197) comparadorMat -> . DIGUAL
    (198) comparadorMat -> . NOIGUAL
    (199) comparadorMat -> . MAYOR
    (200) comparadorMat -> . MENOR
    (201) comparadorMat -> . MAYIGUAL
    (202) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 190 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 105
    RESTA           shift and go to state 106
    MULTI           shift and go to state 107
    DIV             shift and go to state 108
    DIVENTERO       shift and go to state 109
    MOD             shift and go to state 110
    DIGUAL          shift and go to state 88
    NOIGUAL         shift and go to state 89
    MAYOR           shift and go to state 90
    MENOR           shift and go to state 91
    MAYIGUAL        shift and go to state 92
    MENIGUAL        shift and go to state 93

    operadorMat                    shift and go to state 111
    comparadorMat                  shift and go to state 112

state 34

    (178) expresionString -> valorString . SUMA expresionString
    (179) expresionString -> valorString .
    (180) expresionIndexString -> valorString . CIZQ ENTERO CDER

    SUMA            shift and go to state 113
    PUNTOYCOMA      reduce using rule 179 (expresionString -> valorString .)
    PDER            reduce using rule 179 (expresionString -> valorString .)
    CIZQ            shift and go to state 114


state 35

    (165) expresionBool -> valorBool .
    (149) expresionBoolFor -> valorBool .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 149 (expresionBoolFor -> valorBool .)
    AND             reduce using rule 165 (expresionBool -> valorBool .)
    OR              reduce using rule 165 (expresionBool -> valorBool .)
    PUNTOYCOMA      reduce using rule 149 (expresionBoolFor -> valorBool .)

  ! PUNTOYCOMA      [ reduce using rule 165 (expresionBool -> valorBool .) ]


state 36

    (168) expresionBool -> valor . IS objeto
    (169) expresionBool -> valor . ISNEGADO objeto

    IS              shift and go to state 115
    ISNEGADO        shift and go to state 116


state 37

    (156) sentenciaWhile -> WHILE . PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> WHILE . PIZQ expresionBool PDER final

    PIZQ            shift and go to state 117


state 38

    (158) sentenciaDoWhile -> DO . LIZQ final LDER WHILE PIZQ expresionBool PDER

    LIZQ            shift and go to state 118


state 39

    (120) sentenciaIf -> IF . PIZQ expresionBool PDER final
    (121) sentenciaIf -> IF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 119


state 40

    (122) sentenciaElse -> ELSE . final
    (123) sentenciaElse -> ELSE . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 121
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    final                          shift and go to state 120
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 41

    (115) imprimir -> PRINT . PIZQ expresion PDER
    (116) imprimir -> PRINT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 122


state 42

    (117) funcionStdin -> FUNCIONSTDIN .
    (175) valorString -> FUNCIONSTDIN .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 117 (funcionStdin -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 117 (funcionStdin -> FUNCIONSTDIN .)
    SUMA            reduce using rule 175 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 175 (valorString -> FUNCIONSTDIN .)

  ! PUNTOYCOMA      [ reduce using rule 175 (valorString -> FUNCIONSTDIN .) ]


state 43

    (118) funcionStdout -> FUNCIONSTDOUT . PIZQ expresion PDER
    (119) funcionStdout -> FUNCIONSTDOUT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 123


state 44

    (170) negacionBool -> NOT . PIZQ expresionBool PDER

    PIZQ            shift and go to state 124


state 45

    (124) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 125


state 46

    (152) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final

    PIZQ            shift and go to state 126


state 47

    (183) valorInt -> ENTERO .
    (126) valor -> ENTERO .

    SUMA            reduce using rule 183 (valorInt -> ENTERO .)
    RESTA           reduce using rule 183 (valorInt -> ENTERO .)
    MULTI           reduce using rule 183 (valorInt -> ENTERO .)
    DIV             reduce using rule 183 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 183 (valorInt -> ENTERO .)
    MOD             reduce using rule 183 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 183 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 183 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 183 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 183 (valorInt -> ENTERO .)
    MENOR           reduce using rule 183 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 183 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 183 (valorInt -> ENTERO .)
    IS              reduce using rule 126 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 126 (valor -> ENTERO .)


state 48

    (64) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> LIST . MENOR INT MAYOR VARIABLE
    (69) expresionLista -> LIST . MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> LIST . MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList

    MENOR           shift and go to state 127


state 49

    (67) expresionLista -> CIZQ . expListString CDER
    (71) expresionLista -> CIZQ . expListInt CDER
    (75) expresionLista -> CIZQ . expListNum CDER
    (82) expresionLista -> CIZQ . expListBool CDER
    (86) expresionLista -> CIZQ . expListDynamic CDER
    (63) expresionNewList -> CIZQ . CDER
    (87) expListString -> . STRING
    (88) expListString -> . STRING COMA expListString
    (89) expListInt -> . ENTERO
    (90) expListInt -> . ENTERO COMA expListInt
    (91) expListNum -> . ENTERO
    (92) expListNum -> . DOUBLE
    (93) expListNum -> . ENTERO COMA expListNum
    (94) expListNum -> . DOUBLE COMA expListNum
    (95) expListBool -> . BOOL
    (96) expListBool -> . BOOL COMA expListBool
    (97) expListDynamic -> . STRING
    (98) expListDynamic -> . ENTERO
    (99) expListDynamic -> . DOUBLE
    (100) expListDynamic -> . BOOL
    (101) expListDynamic -> . STRING COMA expListDynamic
    (102) expListDynamic -> . ENTERO COMA expListDynamic
    (103) expListDynamic -> . DOUBLE COMA expListDynamic
    (104) expListDynamic -> . BOOL COMA expListDynamic

    CDER            shift and go to state 129
    STRING          shift and go to state 134
    ENTERO          shift and go to state 135
    DOUBLE          shift and go to state 136
    BOOL            shift and go to state 137

    expListString                  shift and go to state 128
    expListInt                     shift and go to state 130
    expListNum                     shift and go to state 131
    expListBool                    shift and go to state 132
    expListDynamic                 shift and go to state 133

state 50

    (61) expresionNewList -> NEWLIST . PIZQ PDER
    (62) expresionNewList -> NEWLIST . PIZQ ENTERO PDER

    PIZQ            shift and go to state 138


state 51

    (57) expresionSet -> SET . VARIABLE
    (59) expresionSet -> SET . VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> SET . VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER

    VARIABLE        shift and go to state 139


state 52

    (58) expresionSet -> SETFROM . PIZQ CIZQ CDER PDER

    PIZQ            shift and go to state 140


state 53

    (187) valorDouble -> DOUBLE .
    (128) valor -> DOUBLE .

    SUMA            reduce using rule 187 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 187 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 187 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 187 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 187 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 187 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 187 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 187 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 187 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 187 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 187 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 187 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 187 (valorDouble -> DOUBLE .)
    IS              reduce using rule 128 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 128 (valor -> DOUBLE .)


state 54

    (173) valorString -> STRING .
    (129) valor -> STRING .

    SUMA            reduce using rule 173 (valorString -> STRING .)
    CIZQ            reduce using rule 173 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 173 (valorString -> STRING .)
    IS              reduce using rule 129 (valor -> STRING .)
    ISNEGADO        reduce using rule 129 (valor -> STRING .)


state 55

    (176) valorString -> expresionIndexString .

    SUMA            reduce using rule 176 (valorString -> expresionIndexString .)
    CIZQ            reduce using rule 176 (valorString -> expresionIndexString .)
    PUNTOYCOMA      reduce using rule 176 (valorString -> expresionIndexString .)
    PDER            reduce using rule 176 (valorString -> expresionIndexString .)


state 56

    (159) valorBool -> BOOL .

    PUNTOYCOMA      reduce using rule 159 (valorBool -> BOOL .)
    AND             reduce using rule 159 (valorBool -> BOOL .)
    OR              reduce using rule 159 (valorBool -> BOOL .)
    PDER            reduce using rule 159 (valorBool -> BOOL .)


state 57

    (1) final -> asignacion PUNTOYCOMA .
    (2) final -> asignacion PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    LDER            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]

    asignacion                     shift and go to state 2
    final                          shift and go to state 141
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 58

    (3) final -> expresionInt PUNTOYCOMA .
    (4) final -> expresionInt PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    LDER            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]

    expresionInt                   shift and go to state 3
    final                          shift and go to state 142
    asignacion                     shift and go to state 2
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 59

    (5) final -> expresionDouble PUNTOYCOMA .
    (6) final -> expresionDouble PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    LDER            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]

    expresionDouble                shift and go to state 4
    final                          shift and go to state 143
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 60

    (7) final -> expresionString PUNTOYCOMA .
    (8) final -> expresionString PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    LDER            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]

    expresionString                shift and go to state 5
    final                          shift and go to state 144
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 61

    (9) final -> expresionBool PUNTOYCOMA .
    (10) final -> expresionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    LDER            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]

    expresionBool                  shift and go to state 6
    final                          shift and go to state 145
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 62

    (171) comparacionBool -> expresionBool operadorLogico . expresionBool
    (172) comparacionBool -> expresionBool operadorLogico . comparacionBool
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 149
    DOUBLE          shift and go to state 53
    BOOL            shift and go to state 56
    NOT             shift and go to state 44
    ENTERO          shift and go to state 153
    STRING          shift and go to state 154

    expresionBool                  shift and go to state 146
    comparacionBool                shift and go to state 147
    valorDouble                    shift and go to state 148
    valorBool                      shift and go to state 150
    negacionBool                   shift and go to state 151
    valor                          shift and go to state 36
    valorInt                       shift and go to state 152

state 63

    (203) operadorLogico -> AND .

    VARIABLE        reduce using rule 203 (operadorLogico -> AND .)
    DOUBLE          reduce using rule 203 (operadorLogico -> AND .)
    BOOL            reduce using rule 203 (operadorLogico -> AND .)
    NOT             reduce using rule 203 (operadorLogico -> AND .)
    ENTERO          reduce using rule 203 (operadorLogico -> AND .)
    STRING          reduce using rule 203 (operadorLogico -> AND .)


state 64

    (204) operadorLogico -> OR .

    VARIABLE        reduce using rule 204 (operadorLogico -> OR .)
    DOUBLE          reduce using rule 204 (operadorLogico -> OR .)
    BOOL            reduce using rule 204 (operadorLogico -> OR .)
    NOT             reduce using rule 204 (operadorLogico -> OR .)
    ENTERO          reduce using rule 204 (operadorLogico -> OR .)
    STRING          reduce using rule 204 (operadorLogico -> OR .)


state 65

    (11) final -> expresionBoolFor PUNTOYCOMA .
    (12) final -> expresionBoolFor PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    LDER            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 155
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 66

    (14) final -> sentenciaWhile final .

    $end            reduce using rule 14 (final -> sentenciaWhile final .)
    PUNTOYCOMA      reduce using rule 14 (final -> sentenciaWhile final .)
    VARIABLE        reduce using rule 14 (final -> sentenciaWhile final .)
    INT             reduce using rule 14 (final -> sentenciaWhile final .)
    DOUBLER         reduce using rule 14 (final -> sentenciaWhile final .)
    NUM             reduce using rule 14 (final -> sentenciaWhile final .)
    STRINGR         reduce using rule 14 (final -> sentenciaWhile final .)
    BOOLR           reduce using rule 14 (final -> sentenciaWhile final .)
    DYNAMIC         reduce using rule 14 (final -> sentenciaWhile final .)
    VAR             reduce using rule 14 (final -> sentenciaWhile final .)
    WHILE           reduce using rule 14 (final -> sentenciaWhile final .)
    DO              reduce using rule 14 (final -> sentenciaWhile final .)
    IF              reduce using rule 14 (final -> sentenciaWhile final .)
    ELSE            reduce using rule 14 (final -> sentenciaWhile final .)
    PRINT           reduce using rule 14 (final -> sentenciaWhile final .)
    FUNCIONSTDIN    reduce using rule 14 (final -> sentenciaWhile final .)
    FUNCIONSTDOUT   reduce using rule 14 (final -> sentenciaWhile final .)
    NOT             reduce using rule 14 (final -> sentenciaWhile final .)
    ELSEIF          reduce using rule 14 (final -> sentenciaWhile final .)
    FOR             reduce using rule 14 (final -> sentenciaWhile final .)
    LIST            reduce using rule 14 (final -> sentenciaWhile final .)
    CIZQ            reduce using rule 14 (final -> sentenciaWhile final .)
    NEWLIST         reduce using rule 14 (final -> sentenciaWhile final .)
    SET             reduce using rule 14 (final -> sentenciaWhile final .)
    SETFROM         reduce using rule 14 (final -> sentenciaWhile final .)
    ENTERO          reduce using rule 14 (final -> sentenciaWhile final .)
    DOUBLE          reduce using rule 14 (final -> sentenciaWhile final .)
    STRING          reduce using rule 14 (final -> sentenciaWhile final .)
    BOOL            reduce using rule 14 (final -> sentenciaWhile final .)
    LDER            reduce using rule 14 (final -> sentenciaWhile final .)


state 67

    (15) final -> sentenciaWhile PUNTOYCOMA .
    (16) final -> sentenciaWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    LDER            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 156
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 68

    (17) final -> sentenciaDoWhile PUNTOYCOMA .
    (18) final -> sentenciaDoWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    LDER            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]

    sentenciaDoWhile               shift and go to state 9
    final                          shift and go to state 157
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 69

    (19) final -> sentenciaIf PUNTOYCOMA .
    (20) final -> sentenciaIf PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    LDER            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 158
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 70

    (22) final -> sentenciaIf final .

    $end            reduce using rule 22 (final -> sentenciaIf final .)
    PUNTOYCOMA      reduce using rule 22 (final -> sentenciaIf final .)
    VARIABLE        reduce using rule 22 (final -> sentenciaIf final .)
    INT             reduce using rule 22 (final -> sentenciaIf final .)
    DOUBLER         reduce using rule 22 (final -> sentenciaIf final .)
    NUM             reduce using rule 22 (final -> sentenciaIf final .)
    STRINGR         reduce using rule 22 (final -> sentenciaIf final .)
    BOOLR           reduce using rule 22 (final -> sentenciaIf final .)
    DYNAMIC         reduce using rule 22 (final -> sentenciaIf final .)
    VAR             reduce using rule 22 (final -> sentenciaIf final .)
    WHILE           reduce using rule 22 (final -> sentenciaIf final .)
    DO              reduce using rule 22 (final -> sentenciaIf final .)
    IF              reduce using rule 22 (final -> sentenciaIf final .)
    ELSE            reduce using rule 22 (final -> sentenciaIf final .)
    PRINT           reduce using rule 22 (final -> sentenciaIf final .)
    FUNCIONSTDIN    reduce using rule 22 (final -> sentenciaIf final .)
    FUNCIONSTDOUT   reduce using rule 22 (final -> sentenciaIf final .)
    NOT             reduce using rule 22 (final -> sentenciaIf final .)
    ELSEIF          reduce using rule 22 (final -> sentenciaIf final .)
    FOR             reduce using rule 22 (final -> sentenciaIf final .)
    LIST            reduce using rule 22 (final -> sentenciaIf final .)
    CIZQ            reduce using rule 22 (final -> sentenciaIf final .)
    NEWLIST         reduce using rule 22 (final -> sentenciaIf final .)
    SET             reduce using rule 22 (final -> sentenciaIf final .)
    SETFROM         reduce using rule 22 (final -> sentenciaIf final .)
    ENTERO          reduce using rule 22 (final -> sentenciaIf final .)
    DOUBLE          reduce using rule 22 (final -> sentenciaIf final .)
    STRING          reduce using rule 22 (final -> sentenciaIf final .)
    BOOL            reduce using rule 22 (final -> sentenciaIf final .)
    LDER            reduce using rule 22 (final -> sentenciaIf final .)


state 71

    (23) final -> sentenciaElse PUNTOYCOMA .
    (24) final -> sentenciaElse PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    LDER            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 159
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 72

    (26) final -> sentenciaElse final .

    $end            reduce using rule 26 (final -> sentenciaElse final .)
    PUNTOYCOMA      reduce using rule 26 (final -> sentenciaElse final .)
    VARIABLE        reduce using rule 26 (final -> sentenciaElse final .)
    INT             reduce using rule 26 (final -> sentenciaElse final .)
    DOUBLER         reduce using rule 26 (final -> sentenciaElse final .)
    NUM             reduce using rule 26 (final -> sentenciaElse final .)
    STRINGR         reduce using rule 26 (final -> sentenciaElse final .)
    BOOLR           reduce using rule 26 (final -> sentenciaElse final .)
    DYNAMIC         reduce using rule 26 (final -> sentenciaElse final .)
    VAR             reduce using rule 26 (final -> sentenciaElse final .)
    WHILE           reduce using rule 26 (final -> sentenciaElse final .)
    DO              reduce using rule 26 (final -> sentenciaElse final .)
    IF              reduce using rule 26 (final -> sentenciaElse final .)
    ELSE            reduce using rule 26 (final -> sentenciaElse final .)
    PRINT           reduce using rule 26 (final -> sentenciaElse final .)
    FUNCIONSTDIN    reduce using rule 26 (final -> sentenciaElse final .)
    FUNCIONSTDOUT   reduce using rule 26 (final -> sentenciaElse final .)
    NOT             reduce using rule 26 (final -> sentenciaElse final .)
    ELSEIF          reduce using rule 26 (final -> sentenciaElse final .)
    FOR             reduce using rule 26 (final -> sentenciaElse final .)
    LIST            reduce using rule 26 (final -> sentenciaElse final .)
    CIZQ            reduce using rule 26 (final -> sentenciaElse final .)
    NEWLIST         reduce using rule 26 (final -> sentenciaElse final .)
    SET             reduce using rule 26 (final -> sentenciaElse final .)
    SETFROM         reduce using rule 26 (final -> sentenciaElse final .)
    ENTERO          reduce using rule 26 (final -> sentenciaElse final .)
    DOUBLE          reduce using rule 26 (final -> sentenciaElse final .)
    STRING          reduce using rule 26 (final -> sentenciaElse final .)
    BOOL            reduce using rule 26 (final -> sentenciaElse final .)
    LDER            reduce using rule 26 (final -> sentenciaElse final .)


state 73

    (27) final -> imprimir PUNTOYCOMA .
    (28) final -> imprimir PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    LDER            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]

    imprimir                       shift and go to state 12
    final                          shift and go to state 160
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 74

    (29) final -> funcionStdin PUNTOYCOMA .
    (30) final -> funcionStdin PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    LDER            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]

    funcionStdin                   shift and go to state 13
    final                          shift and go to state 161
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 75

    (31) final -> funcionStdout PUNTOYCOMA .
    (32) final -> funcionStdout PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    LDER            reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]

    funcionStdout                  shift and go to state 14
    final                          shift and go to state 162
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 76

    (33) final -> negacionBool PUNTOYCOMA .
    (34) final -> negacionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    LDER            reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]

    negacionBool                   shift and go to state 15
    final                          shift and go to state 163
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 77

    (35) final -> comparacionBool PUNTOYCOMA . final
    (36) final -> comparacionBool PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    LDER            reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]

    comparacionBool                shift and go to state 16
    final                          shift and go to state 164
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 78

    (37) final -> sentenciaElseIf PUNTOYCOMA . final
    (39) final -> sentenciaElseIf PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    LDER            reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 165
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 79

    (38) final -> sentenciaElseIf final .

    $end            reduce using rule 38 (final -> sentenciaElseIf final .)
    PUNTOYCOMA      reduce using rule 38 (final -> sentenciaElseIf final .)
    VARIABLE        reduce using rule 38 (final -> sentenciaElseIf final .)
    INT             reduce using rule 38 (final -> sentenciaElseIf final .)
    DOUBLER         reduce using rule 38 (final -> sentenciaElseIf final .)
    NUM             reduce using rule 38 (final -> sentenciaElseIf final .)
    STRINGR         reduce using rule 38 (final -> sentenciaElseIf final .)
    BOOLR           reduce using rule 38 (final -> sentenciaElseIf final .)
    DYNAMIC         reduce using rule 38 (final -> sentenciaElseIf final .)
    VAR             reduce using rule 38 (final -> sentenciaElseIf final .)
    WHILE           reduce using rule 38 (final -> sentenciaElseIf final .)
    DO              reduce using rule 38 (final -> sentenciaElseIf final .)
    IF              reduce using rule 38 (final -> sentenciaElseIf final .)
    ELSE            reduce using rule 38 (final -> sentenciaElseIf final .)
    PRINT           reduce using rule 38 (final -> sentenciaElseIf final .)
    FUNCIONSTDIN    reduce using rule 38 (final -> sentenciaElseIf final .)
    FUNCIONSTDOUT   reduce using rule 38 (final -> sentenciaElseIf final .)
    NOT             reduce using rule 38 (final -> sentenciaElseIf final .)
    ELSEIF          reduce using rule 38 (final -> sentenciaElseIf final .)
    FOR             reduce using rule 38 (final -> sentenciaElseIf final .)
    LIST            reduce using rule 38 (final -> sentenciaElseIf final .)
    CIZQ            reduce using rule 38 (final -> sentenciaElseIf final .)
    NEWLIST         reduce using rule 38 (final -> sentenciaElseIf final .)
    SET             reduce using rule 38 (final -> sentenciaElseIf final .)
    SETFROM         reduce using rule 38 (final -> sentenciaElseIf final .)
    ENTERO          reduce using rule 38 (final -> sentenciaElseIf final .)
    DOUBLE          reduce using rule 38 (final -> sentenciaElseIf final .)
    STRING          reduce using rule 38 (final -> sentenciaElseIf final .)
    BOOL            reduce using rule 38 (final -> sentenciaElseIf final .)
    LDER            reduce using rule 38 (final -> sentenciaElseIf final .)


state 80

    (41) final -> sentenciaFor PUNTOYCOMA . final
    (42) final -> sentenciaFor PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    LDER            reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]

    sentenciaFor                   shift and go to state 18
    final                          shift and go to state 166
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 81

    (43) final -> sentenciaFor final .

    $end            reduce using rule 43 (final -> sentenciaFor final .)
    PUNTOYCOMA      reduce using rule 43 (final -> sentenciaFor final .)
    VARIABLE        reduce using rule 43 (final -> sentenciaFor final .)
    INT             reduce using rule 43 (final -> sentenciaFor final .)
    DOUBLER         reduce using rule 43 (final -> sentenciaFor final .)
    NUM             reduce using rule 43 (final -> sentenciaFor final .)
    STRINGR         reduce using rule 43 (final -> sentenciaFor final .)
    BOOLR           reduce using rule 43 (final -> sentenciaFor final .)
    DYNAMIC         reduce using rule 43 (final -> sentenciaFor final .)
    VAR             reduce using rule 43 (final -> sentenciaFor final .)
    WHILE           reduce using rule 43 (final -> sentenciaFor final .)
    DO              reduce using rule 43 (final -> sentenciaFor final .)
    IF              reduce using rule 43 (final -> sentenciaFor final .)
    ELSE            reduce using rule 43 (final -> sentenciaFor final .)
    PRINT           reduce using rule 43 (final -> sentenciaFor final .)
    FUNCIONSTDIN    reduce using rule 43 (final -> sentenciaFor final .)
    FUNCIONSTDOUT   reduce using rule 43 (final -> sentenciaFor final .)
    NOT             reduce using rule 43 (final -> sentenciaFor final .)
    ELSEIF          reduce using rule 43 (final -> sentenciaFor final .)
    FOR             reduce using rule 43 (final -> sentenciaFor final .)
    LIST            reduce using rule 43 (final -> sentenciaFor final .)
    CIZQ            reduce using rule 43 (final -> sentenciaFor final .)
    NEWLIST         reduce using rule 43 (final -> sentenciaFor final .)
    SET             reduce using rule 43 (final -> sentenciaFor final .)
    SETFROM         reduce using rule 43 (final -> sentenciaFor final .)
    ENTERO          reduce using rule 43 (final -> sentenciaFor final .)
    DOUBLE          reduce using rule 43 (final -> sentenciaFor final .)
    STRING          reduce using rule 43 (final -> sentenciaFor final .)
    BOOL            reduce using rule 43 (final -> sentenciaFor final .)
    LDER            reduce using rule 43 (final -> sentenciaFor final .)


state 82

    (45) final -> sentenciaSubstring PUNTOYCOMA . final
    (46) final -> sentenciaSubstring PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    LDER            reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]

    sentenciaSubstring             shift and go to state 19
    final                          shift and go to state 167
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 83

    (47) final -> VARIABLE DSUMA . PUNTOYCOMA final
    (48) final -> VARIABLE DSUMA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 168


state 84

    (49) final -> VARIABLE DRESTA . PUNTOYCOMA final
    (50) final -> VARIABLE DRESTA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 169


state 85

    (162) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (163) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (146) expresionBoolFor -> VARIABLE comparadorMat . expresionDouble
    (147) expresionBoolFor -> VARIABLE comparadorMat . VARIABLE
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 170
    DOUBLE          shift and go to state 173
    ENTERO          shift and go to state 174

    expresionDouble                shift and go to state 171
    valorDouble                    shift and go to state 172
    valorInt                       shift and go to state 152

state 86

    (181) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO PDER
    (182) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO COMA ENTERO PDER

    PIZQ            shift and go to state 175


state 87

    (114) asignacionSimple -> VARIABLE IGUAL . expresion
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . valor
    (132) expresion -> . expresionString
    (133) expresion -> . expresionInt
    (134) expresion -> . expresionDouble
    (135) expresion -> . expresionBool
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 153
    VARIABLE        shift and go to state 176
    DOUBLE          shift and go to state 183
    STRING          shift and go to state 184
    FUNCIONSTDIN    shift and go to state 187
    BOOL            shift and go to state 56
    NOT             shift and go to state 44

    expresion                      shift and go to state 177
    valor                          shift and go to state 178
    expresionString                shift and go to state 179
    expresionInt                   shift and go to state 180
    expresionDouble                shift and go to state 181
    expresionBool                  shift and go to state 182
    valorString                    shift and go to state 34
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 185
    valorBool                      shift and go to state 150
    negacionBool                   shift and go to state 151
    comparacionBool                shift and go to state 186
    expresionIndexString           shift and go to state 55
    sentenciaSubstring             shift and go to state 188

state 88

    (197) comparadorMat -> DIGUAL .

    VARIABLE        reduce using rule 197 (comparadorMat -> DIGUAL .)
    DOUBLE          reduce using rule 197 (comparadorMat -> DIGUAL .)
    ENTERO          reduce using rule 197 (comparadorMat -> DIGUAL .)


state 89

    (198) comparadorMat -> NOIGUAL .

    VARIABLE        reduce using rule 198 (comparadorMat -> NOIGUAL .)
    DOUBLE          reduce using rule 198 (comparadorMat -> NOIGUAL .)
    ENTERO          reduce using rule 198 (comparadorMat -> NOIGUAL .)


state 90

    (199) comparadorMat -> MAYOR .

    VARIABLE        reduce using rule 199 (comparadorMat -> MAYOR .)
    DOUBLE          reduce using rule 199 (comparadorMat -> MAYOR .)
    ENTERO          reduce using rule 199 (comparadorMat -> MAYOR .)


state 91

    (200) comparadorMat -> MENOR .

    VARIABLE        reduce using rule 200 (comparadorMat -> MENOR .)
    DOUBLE          reduce using rule 200 (comparadorMat -> MENOR .)
    ENTERO          reduce using rule 200 (comparadorMat -> MENOR .)


state 92

    (201) comparadorMat -> MAYIGUAL .

    VARIABLE        reduce using rule 201 (comparadorMat -> MAYIGUAL .)
    DOUBLE          reduce using rule 201 (comparadorMat -> MAYIGUAL .)
    ENTERO          reduce using rule 201 (comparadorMat -> MAYIGUAL .)


state 93

    (202) comparadorMat -> MENIGUAL .

    VARIABLE        reduce using rule 202 (comparadorMat -> MENIGUAL .)
    DOUBLE          reduce using rule 202 (comparadorMat -> MENIGUAL .)
    ENTERO          reduce using rule 202 (comparadorMat -> MENIGUAL .)


state 94

    (51) final -> expresionLista PUNTOYCOMA .
    (52) final -> expresionLista PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    LDER            reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]

    expresionLista                 shift and go to state 21
    final                          shift and go to state 189
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 95

    (53) final -> expresionNewList PUNTOYCOMA .
    (54) final -> expresionNewList PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    LDER            reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]

    expresionNewList               shift and go to state 22
    final                          shift and go to state 190
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 96

    (55) final -> expresionSet PUNTOYCOMA .
    (56) final -> expresionSet PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    LDER            reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]

    expresionSet                   shift and go to state 23
    final                          shift and go to state 191
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 97

    (106) asignacion -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 192


state 98

    (107) asignacion -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 193


state 99

    (108) asignacion -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 194


state 100

    (109) asignacion -> STRINGR VARIABLE . IGUAL expresionString

    IGUAL           shift and go to state 195


state 101

    (110) asignacion -> BOOLR VARIABLE . IGUAL expresionBool

    IGUAL           shift and go to state 196


state 102

    (111) asignacion -> DYNAMIC VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 197


state 103

    (112) asignacion -> VAR VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 198


state 104

    (185) expresionInt -> valorInt operadorMat . expresionInt
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE

    ENTERO          shift and go to state 174
    VARIABLE        shift and go to state 201

    valorInt                       shift and go to state 199
    expresionInt                   shift and go to state 200

state 105

    (191) operadorMat -> SUMA .

    ENTERO          reduce using rule 191 (operadorMat -> SUMA .)
    VARIABLE        reduce using rule 191 (operadorMat -> SUMA .)
    DOUBLE          reduce using rule 191 (operadorMat -> SUMA .)
    STRING          reduce using rule 191 (operadorMat -> SUMA .)
    FUNCIONSTDIN    reduce using rule 191 (operadorMat -> SUMA .)
    BOOL            reduce using rule 191 (operadorMat -> SUMA .)
    NOT             reduce using rule 191 (operadorMat -> SUMA .)


state 106

    (192) operadorMat -> RESTA .

    ENTERO          reduce using rule 192 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 192 (operadorMat -> RESTA .)
    DOUBLE          reduce using rule 192 (operadorMat -> RESTA .)
    STRING          reduce using rule 192 (operadorMat -> RESTA .)
    FUNCIONSTDIN    reduce using rule 192 (operadorMat -> RESTA .)
    BOOL            reduce using rule 192 (operadorMat -> RESTA .)
    NOT             reduce using rule 192 (operadorMat -> RESTA .)


state 107

    (193) operadorMat -> MULTI .

    ENTERO          reduce using rule 193 (operadorMat -> MULTI .)
    VARIABLE        reduce using rule 193 (operadorMat -> MULTI .)
    DOUBLE          reduce using rule 193 (operadorMat -> MULTI .)
    STRING          reduce using rule 193 (operadorMat -> MULTI .)
    FUNCIONSTDIN    reduce using rule 193 (operadorMat -> MULTI .)
    BOOL            reduce using rule 193 (operadorMat -> MULTI .)
    NOT             reduce using rule 193 (operadorMat -> MULTI .)


state 108

    (194) operadorMat -> DIV .

    ENTERO          reduce using rule 194 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 194 (operadorMat -> DIV .)
    DOUBLE          reduce using rule 194 (operadorMat -> DIV .)
    STRING          reduce using rule 194 (operadorMat -> DIV .)
    FUNCIONSTDIN    reduce using rule 194 (operadorMat -> DIV .)
    BOOL            reduce using rule 194 (operadorMat -> DIV .)
    NOT             reduce using rule 194 (operadorMat -> DIV .)


state 109

    (195) operadorMat -> DIVENTERO .

    ENTERO          reduce using rule 195 (operadorMat -> DIVENTERO .)
    VARIABLE        reduce using rule 195 (operadorMat -> DIVENTERO .)
    DOUBLE          reduce using rule 195 (operadorMat -> DIVENTERO .)
    STRING          reduce using rule 195 (operadorMat -> DIVENTERO .)
    FUNCIONSTDIN    reduce using rule 195 (operadorMat -> DIVENTERO .)
    BOOL            reduce using rule 195 (operadorMat -> DIVENTERO .)
    NOT             reduce using rule 195 (operadorMat -> DIVENTERO .)


state 110

    (196) operadorMat -> MOD .

    ENTERO          reduce using rule 196 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 196 (operadorMat -> MOD .)
    DOUBLE          reduce using rule 196 (operadorMat -> MOD .)
    STRING          reduce using rule 196 (operadorMat -> MOD .)
    FUNCIONSTDIN    reduce using rule 196 (operadorMat -> MOD .)
    BOOL            reduce using rule 196 (operadorMat -> MOD .)
    NOT             reduce using rule 196 (operadorMat -> MOD .)


state 111

    (189) expresionDouble -> valorDouble operadorMat . expresionDouble
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 173
    ENTERO          shift and go to state 174
    VARIABLE        shift and go to state 201

    valorDouble                    shift and go to state 172
    expresionDouble                shift and go to state 202
    valorInt                       shift and go to state 152

state 112

    (161) expresionBool -> valorDouble comparadorMat . expresionDouble
    (164) expresionBool -> valorDouble comparadorMat . VARIABLE
    (145) expresionBoolFor -> valorDouble comparadorMat . expresionDouble
    (148) expresionBoolFor -> valorDouble comparadorMat . VARIABLE
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 204
    DOUBLE          shift and go to state 173
    ENTERO          shift and go to state 174

    valorDouble                    shift and go to state 172
    expresionDouble                shift and go to state 203
    valorInt                       shift and go to state 152

state 113

    (178) expresionString -> valorString SUMA . expresionString
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 206
    VARIABLE        shift and go to state 207
    FUNCIONSTDIN    shift and go to state 187

    valorString                    shift and go to state 34
    expresionString                shift and go to state 205
    expresionIndexString           shift and go to state 55
    sentenciaSubstring             shift and go to state 188

state 114

    (180) expresionIndexString -> valorString CIZQ . ENTERO CDER

    ENTERO          shift and go to state 208


state 115

    (168) expresionBool -> valor IS . objeto
    (205) objeto -> . STRINGR
    (206) objeto -> . INT
    (207) objeto -> . DOUBLER
    (208) objeto -> . NUM
    (209) objeto -> . VAR
    (210) objeto -> . DYNAMIC
    (211) objeto -> . LIST
    (212) objeto -> . BOOL
    (213) objeto -> . MAP
    (214) objeto -> . SET

    STRINGR         shift and go to state 210
    INT             shift and go to state 211
    DOUBLER         shift and go to state 212
    NUM             shift and go to state 213
    VAR             shift and go to state 214
    DYNAMIC         shift and go to state 215
    LIST            shift and go to state 216
    BOOL            shift and go to state 217
    MAP             shift and go to state 218
    SET             shift and go to state 219

    objeto                         shift and go to state 209

state 116

    (169) expresionBool -> valor ISNEGADO . objeto
    (205) objeto -> . STRINGR
    (206) objeto -> . INT
    (207) objeto -> . DOUBLER
    (208) objeto -> . NUM
    (209) objeto -> . VAR
    (210) objeto -> . DYNAMIC
    (211) objeto -> . LIST
    (212) objeto -> . BOOL
    (213) objeto -> . MAP
    (214) objeto -> . SET

    STRINGR         shift and go to state 210
    INT             shift and go to state 211
    DOUBLER         shift and go to state 212
    NUM             shift and go to state 213
    VAR             shift and go to state 214
    DYNAMIC         shift and go to state 215
    LIST            shift and go to state 216
    BOOL            shift and go to state 217
    MAP             shift and go to state 218
    SET             shift and go to state 219

    objeto                         shift and go to state 220

state 117

    (156) sentenciaWhile -> WHILE PIZQ . expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> WHILE PIZQ . expresionBool PDER final
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 149
    DOUBLE          shift and go to state 53
    BOOL            shift and go to state 56
    NOT             shift and go to state 44
    ENTERO          shift and go to state 153
    STRING          shift and go to state 154

    expresionBool                  shift and go to state 221
    valorDouble                    shift and go to state 148
    valorBool                      shift and go to state 150
    negacionBool                   shift and go to state 151
    comparacionBool                shift and go to state 186
    valor                          shift and go to state 36
    valorInt                       shift and go to state 152

state 118

    (158) sentenciaDoWhile -> DO LIZQ . final LDER WHILE PIZQ expresionBool PDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    final                          shift and go to state 222
    expresionBool                  shift and go to state 6
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 119

    (120) sentenciaIf -> IF PIZQ . expresionBool PDER final
    (121) sentenciaIf -> IF PIZQ . expresionBool PDER LIZQ final LDER
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 149
    DOUBLE          shift and go to state 53
    BOOL            shift and go to state 56
    NOT             shift and go to state 44
    ENTERO          shift and go to state 153
    STRING          shift and go to state 154

    expresionBool                  shift and go to state 223
    valorDouble                    shift and go to state 148
    valorBool                      shift and go to state 150
    negacionBool                   shift and go to state 151
    comparacionBool                shift and go to state 186
    valor                          shift and go to state 36
    valorInt                       shift and go to state 152

state 120

    (122) sentenciaElse -> ELSE final .

    PUNTOYCOMA      reduce using rule 122 (sentenciaElse -> ELSE final .)
    VARIABLE        reduce using rule 122 (sentenciaElse -> ELSE final .)
    INT             reduce using rule 122 (sentenciaElse -> ELSE final .)
    DOUBLER         reduce using rule 122 (sentenciaElse -> ELSE final .)
    NUM             reduce using rule 122 (sentenciaElse -> ELSE final .)
    STRINGR         reduce using rule 122 (sentenciaElse -> ELSE final .)
    BOOLR           reduce using rule 122 (sentenciaElse -> ELSE final .)
    DYNAMIC         reduce using rule 122 (sentenciaElse -> ELSE final .)
    VAR             reduce using rule 122 (sentenciaElse -> ELSE final .)
    WHILE           reduce using rule 122 (sentenciaElse -> ELSE final .)
    DO              reduce using rule 122 (sentenciaElse -> ELSE final .)
    IF              reduce using rule 122 (sentenciaElse -> ELSE final .)
    ELSE            reduce using rule 122 (sentenciaElse -> ELSE final .)
    PRINT           reduce using rule 122 (sentenciaElse -> ELSE final .)
    FUNCIONSTDIN    reduce using rule 122 (sentenciaElse -> ELSE final .)
    FUNCIONSTDOUT   reduce using rule 122 (sentenciaElse -> ELSE final .)
    NOT             reduce using rule 122 (sentenciaElse -> ELSE final .)
    ELSEIF          reduce using rule 122 (sentenciaElse -> ELSE final .)
    FOR             reduce using rule 122 (sentenciaElse -> ELSE final .)
    LIST            reduce using rule 122 (sentenciaElse -> ELSE final .)
    CIZQ            reduce using rule 122 (sentenciaElse -> ELSE final .)
    NEWLIST         reduce using rule 122 (sentenciaElse -> ELSE final .)
    SET             reduce using rule 122 (sentenciaElse -> ELSE final .)
    SETFROM         reduce using rule 122 (sentenciaElse -> ELSE final .)
    ENTERO          reduce using rule 122 (sentenciaElse -> ELSE final .)
    DOUBLE          reduce using rule 122 (sentenciaElse -> ELSE final .)
    STRING          reduce using rule 122 (sentenciaElse -> ELSE final .)
    BOOL            reduce using rule 122 (sentenciaElse -> ELSE final .)
    $end            reduce using rule 122 (sentenciaElse -> ELSE final .)
    LDER            reduce using rule 122 (sentenciaElse -> ELSE final .)


state 121

    (123) sentenciaElse -> ELSE LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    final                          shift and go to state 224
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 122

    (115) imprimir -> PRINT PIZQ . expresion PDER
    (116) imprimir -> PRINT PIZQ . asignacionSimple PDER
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . valor
    (132) expresion -> . expresionString
    (133) expresion -> . expresionInt
    (134) expresion -> . expresionDouble
    (135) expresion -> . expresionBool
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 227
    ENTERO          shift and go to state 153
    DOUBLE          shift and go to state 183
    STRING          shift and go to state 184
    FUNCIONSTDIN    shift and go to state 187
    BOOL            shift and go to state 56
    NOT             shift and go to state 44

    expresion                      shift and go to state 225
    asignacionSimple               shift and go to state 226
    valor                          shift and go to state 178
    expresionString                shift and go to state 179
    expresionInt                   shift and go to state 180
    expresionDouble                shift and go to state 181
    expresionBool                  shift and go to state 182
    valorString                    shift and go to state 34
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 185
    valorBool                      shift and go to state 150
    negacionBool                   shift and go to state 151
    comparacionBool                shift and go to state 186
    expresionIndexString           shift and go to state 55
    sentenciaSubstring             shift and go to state 188

state 123

    (118) funcionStdout -> FUNCIONSTDOUT PIZQ . expresion PDER
    (119) funcionStdout -> FUNCIONSTDOUT PIZQ . asignacionSimple PDER
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . valor
    (132) expresion -> . expresionString
    (133) expresion -> . expresionInt
    (134) expresion -> . expresionDouble
    (135) expresion -> . expresionBool
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 227
    ENTERO          shift and go to state 153
    DOUBLE          shift and go to state 183
    STRING          shift and go to state 184
    FUNCIONSTDIN    shift and go to state 187
    BOOL            shift and go to state 56
    NOT             shift and go to state 44

    expresion                      shift and go to state 228
    asignacionSimple               shift and go to state 229
    valor                          shift and go to state 178
    expresionString                shift and go to state 179
    expresionInt                   shift and go to state 180
    expresionDouble                shift and go to state 181
    expresionBool                  shift and go to state 182
    valorString                    shift and go to state 34
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 185
    valorBool                      shift and go to state 150
    negacionBool                   shift and go to state 151
    comparacionBool                shift and go to state 186
    expresionIndexString           shift and go to state 55
    sentenciaSubstring             shift and go to state 188

state 124

    (170) negacionBool -> NOT PIZQ . expresionBool PDER
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 149
    DOUBLE          shift and go to state 53
    BOOL            shift and go to state 56
    NOT             shift and go to state 44
    ENTERO          shift and go to state 153
    STRING          shift and go to state 154

    expresionBool                  shift and go to state 230
    valorDouble                    shift and go to state 148
    valorBool                      shift and go to state 150
    negacionBool                   shift and go to state 151
    comparacionBool                shift and go to state 186
    valor                          shift and go to state 36
    valorInt                       shift and go to state 152

state 125

    (124) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER final
    (125) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER LIZQ final LDER
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 149
    DOUBLE          shift and go to state 53
    BOOL            shift and go to state 56
    NOT             shift and go to state 44
    ENTERO          shift and go to state 153
    STRING          shift and go to state 154

    expresionBool                  shift and go to state 231
    valorDouble                    shift and go to state 148
    valorBool                      shift and go to state 150
    negacionBool                   shift and go to state 151
    comparacionBool                shift and go to state 186
    valor                          shift and go to state 36
    valorInt                       shift and go to state 152

state 126

    (152) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (136) asignacionFor -> . INT VARIABLE IGUAL expresionInt
    (137) asignacionFor -> . DOUBLER VARIABLE IGUAL expresionDouble
    (138) asignacionFor -> . NUM VARIABLE IGUAL expresionDouble
    (139) asignacionFor -> . DYNAMIC VARIABLE IGUAL expresionInt
    (140) asignacionFor -> . DYNAMIC VARIABLE IGUAL expresionDouble
    (141) asignacionFor -> . VAR VARIABLE IGUAL expresionInt
    (142) asignacionFor -> . VAR VARIABLE IGUAL expresionDouble
    (143) asignacionFor -> . VARIABLE IGUAL expresionInt
    (144) asignacionFor -> . VARIABLE IGUAL expresionDouble

    INT             shift and go to state 234
    DOUBLER         shift and go to state 235
    NUM             shift and go to state 236
    DYNAMIC         shift and go to state 237
    VAR             shift and go to state 238
    VARIABLE        shift and go to state 233

    asignacionFor                  shift and go to state 232

state 127

    (64) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE
    (65) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (68) expresionLista -> LIST MENOR . INT MAYOR VARIABLE
    (69) expresionLista -> LIST MENOR . INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> LIST MENOR . INT MAYOR VARIABLE IGUAL expresionNewList
    (72) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE
    (73) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (76) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE
    (77) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE
    (80) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (83) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE IGUAL expresionNewList

    STRINGR         shift and go to state 239
    INT             shift and go to state 240
    DOUBLER         shift and go to state 241
    NUM             shift and go to state 242
    BOOLR           shift and go to state 243
    DYNAMIC         shift and go to state 244


state 128

    (67) expresionLista -> CIZQ expListString . CDER

    CDER            shift and go to state 245


state 129

    (63) expresionNewList -> CIZQ CDER .

    PUNTOYCOMA      reduce using rule 63 (expresionNewList -> CIZQ CDER .)


state 130

    (71) expresionLista -> CIZQ expListInt . CDER

    CDER            shift and go to state 246


state 131

    (75) expresionLista -> CIZQ expListNum . CDER

    CDER            shift and go to state 247


state 132

    (82) expresionLista -> CIZQ expListBool . CDER

    CDER            shift and go to state 248


state 133

    (86) expresionLista -> CIZQ expListDynamic . CDER

    CDER            shift and go to state 249


state 134

    (87) expListString -> STRING .
    (88) expListString -> STRING . COMA expListString
    (97) expListDynamic -> STRING .
    (101) expListDynamic -> STRING . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 87 (expListString -> STRING .)
    CDER            reduce using rule 87 (expListString -> STRING .)
    COMA            shift and go to state 250

  ! CDER            [ reduce using rule 97 (expListDynamic -> STRING .) ]


state 135

    (89) expListInt -> ENTERO .
    (90) expListInt -> ENTERO . COMA expListInt
    (91) expListNum -> ENTERO .
    (93) expListNum -> ENTERO . COMA expListNum
    (98) expListDynamic -> ENTERO .
    (102) expListDynamic -> ENTERO . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 89 (expListInt -> ENTERO .)
  ! reduce/reduce conflict for CDER resolved using rule 89 (expListInt -> ENTERO .)
    CDER            reduce using rule 89 (expListInt -> ENTERO .)
    COMA            shift and go to state 251

  ! CDER            [ reduce using rule 91 (expListNum -> ENTERO .) ]
  ! CDER            [ reduce using rule 98 (expListDynamic -> ENTERO .) ]


state 136

    (92) expListNum -> DOUBLE .
    (94) expListNum -> DOUBLE . COMA expListNum
    (99) expListDynamic -> DOUBLE .
    (103) expListDynamic -> DOUBLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 92 (expListNum -> DOUBLE .)
    CDER            reduce using rule 92 (expListNum -> DOUBLE .)
    COMA            shift and go to state 252

  ! CDER            [ reduce using rule 99 (expListDynamic -> DOUBLE .) ]


state 137

    (95) expListBool -> BOOL .
    (96) expListBool -> BOOL . COMA expListBool
    (100) expListDynamic -> BOOL .
    (104) expListDynamic -> BOOL . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 95 (expListBool -> BOOL .)
    CDER            reduce using rule 95 (expListBool -> BOOL .)
    COMA            shift and go to state 253

  ! CDER            [ reduce using rule 100 (expListDynamic -> BOOL .) ]


state 138

    (61) expresionNewList -> NEWLIST PIZQ . PDER
    (62) expresionNewList -> NEWLIST PIZQ . ENTERO PDER

    PDER            shift and go to state 254
    ENTERO          shift and go to state 255


state 139

    (57) expresionSet -> SET VARIABLE .
    (59) expresionSet -> SET VARIABLE . IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> SET VARIABLE . IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER

    PUNTOYCOMA      reduce using rule 57 (expresionSet -> SET VARIABLE .)
    IGUAL           shift and go to state 256


state 140

    (58) expresionSet -> SETFROM PIZQ . CIZQ CDER PDER

    CIZQ            shift and go to state 257


state 141

    (2) final -> asignacion PUNTOYCOMA final .

    $end            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VARIABLE        reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    INT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLER         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NUM             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRINGR         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOLR           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VAR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    WHILE           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DO              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    IF              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSE            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PRINT           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NOT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSEIF          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FOR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LIST            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    CIZQ            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NEWLIST         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    SET             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    SETFROM         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ENTERO          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLE          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRING          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOL            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LDER            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)


state 142

    (4) final -> expresionInt PUNTOYCOMA final .

    $end            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VARIABLE        reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    INT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLER         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NUM             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRINGR         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOLR           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VAR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    WHILE           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DO              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    IF              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSE            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PRINT           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NOT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSEIF          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FOR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LIST            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    CIZQ            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NEWLIST         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    SET             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    SETFROM         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ENTERO          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLE          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRING          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOL            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LDER            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)


state 143

    (6) final -> expresionDouble PUNTOYCOMA final .

    $end            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VARIABLE        reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    INT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLER         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NUM             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRINGR         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOLR           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VAR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    WHILE           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DO              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    IF              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSE            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PRINT           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NOT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSEIF          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FOR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LIST            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    CIZQ            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NEWLIST         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    SET             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    SETFROM         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ENTERO          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLE          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRING          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOL            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LDER            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)


state 144

    (8) final -> expresionString PUNTOYCOMA final .

    $end            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VARIABLE        reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    INT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLER         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NUM             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRINGR         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOLR           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VAR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    WHILE           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DO              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    IF              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSE            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PRINT           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NOT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSEIF          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FOR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LIST            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    CIZQ            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NEWLIST         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    SET             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    SETFROM         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ENTERO          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLE          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRING          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOL            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LDER            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)


state 145

    (10) final -> expresionBool PUNTOYCOMA final .

    $end            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    INT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NUM             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VAR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DO              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    IF              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NOT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FOR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LIST            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    SET             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRING          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LDER            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)


state 146

    (171) comparacionBool -> expresionBool operadorLogico expresionBool .
    (171) comparacionBool -> expresionBool . operadorLogico expresionBool
    (172) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (203) operadorLogico -> . AND
    (204) operadorLogico -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNTOYCOMA      reduce using rule 171 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    PDER            reduce using rule 171 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    AND             shift and go to state 63
    OR              shift and go to state 64

  ! AND             [ reduce using rule 171 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]
  ! OR              [ reduce using rule 171 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]

    operadorLogico                 shift and go to state 62

state 147

    (172) comparacionBool -> expresionBool operadorLogico comparacionBool .
    (167) expresionBool -> comparacionBool .

  ! reduce/reduce conflict for AND resolved using rule 167 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for OR resolved using rule 167 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 167 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PDER resolved using rule 167 (expresionBool -> comparacionBool .)
    AND             reduce using rule 167 (expresionBool -> comparacionBool .)
    OR              reduce using rule 167 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 167 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 167 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 172 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! AND             [ reduce using rule 172 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! OR              [ reduce using rule 172 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! PDER            [ reduce using rule 172 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]


state 148

    (161) expresionBool -> valorDouble . comparadorMat expresionDouble
    (164) expresionBool -> valorDouble . comparadorMat VARIABLE
    (197) comparadorMat -> . DIGUAL
    (198) comparadorMat -> . NOIGUAL
    (199) comparadorMat -> . MAYOR
    (200) comparadorMat -> . MENOR
    (201) comparadorMat -> . MAYIGUAL
    (202) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 88
    NOIGUAL         shift and go to state 89
    MAYOR           shift and go to state 90
    MENOR           shift and go to state 91
    MAYIGUAL        shift and go to state 92
    MENIGUAL        shift and go to state 93

    comparadorMat                  shift and go to state 258

state 149

    (162) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (163) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (160) valorBool -> VARIABLE .
    (127) valor -> VARIABLE .
    (184) valorInt -> VARIABLE .
    (197) comparadorMat -> . DIGUAL
    (198) comparadorMat -> . NOIGUAL
    (199) comparadorMat -> . MAYOR
    (200) comparadorMat -> . MENOR
    (201) comparadorMat -> . MAYIGUAL
    (202) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    AND             reduce using rule 160 (valorBool -> VARIABLE .)
    OR              reduce using rule 160 (valorBool -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 160 (valorBool -> VARIABLE .)
    PDER            reduce using rule 160 (valorBool -> VARIABLE .)
    IS              reduce using rule 127 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 127 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 88
    NOIGUAL         shift and go to state 89
    MAYOR           shift and go to state 90
    MENOR           shift and go to state 91
    MAYIGUAL        shift and go to state 92
    MENIGUAL        shift and go to state 93

  ! DIGUAL          [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 184 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 259

state 150

    (165) expresionBool -> valorBool .

    AND             reduce using rule 165 (expresionBool -> valorBool .)
    OR              reduce using rule 165 (expresionBool -> valorBool .)
    PUNTOYCOMA      reduce using rule 165 (expresionBool -> valorBool .)
    PDER            reduce using rule 165 (expresionBool -> valorBool .)


state 151

    (166) expresionBool -> negacionBool .

    AND             reduce using rule 166 (expresionBool -> negacionBool .)
    OR              reduce using rule 166 (expresionBool -> negacionBool .)
    PUNTOYCOMA      reduce using rule 166 (expresionBool -> negacionBool .)
    PDER            reduce using rule 166 (expresionBool -> negacionBool .)


state 152

    (188) valorDouble -> valorInt .

    DIGUAL          reduce using rule 188 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 188 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 188 (valorDouble -> valorInt .)
    MENOR           reduce using rule 188 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 188 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 188 (valorDouble -> valorInt .)
    SUMA            reduce using rule 188 (valorDouble -> valorInt .)
    RESTA           reduce using rule 188 (valorDouble -> valorInt .)
    MULTI           reduce using rule 188 (valorDouble -> valorInt .)
    DIV             reduce using rule 188 (valorDouble -> valorInt .)
    DIVENTERO       reduce using rule 188 (valorDouble -> valorInt .)
    MOD             reduce using rule 188 (valorDouble -> valorInt .)
    PUNTOYCOMA      reduce using rule 188 (valorDouble -> valorInt .)
    AND             reduce using rule 188 (valorDouble -> valorInt .)
    OR              reduce using rule 188 (valorDouble -> valorInt .)
    PDER            reduce using rule 188 (valorDouble -> valorInt .)


state 153

    (126) valor -> ENTERO .
    (183) valorInt -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 126 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 126 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 126 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 126 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 126 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 126 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 126 (valor -> ENTERO .)
  ! reduce/reduce conflict for PDER resolved using rule 126 (valor -> ENTERO .)
    IS              reduce using rule 126 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 126 (valor -> ENTERO .)
    SUMA            reduce using rule 126 (valor -> ENTERO .)
    RESTA           reduce using rule 126 (valor -> ENTERO .)
    MULTI           reduce using rule 126 (valor -> ENTERO .)
    DIV             reduce using rule 126 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 126 (valor -> ENTERO .)
    MOD             reduce using rule 126 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 126 (valor -> ENTERO .)
    PDER            reduce using rule 126 (valor -> ENTERO .)
    DIGUAL          reduce using rule 183 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 183 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 183 (valorInt -> ENTERO .)
    MENOR           reduce using rule 183 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 183 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 183 (valorInt -> ENTERO .)

  ! SUMA            [ reduce using rule 183 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 183 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 183 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 183 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 183 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 183 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 183 (valorInt -> ENTERO .) ]
  ! PDER            [ reduce using rule 183 (valorInt -> ENTERO .) ]


state 154

    (129) valor -> STRING .

    IS              reduce using rule 129 (valor -> STRING .)
    ISNEGADO        reduce using rule 129 (valor -> STRING .)


state 155

    (12) final -> expresionBoolFor PUNTOYCOMA final .

    $end            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    VARIABLE        reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    INT             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DOUBLER         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NUM             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    STRINGR         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BOOLR           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    VAR             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    WHILE           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DO              reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    IF              reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ELSE            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    PRINT           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NOT             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ELSEIF          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FOR             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LIST            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    CIZQ            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NEWLIST         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    SET             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    SETFROM         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ENTERO          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DOUBLE          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    STRING          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BOOL            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LDER            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)


state 156

    (16) final -> sentenciaWhile PUNTOYCOMA final .

    $end            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    INT             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NUM             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    VAR             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DO              reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    IF              reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NOT             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FOR             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LIST            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    CIZQ            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NEWLIST         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    SET             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    SETFROM         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRING          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LDER            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)


state 157

    (18) final -> sentenciaDoWhile PUNTOYCOMA final .

    $end            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    INT             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NUM             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VAR             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DO              reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    IF              reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NOT             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FOR             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LIST            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    CIZQ            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NEWLIST         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    SET             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    SETFROM         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRING          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LDER            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)


state 158

    (20) final -> sentenciaIf PUNTOYCOMA final .

    $end            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    INT             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NUM             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    VAR             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    WHILE           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DO              reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    IF              reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSE            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    PRINT           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NOT             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FOR             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LIST            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    CIZQ            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NEWLIST         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    SET             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    SETFROM         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    STRING          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOL            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LDER            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)


state 159

    (24) final -> sentenciaElse PUNTOYCOMA final .

    $end            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    VARIABLE        reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    INT             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DOUBLER         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NUM             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    STRINGR         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    BOOLR           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    VAR             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    WHILE           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DO              reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    IF              reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ELSE            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    PRINT           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NOT             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ELSEIF          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FOR             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LIST            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    CIZQ            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NEWLIST         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    SET             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    SETFROM         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ENTERO          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DOUBLE          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    STRING          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    BOOL            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LDER            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)


state 160

    (28) final -> imprimir PUNTOYCOMA final .

    $end            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    VARIABLE        reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    INT             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DOUBLER         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NUM             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    STRINGR         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    BOOLR           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    VAR             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    WHILE           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DO              reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    IF              reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ELSE            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    PRINT           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NOT             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ELSEIF          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FOR             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LIST            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    CIZQ            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NEWLIST         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    SET             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    SETFROM         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ENTERO          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DOUBLE          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    STRING          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    BOOL            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LDER            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)


state 161

    (30) final -> funcionStdin PUNTOYCOMA final .

    $end            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    VARIABLE        reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    INT             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLER         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NUM             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    STRINGR         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    BOOLR           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    VAR             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    WHILE           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DO              reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    IF              reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ELSE            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    PRINT           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NOT             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ELSEIF          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FOR             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LIST            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    CIZQ            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NEWLIST         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    SET             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    SETFROM         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ENTERO          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLE          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    STRING          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    BOOL            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LDER            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)


state 162

    (32) final -> funcionStdout PUNTOYCOMA final .

    $end            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    VARIABLE        reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    INT             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLER         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NUM             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    STRINGR         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    BOOLR           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    VAR             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    WHILE           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DO              reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    IF              reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ELSE            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    PRINT           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NOT             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ELSEIF          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FOR             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LIST            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    CIZQ            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NEWLIST         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    SET             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    SETFROM         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ENTERO          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLE          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    STRING          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    BOOL            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LDER            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)


state 163

    (34) final -> negacionBool PUNTOYCOMA final .

    $end            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    INT             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DO              reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    IF              reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FOR             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LIST            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    SET             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)


state 164

    (35) final -> comparacionBool PUNTOYCOMA final .

    $end            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    INT             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DO              reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    IF              reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FOR             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LIST            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    SET             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)


state 165

    (37) final -> sentenciaElseIf PUNTOYCOMA final .

    $end            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    INT             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NUM             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    VAR             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    WHILE           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DO              reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    IF              reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ELSE            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    PRINT           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NOT             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FOR             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LIST            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    CIZQ            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NEWLIST         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    SET             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    SETFROM         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    STRING          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BOOL            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LDER            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)


state 166

    (41) final -> sentenciaFor PUNTOYCOMA final .

    $end            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    VARIABLE        reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    INT             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DOUBLER         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NUM             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    STRINGR         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    BOOLR           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    VAR             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    WHILE           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DO              reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    IF              reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ELSE            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    PRINT           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NOT             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ELSEIF          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FOR             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LIST            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    CIZQ            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NEWLIST         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    SET             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    SETFROM         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ENTERO          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DOUBLE          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    STRING          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    BOOL            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LDER            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)


state 167

    (45) final -> sentenciaSubstring PUNTOYCOMA final .

    $end            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VARIABLE        reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    INT             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLER         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NUM             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRINGR         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOLR           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VAR             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    WHILE           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DO              reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    IF              reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSE            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PRINT           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NOT             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSEIF          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FOR             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LIST            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    CIZQ            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NEWLIST         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    SET             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    SETFROM         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ENTERO          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLE          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRING          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOL            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LDER            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)


state 168

    (47) final -> VARIABLE DSUMA PUNTOYCOMA . final
    (48) final -> VARIABLE DSUMA PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    LDER            reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]

    final                          shift and go to state 260
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 169

    (49) final -> VARIABLE DRESTA PUNTOYCOMA . final
    (50) final -> VARIABLE DRESTA PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    LDER            reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

  ! VARIABLE        [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]

    final                          shift and go to state 261
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 170

    (163) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (147) expresionBoolFor -> VARIABLE comparadorMat VARIABLE .
    (184) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 147 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 147 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 163 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 163 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 163 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 163 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 147 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 184 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 184 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 184 (valorInt -> VARIABLE .)
    DIV             reduce using rule 184 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 184 (valorInt -> VARIABLE .)
    MOD             reduce using rule 184 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 163 (expresionBool -> VARIABLE comparadorMat VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 184 (valorInt -> VARIABLE .) ]


state 171

    (162) expresionBool -> VARIABLE comparadorMat expresionDouble .
    (146) expresionBoolFor -> VARIABLE comparadorMat expresionDouble .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 146 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 162 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 162 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 146 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 162 (expresionBool -> VARIABLE comparadorMat expresionDouble .) ]


state 172

    (189) expresionDouble -> valorDouble . operadorMat expresionDouble
    (190) expresionDouble -> valorDouble .
    (191) operadorMat -> . SUMA
    (192) operadorMat -> . RESTA
    (193) operadorMat -> . MULTI
    (194) operadorMat -> . DIV
    (195) operadorMat -> . DIVENTERO
    (196) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 190 (expresionDouble -> valorDouble .)
    AND             reduce using rule 190 (expresionDouble -> valorDouble .)
    OR              reduce using rule 190 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 190 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 105
    RESTA           shift and go to state 106
    MULTI           shift and go to state 107
    DIV             shift and go to state 108
    DIVENTERO       shift and go to state 109
    MOD             shift and go to state 110

    operadorMat                    shift and go to state 111

state 173

    (187) valorDouble -> DOUBLE .

    SUMA            reduce using rule 187 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 187 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 187 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 187 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 187 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 187 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 187 (valorDouble -> DOUBLE .)
    AND             reduce using rule 187 (valorDouble -> DOUBLE .)
    OR              reduce using rule 187 (valorDouble -> DOUBLE .)
    PDER            reduce using rule 187 (valorDouble -> DOUBLE .)


state 174

    (183) valorInt -> ENTERO .

    SUMA            reduce using rule 183 (valorInt -> ENTERO .)
    RESTA           reduce using rule 183 (valorInt -> ENTERO .)
    MULTI           reduce using rule 183 (valorInt -> ENTERO .)
    DIV             reduce using rule 183 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 183 (valorInt -> ENTERO .)
    MOD             reduce using rule 183 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 183 (valorInt -> ENTERO .)
    AND             reduce using rule 183 (valorInt -> ENTERO .)
    OR              reduce using rule 183 (valorInt -> ENTERO .)
    PDER            reduce using rule 183 (valorInt -> ENTERO .)


state 175

    (181) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO PDER
    (182) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 262


state 176

    (127) valor -> VARIABLE .
    (162) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (163) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (174) valorString -> VARIABLE .
    (184) valorInt -> VARIABLE .
    (160) valorBool -> VARIABLE .
    (181) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (197) comparadorMat -> . DIGUAL
    (198) comparadorMat -> . NOIGUAL
    (199) comparadorMat -> . MAYOR
    (200) comparadorMat -> . MENOR
    (201) comparadorMat -> . MAYIGUAL
    (202) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 127 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 127 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 127 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 127 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 127 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 127 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 127 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 127 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 127 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 127 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 127 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 127 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 127 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IS              reduce using rule 127 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 127 (valor -> VARIABLE .)
    SUMA            reduce using rule 127 (valor -> VARIABLE .)
    RESTA           reduce using rule 127 (valor -> VARIABLE .)
    MULTI           reduce using rule 127 (valor -> VARIABLE .)
    DIV             reduce using rule 127 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 127 (valor -> VARIABLE .)
    MOD             reduce using rule 127 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 127 (valor -> VARIABLE .)
    PDER            reduce using rule 127 (valor -> VARIABLE .)
    CIZQ            reduce using rule 174 (valorString -> VARIABLE .)
    AND             reduce using rule 160 (valorBool -> VARIABLE .)
    OR              reduce using rule 160 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 86
    DIGUAL          shift and go to state 88
    NOIGUAL         shift and go to state 89
    MAYOR           shift and go to state 90
    MENOR           shift and go to state 91
    MAYIGUAL        shift and go to state 92
    MENIGUAL        shift and go to state 93

  ! SUMA            [ reduce using rule 174 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 174 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 174 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 160 (valorBool -> VARIABLE .) ]
  ! PDER            [ reduce using rule 160 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 259

state 177

    (114) asignacionSimple -> VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 114 (asignacionSimple -> VARIABLE IGUAL expresion .)
    PDER            reduce using rule 114 (asignacionSimple -> VARIABLE IGUAL expresion .)


state 178

    (130) expresion -> valor . operadorMat expresion
    (131) expresion -> valor .
    (168) expresionBool -> valor . IS objeto
    (169) expresionBool -> valor . ISNEGADO objeto
    (191) operadorMat -> . SUMA
    (192) operadorMat -> . RESTA
    (193) operadorMat -> . MULTI
    (194) operadorMat -> . DIV
    (195) operadorMat -> . DIVENTERO
    (196) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 131 (expresion -> valor .)
    PDER            reduce using rule 131 (expresion -> valor .)
    IS              shift and go to state 115
    ISNEGADO        shift and go to state 116
    SUMA            shift and go to state 105
    RESTA           shift and go to state 106
    MULTI           shift and go to state 107
    DIV             shift and go to state 108
    DIVENTERO       shift and go to state 109
    MOD             shift and go to state 110

    operadorMat                    shift and go to state 263

state 179

    (132) expresion -> expresionString .

    PUNTOYCOMA      reduce using rule 132 (expresion -> expresionString .)
    PDER            reduce using rule 132 (expresion -> expresionString .)


state 180

    (133) expresion -> expresionInt .

    PUNTOYCOMA      reduce using rule 133 (expresion -> expresionInt .)
    PDER            reduce using rule 133 (expresion -> expresionInt .)


state 181

    (134) expresion -> expresionDouble .

    PUNTOYCOMA      reduce using rule 134 (expresion -> expresionDouble .)
    PDER            reduce using rule 134 (expresion -> expresionDouble .)


state 182

    (135) expresion -> expresionBool .
    (171) comparacionBool -> expresionBool . operadorLogico expresionBool
    (172) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (203) operadorLogico -> . AND
    (204) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 135 (expresion -> expresionBool .)
    PDER            reduce using rule 135 (expresion -> expresionBool .)
    AND             shift and go to state 63
    OR              shift and go to state 64

    operadorLogico                 shift and go to state 62

state 183

    (128) valor -> DOUBLE .
    (187) valorDouble -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 128 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 128 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 128 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 128 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 128 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 128 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 128 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PDER resolved using rule 128 (valor -> DOUBLE .)
    IS              reduce using rule 128 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 128 (valor -> DOUBLE .)
    SUMA            reduce using rule 128 (valor -> DOUBLE .)
    RESTA           reduce using rule 128 (valor -> DOUBLE .)
    MULTI           reduce using rule 128 (valor -> DOUBLE .)
    DIV             reduce using rule 128 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 128 (valor -> DOUBLE .)
    MOD             reduce using rule 128 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 128 (valor -> DOUBLE .)
    PDER            reduce using rule 128 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 187 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 187 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 187 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 187 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 187 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 187 (valorDouble -> DOUBLE .)

  ! SUMA            [ reduce using rule 187 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 187 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 187 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 187 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 187 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 187 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 187 (valorDouble -> DOUBLE .) ]
  ! PDER            [ reduce using rule 187 (valorDouble -> DOUBLE .) ]


state 184

    (129) valor -> STRING .
    (173) valorString -> STRING .

  ! reduce/reduce conflict for SUMA resolved using rule 129 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 129 (valor -> STRING .)
  ! reduce/reduce conflict for PDER resolved using rule 129 (valor -> STRING .)
    IS              reduce using rule 129 (valor -> STRING .)
    ISNEGADO        reduce using rule 129 (valor -> STRING .)
    SUMA            reduce using rule 129 (valor -> STRING .)
    RESTA           reduce using rule 129 (valor -> STRING .)
    MULTI           reduce using rule 129 (valor -> STRING .)
    DIV             reduce using rule 129 (valor -> STRING .)
    DIVENTERO       reduce using rule 129 (valor -> STRING .)
    MOD             reduce using rule 129 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 129 (valor -> STRING .)
    PDER            reduce using rule 129 (valor -> STRING .)
    CIZQ            reduce using rule 173 (valorString -> STRING .)

  ! SUMA            [ reduce using rule 173 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 173 (valorString -> STRING .) ]
  ! PDER            [ reduce using rule 173 (valorString -> STRING .) ]


state 185

    (189) expresionDouble -> valorDouble . operadorMat expresionDouble
    (190) expresionDouble -> valorDouble .
    (161) expresionBool -> valorDouble . comparadorMat expresionDouble
    (164) expresionBool -> valorDouble . comparadorMat VARIABLE
    (191) operadorMat -> . SUMA
    (192) operadorMat -> . RESTA
    (193) operadorMat -> . MULTI
    (194) operadorMat -> . DIV
    (195) operadorMat -> . DIVENTERO
    (196) operadorMat -> . MOD
    (197) comparadorMat -> . DIGUAL
    (198) comparadorMat -> . NOIGUAL
    (199) comparadorMat -> . MAYOR
    (200) comparadorMat -> . MENOR
    (201) comparadorMat -> . MAYIGUAL
    (202) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 190 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 190 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 105
    RESTA           shift and go to state 106
    MULTI           shift and go to state 107
    DIV             shift and go to state 108
    DIVENTERO       shift and go to state 109
    MOD             shift and go to state 110
    DIGUAL          shift and go to state 88
    NOIGUAL         shift and go to state 89
    MAYOR           shift and go to state 90
    MENOR           shift and go to state 91
    MAYIGUAL        shift and go to state 92
    MENIGUAL        shift and go to state 93

    operadorMat                    shift and go to state 111
    comparadorMat                  shift and go to state 258

state 186

    (167) expresionBool -> comparacionBool .

    AND             reduce using rule 167 (expresionBool -> comparacionBool .)
    OR              reduce using rule 167 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 167 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 167 (expresionBool -> comparacionBool .)


state 187

    (175) valorString -> FUNCIONSTDIN .

    SUMA            reduce using rule 175 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 175 (valorString -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 175 (valorString -> FUNCIONSTDIN .)
    PDER            reduce using rule 175 (valorString -> FUNCIONSTDIN .)


state 188

    (177) valorString -> sentenciaSubstring .

    SUMA            reduce using rule 177 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 177 (valorString -> sentenciaSubstring .)
    PUNTOYCOMA      reduce using rule 177 (valorString -> sentenciaSubstring .)
    PDER            reduce using rule 177 (valorString -> sentenciaSubstring .)


state 189

    (52) final -> expresionLista PUNTOYCOMA final .

    $end            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    VARIABLE        reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    INT             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DOUBLER         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NUM             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    STRINGR         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    BOOLR           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    VAR             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    WHILE           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DO              reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    IF              reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ELSE            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    PRINT           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NOT             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ELSEIF          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FOR             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LIST            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    CIZQ            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NEWLIST         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    SET             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    SETFROM         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ENTERO          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DOUBLE          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    STRING          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    BOOL            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LDER            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)


state 190

    (54) final -> expresionNewList PUNTOYCOMA final .

    $end            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    VARIABLE        reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    INT             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DOUBLER         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NUM             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    STRINGR         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    BOOLR           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    VAR             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    WHILE           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DO              reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    IF              reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ELSE            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    PRINT           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NOT             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ELSEIF          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FOR             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LIST            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    CIZQ            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NEWLIST         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    SET             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    SETFROM         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ENTERO          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DOUBLE          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    STRING          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    BOOL            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LDER            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)


state 191

    (56) final -> expresionSet PUNTOYCOMA final .

    $end            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    VARIABLE        reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    INT             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DOUBLER         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    NUM             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    STRINGR         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    BOOLR           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    VAR             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    WHILE           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DO              reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    IF              reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    ELSE            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    PRINT           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    NOT             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    ELSEIF          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    FOR             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    LIST            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    CIZQ            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    NEWLIST         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    SET             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    SETFROM         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    ENTERO          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DOUBLE          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    STRING          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    BOOL            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    LDER            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)


state 192

    (106) asignacion -> INT VARIABLE IGUAL . expresionInt
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE

    ENTERO          shift and go to state 174
    VARIABLE        shift and go to state 201

    expresionInt                   shift and go to state 264
    valorInt                       shift and go to state 199

state 193

    (107) asignacion -> DOUBLER VARIABLE IGUAL . expresionDouble
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 173
    ENTERO          shift and go to state 174
    VARIABLE        shift and go to state 201

    expresionDouble                shift and go to state 265
    valorDouble                    shift and go to state 172
    valorInt                       shift and go to state 152

state 194

    (108) asignacion -> NUM VARIABLE IGUAL . expresionDouble
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 173
    ENTERO          shift and go to state 174
    VARIABLE        shift and go to state 201

    expresionDouble                shift and go to state 266
    valorDouble                    shift and go to state 172
    valorInt                       shift and go to state 152

state 195

    (109) asignacion -> STRINGR VARIABLE IGUAL . expresionString
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 206
    VARIABLE        shift and go to state 207
    FUNCIONSTDIN    shift and go to state 187

    expresionString                shift and go to state 267
    valorString                    shift and go to state 34
    expresionIndexString           shift and go to state 55
    sentenciaSubstring             shift and go to state 188

state 196

    (110) asignacion -> BOOLR VARIABLE IGUAL . expresionBool
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 149
    DOUBLE          shift and go to state 53
    BOOL            shift and go to state 56
    NOT             shift and go to state 44
    ENTERO          shift and go to state 153
    STRING          shift and go to state 154

    expresionBool                  shift and go to state 268
    valorDouble                    shift and go to state 148
    valorBool                      shift and go to state 150
    negacionBool                   shift and go to state 151
    comparacionBool                shift and go to state 186
    valor                          shift and go to state 36
    valorInt                       shift and go to state 152

state 197

    (111) asignacion -> DYNAMIC VARIABLE IGUAL . expresion
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . valor
    (132) expresion -> . expresionString
    (133) expresion -> . expresionInt
    (134) expresion -> . expresionDouble
    (135) expresion -> . expresionBool
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 153
    VARIABLE        shift and go to state 176
    DOUBLE          shift and go to state 183
    STRING          shift and go to state 184
    FUNCIONSTDIN    shift and go to state 187
    BOOL            shift and go to state 56
    NOT             shift and go to state 44

    expresion                      shift and go to state 269
    valor                          shift and go to state 178
    expresionString                shift and go to state 179
    expresionInt                   shift and go to state 180
    expresionDouble                shift and go to state 181
    expresionBool                  shift and go to state 182
    valorString                    shift and go to state 34
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 185
    valorBool                      shift and go to state 150
    negacionBool                   shift and go to state 151
    comparacionBool                shift and go to state 186
    expresionIndexString           shift and go to state 55
    sentenciaSubstring             shift and go to state 188

state 198

    (112) asignacion -> VAR VARIABLE IGUAL . expresion
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . valor
    (132) expresion -> . expresionString
    (133) expresion -> . expresionInt
    (134) expresion -> . expresionDouble
    (135) expresion -> . expresionBool
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 153
    VARIABLE        shift and go to state 176
    DOUBLE          shift and go to state 183
    STRING          shift and go to state 184
    FUNCIONSTDIN    shift and go to state 187
    BOOL            shift and go to state 56
    NOT             shift and go to state 44

    expresion                      shift and go to state 270
    valor                          shift and go to state 178
    expresionString                shift and go to state 179
    expresionInt                   shift and go to state 180
    expresionDouble                shift and go to state 181
    expresionBool                  shift and go to state 182
    valorString                    shift and go to state 34
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 185
    valorBool                      shift and go to state 150
    negacionBool                   shift and go to state 151
    comparacionBool                shift and go to state 186
    expresionIndexString           shift and go to state 55
    sentenciaSubstring             shift and go to state 188

state 199

    (185) expresionInt -> valorInt . operadorMat expresionInt
    (186) expresionInt -> valorInt .
    (191) operadorMat -> . SUMA
    (192) operadorMat -> . RESTA
    (193) operadorMat -> . MULTI
    (194) operadorMat -> . DIV
    (195) operadorMat -> . DIVENTERO
    (196) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 186 (expresionInt -> valorInt .)
    PDER            reduce using rule 186 (expresionInt -> valorInt .)
    SUMA            shift and go to state 105
    RESTA           shift and go to state 106
    MULTI           shift and go to state 107
    DIV             shift and go to state 108
    DIVENTERO       shift and go to state 109
    MOD             shift and go to state 110

    operadorMat                    shift and go to state 104

state 200

    (185) expresionInt -> valorInt operadorMat expresionInt .

    PUNTOYCOMA      reduce using rule 185 (expresionInt -> valorInt operadorMat expresionInt .)
    PDER            reduce using rule 185 (expresionInt -> valorInt operadorMat expresionInt .)


state 201

    (184) valorInt -> VARIABLE .

    SUMA            reduce using rule 184 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 184 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 184 (valorInt -> VARIABLE .)
    DIV             reduce using rule 184 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 184 (valorInt -> VARIABLE .)
    MOD             reduce using rule 184 (valorInt -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 184 (valorInt -> VARIABLE .)
    PDER            reduce using rule 184 (valorInt -> VARIABLE .)
    AND             reduce using rule 184 (valorInt -> VARIABLE .)
    OR              reduce using rule 184 (valorInt -> VARIABLE .)


state 202

    (189) expresionDouble -> valorDouble operadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 189 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    AND             reduce using rule 189 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    OR              reduce using rule 189 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PDER            reduce using rule 189 (expresionDouble -> valorDouble operadorMat expresionDouble .)


state 203

    (161) expresionBool -> valorDouble comparadorMat expresionDouble .
    (145) expresionBoolFor -> valorDouble comparadorMat expresionDouble .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 145 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 161 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 161 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 145 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 161 (expresionBool -> valorDouble comparadorMat expresionDouble .) ]


state 204

    (164) expresionBool -> valorDouble comparadorMat VARIABLE .
    (148) expresionBoolFor -> valorDouble comparadorMat VARIABLE .
    (184) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 148 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 148 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 164 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 164 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 164 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 164 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 148 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 184 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 184 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 184 (valorInt -> VARIABLE .)
    DIV             reduce using rule 184 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 184 (valorInt -> VARIABLE .)
    MOD             reduce using rule 184 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 164 (expresionBool -> valorDouble comparadorMat VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 184 (valorInt -> VARIABLE .) ]


state 205

    (178) expresionString -> valorString SUMA expresionString .

    PUNTOYCOMA      reduce using rule 178 (expresionString -> valorString SUMA expresionString .)
    PDER            reduce using rule 178 (expresionString -> valorString SUMA expresionString .)


state 206

    (173) valorString -> STRING .

    SUMA            reduce using rule 173 (valorString -> STRING .)
    CIZQ            reduce using rule 173 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 173 (valorString -> STRING .)
    PDER            reduce using rule 173 (valorString -> STRING .)


state 207

    (174) valorString -> VARIABLE .
    (181) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    SUMA            reduce using rule 174 (valorString -> VARIABLE .)
    CIZQ            reduce using rule 174 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 174 (valorString -> VARIABLE .)
    PDER            reduce using rule 174 (valorString -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 86


state 208

    (180) expresionIndexString -> valorString CIZQ ENTERO . CDER

    CDER            shift and go to state 271


state 209

    (168) expresionBool -> valor IS objeto .

    PUNTOYCOMA      reduce using rule 168 (expresionBool -> valor IS objeto .)
    AND             reduce using rule 168 (expresionBool -> valor IS objeto .)
    OR              reduce using rule 168 (expresionBool -> valor IS objeto .)
    PDER            reduce using rule 168 (expresionBool -> valor IS objeto .)


state 210

    (205) objeto -> STRINGR .

    PUNTOYCOMA      reduce using rule 205 (objeto -> STRINGR .)
    AND             reduce using rule 205 (objeto -> STRINGR .)
    OR              reduce using rule 205 (objeto -> STRINGR .)
    PDER            reduce using rule 205 (objeto -> STRINGR .)


state 211

    (206) objeto -> INT .

    PUNTOYCOMA      reduce using rule 206 (objeto -> INT .)
    AND             reduce using rule 206 (objeto -> INT .)
    OR              reduce using rule 206 (objeto -> INT .)
    PDER            reduce using rule 206 (objeto -> INT .)


state 212

    (207) objeto -> DOUBLER .

    PUNTOYCOMA      reduce using rule 207 (objeto -> DOUBLER .)
    AND             reduce using rule 207 (objeto -> DOUBLER .)
    OR              reduce using rule 207 (objeto -> DOUBLER .)
    PDER            reduce using rule 207 (objeto -> DOUBLER .)


state 213

    (208) objeto -> NUM .

    PUNTOYCOMA      reduce using rule 208 (objeto -> NUM .)
    AND             reduce using rule 208 (objeto -> NUM .)
    OR              reduce using rule 208 (objeto -> NUM .)
    PDER            reduce using rule 208 (objeto -> NUM .)


state 214

    (209) objeto -> VAR .

    PUNTOYCOMA      reduce using rule 209 (objeto -> VAR .)
    AND             reduce using rule 209 (objeto -> VAR .)
    OR              reduce using rule 209 (objeto -> VAR .)
    PDER            reduce using rule 209 (objeto -> VAR .)


state 215

    (210) objeto -> DYNAMIC .

    PUNTOYCOMA      reduce using rule 210 (objeto -> DYNAMIC .)
    AND             reduce using rule 210 (objeto -> DYNAMIC .)
    OR              reduce using rule 210 (objeto -> DYNAMIC .)
    PDER            reduce using rule 210 (objeto -> DYNAMIC .)


state 216

    (211) objeto -> LIST .

    PUNTOYCOMA      reduce using rule 211 (objeto -> LIST .)
    AND             reduce using rule 211 (objeto -> LIST .)
    OR              reduce using rule 211 (objeto -> LIST .)
    PDER            reduce using rule 211 (objeto -> LIST .)


state 217

    (212) objeto -> BOOL .

    PUNTOYCOMA      reduce using rule 212 (objeto -> BOOL .)
    AND             reduce using rule 212 (objeto -> BOOL .)
    OR              reduce using rule 212 (objeto -> BOOL .)
    PDER            reduce using rule 212 (objeto -> BOOL .)


state 218

    (213) objeto -> MAP .

    PUNTOYCOMA      reduce using rule 213 (objeto -> MAP .)
    AND             reduce using rule 213 (objeto -> MAP .)
    OR              reduce using rule 213 (objeto -> MAP .)
    PDER            reduce using rule 213 (objeto -> MAP .)


state 219

    (214) objeto -> SET .

    PUNTOYCOMA      reduce using rule 214 (objeto -> SET .)
    AND             reduce using rule 214 (objeto -> SET .)
    OR              reduce using rule 214 (objeto -> SET .)
    PDER            reduce using rule 214 (objeto -> SET .)


state 220

    (169) expresionBool -> valor ISNEGADO objeto .

    PUNTOYCOMA      reduce using rule 169 (expresionBool -> valor ISNEGADO objeto .)
    AND             reduce using rule 169 (expresionBool -> valor ISNEGADO objeto .)
    OR              reduce using rule 169 (expresionBool -> valor ISNEGADO objeto .)
    PDER            reduce using rule 169 (expresionBool -> valor ISNEGADO objeto .)


state 221

    (156) sentenciaWhile -> WHILE PIZQ expresionBool . PDER LIZQ final LDER
    (157) sentenciaWhile -> WHILE PIZQ expresionBool . PDER final
    (171) comparacionBool -> expresionBool . operadorLogico expresionBool
    (172) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (203) operadorLogico -> . AND
    (204) operadorLogico -> . OR

    PDER            shift and go to state 272
    AND             shift and go to state 63
    OR              shift and go to state 64

    operadorLogico                 shift and go to state 62

state 222

    (158) sentenciaDoWhile -> DO LIZQ final . LDER WHILE PIZQ expresionBool PDER

    LDER            shift and go to state 273


state 223

    (120) sentenciaIf -> IF PIZQ expresionBool . PDER final
    (121) sentenciaIf -> IF PIZQ expresionBool . PDER LIZQ final LDER
    (171) comparacionBool -> expresionBool . operadorLogico expresionBool
    (172) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (203) operadorLogico -> . AND
    (204) operadorLogico -> . OR

    PDER            shift and go to state 274
    AND             shift and go to state 63
    OR              shift and go to state 64

    operadorLogico                 shift and go to state 62

state 224

    (123) sentenciaElse -> ELSE LIZQ final . LDER

    LDER            shift and go to state 275


state 225

    (115) imprimir -> PRINT PIZQ expresion . PDER

    PDER            shift and go to state 276


state 226

    (116) imprimir -> PRINT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 277


state 227

    (114) asignacionSimple -> VARIABLE . IGUAL expresion
    (127) valor -> VARIABLE .
    (162) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (163) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (174) valorString -> VARIABLE .
    (184) valorInt -> VARIABLE .
    (160) valorBool -> VARIABLE .
    (181) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (197) comparadorMat -> . DIGUAL
    (198) comparadorMat -> . NOIGUAL
    (199) comparadorMat -> . MAYOR
    (200) comparadorMat -> . MENOR
    (201) comparadorMat -> . MAYIGUAL
    (202) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 127 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 127 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 127 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 127 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 127 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 127 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 127 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 127 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 127 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 127 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 87
    IS              reduce using rule 127 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 127 (valor -> VARIABLE .)
    SUMA            reduce using rule 127 (valor -> VARIABLE .)
    RESTA           reduce using rule 127 (valor -> VARIABLE .)
    MULTI           reduce using rule 127 (valor -> VARIABLE .)
    DIV             reduce using rule 127 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 127 (valor -> VARIABLE .)
    MOD             reduce using rule 127 (valor -> VARIABLE .)
    PDER            reduce using rule 127 (valor -> VARIABLE .)
    CIZQ            reduce using rule 174 (valorString -> VARIABLE .)
    AND             reduce using rule 160 (valorBool -> VARIABLE .)
    OR              reduce using rule 160 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 86
    DIGUAL          shift and go to state 88
    NOIGUAL         shift and go to state 89
    MAYOR           shift and go to state 90
    MENOR           shift and go to state 91
    MAYIGUAL        shift and go to state 92
    MENIGUAL        shift and go to state 93

  ! SUMA            [ reduce using rule 174 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 174 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 160 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 259

state 228

    (118) funcionStdout -> FUNCIONSTDOUT PIZQ expresion . PDER

    PDER            shift and go to state 278


state 229

    (119) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 279


state 230

    (170) negacionBool -> NOT PIZQ expresionBool . PDER
    (171) comparacionBool -> expresionBool . operadorLogico expresionBool
    (172) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (203) operadorLogico -> . AND
    (204) operadorLogico -> . OR

    PDER            shift and go to state 280
    AND             shift and go to state 63
    OR              shift and go to state 64

    operadorLogico                 shift and go to state 62

state 231

    (124) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER final
    (125) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER LIZQ final LDER
    (171) comparacionBool -> expresionBool . operadorLogico expresionBool
    (172) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (203) operadorLogico -> . AND
    (204) operadorLogico -> . OR

    PDER            shift and go to state 281
    AND             shift and go to state 63
    OR              shift and go to state 64

    operadorLogico                 shift and go to state 62

state 232

    (152) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final

    PUNTOYCOMA      shift and go to state 282


state 233

    (143) asignacionFor -> VARIABLE . IGUAL expresionInt
    (144) asignacionFor -> VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 283


state 234

    (136) asignacionFor -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 284


state 235

    (137) asignacionFor -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 285


state 236

    (138) asignacionFor -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 286


state 237

    (139) asignacionFor -> DYNAMIC . VARIABLE IGUAL expresionInt
    (140) asignacionFor -> DYNAMIC . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 287


state 238

    (141) asignacionFor -> VAR . VARIABLE IGUAL expresionInt
    (142) asignacionFor -> VAR . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 288


state 239

    (64) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE
    (65) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 289


state 240

    (68) expresionLista -> LIST MENOR INT . MAYOR VARIABLE
    (69) expresionLista -> LIST MENOR INT . MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> LIST MENOR INT . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 290


state 241

    (72) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE
    (73) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 291


state 242

    (76) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE
    (77) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 292


state 243

    (79) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE
    (80) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 293


state 244

    (83) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE
    (84) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 294


state 245

    (67) expresionLista -> CIZQ expListString CDER .

    PUNTOYCOMA      reduce using rule 67 (expresionLista -> CIZQ expListString CDER .)


state 246

    (71) expresionLista -> CIZQ expListInt CDER .

    PUNTOYCOMA      reduce using rule 71 (expresionLista -> CIZQ expListInt CDER .)


state 247

    (75) expresionLista -> CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 75 (expresionLista -> CIZQ expListNum CDER .)


state 248

    (82) expresionLista -> CIZQ expListBool CDER .

    PUNTOYCOMA      reduce using rule 82 (expresionLista -> CIZQ expListBool CDER .)


state 249

    (86) expresionLista -> CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 86 (expresionLista -> CIZQ expListDynamic CDER .)


state 250

    (88) expListString -> STRING COMA . expListString
    (101) expListDynamic -> STRING COMA . expListDynamic
    (87) expListString -> . STRING
    (88) expListString -> . STRING COMA expListString
    (97) expListDynamic -> . STRING
    (98) expListDynamic -> . ENTERO
    (99) expListDynamic -> . DOUBLE
    (100) expListDynamic -> . BOOL
    (101) expListDynamic -> . STRING COMA expListDynamic
    (102) expListDynamic -> . ENTERO COMA expListDynamic
    (103) expListDynamic -> . DOUBLE COMA expListDynamic
    (104) expListDynamic -> . BOOL COMA expListDynamic

    STRING          shift and go to state 134
    ENTERO          shift and go to state 297
    DOUBLE          shift and go to state 298
    BOOL            shift and go to state 299

    expListString                  shift and go to state 295
    expListDynamic                 shift and go to state 296

state 251

    (90) expListInt -> ENTERO COMA . expListInt
    (93) expListNum -> ENTERO COMA . expListNum
    (102) expListDynamic -> ENTERO COMA . expListDynamic
    (89) expListInt -> . ENTERO
    (90) expListInt -> . ENTERO COMA expListInt
    (91) expListNum -> . ENTERO
    (92) expListNum -> . DOUBLE
    (93) expListNum -> . ENTERO COMA expListNum
    (94) expListNum -> . DOUBLE COMA expListNum
    (97) expListDynamic -> . STRING
    (98) expListDynamic -> . ENTERO
    (99) expListDynamic -> . DOUBLE
    (100) expListDynamic -> . BOOL
    (101) expListDynamic -> . STRING COMA expListDynamic
    (102) expListDynamic -> . ENTERO COMA expListDynamic
    (103) expListDynamic -> . DOUBLE COMA expListDynamic
    (104) expListDynamic -> . BOOL COMA expListDynamic

    ENTERO          shift and go to state 135
    DOUBLE          shift and go to state 136
    STRING          shift and go to state 303
    BOOL            shift and go to state 299

    expListInt                     shift and go to state 300
    expListNum                     shift and go to state 301
    expListDynamic                 shift and go to state 302

state 252

    (94) expListNum -> DOUBLE COMA . expListNum
    (103) expListDynamic -> DOUBLE COMA . expListDynamic
    (91) expListNum -> . ENTERO
    (92) expListNum -> . DOUBLE
    (93) expListNum -> . ENTERO COMA expListNum
    (94) expListNum -> . DOUBLE COMA expListNum
    (97) expListDynamic -> . STRING
    (98) expListDynamic -> . ENTERO
    (99) expListDynamic -> . DOUBLE
    (100) expListDynamic -> . BOOL
    (101) expListDynamic -> . STRING COMA expListDynamic
    (102) expListDynamic -> . ENTERO COMA expListDynamic
    (103) expListDynamic -> . DOUBLE COMA expListDynamic
    (104) expListDynamic -> . BOOL COMA expListDynamic

    ENTERO          shift and go to state 306
    DOUBLE          shift and go to state 136
    STRING          shift and go to state 303
    BOOL            shift and go to state 299

    expListNum                     shift and go to state 304
    expListDynamic                 shift and go to state 305

state 253

    (96) expListBool -> BOOL COMA . expListBool
    (104) expListDynamic -> BOOL COMA . expListDynamic
    (95) expListBool -> . BOOL
    (96) expListBool -> . BOOL COMA expListBool
    (97) expListDynamic -> . STRING
    (98) expListDynamic -> . ENTERO
    (99) expListDynamic -> . DOUBLE
    (100) expListDynamic -> . BOOL
    (101) expListDynamic -> . STRING COMA expListDynamic
    (102) expListDynamic -> . ENTERO COMA expListDynamic
    (103) expListDynamic -> . DOUBLE COMA expListDynamic
    (104) expListDynamic -> . BOOL COMA expListDynamic

    BOOL            shift and go to state 137
    STRING          shift and go to state 303
    ENTERO          shift and go to state 297
    DOUBLE          shift and go to state 298

    expListBool                    shift and go to state 307
    expListDynamic                 shift and go to state 308

state 254

    (61) expresionNewList -> NEWLIST PIZQ PDER .

    PUNTOYCOMA      reduce using rule 61 (expresionNewList -> NEWLIST PIZQ PDER .)


state 255

    (62) expresionNewList -> NEWLIST PIZQ ENTERO . PDER

    PDER            shift and go to state 309


state 256

    (59) expresionSet -> SET VARIABLE IGUAL . SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> SET VARIABLE IGUAL . SETFROM PIZQ CIZQ expListDynamic CDER PDER

    SETFROM         shift and go to state 310


state 257

    (58) expresionSet -> SETFROM PIZQ CIZQ . CDER PDER

    CDER            shift and go to state 311


state 258

    (161) expresionBool -> valorDouble comparadorMat . expresionDouble
    (164) expresionBool -> valorDouble comparadorMat . VARIABLE
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 313
    DOUBLE          shift and go to state 173
    ENTERO          shift and go to state 174

    valorDouble                    shift and go to state 172
    expresionDouble                shift and go to state 312
    valorInt                       shift and go to state 152

state 259

    (162) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (163) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 314
    DOUBLE          shift and go to state 173
    ENTERO          shift and go to state 174

    expresionDouble                shift and go to state 315
    valorDouble                    shift and go to state 172
    valorInt                       shift and go to state 152

state 260

    (47) final -> VARIABLE DSUMA PUNTOYCOMA final .

    $end            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    VARIABLE        reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    INT             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DOUBLER         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NUM             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    STRINGR         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BOOLR           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    VAR             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    WHILE           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DO              reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    IF              reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ELSE            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    PRINT           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NOT             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ELSEIF          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FOR             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LIST            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    CIZQ            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NEWLIST         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    SET             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    SETFROM         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ENTERO          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DOUBLE          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    STRING          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BOOL            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LDER            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)


state 261

    (49) final -> VARIABLE DRESTA PUNTOYCOMA final .

    $end            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    VARIABLE        reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    INT             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DOUBLER         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NUM             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    STRINGR         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BOOLR           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    VAR             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    WHILE           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DO              reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    IF              reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ELSE            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    PRINT           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NOT             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ELSEIF          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FOR             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LIST            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    CIZQ            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NEWLIST         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    SET             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    SETFROM         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ENTERO          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DOUBLE          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    STRING          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BOOL            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LDER            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)


state 262

    (181) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . PDER
    (182) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . COMA ENTERO PDER

    PDER            shift and go to state 316
    COMA            shift and go to state 317


state 263

    (130) expresion -> valor operadorMat . expresion
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . valor
    (132) expresion -> . expresionString
    (133) expresion -> . expresionInt
    (134) expresion -> . expresionDouble
    (135) expresion -> . expresionBool
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 153
    VARIABLE        shift and go to state 176
    DOUBLE          shift and go to state 183
    STRING          shift and go to state 184
    FUNCIONSTDIN    shift and go to state 187
    BOOL            shift and go to state 56
    NOT             shift and go to state 44

    valor                          shift and go to state 178
    expresion                      shift and go to state 318
    expresionString                shift and go to state 179
    expresionInt                   shift and go to state 180
    expresionDouble                shift and go to state 181
    expresionBool                  shift and go to state 182
    valorString                    shift and go to state 34
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 185
    valorBool                      shift and go to state 150
    negacionBool                   shift and go to state 151
    comparacionBool                shift and go to state 186
    expresionIndexString           shift and go to state 55
    sentenciaSubstring             shift and go to state 188

state 264

    (106) asignacion -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 106 (asignacion -> INT VARIABLE IGUAL expresionInt .)


state 265

    (107) asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 107 (asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 266

    (108) asignacion -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 108 (asignacion -> NUM VARIABLE IGUAL expresionDouble .)


state 267

    (109) asignacion -> STRINGR VARIABLE IGUAL expresionString .

    PUNTOYCOMA      reduce using rule 109 (asignacion -> STRINGR VARIABLE IGUAL expresionString .)


state 268

    (110) asignacion -> BOOLR VARIABLE IGUAL expresionBool .
    (171) comparacionBool -> expresionBool . operadorLogico expresionBool
    (172) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (203) operadorLogico -> . AND
    (204) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 110 (asignacion -> BOOLR VARIABLE IGUAL expresionBool .)
    AND             shift and go to state 63
    OR              shift and go to state 64

    operadorLogico                 shift and go to state 62

state 269

    (111) asignacion -> DYNAMIC VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 111 (asignacion -> DYNAMIC VARIABLE IGUAL expresion .)


state 270

    (112) asignacion -> VAR VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 112 (asignacion -> VAR VARIABLE IGUAL expresion .)


state 271

    (180) expresionIndexString -> valorString CIZQ ENTERO CDER .

    SUMA            reduce using rule 180 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    CIZQ            reduce using rule 180 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PUNTOYCOMA      reduce using rule 180 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PDER            reduce using rule 180 (expresionIndexString -> valorString CIZQ ENTERO CDER .)


state 272

    (156) sentenciaWhile -> WHILE PIZQ expresionBool PDER . LIZQ final LDER
    (157) sentenciaWhile -> WHILE PIZQ expresionBool PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 319
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    expresionBool                  shift and go to state 6
    final                          shift and go to state 320
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 273

    (158) sentenciaDoWhile -> DO LIZQ final LDER . WHILE PIZQ expresionBool PDER

    WHILE           shift and go to state 321


state 274

    (120) sentenciaIf -> IF PIZQ expresionBool PDER . final
    (121) sentenciaIf -> IF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 323
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    expresionBool                  shift and go to state 6
    final                          shift and go to state 322
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 275

    (123) sentenciaElse -> ELSE LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    VARIABLE        reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    INT             reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLER         reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    NUM             reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRINGR         reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOLR           reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    DYNAMIC         reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    VAR             reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    WHILE           reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    DO              reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    IF              reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSE            reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    PRINT           reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    NOT             reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSEIF          reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    FOR             reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    LIST            reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    CIZQ            reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    NEWLIST         reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    SET             reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    SETFROM         reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    ENTERO          reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLE          reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRING          reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOL            reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    $end            reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)
    LDER            reduce using rule 123 (sentenciaElse -> ELSE LIZQ final LDER .)


state 276

    (115) imprimir -> PRINT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 115 (imprimir -> PRINT PIZQ expresion PDER .)


state 277

    (116) imprimir -> PRINT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 116 (imprimir -> PRINT PIZQ asignacionSimple PDER .)


state 278

    (118) funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 118 (funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .)


state 279

    (119) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 119 (funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .)


state 280

    (170) negacionBool -> NOT PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 170 (negacionBool -> NOT PIZQ expresionBool PDER .)
    AND             reduce using rule 170 (negacionBool -> NOT PIZQ expresionBool PDER .)
    OR              reduce using rule 170 (negacionBool -> NOT PIZQ expresionBool PDER .)
    PDER            reduce using rule 170 (negacionBool -> NOT PIZQ expresionBool PDER .)


state 281

    (124) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . final
    (125) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 325
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    expresionBool                  shift and go to state 6
    final                          shift and go to state 324
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 282

    (152) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING

    VARIABLE        shift and go to state 327
    DOUBLE          shift and go to state 53
    BOOL            shift and go to state 56
    NOT             shift and go to state 44
    ENTERO          shift and go to state 47
    STRING          shift and go to state 154

    expresionBoolFor               shift and go to state 326
    valorDouble                    shift and go to state 328
    valorBool                      shift and go to state 329
    negacionBool                   shift and go to state 330
    comparacionBool                shift and go to state 331
    valorInt                       shift and go to state 152
    expresionBool                  shift and go to state 332
    valor                          shift and go to state 36

state 283

    (143) asignacionFor -> VARIABLE IGUAL . expresionInt
    (144) asignacionFor -> VARIABLE IGUAL . expresionDouble
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt

    ENTERO          shift and go to state 174
    VARIABLE        shift and go to state 201
    DOUBLE          shift and go to state 173

    expresionInt                   shift and go to state 333
    expresionDouble                shift and go to state 334
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 172

state 284

    (136) asignacionFor -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 335


state 285

    (137) asignacionFor -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 336


state 286

    (138) asignacionFor -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 337


state 287

    (139) asignacionFor -> DYNAMIC VARIABLE . IGUAL expresionInt
    (140) asignacionFor -> DYNAMIC VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 338


state 288

    (141) asignacionFor -> VAR VARIABLE . IGUAL expresionInt
    (142) asignacionFor -> VAR VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 339


state 289

    (64) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE
    (65) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 340


state 290

    (68) expresionLista -> LIST MENOR INT MAYOR . VARIABLE
    (69) expresionLista -> LIST MENOR INT MAYOR . VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> LIST MENOR INT MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 341


state 291

    (72) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE
    (73) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 342


state 292

    (76) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE
    (77) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 343


state 293

    (79) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE
    (80) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 344


state 294

    (83) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE
    (84) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 345


state 295

    (88) expListString -> STRING COMA expListString .

    CDER            reduce using rule 88 (expListString -> STRING COMA expListString .)


state 296

    (101) expListDynamic -> STRING COMA expListDynamic .

    CDER            reduce using rule 101 (expListDynamic -> STRING COMA expListDynamic .)


state 297

    (98) expListDynamic -> ENTERO .
    (102) expListDynamic -> ENTERO . COMA expListDynamic

    CDER            reduce using rule 98 (expListDynamic -> ENTERO .)
    COMA            shift and go to state 346


state 298

    (99) expListDynamic -> DOUBLE .
    (103) expListDynamic -> DOUBLE . COMA expListDynamic

    CDER            reduce using rule 99 (expListDynamic -> DOUBLE .)
    COMA            shift and go to state 347


state 299

    (100) expListDynamic -> BOOL .
    (104) expListDynamic -> BOOL . COMA expListDynamic

    CDER            reduce using rule 100 (expListDynamic -> BOOL .)
    COMA            shift and go to state 348


state 300

    (90) expListInt -> ENTERO COMA expListInt .

    CDER            reduce using rule 90 (expListInt -> ENTERO COMA expListInt .)


state 301

    (93) expListNum -> ENTERO COMA expListNum .

    CDER            reduce using rule 93 (expListNum -> ENTERO COMA expListNum .)


state 302

    (102) expListDynamic -> ENTERO COMA expListDynamic .

    CDER            reduce using rule 102 (expListDynamic -> ENTERO COMA expListDynamic .)


state 303

    (97) expListDynamic -> STRING .
    (101) expListDynamic -> STRING . COMA expListDynamic

    CDER            reduce using rule 97 (expListDynamic -> STRING .)
    COMA            shift and go to state 349


state 304

    (94) expListNum -> DOUBLE COMA expListNum .

    CDER            reduce using rule 94 (expListNum -> DOUBLE COMA expListNum .)


state 305

    (103) expListDynamic -> DOUBLE COMA expListDynamic .

    CDER            reduce using rule 103 (expListDynamic -> DOUBLE COMA expListDynamic .)


state 306

    (91) expListNum -> ENTERO .
    (93) expListNum -> ENTERO . COMA expListNum
    (98) expListDynamic -> ENTERO .
    (102) expListDynamic -> ENTERO . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 91 (expListNum -> ENTERO .)
    CDER            reduce using rule 91 (expListNum -> ENTERO .)
    COMA            shift and go to state 350

  ! CDER            [ reduce using rule 98 (expListDynamic -> ENTERO .) ]


state 307

    (96) expListBool -> BOOL COMA expListBool .

    CDER            reduce using rule 96 (expListBool -> BOOL COMA expListBool .)


state 308

    (104) expListDynamic -> BOOL COMA expListDynamic .

    CDER            reduce using rule 104 (expListDynamic -> BOOL COMA expListDynamic .)


state 309

    (62) expresionNewList -> NEWLIST PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 62 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)


state 310

    (59) expresionSet -> SET VARIABLE IGUAL SETFROM . PIZQ CIZQ CDER PDER
    (60) expresionSet -> SET VARIABLE IGUAL SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 351


state 311

    (58) expresionSet -> SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 352


state 312

    (161) expresionBool -> valorDouble comparadorMat expresionDouble .

    AND             reduce using rule 161 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 161 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 161 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PDER            reduce using rule 161 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 313

    (164) expresionBool -> valorDouble comparadorMat VARIABLE .
    (184) valorInt -> VARIABLE .

  ! reduce/reduce conflict for AND resolved using rule 164 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 164 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 164 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 164 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 164 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 164 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 164 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PDER            reduce using rule 164 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 184 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 184 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 184 (valorInt -> VARIABLE .)
    DIV             reduce using rule 184 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 184 (valorInt -> VARIABLE .)
    MOD             reduce using rule 184 (valorInt -> VARIABLE .)

  ! AND             [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 184 (valorInt -> VARIABLE .) ]


state 314

    (163) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (184) valorInt -> VARIABLE .

  ! reduce/reduce conflict for AND resolved using rule 163 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 163 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 163 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 163 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 163 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 163 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 163 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PDER            reduce using rule 163 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 184 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 184 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 184 (valorInt -> VARIABLE .)
    DIV             reduce using rule 184 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 184 (valorInt -> VARIABLE .)
    MOD             reduce using rule 184 (valorInt -> VARIABLE .)

  ! AND             [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 184 (valorInt -> VARIABLE .) ]


state 315

    (162) expresionBool -> VARIABLE comparadorMat expresionDouble .

    AND             reduce using rule 162 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 162 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 162 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PDER            reduce using rule 162 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 316

    (181) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 181 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    SUMA            reduce using rule 181 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    CIZQ            reduce using rule 181 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    PDER            reduce using rule 181 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)


state 317

    (182) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA . ENTERO PDER

    ENTERO          shift and go to state 353


state 318

    (130) expresion -> valor operadorMat expresion .

    PUNTOYCOMA      reduce using rule 130 (expresion -> valor operadorMat expresion .)
    PDER            reduce using rule 130 (expresion -> valor operadorMat expresion .)


state 319

    (156) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    expresionBool                  shift and go to state 6
    final                          shift and go to state 354
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 320

    (157) sentenciaWhile -> WHILE PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    INT             reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NUM             reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VAR             reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DO              reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    IF              reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NOT             reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FOR             reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LIST            reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    SET             reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRING          reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    $end            reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LDER            reduce using rule 157 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)


state 321

    (158) sentenciaDoWhile -> DO LIZQ final LDER WHILE . PIZQ expresionBool PDER

    PIZQ            shift and go to state 355


state 322

    (120) sentenciaIf -> IF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    INT             reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DO              reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    IF              reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FOR             reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LIST            reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    SET             reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    $end            reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 120 (sentenciaIf -> IF PIZQ expresionBool PDER final .)


state 323

    (121) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    expresionBool                  shift and go to state 6
    final                          shift and go to state 356
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 324

    (124) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    INT             reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DO              reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    IF              reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FOR             reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LIST            reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    SET             reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    $end            reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 124 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)


state 325

    (125) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    expresionBool                  shift and go to state 6
    final                          shift and go to state 357
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 326

    (152) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DRESTA PDER final

    PUNTOYCOMA      shift and go to state 358


state 327

    (146) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (147) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (160) valorBool -> VARIABLE .
    (184) valorInt -> VARIABLE .
    (162) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (163) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (127) valor -> VARIABLE .
    (197) comparadorMat -> . DIGUAL
    (198) comparadorMat -> . NOIGUAL
    (199) comparadorMat -> . MAYOR
    (200) comparadorMat -> . MENOR
    (201) comparadorMat -> . MAYIGUAL
    (202) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    PUNTOYCOMA      reduce using rule 160 (valorBool -> VARIABLE .)
    AND             reduce using rule 160 (valorBool -> VARIABLE .)
    OR              reduce using rule 160 (valorBool -> VARIABLE .)
    IS              reduce using rule 127 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 127 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 88
    NOIGUAL         shift and go to state 89
    MAYOR           shift and go to state 90
    MENOR           shift and go to state 91
    MAYIGUAL        shift and go to state 92
    MENIGUAL        shift and go to state 93

  ! DIGUAL          [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 184 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 359

state 328

    (145) expresionBoolFor -> valorDouble . comparadorMat expresionDouble
    (148) expresionBoolFor -> valorDouble . comparadorMat VARIABLE
    (161) expresionBool -> valorDouble . comparadorMat expresionDouble
    (164) expresionBool -> valorDouble . comparadorMat VARIABLE
    (197) comparadorMat -> . DIGUAL
    (198) comparadorMat -> . NOIGUAL
    (199) comparadorMat -> . MAYOR
    (200) comparadorMat -> . MENOR
    (201) comparadorMat -> . MAYIGUAL
    (202) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 88
    NOIGUAL         shift and go to state 89
    MAYOR           shift and go to state 90
    MENOR           shift and go to state 91
    MAYIGUAL        shift and go to state 92
    MENIGUAL        shift and go to state 93

    comparadorMat                  shift and go to state 360

state 329

    (149) expresionBoolFor -> valorBool .
    (165) expresionBool -> valorBool .

    PUNTOYCOMA      reduce using rule 149 (expresionBoolFor -> valorBool .)
    AND             reduce using rule 165 (expresionBool -> valorBool .)
    OR              reduce using rule 165 (expresionBool -> valorBool .)


state 330

    (150) expresionBoolFor -> negacionBool .
    (166) expresionBool -> negacionBool .

    PUNTOYCOMA      reduce using rule 150 (expresionBoolFor -> negacionBool .)
    AND             reduce using rule 166 (expresionBool -> negacionBool .)
    OR              reduce using rule 166 (expresionBool -> negacionBool .)


state 331

    (151) expresionBoolFor -> comparacionBool .
    (167) expresionBool -> comparacionBool .

    PUNTOYCOMA      reduce using rule 151 (expresionBoolFor -> comparacionBool .)
    AND             reduce using rule 167 (expresionBool -> comparacionBool .)
    OR              reduce using rule 167 (expresionBool -> comparacionBool .)


state 332

    (171) comparacionBool -> expresionBool . operadorLogico expresionBool
    (172) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (203) operadorLogico -> . AND
    (204) operadorLogico -> . OR

    AND             shift and go to state 63
    OR              shift and go to state 64

    operadorLogico                 shift and go to state 62

state 333

    (143) asignacionFor -> VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 143 (asignacionFor -> VARIABLE IGUAL expresionInt .)


state 334

    (144) asignacionFor -> VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 144 (asignacionFor -> VARIABLE IGUAL expresionDouble .)


state 335

    (136) asignacionFor -> INT VARIABLE IGUAL . expresionInt
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE

    ENTERO          shift and go to state 174
    VARIABLE        shift and go to state 201

    expresionInt                   shift and go to state 361
    valorInt                       shift and go to state 199

state 336

    (137) asignacionFor -> DOUBLER VARIABLE IGUAL . expresionDouble
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 173
    ENTERO          shift and go to state 174
    VARIABLE        shift and go to state 201

    expresionDouble                shift and go to state 362
    valorDouble                    shift and go to state 172
    valorInt                       shift and go to state 152

state 337

    (138) asignacionFor -> NUM VARIABLE IGUAL . expresionDouble
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 173
    ENTERO          shift and go to state 174
    VARIABLE        shift and go to state 201

    expresionDouble                shift and go to state 363
    valorDouble                    shift and go to state 172
    valorInt                       shift and go to state 152

state 338

    (139) asignacionFor -> DYNAMIC VARIABLE IGUAL . expresionInt
    (140) asignacionFor -> DYNAMIC VARIABLE IGUAL . expresionDouble
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt

    ENTERO          shift and go to state 174
    VARIABLE        shift and go to state 201
    DOUBLE          shift and go to state 173

    expresionInt                   shift and go to state 364
    expresionDouble                shift and go to state 365
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 172

state 339

    (141) asignacionFor -> VAR VARIABLE IGUAL . expresionInt
    (142) asignacionFor -> VAR VARIABLE IGUAL . expresionDouble
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt

    ENTERO          shift and go to state 174
    VARIABLE        shift and go to state 201
    DOUBLE          shift and go to state 173

    expresionInt                   shift and go to state 366
    expresionDouble                shift and go to state 367
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 172

state 340

    (64) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE .
    (65) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE . IGUAL CIZQ expListString CDER
    (66) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 64 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE .)
    IGUAL           shift and go to state 368


state 341

    (68) expresionLista -> LIST MENOR INT MAYOR VARIABLE .
    (69) expresionLista -> LIST MENOR INT MAYOR VARIABLE . IGUAL CIZQ expListInt CDER
    (70) expresionLista -> LIST MENOR INT MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 68 (expresionLista -> LIST MENOR INT MAYOR VARIABLE .)
    IGUAL           shift and go to state 369


state 342

    (72) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE .
    (73) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE . IGUAL CIZQ expListNum CDER
    (74) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 72 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE .)
    IGUAL           shift and go to state 370


state 343

    (76) expresionLista -> LIST MENOR NUM MAYOR VARIABLE .
    (77) expresionLista -> LIST MENOR NUM MAYOR VARIABLE . IGUAL CIZQ expListNum CDER
    (78) expresionLista -> LIST MENOR NUM MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 76 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE .)
    IGUAL           shift and go to state 371


state 344

    (79) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE .
    (80) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE . IGUAL CIZQ expListBool CDER
    (81) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 79 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE .)
    IGUAL           shift and go to state 372


state 345

    (83) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE .
    (84) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE . IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 83 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE .)
    IGUAL           shift and go to state 373


state 346

    (102) expListDynamic -> ENTERO COMA . expListDynamic
    (97) expListDynamic -> . STRING
    (98) expListDynamic -> . ENTERO
    (99) expListDynamic -> . DOUBLE
    (100) expListDynamic -> . BOOL
    (101) expListDynamic -> . STRING COMA expListDynamic
    (102) expListDynamic -> . ENTERO COMA expListDynamic
    (103) expListDynamic -> . DOUBLE COMA expListDynamic
    (104) expListDynamic -> . BOOL COMA expListDynamic

    STRING          shift and go to state 303
    ENTERO          shift and go to state 297
    DOUBLE          shift and go to state 298
    BOOL            shift and go to state 299

    expListDynamic                 shift and go to state 302

state 347

    (103) expListDynamic -> DOUBLE COMA . expListDynamic
    (97) expListDynamic -> . STRING
    (98) expListDynamic -> . ENTERO
    (99) expListDynamic -> . DOUBLE
    (100) expListDynamic -> . BOOL
    (101) expListDynamic -> . STRING COMA expListDynamic
    (102) expListDynamic -> . ENTERO COMA expListDynamic
    (103) expListDynamic -> . DOUBLE COMA expListDynamic
    (104) expListDynamic -> . BOOL COMA expListDynamic

    STRING          shift and go to state 303
    ENTERO          shift and go to state 297
    DOUBLE          shift and go to state 298
    BOOL            shift and go to state 299

    expListDynamic                 shift and go to state 305

state 348

    (104) expListDynamic -> BOOL COMA . expListDynamic
    (97) expListDynamic -> . STRING
    (98) expListDynamic -> . ENTERO
    (99) expListDynamic -> . DOUBLE
    (100) expListDynamic -> . BOOL
    (101) expListDynamic -> . STRING COMA expListDynamic
    (102) expListDynamic -> . ENTERO COMA expListDynamic
    (103) expListDynamic -> . DOUBLE COMA expListDynamic
    (104) expListDynamic -> . BOOL COMA expListDynamic

    STRING          shift and go to state 303
    ENTERO          shift and go to state 297
    DOUBLE          shift and go to state 298
    BOOL            shift and go to state 299

    expListDynamic                 shift and go to state 308

state 349

    (101) expListDynamic -> STRING COMA . expListDynamic
    (97) expListDynamic -> . STRING
    (98) expListDynamic -> . ENTERO
    (99) expListDynamic -> . DOUBLE
    (100) expListDynamic -> . BOOL
    (101) expListDynamic -> . STRING COMA expListDynamic
    (102) expListDynamic -> . ENTERO COMA expListDynamic
    (103) expListDynamic -> . DOUBLE COMA expListDynamic
    (104) expListDynamic -> . BOOL COMA expListDynamic

    STRING          shift and go to state 303
    ENTERO          shift and go to state 297
    DOUBLE          shift and go to state 298
    BOOL            shift and go to state 299

    expListDynamic                 shift and go to state 296

state 350

    (93) expListNum -> ENTERO COMA . expListNum
    (102) expListDynamic -> ENTERO COMA . expListDynamic
    (91) expListNum -> . ENTERO
    (92) expListNum -> . DOUBLE
    (93) expListNum -> . ENTERO COMA expListNum
    (94) expListNum -> . DOUBLE COMA expListNum
    (97) expListDynamic -> . STRING
    (98) expListDynamic -> . ENTERO
    (99) expListDynamic -> . DOUBLE
    (100) expListDynamic -> . BOOL
    (101) expListDynamic -> . STRING COMA expListDynamic
    (102) expListDynamic -> . ENTERO COMA expListDynamic
    (103) expListDynamic -> . DOUBLE COMA expListDynamic
    (104) expListDynamic -> . BOOL COMA expListDynamic

    ENTERO          shift and go to state 306
    DOUBLE          shift and go to state 136
    STRING          shift and go to state 303
    BOOL            shift and go to state 299

    expListNum                     shift and go to state 301
    expListDynamic                 shift and go to state 302

state 351

    (59) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ . CIZQ CDER PDER
    (60) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 374


state 352

    (58) expresionSet -> SETFROM PIZQ CIZQ CDER PDER .

    PUNTOYCOMA      reduce using rule 58 (expresionSet -> SETFROM PIZQ CIZQ CDER PDER .)


state 353

    (182) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO . PDER

    PDER            shift and go to state 375


state 354

    (156) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 376


state 355

    (158) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ . expresionBool PDER
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 149
    DOUBLE          shift and go to state 53
    BOOL            shift and go to state 56
    NOT             shift and go to state 44
    ENTERO          shift and go to state 153
    STRING          shift and go to state 154

    expresionBool                  shift and go to state 377
    valorDouble                    shift and go to state 148
    valorBool                      shift and go to state 150
    negacionBool                   shift and go to state 151
    comparacionBool                shift and go to state 186
    valor                          shift and go to state 36
    valorInt                       shift and go to state 152

state 356

    (121) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 378


state 357

    (125) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 379


state 358

    (152) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DSUMA PDER final
    (154) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DRESTA PDER final

    VARIABLE        shift and go to state 380


state 359

    (146) expresionBoolFor -> VARIABLE comparadorMat . expresionDouble
    (147) expresionBoolFor -> VARIABLE comparadorMat . VARIABLE
    (162) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (163) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 381
    DOUBLE          shift and go to state 173
    ENTERO          shift and go to state 174

    expresionDouble                shift and go to state 382
    valorDouble                    shift and go to state 172
    valorInt                       shift and go to state 152

state 360

    (145) expresionBoolFor -> valorDouble comparadorMat . expresionDouble
    (148) expresionBoolFor -> valorDouble comparadorMat . VARIABLE
    (161) expresionBool -> valorDouble comparadorMat . expresionDouble
    (164) expresionBool -> valorDouble comparadorMat . VARIABLE
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 384
    DOUBLE          shift and go to state 173
    ENTERO          shift and go to state 174

    valorDouble                    shift and go to state 172
    expresionDouble                shift and go to state 383
    valorInt                       shift and go to state 152

state 361

    (136) asignacionFor -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 136 (asignacionFor -> INT VARIABLE IGUAL expresionInt .)


state 362

    (137) asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 137 (asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 363

    (138) asignacionFor -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 138 (asignacionFor -> NUM VARIABLE IGUAL expresionDouble .)


state 364

    (139) asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 139 (asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt .)


state 365

    (140) asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 140 (asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble .)


state 366

    (141) asignacionFor -> VAR VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 141 (asignacionFor -> VAR VARIABLE IGUAL expresionInt .)


state 367

    (142) asignacionFor -> VAR VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 142 (asignacionFor -> VAR VARIABLE IGUAL expresionDouble .)


state 368

    (65) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL . CIZQ expListString CDER
    (66) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL . expresionNewList
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 385
    NEWLIST         shift and go to state 50

    expresionNewList               shift and go to state 386

state 369

    (69) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL . CIZQ expListInt CDER
    (70) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL . expresionNewList
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 387
    NEWLIST         shift and go to state 50

    expresionNewList               shift and go to state 388

state 370

    (73) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL . CIZQ expListNum CDER
    (74) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL . expresionNewList
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 389
    NEWLIST         shift and go to state 50

    expresionNewList               shift and go to state 390

state 371

    (77) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL . CIZQ expListNum CDER
    (78) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL . expresionNewList
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 391
    NEWLIST         shift and go to state 50

    expresionNewList               shift and go to state 392

state 372

    (80) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL . CIZQ expListBool CDER
    (81) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL . expresionNewList
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 393
    NEWLIST         shift and go to state 50

    expresionNewList               shift and go to state 394

state 373

    (84) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL . CIZQ expListDynamic CDER
    (85) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL . expresionNewList
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 395
    NEWLIST         shift and go to state 50

    expresionNewList               shift and go to state 396

state 374

    (59) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ . CDER PDER
    (60) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (97) expListDynamic -> . STRING
    (98) expListDynamic -> . ENTERO
    (99) expListDynamic -> . DOUBLE
    (100) expListDynamic -> . BOOL
    (101) expListDynamic -> . STRING COMA expListDynamic
    (102) expListDynamic -> . ENTERO COMA expListDynamic
    (103) expListDynamic -> . DOUBLE COMA expListDynamic
    (104) expListDynamic -> . BOOL COMA expListDynamic

    CDER            shift and go to state 397
    STRING          shift and go to state 303
    ENTERO          shift and go to state 297
    DOUBLE          shift and go to state 298
    BOOL            shift and go to state 299

    expListDynamic                 shift and go to state 398

state 375

    (182) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .

    PUNTOYCOMA      reduce using rule 182 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    SUMA            reduce using rule 182 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    CIZQ            reduce using rule 182 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    PDER            reduce using rule 182 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)


state 376

    (156) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 156 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)


state 377

    (158) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool . PDER
    (171) comparacionBool -> expresionBool . operadorLogico expresionBool
    (172) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (203) operadorLogico -> . AND
    (204) operadorLogico -> . OR

    PDER            shift and go to state 399
    AND             shift and go to state 63
    OR              shift and go to state 64

    operadorLogico                 shift and go to state 62

state 378

    (121) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 121 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)


state 379

    (125) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 125 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)


state 380

    (152) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DSUMA PDER final
    (154) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DRESTA PDER final

    DSUMA           shift and go to state 400
    DRESTA          shift and go to state 401


state 381

    (147) expresionBoolFor -> VARIABLE comparadorMat VARIABLE .
    (163) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (184) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 147 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 163 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 163 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 147 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 163 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 163 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 184 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 184 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 184 (valorInt -> VARIABLE .)
    DIV             reduce using rule 184 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 184 (valorInt -> VARIABLE .)
    MOD             reduce using rule 184 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 184 (valorInt -> VARIABLE .) ]


state 382

    (146) expresionBoolFor -> VARIABLE comparadorMat expresionDouble .
    (162) expresionBool -> VARIABLE comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 146 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 162 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 162 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 383

    (145) expresionBoolFor -> valorDouble comparadorMat expresionDouble .
    (161) expresionBool -> valorDouble comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 145 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 161 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 161 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 384

    (148) expresionBoolFor -> valorDouble comparadorMat VARIABLE .
    (164) expresionBool -> valorDouble comparadorMat VARIABLE .
    (184) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 148 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 164 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 164 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 148 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 164 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 164 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 184 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 184 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 184 (valorInt -> VARIABLE .)
    DIV             reduce using rule 184 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 184 (valorInt -> VARIABLE .)
    MOD             reduce using rule 184 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 184 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 184 (valorInt -> VARIABLE .) ]


state 385

    (65) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ . expListString CDER
    (63) expresionNewList -> CIZQ . CDER
    (87) expListString -> . STRING
    (88) expListString -> . STRING COMA expListString

    CDER            shift and go to state 129
    STRING          shift and go to state 403

    expListString                  shift and go to state 402

state 386

    (66) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 66 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList .)


state 387

    (69) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ . expListInt CDER
    (63) expresionNewList -> CIZQ . CDER
    (89) expListInt -> . ENTERO
    (90) expListInt -> . ENTERO COMA expListInt

    CDER            shift and go to state 129
    ENTERO          shift and go to state 405

    expListInt                     shift and go to state 404

state 388

    (70) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 70 (expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList .)


state 389

    (73) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ . expListNum CDER
    (63) expresionNewList -> CIZQ . CDER
    (91) expListNum -> . ENTERO
    (92) expListNum -> . DOUBLE
    (93) expListNum -> . ENTERO COMA expListNum
    (94) expListNum -> . DOUBLE COMA expListNum

    CDER            shift and go to state 129
    ENTERO          shift and go to state 407
    DOUBLE          shift and go to state 408

    expListNum                     shift and go to state 406

state 390

    (74) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 74 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList .)


state 391

    (77) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ . expListNum CDER
    (63) expresionNewList -> CIZQ . CDER
    (91) expListNum -> . ENTERO
    (92) expListNum -> . DOUBLE
    (93) expListNum -> . ENTERO COMA expListNum
    (94) expListNum -> . DOUBLE COMA expListNum

    CDER            shift and go to state 129
    ENTERO          shift and go to state 407
    DOUBLE          shift and go to state 408

    expListNum                     shift and go to state 409

state 392

    (78) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 78 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList .)


state 393

    (80) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ . expListBool CDER
    (63) expresionNewList -> CIZQ . CDER
    (95) expListBool -> . BOOL
    (96) expListBool -> . BOOL COMA expListBool

    CDER            shift and go to state 129
    BOOL            shift and go to state 411

    expListBool                    shift and go to state 410

state 394

    (81) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 81 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList .)


state 395

    (84) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ . expListDynamic CDER
    (63) expresionNewList -> CIZQ . CDER
    (97) expListDynamic -> . STRING
    (98) expListDynamic -> . ENTERO
    (99) expListDynamic -> . DOUBLE
    (100) expListDynamic -> . BOOL
    (101) expListDynamic -> . STRING COMA expListDynamic
    (102) expListDynamic -> . ENTERO COMA expListDynamic
    (103) expListDynamic -> . DOUBLE COMA expListDynamic
    (104) expListDynamic -> . BOOL COMA expListDynamic

    CDER            shift and go to state 129
    STRING          shift and go to state 303
    ENTERO          shift and go to state 297
    DOUBLE          shift and go to state 298
    BOOL            shift and go to state 299

    expListDynamic                 shift and go to state 412

state 396

    (85) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 85 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList .)


state 397

    (59) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 413


state 398

    (60) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 414


state 399

    (158) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 158 (sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .)


state 400

    (152) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA . PDER LIZQ final LDER
    (153) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA . PDER final

    PDER            shift and go to state 415


state 401

    (154) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA . PDER LIZQ final LDER
    (155) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA . PDER final

    PDER            shift and go to state 416


state 402

    (65) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString . CDER

    CDER            shift and go to state 417


state 403

    (87) expListString -> STRING .
    (88) expListString -> STRING . COMA expListString

    CDER            reduce using rule 87 (expListString -> STRING .)
    COMA            shift and go to state 418


state 404

    (69) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt . CDER

    CDER            shift and go to state 419


state 405

    (89) expListInt -> ENTERO .
    (90) expListInt -> ENTERO . COMA expListInt

    CDER            reduce using rule 89 (expListInt -> ENTERO .)
    COMA            shift and go to state 420


state 406

    (73) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum . CDER

    CDER            shift and go to state 421


state 407

    (91) expListNum -> ENTERO .
    (93) expListNum -> ENTERO . COMA expListNum

    CDER            reduce using rule 91 (expListNum -> ENTERO .)
    COMA            shift and go to state 422


state 408

    (92) expListNum -> DOUBLE .
    (94) expListNum -> DOUBLE . COMA expListNum

    CDER            reduce using rule 92 (expListNum -> DOUBLE .)
    COMA            shift and go to state 423


state 409

    (77) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum . CDER

    CDER            shift and go to state 424


state 410

    (80) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool . CDER

    CDER            shift and go to state 425


state 411

    (95) expListBool -> BOOL .
    (96) expListBool -> BOOL . COMA expListBool

    CDER            reduce using rule 95 (expListBool -> BOOL .)
    COMA            shift and go to state 426


state 412

    (84) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic . CDER

    CDER            shift and go to state 427


state 413

    (59) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER .

    PUNTOYCOMA      reduce using rule 59 (expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER .)


state 414

    (60) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 428


state 415

    (152) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER . LIZQ final LDER
    (153) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 429
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 430
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 416

    (154) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER . LIZQ final LDER
    (155) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 431
    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 432
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 417

    (65) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER .

    PUNTOYCOMA      reduce using rule 65 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER .)


state 418

    (88) expListString -> STRING COMA . expListString
    (87) expListString -> . STRING
    (88) expListString -> . STRING COMA expListString

    STRING          shift and go to state 403

    expListString                  shift and go to state 295

state 419

    (69) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER .

    PUNTOYCOMA      reduce using rule 69 (expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER .)


state 420

    (90) expListInt -> ENTERO COMA . expListInt
    (89) expListInt -> . ENTERO
    (90) expListInt -> . ENTERO COMA expListInt

    ENTERO          shift and go to state 405

    expListInt                     shift and go to state 300

state 421

    (73) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 73 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER .)


state 422

    (93) expListNum -> ENTERO COMA . expListNum
    (91) expListNum -> . ENTERO
    (92) expListNum -> . DOUBLE
    (93) expListNum -> . ENTERO COMA expListNum
    (94) expListNum -> . DOUBLE COMA expListNum

    ENTERO          shift and go to state 407
    DOUBLE          shift and go to state 408

    expListNum                     shift and go to state 301

state 423

    (94) expListNum -> DOUBLE COMA . expListNum
    (91) expListNum -> . ENTERO
    (92) expListNum -> . DOUBLE
    (93) expListNum -> . ENTERO COMA expListNum
    (94) expListNum -> . DOUBLE COMA expListNum

    ENTERO          shift and go to state 407
    DOUBLE          shift and go to state 408

    expListNum                     shift and go to state 304

state 424

    (77) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 77 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER .)


state 425

    (80) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER .

    PUNTOYCOMA      reduce using rule 80 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER .)


state 426

    (96) expListBool -> BOOL COMA . expListBool
    (95) expListBool -> . BOOL
    (96) expListBool -> . BOOL COMA expListBool

    BOOL            shift and go to state 411

    expListBool                    shift and go to state 307

state 427

    (84) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 84 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER .)


state 428

    (60) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    PUNTOYCOMA      reduce using rule 60 (expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 429

    (152) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 433
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 430

    (153) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .

    PUNTOYCOMA      reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    VARIABLE        reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    INT             reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DOUBLER         reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NUM             reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    STRINGR         reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BOOLR           reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DYNAMIC         reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    VAR             reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    WHILE           reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DO              reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    IF              reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ELSE            reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    PRINT           reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FUNCIONSTDIN    reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FUNCIONSTDOUT   reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NOT             reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ELSEIF          reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FOR             reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LIST            reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    CIZQ            reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NEWLIST         reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    SET             reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    SETFROM         reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ENTERO          reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DOUBLE          reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    STRING          reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BOOL            reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    $end            reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LDER            reduce using rule 153 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)


state 431

    (154) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ . final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (106) asignacion -> . INT VARIABLE IGUAL expresionInt
    (107) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (108) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (109) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (110) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (111) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (112) asignacion -> . VAR VARIABLE IGUAL expresion
    (113) asignacion -> . asignacionSimple
    (185) expresionInt -> . valorInt operadorMat expresionInt
    (186) expresionInt -> . valorInt
    (189) expresionDouble -> . valorDouble operadorMat expresionDouble
    (190) expresionDouble -> . valorDouble
    (178) expresionString -> . valorString SUMA expresionString
    (179) expresionString -> . valorString
    (161) expresionBool -> . valorDouble comparadorMat expresionDouble
    (162) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (163) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (164) expresionBool -> . valorDouble comparadorMat VARIABLE
    (165) expresionBool -> . valorBool
    (166) expresionBool -> . negacionBool
    (167) expresionBool -> . comparacionBool
    (168) expresionBool -> . valor IS objeto
    (169) expresionBool -> . valor ISNEGADO objeto
    (145) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (146) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (147) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (148) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (149) expresionBoolFor -> . valorBool
    (150) expresionBoolFor -> . negacionBool
    (151) expresionBoolFor -> . comparacionBool
    (156) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (157) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (158) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (120) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (121) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (122) sentenciaElse -> . ELSE final
    (123) sentenciaElse -> . ELSE LIZQ final LDER
    (115) imprimir -> . PRINT PIZQ expresion PDER
    (116) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (117) funcionStdin -> . FUNCIONSTDIN
    (118) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (119) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (170) negacionBool -> . NOT PIZQ expresionBool PDER
    (171) comparacionBool -> . expresionBool operadorLogico expresionBool
    (172) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (124) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (125) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (152) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (153) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (154) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (155) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (181) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (182) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (64) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (65) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (66) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (67) expresionLista -> . CIZQ expListString CDER
    (68) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (69) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (70) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (71) expresionLista -> . CIZQ expListInt CDER
    (72) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (73) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (74) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (75) expresionLista -> . CIZQ expListNum CDER
    (76) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (77) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (78) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (79) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (80) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (81) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (82) expresionLista -> . CIZQ expListBool CDER
    (83) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (84) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (85) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (86) expresionLista -> . CIZQ expListDynamic CDER
    (61) expresionNewList -> . NEWLIST PIZQ PDER
    (62) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (63) expresionNewList -> . CIZQ CDER
    (57) expresionSet -> . SET VARIABLE
    (58) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (59) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (60) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (114) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valorInt -> . ENTERO
    (184) valorInt -> . VARIABLE
    (187) valorDouble -> . DOUBLE
    (188) valorDouble -> . valorInt
    (173) valorString -> . STRING
    (174) valorString -> . VARIABLE
    (175) valorString -> . FUNCIONSTDIN
    (176) valorString -> . expresionIndexString
    (177) valorString -> . sentenciaSubstring
    (159) valorBool -> . BOOL
    (160) valorBool -> . VARIABLE
    (126) valor -> . ENTERO
    (127) valor -> . VARIABLE
    (128) valor -> . DOUBLE
    (129) valor -> . STRING
    (180) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 24
    DOUBLER         shift and go to state 25
    NUM             shift and go to state 26
    STRINGR         shift and go to state 27
    BOOLR           shift and go to state 28
    DYNAMIC         shift and go to state 29
    VAR             shift and go to state 30
    WHILE           shift and go to state 37
    DO              shift and go to state 38
    IF              shift and go to state 39
    ELSE            shift and go to state 40
    PRINT           shift and go to state 41
    FUNCIONSTDIN    shift and go to state 42
    FUNCIONSTDOUT   shift and go to state 43
    NOT             shift and go to state 44
    ELSEIF          shift and go to state 45
    FOR             shift and go to state 46
    LIST            shift and go to state 48
    CIZQ            shift and go to state 49
    NEWLIST         shift and go to state 50
    SET             shift and go to state 51
    SETFROM         shift and go to state 52
    ENTERO          shift and go to state 47
    DOUBLE          shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 434
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    asignacionSimple               shift and go to state 31
    valorInt                       shift and go to state 32
    valorDouble                    shift and go to state 33
    valorString                    shift and go to state 34
    valorBool                      shift and go to state 35
    valor                          shift and go to state 36
    expresionIndexString           shift and go to state 55

state 432

    (155) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .

    PUNTOYCOMA      reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    VARIABLE        reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    INT             reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DOUBLER         reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NUM             reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    STRINGR         reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BOOLR           reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DYNAMIC         reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    VAR             reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    WHILE           reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DO              reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    IF              reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ELSE            reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    PRINT           reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FUNCIONSTDIN    reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FUNCIONSTDOUT   reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NOT             reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ELSEIF          reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FOR             reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LIST            reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    CIZQ            reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NEWLIST         reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    SET             reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    SETFROM         reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ENTERO          reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DOUBLE          reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    STRING          reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BOOL            reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    $end            reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LDER            reduce using rule 155 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)


state 433

    (152) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final . LDER

    LDER            shift and go to state 435


state 434

    (154) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final . LDER

    LDER            shift and go to state 436


state 435

    (152) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    INT             reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NUM             reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    STRINGR         reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BOOLR           reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    VAR             reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    WHILE           reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DO              reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    IF              reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ELSE            reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    PRINT           reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NOT             reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FOR             reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LIST            reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    CIZQ            reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    SET             reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    SETFROM         reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ENTERO          reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    STRING          reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BOOL            reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    $end            reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LDER            reduce using rule 152 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)


state 436

    (154) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    INT             reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NUM             reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    STRINGR         reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BOOLR           reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    VAR             reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    WHILE           reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DO              reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    IF              reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ELSE            reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    PRINT           reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NOT             reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FOR             reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LIST            reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    CIZQ            reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    SET             reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    SETFROM         reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ENTERO          reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    STRING          reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BOOL            reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    $end            reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LDER            reduce using rule 154 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 8 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 8 resolved as shift
WARNING: shift/reduce conflict for INT in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 8 resolved as shift
WARNING: shift/reduce conflict for NUM in state 8 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 8 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 8 resolved as shift
WARNING: shift/reduce conflict for VAR in state 8 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 8 resolved as shift
WARNING: shift/reduce conflict for DO in state 8 resolved as shift
WARNING: shift/reduce conflict for IF in state 8 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 8 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 8 resolved as shift
WARNING: shift/reduce conflict for NOT in state 8 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 8 resolved as shift
WARNING: shift/reduce conflict for FOR in state 8 resolved as shift
WARNING: shift/reduce conflict for LIST in state 8 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 8 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 8 resolved as shift
WARNING: shift/reduce conflict for SET in state 8 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 8 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 8 resolved as shift
WARNING: shift/reduce conflict for STRING in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 8 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 10 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 10 resolved as shift
WARNING: shift/reduce conflict for INT in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 10 resolved as shift
WARNING: shift/reduce conflict for NUM in state 10 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 10 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 10 resolved as shift
WARNING: shift/reduce conflict for VAR in state 10 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 10 resolved as shift
WARNING: shift/reduce conflict for DO in state 10 resolved as shift
WARNING: shift/reduce conflict for IF in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 10 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 10 resolved as shift
WARNING: shift/reduce conflict for NOT in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 10 resolved as shift
WARNING: shift/reduce conflict for FOR in state 10 resolved as shift
WARNING: shift/reduce conflict for LIST in state 10 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 10 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 10 resolved as shift
WARNING: shift/reduce conflict for SET in state 10 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 10 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 10 resolved as shift
WARNING: shift/reduce conflict for STRING in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 10 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 11 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 11 resolved as shift
WARNING: shift/reduce conflict for INT in state 11 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 11 resolved as shift
WARNING: shift/reduce conflict for NUM in state 11 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 11 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 11 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 11 resolved as shift
WARNING: shift/reduce conflict for VAR in state 11 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 11 resolved as shift
WARNING: shift/reduce conflict for DO in state 11 resolved as shift
WARNING: shift/reduce conflict for IF in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 11 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 11 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 11 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 11 resolved as shift
WARNING: shift/reduce conflict for NOT in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 11 resolved as shift
WARNING: shift/reduce conflict for FOR in state 11 resolved as shift
WARNING: shift/reduce conflict for LIST in state 11 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 11 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 11 resolved as shift
WARNING: shift/reduce conflict for SET in state 11 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 11 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 11 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 11 resolved as shift
WARNING: shift/reduce conflict for STRING in state 11 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 11 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 17 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 17 resolved as shift
WARNING: shift/reduce conflict for INT in state 17 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 17 resolved as shift
WARNING: shift/reduce conflict for NUM in state 17 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 17 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 17 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 17 resolved as shift
WARNING: shift/reduce conflict for VAR in state 17 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 17 resolved as shift
WARNING: shift/reduce conflict for DO in state 17 resolved as shift
WARNING: shift/reduce conflict for IF in state 17 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 17 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 17 resolved as shift
WARNING: shift/reduce conflict for NOT in state 17 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 17 resolved as shift
WARNING: shift/reduce conflict for FOR in state 17 resolved as shift
WARNING: shift/reduce conflict for LIST in state 17 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 17 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 17 resolved as shift
WARNING: shift/reduce conflict for SET in state 17 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 17 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 17 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 17 resolved as shift
WARNING: shift/reduce conflict for STRING in state 17 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 17 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 18 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 18 resolved as shift
WARNING: shift/reduce conflict for INT in state 18 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 18 resolved as shift
WARNING: shift/reduce conflict for NUM in state 18 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 18 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 18 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 18 resolved as shift
WARNING: shift/reduce conflict for VAR in state 18 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 18 resolved as shift
WARNING: shift/reduce conflict for DO in state 18 resolved as shift
WARNING: shift/reduce conflict for IF in state 18 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 18 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 18 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 18 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 18 resolved as shift
WARNING: shift/reduce conflict for NOT in state 18 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 18 resolved as shift
WARNING: shift/reduce conflict for FOR in state 18 resolved as shift
WARNING: shift/reduce conflict for LIST in state 18 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 18 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 18 resolved as shift
WARNING: shift/reduce conflict for SET in state 18 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 18 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 18 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 18 resolved as shift
WARNING: shift/reduce conflict for STRING in state 18 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 18 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 19 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 32 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 32 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 32 resolved as shift
WARNING: shift/reduce conflict for DIV in state 32 resolved as shift
WARNING: shift/reduce conflict for DIVENTERO in state 32 resolved as shift
WARNING: shift/reduce conflict for MOD in state 32 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 57 resolved as shift
WARNING: shift/reduce conflict for INT in state 57 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 57 resolved as shift
WARNING: shift/reduce conflict for NUM in state 57 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 57 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 57 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 57 resolved as shift
WARNING: shift/reduce conflict for VAR in state 57 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 57 resolved as shift
WARNING: shift/reduce conflict for DO in state 57 resolved as shift
WARNING: shift/reduce conflict for IF in state 57 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 57 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 57 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 57 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 57 resolved as shift
WARNING: shift/reduce conflict for NOT in state 57 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 57 resolved as shift
WARNING: shift/reduce conflict for FOR in state 57 resolved as shift
WARNING: shift/reduce conflict for LIST in state 57 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 57 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 57 resolved as shift
WARNING: shift/reduce conflict for SET in state 57 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 57 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 57 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 57 resolved as shift
WARNING: shift/reduce conflict for STRING in state 57 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 57 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 58 resolved as shift
WARNING: shift/reduce conflict for INT in state 58 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 58 resolved as shift
WARNING: shift/reduce conflict for NUM in state 58 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 58 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 58 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 58 resolved as shift
WARNING: shift/reduce conflict for VAR in state 58 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 58 resolved as shift
WARNING: shift/reduce conflict for DO in state 58 resolved as shift
WARNING: shift/reduce conflict for IF in state 58 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 58 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 58 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 58 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 58 resolved as shift
WARNING: shift/reduce conflict for NOT in state 58 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 58 resolved as shift
WARNING: shift/reduce conflict for FOR in state 58 resolved as shift
WARNING: shift/reduce conflict for LIST in state 58 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 58 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 58 resolved as shift
WARNING: shift/reduce conflict for SET in state 58 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 58 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 58 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 58 resolved as shift
WARNING: shift/reduce conflict for STRING in state 58 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 58 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 59 resolved as shift
WARNING: shift/reduce conflict for INT in state 59 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 59 resolved as shift
WARNING: shift/reduce conflict for NUM in state 59 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 59 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 59 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 59 resolved as shift
WARNING: shift/reduce conflict for VAR in state 59 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 59 resolved as shift
WARNING: shift/reduce conflict for DO in state 59 resolved as shift
WARNING: shift/reduce conflict for IF in state 59 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 59 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 59 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 59 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 59 resolved as shift
WARNING: shift/reduce conflict for NOT in state 59 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 59 resolved as shift
WARNING: shift/reduce conflict for FOR in state 59 resolved as shift
WARNING: shift/reduce conflict for LIST in state 59 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 59 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 59 resolved as shift
WARNING: shift/reduce conflict for SET in state 59 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 59 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 59 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 59 resolved as shift
WARNING: shift/reduce conflict for STRING in state 59 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 59 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 60 resolved as shift
WARNING: shift/reduce conflict for INT in state 60 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 60 resolved as shift
WARNING: shift/reduce conflict for NUM in state 60 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 60 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 60 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 60 resolved as shift
WARNING: shift/reduce conflict for VAR in state 60 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 60 resolved as shift
WARNING: shift/reduce conflict for DO in state 60 resolved as shift
WARNING: shift/reduce conflict for IF in state 60 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 60 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 60 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 60 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 60 resolved as shift
WARNING: shift/reduce conflict for NOT in state 60 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 60 resolved as shift
WARNING: shift/reduce conflict for FOR in state 60 resolved as shift
WARNING: shift/reduce conflict for LIST in state 60 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 60 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 60 resolved as shift
WARNING: shift/reduce conflict for SET in state 60 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 60 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 60 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 60 resolved as shift
WARNING: shift/reduce conflict for STRING in state 60 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 60 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 61 resolved as shift
WARNING: shift/reduce conflict for INT in state 61 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 61 resolved as shift
WARNING: shift/reduce conflict for NUM in state 61 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 61 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 61 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 61 resolved as shift
WARNING: shift/reduce conflict for VAR in state 61 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 61 resolved as shift
WARNING: shift/reduce conflict for DO in state 61 resolved as shift
WARNING: shift/reduce conflict for IF in state 61 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 61 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 61 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 61 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 61 resolved as shift
WARNING: shift/reduce conflict for NOT in state 61 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 61 resolved as shift
WARNING: shift/reduce conflict for FOR in state 61 resolved as shift
WARNING: shift/reduce conflict for LIST in state 61 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 61 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 61 resolved as shift
WARNING: shift/reduce conflict for SET in state 61 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 61 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 61 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 61 resolved as shift
WARNING: shift/reduce conflict for STRING in state 61 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 61 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 65 resolved as shift
WARNING: shift/reduce conflict for INT in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 65 resolved as shift
WARNING: shift/reduce conflict for NUM in state 65 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 65 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 65 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 65 resolved as shift
WARNING: shift/reduce conflict for VAR in state 65 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 65 resolved as shift
WARNING: shift/reduce conflict for DO in state 65 resolved as shift
WARNING: shift/reduce conflict for IF in state 65 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 65 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 65 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 65 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 65 resolved as shift
WARNING: shift/reduce conflict for NOT in state 65 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 65 resolved as shift
WARNING: shift/reduce conflict for FOR in state 65 resolved as shift
WARNING: shift/reduce conflict for LIST in state 65 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 65 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 65 resolved as shift
WARNING: shift/reduce conflict for SET in state 65 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 65 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 65 resolved as shift
WARNING: shift/reduce conflict for STRING in state 65 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 65 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 67 resolved as shift
WARNING: shift/reduce conflict for INT in state 67 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 67 resolved as shift
WARNING: shift/reduce conflict for NUM in state 67 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 67 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 67 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 67 resolved as shift
WARNING: shift/reduce conflict for VAR in state 67 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 67 resolved as shift
WARNING: shift/reduce conflict for DO in state 67 resolved as shift
WARNING: shift/reduce conflict for IF in state 67 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 67 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 67 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 67 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 67 resolved as shift
WARNING: shift/reduce conflict for NOT in state 67 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 67 resolved as shift
WARNING: shift/reduce conflict for FOR in state 67 resolved as shift
WARNING: shift/reduce conflict for LIST in state 67 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 67 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 67 resolved as shift
WARNING: shift/reduce conflict for SET in state 67 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 67 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 67 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 67 resolved as shift
WARNING: shift/reduce conflict for STRING in state 67 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 67 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 68 resolved as shift
WARNING: shift/reduce conflict for INT in state 68 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 68 resolved as shift
WARNING: shift/reduce conflict for NUM in state 68 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 68 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 68 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 68 resolved as shift
WARNING: shift/reduce conflict for VAR in state 68 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 68 resolved as shift
WARNING: shift/reduce conflict for DO in state 68 resolved as shift
WARNING: shift/reduce conflict for IF in state 68 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 68 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 68 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 68 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 68 resolved as shift
WARNING: shift/reduce conflict for NOT in state 68 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 68 resolved as shift
WARNING: shift/reduce conflict for FOR in state 68 resolved as shift
WARNING: shift/reduce conflict for LIST in state 68 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 68 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 68 resolved as shift
WARNING: shift/reduce conflict for SET in state 68 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 68 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 68 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 68 resolved as shift
WARNING: shift/reduce conflict for STRING in state 68 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 68 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 69 resolved as shift
WARNING: shift/reduce conflict for INT in state 69 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 69 resolved as shift
WARNING: shift/reduce conflict for NUM in state 69 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 69 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 69 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 69 resolved as shift
WARNING: shift/reduce conflict for VAR in state 69 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 69 resolved as shift
WARNING: shift/reduce conflict for DO in state 69 resolved as shift
WARNING: shift/reduce conflict for IF in state 69 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 69 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 69 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 69 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 69 resolved as shift
WARNING: shift/reduce conflict for NOT in state 69 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 69 resolved as shift
WARNING: shift/reduce conflict for FOR in state 69 resolved as shift
WARNING: shift/reduce conflict for LIST in state 69 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 69 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 69 resolved as shift
WARNING: shift/reduce conflict for SET in state 69 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 69 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 69 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 69 resolved as shift
WARNING: shift/reduce conflict for STRING in state 69 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 69 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 71 resolved as shift
WARNING: shift/reduce conflict for INT in state 71 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 71 resolved as shift
WARNING: shift/reduce conflict for NUM in state 71 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 71 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 71 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 71 resolved as shift
WARNING: shift/reduce conflict for VAR in state 71 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 71 resolved as shift
WARNING: shift/reduce conflict for DO in state 71 resolved as shift
WARNING: shift/reduce conflict for IF in state 71 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 71 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 71 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 71 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 71 resolved as shift
WARNING: shift/reduce conflict for NOT in state 71 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 71 resolved as shift
WARNING: shift/reduce conflict for FOR in state 71 resolved as shift
WARNING: shift/reduce conflict for LIST in state 71 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 71 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 71 resolved as shift
WARNING: shift/reduce conflict for SET in state 71 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 71 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 71 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 71 resolved as shift
WARNING: shift/reduce conflict for STRING in state 71 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 71 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 73 resolved as shift
WARNING: shift/reduce conflict for INT in state 73 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 73 resolved as shift
WARNING: shift/reduce conflict for NUM in state 73 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 73 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 73 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 73 resolved as shift
WARNING: shift/reduce conflict for VAR in state 73 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 73 resolved as shift
WARNING: shift/reduce conflict for DO in state 73 resolved as shift
WARNING: shift/reduce conflict for IF in state 73 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 73 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 73 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 73 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 73 resolved as shift
WARNING: shift/reduce conflict for NOT in state 73 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 73 resolved as shift
WARNING: shift/reduce conflict for FOR in state 73 resolved as shift
WARNING: shift/reduce conflict for LIST in state 73 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 73 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 73 resolved as shift
WARNING: shift/reduce conflict for SET in state 73 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 73 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 73 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 73 resolved as shift
WARNING: shift/reduce conflict for STRING in state 73 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 73 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 74 resolved as shift
WARNING: shift/reduce conflict for INT in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 74 resolved as shift
WARNING: shift/reduce conflict for NUM in state 74 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 74 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 74 resolved as shift
WARNING: shift/reduce conflict for VAR in state 74 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 74 resolved as shift
WARNING: shift/reduce conflict for DO in state 74 resolved as shift
WARNING: shift/reduce conflict for IF in state 74 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 74 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 74 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 74 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 74 resolved as shift
WARNING: shift/reduce conflict for NOT in state 74 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 74 resolved as shift
WARNING: shift/reduce conflict for FOR in state 74 resolved as shift
WARNING: shift/reduce conflict for LIST in state 74 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 74 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 74 resolved as shift
WARNING: shift/reduce conflict for SET in state 74 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 74 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 74 resolved as shift
WARNING: shift/reduce conflict for STRING in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 74 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 75 resolved as shift
WARNING: shift/reduce conflict for INT in state 75 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 75 resolved as shift
WARNING: shift/reduce conflict for NUM in state 75 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 75 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 75 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 75 resolved as shift
WARNING: shift/reduce conflict for VAR in state 75 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 75 resolved as shift
WARNING: shift/reduce conflict for DO in state 75 resolved as shift
WARNING: shift/reduce conflict for IF in state 75 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 75 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 75 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 75 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 75 resolved as shift
WARNING: shift/reduce conflict for NOT in state 75 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 75 resolved as shift
WARNING: shift/reduce conflict for FOR in state 75 resolved as shift
WARNING: shift/reduce conflict for LIST in state 75 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 75 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 75 resolved as shift
WARNING: shift/reduce conflict for SET in state 75 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 75 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 75 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 75 resolved as shift
WARNING: shift/reduce conflict for STRING in state 75 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 75 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 76 resolved as shift
WARNING: shift/reduce conflict for INT in state 76 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 76 resolved as shift
WARNING: shift/reduce conflict for NUM in state 76 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 76 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 76 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 76 resolved as shift
WARNING: shift/reduce conflict for VAR in state 76 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 76 resolved as shift
WARNING: shift/reduce conflict for DO in state 76 resolved as shift
WARNING: shift/reduce conflict for IF in state 76 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 76 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 76 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 76 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 76 resolved as shift
WARNING: shift/reduce conflict for NOT in state 76 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 76 resolved as shift
WARNING: shift/reduce conflict for FOR in state 76 resolved as shift
WARNING: shift/reduce conflict for LIST in state 76 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 76 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 76 resolved as shift
WARNING: shift/reduce conflict for SET in state 76 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 76 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 76 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 76 resolved as shift
WARNING: shift/reduce conflict for STRING in state 76 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 76 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 77 resolved as shift
WARNING: shift/reduce conflict for INT in state 77 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 77 resolved as shift
WARNING: shift/reduce conflict for NUM in state 77 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 77 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 77 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 77 resolved as shift
WARNING: shift/reduce conflict for VAR in state 77 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 77 resolved as shift
WARNING: shift/reduce conflict for DO in state 77 resolved as shift
WARNING: shift/reduce conflict for IF in state 77 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 77 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 77 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 77 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 77 resolved as shift
WARNING: shift/reduce conflict for NOT in state 77 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 77 resolved as shift
WARNING: shift/reduce conflict for FOR in state 77 resolved as shift
WARNING: shift/reduce conflict for LIST in state 77 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 77 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 77 resolved as shift
WARNING: shift/reduce conflict for SET in state 77 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 77 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 77 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 77 resolved as shift
WARNING: shift/reduce conflict for STRING in state 77 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 77 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 78 resolved as shift
WARNING: shift/reduce conflict for INT in state 78 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 78 resolved as shift
WARNING: shift/reduce conflict for NUM in state 78 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 78 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 78 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 78 resolved as shift
WARNING: shift/reduce conflict for VAR in state 78 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 78 resolved as shift
WARNING: shift/reduce conflict for DO in state 78 resolved as shift
WARNING: shift/reduce conflict for IF in state 78 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 78 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 78 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 78 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 78 resolved as shift
WARNING: shift/reduce conflict for NOT in state 78 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 78 resolved as shift
WARNING: shift/reduce conflict for FOR in state 78 resolved as shift
WARNING: shift/reduce conflict for LIST in state 78 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 78 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 78 resolved as shift
WARNING: shift/reduce conflict for SET in state 78 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 78 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 78 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 78 resolved as shift
WARNING: shift/reduce conflict for STRING in state 78 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 78 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 80 resolved as shift
WARNING: shift/reduce conflict for INT in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 80 resolved as shift
WARNING: shift/reduce conflict for NUM in state 80 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 80 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 80 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 80 resolved as shift
WARNING: shift/reduce conflict for VAR in state 80 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 80 resolved as shift
WARNING: shift/reduce conflict for DO in state 80 resolved as shift
WARNING: shift/reduce conflict for IF in state 80 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 80 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 80 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 80 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 80 resolved as shift
WARNING: shift/reduce conflict for NOT in state 80 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 80 resolved as shift
WARNING: shift/reduce conflict for FOR in state 80 resolved as shift
WARNING: shift/reduce conflict for LIST in state 80 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 80 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 80 resolved as shift
WARNING: shift/reduce conflict for SET in state 80 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 80 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 80 resolved as shift
WARNING: shift/reduce conflict for STRING in state 80 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 80 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 82 resolved as shift
WARNING: shift/reduce conflict for INT in state 82 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 82 resolved as shift
WARNING: shift/reduce conflict for NUM in state 82 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 82 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 82 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 82 resolved as shift
WARNING: shift/reduce conflict for VAR in state 82 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 82 resolved as shift
WARNING: shift/reduce conflict for DO in state 82 resolved as shift
WARNING: shift/reduce conflict for IF in state 82 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 82 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 82 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 82 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 82 resolved as shift
WARNING: shift/reduce conflict for NOT in state 82 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 82 resolved as shift
WARNING: shift/reduce conflict for FOR in state 82 resolved as shift
WARNING: shift/reduce conflict for LIST in state 82 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 82 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 82 resolved as shift
WARNING: shift/reduce conflict for SET in state 82 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 82 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 82 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 82 resolved as shift
WARNING: shift/reduce conflict for STRING in state 82 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 82 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 94 resolved as shift
WARNING: shift/reduce conflict for INT in state 94 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 94 resolved as shift
WARNING: shift/reduce conflict for NUM in state 94 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 94 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 94 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 94 resolved as shift
WARNING: shift/reduce conflict for VAR in state 94 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 94 resolved as shift
WARNING: shift/reduce conflict for DO in state 94 resolved as shift
WARNING: shift/reduce conflict for IF in state 94 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 94 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 94 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 94 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 94 resolved as shift
WARNING: shift/reduce conflict for NOT in state 94 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 94 resolved as shift
WARNING: shift/reduce conflict for FOR in state 94 resolved as shift
WARNING: shift/reduce conflict for LIST in state 94 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 94 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 94 resolved as shift
WARNING: shift/reduce conflict for SET in state 94 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 94 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 94 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 94 resolved as shift
WARNING: shift/reduce conflict for STRING in state 94 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 94 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 95 resolved as shift
WARNING: shift/reduce conflict for INT in state 95 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 95 resolved as shift
WARNING: shift/reduce conflict for NUM in state 95 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 95 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 95 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 95 resolved as shift
WARNING: shift/reduce conflict for VAR in state 95 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 95 resolved as shift
WARNING: shift/reduce conflict for DO in state 95 resolved as shift
WARNING: shift/reduce conflict for IF in state 95 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 95 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 95 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 95 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 95 resolved as shift
WARNING: shift/reduce conflict for NOT in state 95 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 95 resolved as shift
WARNING: shift/reduce conflict for FOR in state 95 resolved as shift
WARNING: shift/reduce conflict for LIST in state 95 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 95 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 95 resolved as shift
WARNING: shift/reduce conflict for SET in state 95 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 95 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 95 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 95 resolved as shift
WARNING: shift/reduce conflict for STRING in state 95 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 95 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 96 resolved as shift
WARNING: shift/reduce conflict for INT in state 96 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 96 resolved as shift
WARNING: shift/reduce conflict for NUM in state 96 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 96 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 96 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 96 resolved as shift
WARNING: shift/reduce conflict for VAR in state 96 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 96 resolved as shift
WARNING: shift/reduce conflict for DO in state 96 resolved as shift
WARNING: shift/reduce conflict for IF in state 96 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 96 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 96 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 96 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 96 resolved as shift
WARNING: shift/reduce conflict for NOT in state 96 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 96 resolved as shift
WARNING: shift/reduce conflict for FOR in state 96 resolved as shift
WARNING: shift/reduce conflict for LIST in state 96 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 96 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 96 resolved as shift
WARNING: shift/reduce conflict for SET in state 96 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 96 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 96 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 96 resolved as shift
WARNING: shift/reduce conflict for STRING in state 96 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 96 resolved as shift
WARNING: shift/reduce conflict for AND in state 146 resolved as shift
WARNING: shift/reduce conflict for OR in state 146 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 149 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 149 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 149 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 149 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 149 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 149 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 168 resolved as shift
WARNING: shift/reduce conflict for INT in state 168 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 168 resolved as shift
WARNING: shift/reduce conflict for NUM in state 168 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 168 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 168 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 168 resolved as shift
WARNING: shift/reduce conflict for VAR in state 168 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 168 resolved as shift
WARNING: shift/reduce conflict for DO in state 168 resolved as shift
WARNING: shift/reduce conflict for IF in state 168 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 168 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 168 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 168 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 168 resolved as shift
WARNING: shift/reduce conflict for NOT in state 168 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 168 resolved as shift
WARNING: shift/reduce conflict for FOR in state 168 resolved as shift
WARNING: shift/reduce conflict for LIST in state 168 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 168 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 168 resolved as shift
WARNING: shift/reduce conflict for SET in state 168 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 168 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 168 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 168 resolved as shift
WARNING: shift/reduce conflict for STRING in state 168 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 168 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 169 resolved as shift
WARNING: shift/reduce conflict for INT in state 169 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 169 resolved as shift
WARNING: shift/reduce conflict for NUM in state 169 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 169 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 169 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 169 resolved as shift
WARNING: shift/reduce conflict for VAR in state 169 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 169 resolved as shift
WARNING: shift/reduce conflict for DO in state 169 resolved as shift
WARNING: shift/reduce conflict for IF in state 169 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 169 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 169 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 169 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 169 resolved as shift
WARNING: shift/reduce conflict for NOT in state 169 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 169 resolved as shift
WARNING: shift/reduce conflict for FOR in state 169 resolved as shift
WARNING: shift/reduce conflict for LIST in state 169 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 169 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 169 resolved as shift
WARNING: shift/reduce conflict for SET in state 169 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 169 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 169 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 169 resolved as shift
WARNING: shift/reduce conflict for STRING in state 169 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 169 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 176 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 176 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 176 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 176 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 176 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 176 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 227 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 227 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 227 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 227 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 227 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 227 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 327 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 327 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 327 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 327 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 327 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 327 resolved as shift
WARNING: reduce/reduce conflict in state 20 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 32 resolved using rule (expresionInt -> valorInt)
WARNING: rejected rule (valorDouble -> valorInt) in state 32
WARNING: reduce/reduce conflict in state 35 resolved using rule (expresionBoolFor -> valorBool)
WARNING: rejected rule (expresionBool -> valorBool) in state 35
WARNING: reduce/reduce conflict in state 42 resolved using rule (funcionStdin -> FUNCIONSTDIN)
WARNING: rejected rule (valorString -> FUNCIONSTDIN) in state 42
WARNING: reduce/reduce conflict in state 134 resolved using rule (expListString -> STRING)
WARNING: rejected rule (expListDynamic -> STRING) in state 134
WARNING: reduce/reduce conflict in state 135 resolved using rule (expListInt -> ENTERO)
WARNING: rejected rule (expListNum -> ENTERO) in state 135
WARNING: reduce/reduce conflict in state 135 resolved using rule (expListInt -> ENTERO)
WARNING: rejected rule (expListDynamic -> ENTERO) in state 135
WARNING: reduce/reduce conflict in state 136 resolved using rule (expListNum -> DOUBLE)
WARNING: rejected rule (expListDynamic -> DOUBLE) in state 136
WARNING: reduce/reduce conflict in state 137 resolved using rule (expListBool -> BOOL)
WARNING: rejected rule (expListDynamic -> BOOL) in state 137
WARNING: reduce/reduce conflict in state 147 resolved using rule (expresionBool -> comparacionBool)
WARNING: rejected rule (comparacionBool -> expresionBool operadorLogico comparacionBool) in state 147
WARNING: reduce/reduce conflict in state 153 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 153
WARNING: reduce/reduce conflict in state 170 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (expresionBool -> VARIABLE comparadorMat VARIABLE) in state 170
WARNING: reduce/reduce conflict in state 170 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 170
WARNING: reduce/reduce conflict in state 170 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 170
WARNING: reduce/reduce conflict in state 171 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat expresionDouble)
WARNING: rejected rule (expresionBool -> VARIABLE comparadorMat expresionDouble) in state 171
WARNING: reduce/reduce conflict in state 176 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 176
WARNING: reduce/reduce conflict in state 176 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 176
WARNING: reduce/reduce conflict in state 176 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 176
WARNING: reduce/reduce conflict in state 183 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 183
WARNING: reduce/reduce conflict in state 184 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 184
WARNING: reduce/reduce conflict in state 203 resolved using rule (expresionBoolFor -> valorDouble comparadorMat expresionDouble)
WARNING: rejected rule (expresionBool -> valorDouble comparadorMat expresionDouble) in state 203
WARNING: reduce/reduce conflict in state 204 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (expresionBool -> valorDouble comparadorMat VARIABLE) in state 204
WARNING: reduce/reduce conflict in state 204 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 204
WARNING: reduce/reduce conflict in state 204 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 204
WARNING: reduce/reduce conflict in state 227 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 227
WARNING: reduce/reduce conflict in state 227 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 227
WARNING: reduce/reduce conflict in state 227 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 227
WARNING: reduce/reduce conflict in state 306 resolved using rule (expListNum -> ENTERO)
WARNING: rejected rule (expListDynamic -> ENTERO) in state 306
WARNING: reduce/reduce conflict in state 313 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 313
WARNING: reduce/reduce conflict in state 314 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 314
WARNING: reduce/reduce conflict in state 381 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 381
WARNING: reduce/reduce conflict in state 381 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 381
WARNING: reduce/reduce conflict in state 384 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 384
WARNING: reduce/reduce conflict in state 384 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 384
WARNING: Rule (comparacionBool -> expresionBool operadorLogico comparacionBool) is never reduced
