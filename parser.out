Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    BREAK
    CASE
    COMILLAD
    COMILLAS
    FLECHA
    FUNCIONARR
    RETURN

Grammar

Rule 0     S' -> final
Rule 1     final -> asignacion PUNTOYCOMA
Rule 2     final -> asignacion PUNTOYCOMA final
Rule 3     final -> expresionInt PUNTOYCOMA
Rule 4     final -> expresionInt PUNTOYCOMA final
Rule 5     final -> expresionDouble PUNTOYCOMA
Rule 6     final -> expresionDouble PUNTOYCOMA final
Rule 7     final -> expresionString PUNTOYCOMA
Rule 8     final -> expresionString PUNTOYCOMA final
Rule 9     final -> expresionBool PUNTOYCOMA
Rule 10    final -> expresionBool PUNTOYCOMA final
Rule 11    final -> expresionBoolFor PUNTOYCOMA
Rule 12    final -> expresionBoolFor PUNTOYCOMA final
Rule 13    final -> sentenciaWhile
Rule 14    final -> sentenciaWhile final
Rule 15    final -> sentenciaWhile PUNTOYCOMA
Rule 16    final -> sentenciaWhile PUNTOYCOMA final
Rule 17    final -> sentenciaDoWhile PUNTOYCOMA
Rule 18    final -> sentenciaDoWhile PUNTOYCOMA final
Rule 19    final -> sentenciaIf PUNTOYCOMA
Rule 20    final -> sentenciaIf PUNTOYCOMA final
Rule 21    final -> sentenciaIf
Rule 22    final -> sentenciaIf final
Rule 23    final -> sentenciaElse PUNTOYCOMA
Rule 24    final -> sentenciaElse PUNTOYCOMA final
Rule 25    final -> sentenciaElse
Rule 26    final -> sentenciaElse final
Rule 27    final -> imprimir PUNTOYCOMA
Rule 28    final -> imprimir PUNTOYCOMA final
Rule 29    final -> funcionStdin PUNTOYCOMA
Rule 30    final -> funcionStdin PUNTOYCOMA final
Rule 31    final -> funcionStdout PUNTOYCOMA
Rule 32    final -> funcionStdout PUNTOYCOMA final
Rule 33    final -> negacionBool PUNTOYCOMA
Rule 34    final -> negacionBool PUNTOYCOMA final
Rule 35    final -> comparacionBool PUNTOYCOMA final
Rule 36    final -> comparacionBool PUNTOYCOMA
Rule 37    final -> sentenciaElseIf PUNTOYCOMA final
Rule 38    final -> sentenciaElseIf final
Rule 39    final -> sentenciaElseIf PUNTOYCOMA
Rule 40    final -> sentenciaElseIf
Rule 41    final -> sentenciaFor PUNTOYCOMA final
Rule 42    final -> sentenciaFor PUNTOYCOMA
Rule 43    final -> sentenciaFor final
Rule 44    final -> sentenciaFor
Rule 45    final -> sentenciaSubstring PUNTOYCOMA final
Rule 46    final -> sentenciaSubstring PUNTOYCOMA
Rule 47    final -> VARIABLE DSUMA PUNTOYCOMA final
Rule 48    final -> VARIABLE DSUMA PUNTOYCOMA
Rule 49    final -> VARIABLE DRESTA PUNTOYCOMA final
Rule 50    final -> VARIABLE DRESTA PUNTOYCOMA
Rule 51    final -> expresionLista PUNTOYCOMA
Rule 52    final -> expresionLista PUNTOYCOMA final
Rule 53    final -> expresionNewList PUNTOYCOMA
Rule 54    final -> expresionNewList PUNTOYCOMA final
Rule 55    final -> expresionSet PUNTOYCOMA
Rule 56    final -> expresionSet PUNTOYCOMA final
Rule 57    final -> expresionMap PUNTOYCOMA
Rule 58    final -> expresionMap PUNTOYCOMA final
Rule 59    final -> expresionSwitch
Rule 60    expresionSwitch -> SWITCH PIZQ expresionBool PDER
Rule 61    expresionMap -> MAP VARIABLE
Rule 62    expresionMap -> MAP VARIABLE IGUAL LIZQ LDER
Rule 63    expresionMap -> LIZQ LDER
Rule 64    expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER
Rule 65    expresionMap -> LIZQ expMap LDER
Rule 66    expMap -> claveValor DOSPUNTOS claveValor
Rule 67    expMap -> claveValor DOSPUNTOS claveValor COMA expMap
Rule 68    claveValor -> VARIABLE
Rule 69    claveValor -> STRING
Rule 70    claveValor -> ENTERO
Rule 71    claveValor -> DOUBLE
Rule 72    claveValor -> BOOL
Rule 73    claveValor -> CIZQ expListDynamic CDER
Rule 74    claveValor -> CIZQ expListSet CDER
Rule 75    claveValor -> expresionNewList
Rule 76    claveValor -> SETFROM PIZQ CIZQ CDER PDER
Rule 77    claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 78    claveValor -> LIZQ LDER
Rule 79    claveValor -> LIZQ expMap LDER
Rule 80    expresionSet -> SET VARIABLE
Rule 81    expresionSet -> SETFROM PIZQ CIZQ CDER PDER
Rule 82    expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
Rule 83    expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 84    expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 85    expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
Rule 86    expresionNewList -> NEWLIST PIZQ PDER
Rule 87    expresionNewList -> NEWLIST PIZQ ENTERO PDER
Rule 88    expresionNewList -> CIZQ CDER
Rule 89    expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE
Rule 90    expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
Rule 91    expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
Rule 92    expresionLista -> CIZQ expListString CDER
Rule 93    expresionLista -> LIST MENOR INT MAYOR VARIABLE
Rule 94    expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
Rule 95    expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
Rule 96    expresionLista -> CIZQ expListInt CDER
Rule 97    expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE
Rule 98    expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
Rule 99    expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
Rule 100   expresionLista -> CIZQ expListNum CDER
Rule 101   expresionLista -> LIST MENOR NUM MAYOR VARIABLE
Rule 102   expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
Rule 103   expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
Rule 104   expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE
Rule 105   expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
Rule 106   expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
Rule 107   expresionLista -> CIZQ expListBool CDER
Rule 108   expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE
Rule 109   expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
Rule 110   expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
Rule 111   expresionLista -> CIZQ expListDynamic CDER
Rule 112   expresionLista -> LIST MENOR SET MAYOR VARIABLE
Rule 113   expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
Rule 114   expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
Rule 115   expresionLista -> CIZQ expListSet CDER
Rule 116   expresionLista -> LIST MENOR MAP MAYOR VARIABLE
Rule 117   expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
Rule 118   expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
Rule 119   expresionLista -> CIZQ expListMap CDER
Rule 120   expresionLista -> VARIABLE CIZQ ENTERO CDER
Rule 121   expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
Rule 122   expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
Rule 123   expListString -> STRING
Rule 124   expListString -> STRING COMA expListString
Rule 125   expListString -> VARIABLE
Rule 126   expListString -> VARIABLE COMA expListString
Rule 127   expListInt -> ENTERO
Rule 128   expListInt -> ENTERO COMA expListInt
Rule 129   expListInt -> VARIABLE
Rule 130   expListInt -> VARIABLE COMA expListInt
Rule 131   expListNum -> ENTERO
Rule 132   expListNum -> DOUBLE
Rule 133   expListNum -> ENTERO COMA expListNum
Rule 134   expListNum -> DOUBLE COMA expListNum
Rule 135   expListNum -> VARIABLE
Rule 136   expListNum -> VARIABLE COMA expListNum
Rule 137   expListBool -> BOOL
Rule 138   expListBool -> BOOL COMA expListBool
Rule 139   expListBool -> VARIABLE
Rule 140   expListBool -> VARIABLE COMA expListBool
Rule 141   expListDynamic -> STRING
Rule 142   expListDynamic -> ENTERO
Rule 143   expListDynamic -> DOUBLE
Rule 144   expListDynamic -> BOOL
Rule 145   expListDynamic -> STRING COMA expListDynamic
Rule 146   expListDynamic -> ENTERO COMA expListDynamic
Rule 147   expListDynamic -> DOUBLE COMA expListDynamic
Rule 148   expListDynamic -> BOOL COMA expListDynamic
Rule 149   expListDynamic -> VARIABLE
Rule 150   expListDynamic -> VARIABLE COMA expListDynamic
Rule 151   expListSet -> SETFROM PIZQ CIZQ CDER PDER
Rule 152   expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER
Rule 153   expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet
Rule 154   expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
Rule 155   expListSet -> VARIABLE
Rule 156   expListSet -> VARIABLE COMA expListSet
Rule 157   expListMap -> LIZQ LDER
Rule 158   expListMap -> LIZQ expMap LDER
Rule 159   expListMap -> LIZQ LDER COMA expListMap
Rule 160   expListMap -> LIZQ expMap LDER COMA expListMap
Rule 161   expListMap -> VARIABLE
Rule 162   expListMap -> VARIABLE COMA expListMap
Rule 163   asignacion -> INT VARIABLE IGUAL expresionInt
Rule 164   asignacion -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 165   asignacion -> NUM VARIABLE IGUAL expresionDouble
Rule 166   asignacion -> STRINGR VARIABLE IGUAL expresionString
Rule 167   asignacion -> BOOLR VARIABLE IGUAL expresionBool
Rule 168   asignacion -> DYNAMIC VARIABLE IGUAL expresion
Rule 169   asignacion -> VAR VARIABLE IGUAL expresion
Rule 170   asignacion -> asignacionSimple
Rule 171   asignacionSimple -> VARIABLE IGUAL expresion
Rule 172   imprimir -> PRINT PIZQ expresion PDER
Rule 173   imprimir -> PRINT PIZQ asignacionSimple PDER
Rule 174   funcionStdin -> FUNCIONSTDIN
Rule 175   funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER
Rule 176   funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER
Rule 177   sentenciaIf -> IF PIZQ expresionBool PDER final
Rule 178   sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER
Rule 179   sentenciaElse -> ELSE final
Rule 180   sentenciaElse -> ELSE LIZQ final LDER
Rule 181   sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final
Rule 182   sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER
Rule 183   valor -> ENTERO
Rule 184   valor -> VARIABLE
Rule 185   valor -> DOUBLE
Rule 186   valor -> STRING
Rule 187   expresion -> valor operadorMat expresion
Rule 188   expresion -> valor
Rule 189   expresion -> expresionString
Rule 190   expresion -> expresionInt
Rule 191   expresion -> expresionDouble
Rule 192   expresion -> expresionBool
Rule 193   asignacionFor -> INT VARIABLE IGUAL expresionInt
Rule 194   asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble
Rule 195   asignacionFor -> NUM VARIABLE IGUAL expresionDouble
Rule 196   asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt
Rule 197   asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble
Rule 198   asignacionFor -> VAR VARIABLE IGUAL expresionInt
Rule 199   asignacionFor -> VAR VARIABLE IGUAL expresionDouble
Rule 200   asignacionFor -> VARIABLE IGUAL expresionInt
Rule 201   asignacionFor -> VARIABLE IGUAL expresionDouble
Rule 202   expresionBoolFor -> valorDouble comparadorMat expresionDouble
Rule 203   expresionBoolFor -> VARIABLE comparadorMat expresionDouble
Rule 204   expresionBoolFor -> VARIABLE comparadorMat VARIABLE
Rule 205   expresionBoolFor -> valorDouble comparadorMat VARIABLE
Rule 206   expresionBoolFor -> valorBool
Rule 207   expresionBoolFor -> negacionBool
Rule 208   expresionBoolFor -> comparacionBool
Rule 209   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
Rule 210   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
Rule 211   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
Rule 212   sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
Rule 213   sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER
Rule 214   sentenciaWhile -> WHILE PIZQ expresionBool PDER final
Rule 215   sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER
Rule 216   valorBool -> BOOL
Rule 217   valorBool -> VARIABLE
Rule 218   expresionBool -> valorDouble comparadorMat expresionDouble
Rule 219   expresionBool -> VARIABLE comparadorMat expresionDouble
Rule 220   expresionBool -> VARIABLE comparadorMat VARIABLE
Rule 221   expresionBool -> valorDouble comparadorMat VARIABLE
Rule 222   expresionBool -> valorBool
Rule 223   expresionBool -> negacionBool
Rule 224   expresionBool -> comparacionBool
Rule 225   expresionBool -> valor IS objeto
Rule 226   expresionBool -> valor ISNEGADO objeto
Rule 227   negacionBool -> NOT PIZQ expresionBool PDER
Rule 228   comparacionBool -> expresionBool operadorLogico expresionBool
Rule 229   comparacionBool -> expresionBool operadorLogico comparacionBool
Rule 230   valorString -> STRING
Rule 231   valorString -> VARIABLE
Rule 232   valorString -> FUNCIONSTDIN
Rule 233   valorString -> expresionIndexString
Rule 234   valorString -> sentenciaSubstring
Rule 235   valorString -> STRING CIZQ ENTERO CDER
Rule 236   expresionString -> valorString SUMA expresionString
Rule 237   expresionString -> valorString
Rule 238   expresionIndexString -> valorString CIZQ ENTERO CDER
Rule 239   sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
Rule 240   sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
Rule 241   valorInt -> ENTERO
Rule 242   valorInt -> VARIABLE
Rule 243   expresionInt -> valorInt operadorMat expresionInt
Rule 244   expresionInt -> valorInt
Rule 245   valorDouble -> DOUBLE
Rule 246   valorDouble -> valorInt
Rule 247   expresionDouble -> valorDouble operadorMat expresionDouble
Rule 248   expresionDouble -> valorDouble
Rule 249   operadorMat -> SUMA
Rule 250   operadorMat -> RESTA
Rule 251   operadorMat -> MULTI
Rule 252   operadorMat -> DIV
Rule 253   operadorMat -> DIVENTERO
Rule 254   operadorMat -> MOD
Rule 255   comparadorMat -> DIGUAL
Rule 256   comparadorMat -> NOIGUAL
Rule 257   comparadorMat -> MAYOR
Rule 258   comparadorMat -> MENOR
Rule 259   comparadorMat -> MAYIGUAL
Rule 260   comparadorMat -> MENIGUAL
Rule 261   operadorLogico -> AND
Rule 262   operadorLogico -> OR
Rule 263   objeto -> STRINGR
Rule 264   objeto -> INT
Rule 265   objeto -> DOUBLER
Rule 266   objeto -> NUM
Rule 267   objeto -> VAR
Rule 268   objeto -> DYNAMIC
Rule 269   objeto -> LIST
Rule 270   objeto -> BOOL
Rule 271   objeto -> MAP
Rule 272   objeto -> SET

Terminals, with rules where they appear

AND                  : 261
AS                   : 
BOOL                 : 72 137 138 144 148 216 270
BOOLR                : 104 105 106 167
BREAK                : 
CASE                 : 
CDER                 : 73 74 76 77 81 82 83 84 88 90 92 94 96 98 100 102 105 107 109 111 113 115 117 119 120 151 152 153 154 235 238
CIZQ                 : 73 74 76 77 81 82 83 84 88 90 92 94 96 98 100 102 105 107 109 111 113 115 117 119 120 151 152 153 154 235 238
COMA                 : 67 122 124 126 128 130 133 134 136 138 140 145 146 147 148 150 153 154 156 159 160 162 240
COMILLAD             : 
COMILLAS             : 
DIGUAL               : 255
DIV                  : 252
DIVENTERO            : 253
DO                   : 215
DOSPUNTOS            : 66 67
DOUBLE               : 71 132 134 143 147 185 245
DOUBLER              : 97 98 99 164 194 265
DRESTA               : 49 50 211 212
DSUMA                : 47 48 209 210
DYNAMIC              : 108 109 110 168 196 197 268
ELSE                 : 179 180
ELSEIF               : 181 182
ENTERO               : 70 85 87 120 121 122 122 127 128 131 133 142 146 183 235 238 239 240 240 241
FLECHA               : 
FOR                  : 209 210 211 212
FUNCIONARR           : 
FUNCIONRANGE         : 122
FUNCIONSTDIN         : 174 232
FUNCIONSTDOUT        : 175 176
FUNCIONSUBSTRING     : 239 240
FUNCIONTAKE          : 85 121
IF                   : 177 178
IGUAL                : 62 64 82 84 90 91 94 95 98 99 102 103 105 106 109 110 113 114 117 118 163 164 165 166 167 168 169 171 193 194 195 196 197 198 199 200 201
INT                  : 93 94 95 163 193 264
IS                   : 225
ISNEGADO             : 226
LDER                 : 62 63 64 65 78 79 157 158 159 160 178 180 182 209 211 213 215
LIST                 : 89 90 91 93 94 95 97 98 99 101 102 103 104 105 106 108 109 110 112 113 114 116 117 118 269
LIZQ                 : 62 63 64 65 78 79 157 158 159 160 178 180 182 209 211 213 215
MAP                  : 61 62 64 116 117 118 271
MAYIGUAL             : 259
MAYOR                : 89 90 91 93 94 95 97 98 99 101 102 103 104 105 106 108 109 110 112 113 114 116 117 118 257
MENIGUAL             : 260
MENOR                : 89 90 91 93 94 95 97 98 99 101 102 103 104 105 106 108 109 110 112 113 114 116 117 118 258
MOD                  : 254
MULTI                : 251
NEWLIST              : 86 87
NOIGUAL              : 256
NOT                  : 227
NUM                  : 101 102 103 165 195 266
OR                   : 262
PDER                 : 60 76 77 81 82 83 84 85 86 87 121 122 151 152 153 154 172 173 175 176 177 178 181 182 209 210 211 212 213 214 215 227 239 240
PIZQ                 : 60 76 77 81 82 83 84 85 86 87 121 122 151 152 153 154 172 173 175 176 177 178 181 182 209 210 211 212 213 214 215 227 239 240
PRINT                : 172 173
PUNTOYCOMA           : 1 2 3 4 5 6 7 8 9 10 11 12 15 16 17 18 19 20 23 24 27 28 29 30 31 32 33 34 35 36 37 39 41 42 45 46 47 48 49 50 51 52 53 54 55 56 57 58 209 209 210 210 211 211 212 212
RESTA                : 250
RETURN               : 
SET                  : 80 82 84 112 113 114 272
SETFROM              : 76 77 81 82 83 84 151 152 153 154
STRING               : 69 123 124 141 145 186 230 235
STRINGR              : 89 90 91 166 263
SUMA                 : 236 249
SWITCH               : 60
VAR                  : 169 198 199 267
VARIABLE             : 47 48 49 50 61 62 64 68 80 82 84 85 89 90 91 93 94 95 97 98 99 101 102 103 104 105 106 108 109 110 112 113 114 116 117 118 120 121 122 125 126 129 130 135 136 139 140 149 150 155 156 161 162 163 164 165 166 167 168 169 171 184 193 194 195 196 197 198 199 200 201 203 204 204 205 209 210 211 212 217 219 220 220 221 231 239 240 242
WHILE                : 213 214 215
error                : 

Nonterminals, with rules where they appear

asignacion           : 1 2
asignacionFor        : 209 210 211 212
asignacionSimple     : 170 173 176
claveValor           : 66 66 67 67
comparacionBool      : 35 36 208 224 229
comparadorMat        : 202 203 204 205 218 219 220 221
expListBool          : 105 107 138 140
expListDynamic       : 73 77 83 84 109 111 145 146 147 148 150 152 154
expListInt           : 94 96 128 130
expListMap           : 117 119 159 160 162
expListNum           : 98 100 102 133 134 136
expListSet           : 74 113 115 153 154 156
expListString        : 90 92 124 126
expMap               : 64 65 67 79 158 160
expresion            : 168 169 171 172 175 187
expresionBool        : 9 10 60 167 177 178 181 182 192 213 214 215 227 228 228 229
expresionBoolFor     : 11 12 209 210 211 212
expresionDouble      : 5 6 164 165 191 194 195 197 199 201 202 203 218 219 247
expresionIndexString : 233
expresionInt         : 3 4 163 190 193 196 198 200 243
expresionLista       : 51 52
expresionMap         : 57 58
expresionNewList     : 53 54 75 91 95 99 103 106 110 114 118
expresionSet         : 55 56
expresionString      : 7 8 166 189 236
expresionSwitch      : 59
final                : 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 35 37 38 41 43 45 47 49 52 54 56 58 177 178 179 180 181 182 209 210 211 212 213 214 215 0
funcionStdin         : 29 30
funcionStdout        : 31 32
imprimir             : 27 28
negacionBool         : 33 34 207 223
objeto               : 225 226
operadorLogico       : 228 229
operadorMat          : 187 243 247
sentenciaDoWhile     : 17 18
sentenciaElse        : 23 24 25 26
sentenciaElseIf      : 37 38 39 40
sentenciaFor         : 41 42 43 44
sentenciaIf          : 19 20 21 22
sentenciaSubstring   : 45 46 234
sentenciaWhile       : 13 14 15 16
valor                : 187 188 225 226
valorBool            : 206 222
valorDouble          : 202 205 218 221 247 248
valorInt             : 243 244 246
valorString          : 236 237 238

Parsing method: LALR

state 0

    (0) S' -> . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

    final                          shift and go to state 1
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 1

    (0) S' -> final .



state 2

    (1) final -> asignacion . PUNTOYCOMA
    (2) final -> asignacion . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 62


state 3

    (3) final -> expresionInt . PUNTOYCOMA
    (4) final -> expresionInt . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 63


state 4

    (5) final -> expresionDouble . PUNTOYCOMA
    (6) final -> expresionDouble . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 64


state 5

    (7) final -> expresionString . PUNTOYCOMA
    (8) final -> expresionString . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 65


state 6

    (9) final -> expresionBool . PUNTOYCOMA
    (10) final -> expresionBool . PUNTOYCOMA final
    (228) comparacionBool -> expresionBool . operadorLogico expresionBool
    (229) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (261) operadorLogico -> . AND
    (262) operadorLogico -> . OR

    PUNTOYCOMA      shift and go to state 66
    AND             shift and go to state 68
    OR              shift and go to state 69

    operadorLogico                 shift and go to state 67

state 7

    (11) final -> expresionBoolFor . PUNTOYCOMA
    (12) final -> expresionBoolFor . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 70


state 8

    (13) final -> sentenciaWhile .
    (14) final -> sentenciaWhile . final
    (15) final -> sentenciaWhile . PUNTOYCOMA
    (16) final -> sentenciaWhile . PUNTOYCOMA final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 13 (final -> sentenciaWhile .)
    LDER            reduce using rule 13 (final -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 72
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! PUNTOYCOMA      [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! VARIABLE        [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! INT             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DOUBLER         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NUM             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! STRINGR         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! BOOLR           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DYNAMIC         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! VAR             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! WHILE           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DO              [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! IF              [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ELSE            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! PRINT           [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDIN    [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NOT             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ELSEIF          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! FOR             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! LIST            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! CIZQ            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! NEWLIST         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! SET             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! SETFROM         [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! MAP             [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! LIZQ            [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! SWITCH          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! ENTERO          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! DOUBLE          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! STRING          [ reduce using rule 13 (final -> sentenciaWhile .) ]
  ! BOOL            [ reduce using rule 13 (final -> sentenciaWhile .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 71
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 9

    (17) final -> sentenciaDoWhile . PUNTOYCOMA
    (18) final -> sentenciaDoWhile . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 73


state 10

    (19) final -> sentenciaIf . PUNTOYCOMA
    (20) final -> sentenciaIf . PUNTOYCOMA final
    (21) final -> sentenciaIf .
    (22) final -> sentenciaIf . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 74
    $end            reduce using rule 21 (final -> sentenciaIf .)
    LDER            reduce using rule 21 (final -> sentenciaIf .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! PUNTOYCOMA      [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! VARIABLE        [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! INT             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DOUBLER         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NUM             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! STRINGR         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! BOOLR           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DYNAMIC         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! VAR             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! WHILE           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DO              [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! IF              [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ELSE            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! PRINT           [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NOT             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ELSEIF          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! FOR             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! LIST            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! CIZQ            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! NEWLIST         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! SET             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! SETFROM         [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! MAP             [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! LIZQ            [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! SWITCH          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! ENTERO          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! DOUBLE          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! STRING          [ reduce using rule 21 (final -> sentenciaIf .) ]
  ! BOOL            [ reduce using rule 21 (final -> sentenciaIf .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 75
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 11

    (23) final -> sentenciaElse . PUNTOYCOMA
    (24) final -> sentenciaElse . PUNTOYCOMA final
    (25) final -> sentenciaElse .
    (26) final -> sentenciaElse . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 76
    $end            reduce using rule 25 (final -> sentenciaElse .)
    LDER            reduce using rule 25 (final -> sentenciaElse .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! PUNTOYCOMA      [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! VARIABLE        [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! INT             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DOUBLER         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NUM             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! STRINGR         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! BOOLR           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DYNAMIC         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! VAR             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! WHILE           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DO              [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! IF              [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ELSE            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! PRINT           [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FUNCIONSTDIN    [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NOT             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ELSEIF          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! FOR             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! LIST            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! CIZQ            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! NEWLIST         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! SET             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! SETFROM         [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! MAP             [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! LIZQ            [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! SWITCH          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! ENTERO          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! DOUBLE          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! STRING          [ reduce using rule 25 (final -> sentenciaElse .) ]
  ! BOOL            [ reduce using rule 25 (final -> sentenciaElse .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 77
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 12

    (27) final -> imprimir . PUNTOYCOMA
    (28) final -> imprimir . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 78


state 13

    (29) final -> funcionStdin . PUNTOYCOMA
    (30) final -> funcionStdin . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 79


state 14

    (31) final -> funcionStdout . PUNTOYCOMA
    (32) final -> funcionStdout . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 80


state 15

    (33) final -> negacionBool . PUNTOYCOMA
    (34) final -> negacionBool . PUNTOYCOMA final
    (223) expresionBool -> negacionBool .
    (207) expresionBoolFor -> negacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 81
    AND             reduce using rule 223 (expresionBool -> negacionBool .)
    OR              reduce using rule 223 (expresionBool -> negacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 223 (expresionBool -> negacionBool .) ]
  ! PUNTOYCOMA      [ reduce using rule 207 (expresionBoolFor -> negacionBool .) ]


state 16

    (35) final -> comparacionBool . PUNTOYCOMA final
    (36) final -> comparacionBool . PUNTOYCOMA
    (224) expresionBool -> comparacionBool .
    (208) expresionBoolFor -> comparacionBool .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 82
    AND             reduce using rule 224 (expresionBool -> comparacionBool .)
    OR              reduce using rule 224 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 224 (expresionBool -> comparacionBool .) ]
  ! PUNTOYCOMA      [ reduce using rule 208 (expresionBoolFor -> comparacionBool .) ]


state 17

    (37) final -> sentenciaElseIf . PUNTOYCOMA final
    (38) final -> sentenciaElseIf . final
    (39) final -> sentenciaElseIf . PUNTOYCOMA
    (40) final -> sentenciaElseIf .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 83
    $end            reduce using rule 40 (final -> sentenciaElseIf .)
    LDER            reduce using rule 40 (final -> sentenciaElseIf .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! PUNTOYCOMA      [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! VARIABLE        [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! INT             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DOUBLER         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NUM             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! STRINGR         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! BOOLR           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DYNAMIC         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! VAR             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! WHILE           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DO              [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! IF              [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ELSE            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! PRINT           [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FUNCIONSTDIN    [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NOT             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ELSEIF          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! FOR             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! LIST            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! CIZQ            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! NEWLIST         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! SET             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! SETFROM         [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! MAP             [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! LIZQ            [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! SWITCH          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! ENTERO          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! DOUBLE          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! STRING          [ reduce using rule 40 (final -> sentenciaElseIf .) ]
  ! BOOL            [ reduce using rule 40 (final -> sentenciaElseIf .) ]

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 84
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 18

    (41) final -> sentenciaFor . PUNTOYCOMA final
    (42) final -> sentenciaFor . PUNTOYCOMA
    (43) final -> sentenciaFor . final
    (44) final -> sentenciaFor .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PUNTOYCOMA      shift and go to state 85
    $end            reduce using rule 44 (final -> sentenciaFor .)
    LDER            reduce using rule 44 (final -> sentenciaFor .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! PUNTOYCOMA      [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! VARIABLE        [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! INT             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DOUBLER         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NUM             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! STRINGR         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! BOOLR           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DYNAMIC         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! VAR             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! WHILE           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DO              [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! IF              [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ELSE            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! PRINT           [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FUNCIONSTDIN    [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NOT             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ELSEIF          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! FOR             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! LIST            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! CIZQ            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! NEWLIST         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! SET             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! SETFROM         [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! MAP             [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! LIZQ            [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! SWITCH          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! ENTERO          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! DOUBLE          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! STRING          [ reduce using rule 44 (final -> sentenciaFor .) ]
  ! BOOL            [ reduce using rule 44 (final -> sentenciaFor .) ]

    sentenciaFor                   shift and go to state 18
    final                          shift and go to state 86
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 19

    (45) final -> sentenciaSubstring . PUNTOYCOMA final
    (46) final -> sentenciaSubstring . PUNTOYCOMA
    (234) valorString -> sentenciaSubstring .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 87
    SUMA            reduce using rule 234 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 234 (valorString -> sentenciaSubstring .)

  ! PUNTOYCOMA      [ reduce using rule 234 (valorString -> sentenciaSubstring .) ]


state 20

    (47) final -> VARIABLE . DSUMA PUNTOYCOMA final
    (48) final -> VARIABLE . DSUMA PUNTOYCOMA
    (49) final -> VARIABLE . DRESTA PUNTOYCOMA final
    (50) final -> VARIABLE . DRESTA PUNTOYCOMA
    (219) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (220) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (203) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (204) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (239) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (120) expresionLista -> VARIABLE . CIZQ ENTERO CDER
    (121) expresionLista -> VARIABLE . FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> VARIABLE . FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionSet -> VARIABLE . FUNCIONTAKE PIZQ ENTERO PDER
    (171) asignacionSimple -> VARIABLE . IGUAL expresion
    (242) valorInt -> VARIABLE .
    (231) valorString -> VARIABLE .
    (217) valorBool -> VARIABLE .
    (184) valor -> VARIABLE .
    (255) comparadorMat -> . DIGUAL
    (256) comparadorMat -> . NOIGUAL
    (257) comparadorMat -> . MAYOR
    (258) comparadorMat -> . MENOR
    (259) comparadorMat -> . MAYIGUAL
    (260) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 231 (valorString -> VARIABLE .)
  ! shift/reduce conflict for CIZQ resolved as shift
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 231 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 217 (valorBool -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    DSUMA           shift and go to state 88
    DRESTA          shift and go to state 89
    FUNCIONSUBSTRING shift and go to state 91
    CIZQ            shift and go to state 92
    FUNCIONTAKE     shift and go to state 93
    FUNCIONRANGE    shift and go to state 94
    IGUAL           shift and go to state 95
    RESTA           reduce using rule 242 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 242 (valorInt -> VARIABLE .)
    DIV             reduce using rule 242 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 242 (valorInt -> VARIABLE .)
    MOD             reduce using rule 242 (valorInt -> VARIABLE .)
    SUMA            reduce using rule 231 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 217 (valorBool -> VARIABLE .)
    AND             reduce using rule 217 (valorBool -> VARIABLE .)
    OR              reduce using rule 217 (valorBool -> VARIABLE .)
    IS              reduce using rule 184 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 184 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 96
    NOIGUAL         shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYIGUAL        shift and go to state 100
    MENIGUAL        shift and go to state 101

  ! SUMA            [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! CIZQ            [ reduce using rule 231 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 231 (valorString -> VARIABLE .) ]

    comparadorMat                  shift and go to state 90

state 21

    (51) final -> expresionLista . PUNTOYCOMA
    (52) final -> expresionLista . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 102


state 22

    (53) final -> expresionNewList . PUNTOYCOMA
    (54) final -> expresionNewList . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 103


state 23

    (55) final -> expresionSet . PUNTOYCOMA
    (56) final -> expresionSet . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 104


state 24

    (57) final -> expresionMap . PUNTOYCOMA
    (58) final -> expresionMap . PUNTOYCOMA final

    PUNTOYCOMA      shift and go to state 105


state 25

    (59) final -> expresionSwitch .

    $end            reduce using rule 59 (final -> expresionSwitch .)
    PUNTOYCOMA      reduce using rule 59 (final -> expresionSwitch .)
    VARIABLE        reduce using rule 59 (final -> expresionSwitch .)
    INT             reduce using rule 59 (final -> expresionSwitch .)
    DOUBLER         reduce using rule 59 (final -> expresionSwitch .)
    NUM             reduce using rule 59 (final -> expresionSwitch .)
    STRINGR         reduce using rule 59 (final -> expresionSwitch .)
    BOOLR           reduce using rule 59 (final -> expresionSwitch .)
    DYNAMIC         reduce using rule 59 (final -> expresionSwitch .)
    VAR             reduce using rule 59 (final -> expresionSwitch .)
    WHILE           reduce using rule 59 (final -> expresionSwitch .)
    DO              reduce using rule 59 (final -> expresionSwitch .)
    IF              reduce using rule 59 (final -> expresionSwitch .)
    ELSE            reduce using rule 59 (final -> expresionSwitch .)
    PRINT           reduce using rule 59 (final -> expresionSwitch .)
    FUNCIONSTDIN    reduce using rule 59 (final -> expresionSwitch .)
    FUNCIONSTDOUT   reduce using rule 59 (final -> expresionSwitch .)
    NOT             reduce using rule 59 (final -> expresionSwitch .)
    ELSEIF          reduce using rule 59 (final -> expresionSwitch .)
    FOR             reduce using rule 59 (final -> expresionSwitch .)
    LIST            reduce using rule 59 (final -> expresionSwitch .)
    CIZQ            reduce using rule 59 (final -> expresionSwitch .)
    NEWLIST         reduce using rule 59 (final -> expresionSwitch .)
    SET             reduce using rule 59 (final -> expresionSwitch .)
    SETFROM         reduce using rule 59 (final -> expresionSwitch .)
    MAP             reduce using rule 59 (final -> expresionSwitch .)
    LIZQ            reduce using rule 59 (final -> expresionSwitch .)
    SWITCH          reduce using rule 59 (final -> expresionSwitch .)
    ENTERO          reduce using rule 59 (final -> expresionSwitch .)
    DOUBLE          reduce using rule 59 (final -> expresionSwitch .)
    STRING          reduce using rule 59 (final -> expresionSwitch .)
    BOOL            reduce using rule 59 (final -> expresionSwitch .)
    LDER            reduce using rule 59 (final -> expresionSwitch .)


state 26

    (163) asignacion -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 106


state 27

    (164) asignacion -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 107


state 28

    (165) asignacion -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 108


state 29

    (166) asignacion -> STRINGR . VARIABLE IGUAL expresionString

    VARIABLE        shift and go to state 109


state 30

    (167) asignacion -> BOOLR . VARIABLE IGUAL expresionBool

    VARIABLE        shift and go to state 110


state 31

    (168) asignacion -> DYNAMIC . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 111


state 32

    (169) asignacion -> VAR . VARIABLE IGUAL expresion

    VARIABLE        shift and go to state 112


state 33

    (170) asignacion -> asignacionSimple .

    PUNTOYCOMA      reduce using rule 170 (asignacion -> asignacionSimple .)


state 34

    (243) expresionInt -> valorInt . operadorMat expresionInt
    (244) expresionInt -> valorInt .
    (246) valorDouble -> valorInt .
    (249) operadorMat -> . SUMA
    (250) operadorMat -> . RESTA
    (251) operadorMat -> . MULTI
    (252) operadorMat -> . DIV
    (253) operadorMat -> . DIVENTERO
    (254) operadorMat -> . MOD

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 244 (expresionInt -> valorInt .)
  ! reduce/reduce conflict for PDER resolved using rule 244 (expresionInt -> valorInt .)
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DIVENTERO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    PUNTOYCOMA      reduce using rule 244 (expresionInt -> valorInt .)
    PDER            reduce using rule 244 (expresionInt -> valorInt .)
    DIGUAL          reduce using rule 246 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 246 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 246 (valorDouble -> valorInt .)
    MENOR           reduce using rule 246 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 246 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 246 (valorDouble -> valorInt .)
    SUMA            shift and go to state 114
    RESTA           shift and go to state 115
    MULTI           shift and go to state 116
    DIV             shift and go to state 117
    DIVENTERO       shift and go to state 118
    MOD             shift and go to state 119

  ! SUMA            [ reduce using rule 246 (valorDouble -> valorInt .) ]
  ! RESTA           [ reduce using rule 246 (valorDouble -> valorInt .) ]
  ! MULTI           [ reduce using rule 246 (valorDouble -> valorInt .) ]
  ! DIV             [ reduce using rule 246 (valorDouble -> valorInt .) ]
  ! DIVENTERO       [ reduce using rule 246 (valorDouble -> valorInt .) ]
  ! MOD             [ reduce using rule 246 (valorDouble -> valorInt .) ]
  ! PUNTOYCOMA      [ reduce using rule 246 (valorDouble -> valorInt .) ]
  ! PDER            [ reduce using rule 246 (valorDouble -> valorInt .) ]

    operadorMat                    shift and go to state 113

state 35

    (247) expresionDouble -> valorDouble . operadorMat expresionDouble
    (248) expresionDouble -> valorDouble .
    (218) expresionBool -> valorDouble . comparadorMat expresionDouble
    (221) expresionBool -> valorDouble . comparadorMat VARIABLE
    (202) expresionBoolFor -> valorDouble . comparadorMat expresionDouble
    (205) expresionBoolFor -> valorDouble . comparadorMat VARIABLE
    (249) operadorMat -> . SUMA
    (250) operadorMat -> . RESTA
    (251) operadorMat -> . MULTI
    (252) operadorMat -> . DIV
    (253) operadorMat -> . DIVENTERO
    (254) operadorMat -> . MOD
    (255) comparadorMat -> . DIGUAL
    (256) comparadorMat -> . NOIGUAL
    (257) comparadorMat -> . MAYOR
    (258) comparadorMat -> . MENOR
    (259) comparadorMat -> . MAYIGUAL
    (260) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 248 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 114
    RESTA           shift and go to state 115
    MULTI           shift and go to state 116
    DIV             shift and go to state 117
    DIVENTERO       shift and go to state 118
    MOD             shift and go to state 119
    DIGUAL          shift and go to state 96
    NOIGUAL         shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYIGUAL        shift and go to state 100
    MENIGUAL        shift and go to state 101

    operadorMat                    shift and go to state 120
    comparadorMat                  shift and go to state 121

state 36

    (236) expresionString -> valorString . SUMA expresionString
    (237) expresionString -> valorString .
    (238) expresionIndexString -> valorString . CIZQ ENTERO CDER

    SUMA            shift and go to state 122
    PUNTOYCOMA      reduce using rule 237 (expresionString -> valorString .)
    PDER            reduce using rule 237 (expresionString -> valorString .)
    CIZQ            shift and go to state 123


state 37

    (222) expresionBool -> valorBool .
    (206) expresionBoolFor -> valorBool .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 206 (expresionBoolFor -> valorBool .)
    AND             reduce using rule 222 (expresionBool -> valorBool .)
    OR              reduce using rule 222 (expresionBool -> valorBool .)
    PUNTOYCOMA      reduce using rule 206 (expresionBoolFor -> valorBool .)

  ! PUNTOYCOMA      [ reduce using rule 222 (expresionBool -> valorBool .) ]


state 38

    (225) expresionBool -> valor . IS objeto
    (226) expresionBool -> valor . ISNEGADO objeto

    IS              shift and go to state 124
    ISNEGADO        shift and go to state 125


state 39

    (213) sentenciaWhile -> WHILE . PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> WHILE . PIZQ expresionBool PDER final

    PIZQ            shift and go to state 126


state 40

    (63) expresionMap -> LIZQ . LDER
    (65) expresionMap -> LIZQ . expMap LDER
    (66) expMap -> . claveValor DOSPUNTOS claveValor
    (67) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (68) claveValor -> . VARIABLE
    (69) claveValor -> . STRING
    (70) claveValor -> . ENTERO
    (71) claveValor -> . DOUBLE
    (72) claveValor -> . BOOL
    (73) claveValor -> . CIZQ expListDynamic CDER
    (74) claveValor -> . CIZQ expListSet CDER
    (75) claveValor -> . expresionNewList
    (76) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (77) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (78) claveValor -> . LIZQ LDER
    (79) claveValor -> . LIZQ expMap LDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 128
    VARIABLE        shift and go to state 131
    STRING          shift and go to state 132
    ENTERO          shift and go to state 133
    DOUBLE          shift and go to state 134
    BOOL            shift and go to state 135
    CIZQ            shift and go to state 136
    SETFROM         shift and go to state 138
    LIZQ            shift and go to state 127
    NEWLIST         shift and go to state 55

    expMap                         shift and go to state 129
    claveValor                     shift and go to state 130
    expresionNewList               shift and go to state 137

state 41

    (215) sentenciaDoWhile -> DO . LIZQ final LDER WHILE PIZQ expresionBool PDER

    LIZQ            shift and go to state 139


state 42

    (177) sentenciaIf -> IF . PIZQ expresionBool PDER final
    (178) sentenciaIf -> IF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 140


state 43

    (179) sentenciaElse -> ELSE . final
    (180) sentenciaElse -> ELSE . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 142
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

    final                          shift and go to state 141
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 44

    (172) imprimir -> PRINT . PIZQ expresion PDER
    (173) imprimir -> PRINT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 143


state 45

    (174) funcionStdin -> FUNCIONSTDIN .
    (232) valorString -> FUNCIONSTDIN .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 174 (funcionStdin -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 174 (funcionStdin -> FUNCIONSTDIN .)
    SUMA            reduce using rule 232 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 232 (valorString -> FUNCIONSTDIN .)

  ! PUNTOYCOMA      [ reduce using rule 232 (valorString -> FUNCIONSTDIN .) ]


state 46

    (175) funcionStdout -> FUNCIONSTDOUT . PIZQ expresion PDER
    (176) funcionStdout -> FUNCIONSTDOUT . PIZQ asignacionSimple PDER

    PIZQ            shift and go to state 144


state 47

    (227) negacionBool -> NOT . PIZQ expresionBool PDER

    PIZQ            shift and go to state 145


state 48

    (181) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> ELSEIF . PIZQ expresionBool PDER LIZQ final LDER

    PIZQ            shift and go to state 146


state 49

    (209) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> FOR . PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final

    PIZQ            shift and go to state 147


state 50

    (241) valorInt -> ENTERO .
    (183) valor -> ENTERO .

    SUMA            reduce using rule 241 (valorInt -> ENTERO .)
    RESTA           reduce using rule 241 (valorInt -> ENTERO .)
    MULTI           reduce using rule 241 (valorInt -> ENTERO .)
    DIV             reduce using rule 241 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 241 (valorInt -> ENTERO .)
    MOD             reduce using rule 241 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 241 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 241 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 241 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 241 (valorInt -> ENTERO .)
    MENOR           reduce using rule 241 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 241 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 241 (valorInt -> ENTERO .)
    IS              reduce using rule 183 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 183 (valor -> ENTERO .)


state 51

    (89) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> LIST . MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (93) expresionLista -> LIST . MENOR INT MAYOR VARIABLE
    (94) expresionLista -> LIST . MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> LIST . MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> LIST . MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> LIST . MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> LIST . MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> LIST . MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> LIST . MENOR SET MAYOR VARIABLE
    (113) expresionLista -> LIST . MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> LIST . MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> LIST . MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> LIST . MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> LIST . MENOR MAP MAYOR VARIABLE IGUAL expresionNewList

    MENOR           shift and go to state 148


state 52

    (92) expresionLista -> CIZQ . expListString CDER
    (96) expresionLista -> CIZQ . expListInt CDER
    (100) expresionLista -> CIZQ . expListNum CDER
    (107) expresionLista -> CIZQ . expListBool CDER
    (111) expresionLista -> CIZQ . expListDynamic CDER
    (115) expresionLista -> CIZQ . expListSet CDER
    (119) expresionLista -> CIZQ . expListMap CDER
    (88) expresionNewList -> CIZQ . CDER
    (123) expListString -> . STRING
    (124) expListString -> . STRING COMA expListString
    (125) expListString -> . VARIABLE
    (126) expListString -> . VARIABLE COMA expListString
    (127) expListInt -> . ENTERO
    (128) expListInt -> . ENTERO COMA expListInt
    (129) expListInt -> . VARIABLE
    (130) expListInt -> . VARIABLE COMA expListInt
    (131) expListNum -> . ENTERO
    (132) expListNum -> . DOUBLE
    (133) expListNum -> . ENTERO COMA expListNum
    (134) expListNum -> . DOUBLE COMA expListNum
    (135) expListNum -> . VARIABLE
    (136) expListNum -> . VARIABLE COMA expListNum
    (137) expListBool -> . BOOL
    (138) expListBool -> . BOOL COMA expListBool
    (139) expListBool -> . VARIABLE
    (140) expListBool -> . VARIABLE COMA expListBool
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic
    (151) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (152) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (153) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (154) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (155) expListSet -> . VARIABLE
    (156) expListSet -> . VARIABLE COMA expListSet
    (157) expListMap -> . LIZQ LDER
    (158) expListMap -> . LIZQ expMap LDER
    (159) expListMap -> . LIZQ LDER COMA expListMap
    (160) expListMap -> . LIZQ expMap LDER COMA expListMap
    (161) expListMap -> . VARIABLE
    (162) expListMap -> . VARIABLE COMA expListMap

    CDER            shift and go to state 150
    STRING          shift and go to state 157
    VARIABLE        shift and go to state 158
    ENTERO          shift and go to state 159
    DOUBLE          shift and go to state 160
    BOOL            shift and go to state 161
    SETFROM         shift and go to state 162
    LIZQ            shift and go to state 163

    expListString                  shift and go to state 149
    expListInt                     shift and go to state 151
    expListNum                     shift and go to state 152
    expListBool                    shift and go to state 153
    expListDynamic                 shift and go to state 154
    expListSet                     shift and go to state 155
    expListMap                     shift and go to state 156

state 53

    (80) expresionSet -> SET . VARIABLE
    (82) expresionSet -> SET . VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (84) expresionSet -> SET . VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER

    VARIABLE        shift and go to state 164


state 54

    (61) expresionMap -> MAP . VARIABLE
    (62) expresionMap -> MAP . VARIABLE IGUAL LIZQ LDER
    (64) expresionMap -> MAP . VARIABLE IGUAL LIZQ expMap LDER

    VARIABLE        shift and go to state 165


state 55

    (86) expresionNewList -> NEWLIST . PIZQ PDER
    (87) expresionNewList -> NEWLIST . PIZQ ENTERO PDER

    PIZQ            shift and go to state 166


state 56

    (81) expresionSet -> SETFROM . PIZQ CIZQ CDER PDER
    (83) expresionSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 167


state 57

    (60) expresionSwitch -> SWITCH . PIZQ expresionBool PDER

    PIZQ            shift and go to state 168


state 58

    (245) valorDouble -> DOUBLE .
    (185) valor -> DOUBLE .

    SUMA            reduce using rule 245 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 245 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 245 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 245 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 245 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 245 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 245 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 245 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 245 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 245 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 245 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 245 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 245 (valorDouble -> DOUBLE .)
    IS              reduce using rule 185 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 185 (valor -> DOUBLE .)


state 59

    (230) valorString -> STRING .
    (235) valorString -> STRING . CIZQ ENTERO CDER
    (186) valor -> STRING .

  ! shift/reduce conflict for CIZQ resolved as shift
    SUMA            reduce using rule 230 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 230 (valorString -> STRING .)
    CIZQ            shift and go to state 169
    IS              reduce using rule 186 (valor -> STRING .)
    ISNEGADO        reduce using rule 186 (valor -> STRING .)

  ! CIZQ            [ reduce using rule 230 (valorString -> STRING .) ]


state 60

    (233) valorString -> expresionIndexString .

    SUMA            reduce using rule 233 (valorString -> expresionIndexString .)
    CIZQ            reduce using rule 233 (valorString -> expresionIndexString .)
    PUNTOYCOMA      reduce using rule 233 (valorString -> expresionIndexString .)
    PDER            reduce using rule 233 (valorString -> expresionIndexString .)


state 61

    (216) valorBool -> BOOL .

    PUNTOYCOMA      reduce using rule 216 (valorBool -> BOOL .)
    AND             reduce using rule 216 (valorBool -> BOOL .)
    OR              reduce using rule 216 (valorBool -> BOOL .)
    PDER            reduce using rule 216 (valorBool -> BOOL .)


state 62

    (1) final -> asignacion PUNTOYCOMA .
    (2) final -> asignacion PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    LDER            reduce using rule 1 (final -> asignacion PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 1 (final -> asignacion PUNTOYCOMA .) ]

    asignacion                     shift and go to state 2
    final                          shift and go to state 170
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 63

    (3) final -> expresionInt PUNTOYCOMA .
    (4) final -> expresionInt PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    LDER            reduce using rule 3 (final -> expresionInt PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 3 (final -> expresionInt PUNTOYCOMA .) ]

    expresionInt                   shift and go to state 3
    final                          shift and go to state 171
    asignacion                     shift and go to state 2
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 64

    (5) final -> expresionDouble PUNTOYCOMA .
    (6) final -> expresionDouble PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    LDER            reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 5 (final -> expresionDouble PUNTOYCOMA .) ]

    expresionDouble                shift and go to state 4
    final                          shift and go to state 172
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 65

    (7) final -> expresionString PUNTOYCOMA .
    (8) final -> expresionString PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    LDER            reduce using rule 7 (final -> expresionString PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 7 (final -> expresionString PUNTOYCOMA .) ]

    expresionString                shift and go to state 5
    final                          shift and go to state 173
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 66

    (9) final -> expresionBool PUNTOYCOMA .
    (10) final -> expresionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    LDER            reduce using rule 9 (final -> expresionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 9 (final -> expresionBool PUNTOYCOMA .) ]

    expresionBool                  shift and go to state 6
    final                          shift and go to state 174
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 67

    (228) comparacionBool -> expresionBool operadorLogico . expresionBool
    (229) comparacionBool -> expresionBool operadorLogico . comparacionBool
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 178
    DOUBLE          shift and go to state 58
    BOOL            shift and go to state 61
    NOT             shift and go to state 47
    ENTERO          shift and go to state 182
    STRING          shift and go to state 183

    expresionBool                  shift and go to state 175
    comparacionBool                shift and go to state 176
    valorDouble                    shift and go to state 177
    valorBool                      shift and go to state 179
    negacionBool                   shift and go to state 180
    valor                          shift and go to state 38
    valorInt                       shift and go to state 181

state 68

    (261) operadorLogico -> AND .

    VARIABLE        reduce using rule 261 (operadorLogico -> AND .)
    DOUBLE          reduce using rule 261 (operadorLogico -> AND .)
    BOOL            reduce using rule 261 (operadorLogico -> AND .)
    NOT             reduce using rule 261 (operadorLogico -> AND .)
    ENTERO          reduce using rule 261 (operadorLogico -> AND .)
    STRING          reduce using rule 261 (operadorLogico -> AND .)


state 69

    (262) operadorLogico -> OR .

    VARIABLE        reduce using rule 262 (operadorLogico -> OR .)
    DOUBLE          reduce using rule 262 (operadorLogico -> OR .)
    BOOL            reduce using rule 262 (operadorLogico -> OR .)
    NOT             reduce using rule 262 (operadorLogico -> OR .)
    ENTERO          reduce using rule 262 (operadorLogico -> OR .)
    STRING          reduce using rule 262 (operadorLogico -> OR .)


state 70

    (11) final -> expresionBoolFor PUNTOYCOMA .
    (12) final -> expresionBoolFor PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    LDER            reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 11 (final -> expresionBoolFor PUNTOYCOMA .) ]

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 184
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 71

    (14) final -> sentenciaWhile final .

    $end            reduce using rule 14 (final -> sentenciaWhile final .)
    PUNTOYCOMA      reduce using rule 14 (final -> sentenciaWhile final .)
    VARIABLE        reduce using rule 14 (final -> sentenciaWhile final .)
    INT             reduce using rule 14 (final -> sentenciaWhile final .)
    DOUBLER         reduce using rule 14 (final -> sentenciaWhile final .)
    NUM             reduce using rule 14 (final -> sentenciaWhile final .)
    STRINGR         reduce using rule 14 (final -> sentenciaWhile final .)
    BOOLR           reduce using rule 14 (final -> sentenciaWhile final .)
    DYNAMIC         reduce using rule 14 (final -> sentenciaWhile final .)
    VAR             reduce using rule 14 (final -> sentenciaWhile final .)
    WHILE           reduce using rule 14 (final -> sentenciaWhile final .)
    DO              reduce using rule 14 (final -> sentenciaWhile final .)
    IF              reduce using rule 14 (final -> sentenciaWhile final .)
    ELSE            reduce using rule 14 (final -> sentenciaWhile final .)
    PRINT           reduce using rule 14 (final -> sentenciaWhile final .)
    FUNCIONSTDIN    reduce using rule 14 (final -> sentenciaWhile final .)
    FUNCIONSTDOUT   reduce using rule 14 (final -> sentenciaWhile final .)
    NOT             reduce using rule 14 (final -> sentenciaWhile final .)
    ELSEIF          reduce using rule 14 (final -> sentenciaWhile final .)
    FOR             reduce using rule 14 (final -> sentenciaWhile final .)
    LIST            reduce using rule 14 (final -> sentenciaWhile final .)
    CIZQ            reduce using rule 14 (final -> sentenciaWhile final .)
    NEWLIST         reduce using rule 14 (final -> sentenciaWhile final .)
    SET             reduce using rule 14 (final -> sentenciaWhile final .)
    SETFROM         reduce using rule 14 (final -> sentenciaWhile final .)
    MAP             reduce using rule 14 (final -> sentenciaWhile final .)
    LIZQ            reduce using rule 14 (final -> sentenciaWhile final .)
    SWITCH          reduce using rule 14 (final -> sentenciaWhile final .)
    ENTERO          reduce using rule 14 (final -> sentenciaWhile final .)
    DOUBLE          reduce using rule 14 (final -> sentenciaWhile final .)
    STRING          reduce using rule 14 (final -> sentenciaWhile final .)
    BOOL            reduce using rule 14 (final -> sentenciaWhile final .)
    LDER            reduce using rule 14 (final -> sentenciaWhile final .)


state 72

    (15) final -> sentenciaWhile PUNTOYCOMA .
    (16) final -> sentenciaWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    LDER            reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 15 (final -> sentenciaWhile PUNTOYCOMA .) ]

    sentenciaWhile                 shift and go to state 8
    final                          shift and go to state 185
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 73

    (17) final -> sentenciaDoWhile PUNTOYCOMA .
    (18) final -> sentenciaDoWhile PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    LDER            reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 17 (final -> sentenciaDoWhile PUNTOYCOMA .) ]

    sentenciaDoWhile               shift and go to state 9
    final                          shift and go to state 186
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 74

    (19) final -> sentenciaIf PUNTOYCOMA .
    (20) final -> sentenciaIf PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    LDER            reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 19 (final -> sentenciaIf PUNTOYCOMA .) ]

    sentenciaIf                    shift and go to state 10
    final                          shift and go to state 187
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 75

    (22) final -> sentenciaIf final .

    $end            reduce using rule 22 (final -> sentenciaIf final .)
    PUNTOYCOMA      reduce using rule 22 (final -> sentenciaIf final .)
    VARIABLE        reduce using rule 22 (final -> sentenciaIf final .)
    INT             reduce using rule 22 (final -> sentenciaIf final .)
    DOUBLER         reduce using rule 22 (final -> sentenciaIf final .)
    NUM             reduce using rule 22 (final -> sentenciaIf final .)
    STRINGR         reduce using rule 22 (final -> sentenciaIf final .)
    BOOLR           reduce using rule 22 (final -> sentenciaIf final .)
    DYNAMIC         reduce using rule 22 (final -> sentenciaIf final .)
    VAR             reduce using rule 22 (final -> sentenciaIf final .)
    WHILE           reduce using rule 22 (final -> sentenciaIf final .)
    DO              reduce using rule 22 (final -> sentenciaIf final .)
    IF              reduce using rule 22 (final -> sentenciaIf final .)
    ELSE            reduce using rule 22 (final -> sentenciaIf final .)
    PRINT           reduce using rule 22 (final -> sentenciaIf final .)
    FUNCIONSTDIN    reduce using rule 22 (final -> sentenciaIf final .)
    FUNCIONSTDOUT   reduce using rule 22 (final -> sentenciaIf final .)
    NOT             reduce using rule 22 (final -> sentenciaIf final .)
    ELSEIF          reduce using rule 22 (final -> sentenciaIf final .)
    FOR             reduce using rule 22 (final -> sentenciaIf final .)
    LIST            reduce using rule 22 (final -> sentenciaIf final .)
    CIZQ            reduce using rule 22 (final -> sentenciaIf final .)
    NEWLIST         reduce using rule 22 (final -> sentenciaIf final .)
    SET             reduce using rule 22 (final -> sentenciaIf final .)
    SETFROM         reduce using rule 22 (final -> sentenciaIf final .)
    MAP             reduce using rule 22 (final -> sentenciaIf final .)
    LIZQ            reduce using rule 22 (final -> sentenciaIf final .)
    SWITCH          reduce using rule 22 (final -> sentenciaIf final .)
    ENTERO          reduce using rule 22 (final -> sentenciaIf final .)
    DOUBLE          reduce using rule 22 (final -> sentenciaIf final .)
    STRING          reduce using rule 22 (final -> sentenciaIf final .)
    BOOL            reduce using rule 22 (final -> sentenciaIf final .)
    LDER            reduce using rule 22 (final -> sentenciaIf final .)


state 76

    (23) final -> sentenciaElse PUNTOYCOMA .
    (24) final -> sentenciaElse PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    LDER            reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 23 (final -> sentenciaElse PUNTOYCOMA .) ]

    sentenciaElse                  shift and go to state 11
    final                          shift and go to state 188
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 77

    (26) final -> sentenciaElse final .

    $end            reduce using rule 26 (final -> sentenciaElse final .)
    PUNTOYCOMA      reduce using rule 26 (final -> sentenciaElse final .)
    VARIABLE        reduce using rule 26 (final -> sentenciaElse final .)
    INT             reduce using rule 26 (final -> sentenciaElse final .)
    DOUBLER         reduce using rule 26 (final -> sentenciaElse final .)
    NUM             reduce using rule 26 (final -> sentenciaElse final .)
    STRINGR         reduce using rule 26 (final -> sentenciaElse final .)
    BOOLR           reduce using rule 26 (final -> sentenciaElse final .)
    DYNAMIC         reduce using rule 26 (final -> sentenciaElse final .)
    VAR             reduce using rule 26 (final -> sentenciaElse final .)
    WHILE           reduce using rule 26 (final -> sentenciaElse final .)
    DO              reduce using rule 26 (final -> sentenciaElse final .)
    IF              reduce using rule 26 (final -> sentenciaElse final .)
    ELSE            reduce using rule 26 (final -> sentenciaElse final .)
    PRINT           reduce using rule 26 (final -> sentenciaElse final .)
    FUNCIONSTDIN    reduce using rule 26 (final -> sentenciaElse final .)
    FUNCIONSTDOUT   reduce using rule 26 (final -> sentenciaElse final .)
    NOT             reduce using rule 26 (final -> sentenciaElse final .)
    ELSEIF          reduce using rule 26 (final -> sentenciaElse final .)
    FOR             reduce using rule 26 (final -> sentenciaElse final .)
    LIST            reduce using rule 26 (final -> sentenciaElse final .)
    CIZQ            reduce using rule 26 (final -> sentenciaElse final .)
    NEWLIST         reduce using rule 26 (final -> sentenciaElse final .)
    SET             reduce using rule 26 (final -> sentenciaElse final .)
    SETFROM         reduce using rule 26 (final -> sentenciaElse final .)
    MAP             reduce using rule 26 (final -> sentenciaElse final .)
    LIZQ            reduce using rule 26 (final -> sentenciaElse final .)
    SWITCH          reduce using rule 26 (final -> sentenciaElse final .)
    ENTERO          reduce using rule 26 (final -> sentenciaElse final .)
    DOUBLE          reduce using rule 26 (final -> sentenciaElse final .)
    STRING          reduce using rule 26 (final -> sentenciaElse final .)
    BOOL            reduce using rule 26 (final -> sentenciaElse final .)
    LDER            reduce using rule 26 (final -> sentenciaElse final .)


state 78

    (27) final -> imprimir PUNTOYCOMA .
    (28) final -> imprimir PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    LDER            reduce using rule 27 (final -> imprimir PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 27 (final -> imprimir PUNTOYCOMA .) ]

    imprimir                       shift and go to state 12
    final                          shift and go to state 189
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 79

    (29) final -> funcionStdin PUNTOYCOMA .
    (30) final -> funcionStdin PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    LDER            reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 29 (final -> funcionStdin PUNTOYCOMA .) ]

    funcionStdin                   shift and go to state 13
    final                          shift and go to state 190
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 80

    (31) final -> funcionStdout PUNTOYCOMA .
    (32) final -> funcionStdout PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    LDER            reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 31 (final -> funcionStdout PUNTOYCOMA .) ]

    funcionStdout                  shift and go to state 14
    final                          shift and go to state 191
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 81

    (33) final -> negacionBool PUNTOYCOMA .
    (34) final -> negacionBool PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    LDER            reduce using rule 33 (final -> negacionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 33 (final -> negacionBool PUNTOYCOMA .) ]

    negacionBool                   shift and go to state 15
    final                          shift and go to state 192
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 82

    (35) final -> comparacionBool PUNTOYCOMA . final
    (36) final -> comparacionBool PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    LDER            reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 36 (final -> comparacionBool PUNTOYCOMA .) ]

    comparacionBool                shift and go to state 16
    final                          shift and go to state 193
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 83

    (37) final -> sentenciaElseIf PUNTOYCOMA . final
    (39) final -> sentenciaElseIf PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    LDER            reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 39 (final -> sentenciaElseIf PUNTOYCOMA .) ]

    sentenciaElseIf                shift and go to state 17
    final                          shift and go to state 194
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 84

    (38) final -> sentenciaElseIf final .

    $end            reduce using rule 38 (final -> sentenciaElseIf final .)
    PUNTOYCOMA      reduce using rule 38 (final -> sentenciaElseIf final .)
    VARIABLE        reduce using rule 38 (final -> sentenciaElseIf final .)
    INT             reduce using rule 38 (final -> sentenciaElseIf final .)
    DOUBLER         reduce using rule 38 (final -> sentenciaElseIf final .)
    NUM             reduce using rule 38 (final -> sentenciaElseIf final .)
    STRINGR         reduce using rule 38 (final -> sentenciaElseIf final .)
    BOOLR           reduce using rule 38 (final -> sentenciaElseIf final .)
    DYNAMIC         reduce using rule 38 (final -> sentenciaElseIf final .)
    VAR             reduce using rule 38 (final -> sentenciaElseIf final .)
    WHILE           reduce using rule 38 (final -> sentenciaElseIf final .)
    DO              reduce using rule 38 (final -> sentenciaElseIf final .)
    IF              reduce using rule 38 (final -> sentenciaElseIf final .)
    ELSE            reduce using rule 38 (final -> sentenciaElseIf final .)
    PRINT           reduce using rule 38 (final -> sentenciaElseIf final .)
    FUNCIONSTDIN    reduce using rule 38 (final -> sentenciaElseIf final .)
    FUNCIONSTDOUT   reduce using rule 38 (final -> sentenciaElseIf final .)
    NOT             reduce using rule 38 (final -> sentenciaElseIf final .)
    ELSEIF          reduce using rule 38 (final -> sentenciaElseIf final .)
    FOR             reduce using rule 38 (final -> sentenciaElseIf final .)
    LIST            reduce using rule 38 (final -> sentenciaElseIf final .)
    CIZQ            reduce using rule 38 (final -> sentenciaElseIf final .)
    NEWLIST         reduce using rule 38 (final -> sentenciaElseIf final .)
    SET             reduce using rule 38 (final -> sentenciaElseIf final .)
    SETFROM         reduce using rule 38 (final -> sentenciaElseIf final .)
    MAP             reduce using rule 38 (final -> sentenciaElseIf final .)
    LIZQ            reduce using rule 38 (final -> sentenciaElseIf final .)
    SWITCH          reduce using rule 38 (final -> sentenciaElseIf final .)
    ENTERO          reduce using rule 38 (final -> sentenciaElseIf final .)
    DOUBLE          reduce using rule 38 (final -> sentenciaElseIf final .)
    STRING          reduce using rule 38 (final -> sentenciaElseIf final .)
    BOOL            reduce using rule 38 (final -> sentenciaElseIf final .)
    LDER            reduce using rule 38 (final -> sentenciaElseIf final .)


state 85

    (41) final -> sentenciaFor PUNTOYCOMA . final
    (42) final -> sentenciaFor PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    LDER            reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 42 (final -> sentenciaFor PUNTOYCOMA .) ]

    sentenciaFor                   shift and go to state 18
    final                          shift and go to state 195
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 86

    (43) final -> sentenciaFor final .

    $end            reduce using rule 43 (final -> sentenciaFor final .)
    PUNTOYCOMA      reduce using rule 43 (final -> sentenciaFor final .)
    VARIABLE        reduce using rule 43 (final -> sentenciaFor final .)
    INT             reduce using rule 43 (final -> sentenciaFor final .)
    DOUBLER         reduce using rule 43 (final -> sentenciaFor final .)
    NUM             reduce using rule 43 (final -> sentenciaFor final .)
    STRINGR         reduce using rule 43 (final -> sentenciaFor final .)
    BOOLR           reduce using rule 43 (final -> sentenciaFor final .)
    DYNAMIC         reduce using rule 43 (final -> sentenciaFor final .)
    VAR             reduce using rule 43 (final -> sentenciaFor final .)
    WHILE           reduce using rule 43 (final -> sentenciaFor final .)
    DO              reduce using rule 43 (final -> sentenciaFor final .)
    IF              reduce using rule 43 (final -> sentenciaFor final .)
    ELSE            reduce using rule 43 (final -> sentenciaFor final .)
    PRINT           reduce using rule 43 (final -> sentenciaFor final .)
    FUNCIONSTDIN    reduce using rule 43 (final -> sentenciaFor final .)
    FUNCIONSTDOUT   reduce using rule 43 (final -> sentenciaFor final .)
    NOT             reduce using rule 43 (final -> sentenciaFor final .)
    ELSEIF          reduce using rule 43 (final -> sentenciaFor final .)
    FOR             reduce using rule 43 (final -> sentenciaFor final .)
    LIST            reduce using rule 43 (final -> sentenciaFor final .)
    CIZQ            reduce using rule 43 (final -> sentenciaFor final .)
    NEWLIST         reduce using rule 43 (final -> sentenciaFor final .)
    SET             reduce using rule 43 (final -> sentenciaFor final .)
    SETFROM         reduce using rule 43 (final -> sentenciaFor final .)
    MAP             reduce using rule 43 (final -> sentenciaFor final .)
    LIZQ            reduce using rule 43 (final -> sentenciaFor final .)
    SWITCH          reduce using rule 43 (final -> sentenciaFor final .)
    ENTERO          reduce using rule 43 (final -> sentenciaFor final .)
    DOUBLE          reduce using rule 43 (final -> sentenciaFor final .)
    STRING          reduce using rule 43 (final -> sentenciaFor final .)
    BOOL            reduce using rule 43 (final -> sentenciaFor final .)
    LDER            reduce using rule 43 (final -> sentenciaFor final .)


state 87

    (45) final -> sentenciaSubstring PUNTOYCOMA . final
    (46) final -> sentenciaSubstring PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    LDER            reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 46 (final -> sentenciaSubstring PUNTOYCOMA .) ]

    sentenciaSubstring             shift and go to state 19
    final                          shift and go to state 196
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 88

    (47) final -> VARIABLE DSUMA . PUNTOYCOMA final
    (48) final -> VARIABLE DSUMA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 197


state 89

    (49) final -> VARIABLE DRESTA . PUNTOYCOMA final
    (50) final -> VARIABLE DRESTA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 198


state 90

    (219) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (220) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (203) expresionBoolFor -> VARIABLE comparadorMat . expresionDouble
    (204) expresionBoolFor -> VARIABLE comparadorMat . VARIABLE
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 199
    DOUBLE          shift and go to state 202
    ENTERO          shift and go to state 203

    expresionDouble                shift and go to state 200
    valorDouble                    shift and go to state 201
    valorInt                       shift and go to state 181

state 91

    (239) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO PDER
    (240) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING . PIZQ ENTERO COMA ENTERO PDER

    PIZQ            shift and go to state 204


state 92

    (120) expresionLista -> VARIABLE CIZQ . ENTERO CDER

    ENTERO          shift and go to state 205


state 93

    (121) expresionLista -> VARIABLE FUNCIONTAKE . PIZQ ENTERO PDER
    (85) expresionSet -> VARIABLE FUNCIONTAKE . PIZQ ENTERO PDER

    PIZQ            shift and go to state 206


state 94

    (122) expresionLista -> VARIABLE FUNCIONRANGE . PIZQ ENTERO COMA ENTERO PDER

    PIZQ            shift and go to state 207


state 95

    (171) asignacionSimple -> VARIABLE IGUAL . expresion
    (187) expresion -> . valor operadorMat expresion
    (188) expresion -> . valor
    (189) expresion -> . expresionString
    (190) expresion -> . expresionInt
    (191) expresion -> . expresionDouble
    (192) expresion -> . expresionBool
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 182
    VARIABLE        shift and go to state 208
    DOUBLE          shift and go to state 215
    STRING          shift and go to state 216
    FUNCIONSTDIN    shift and go to state 219
    BOOL            shift and go to state 61
    NOT             shift and go to state 47

    expresion                      shift and go to state 209
    valor                          shift and go to state 210
    expresionString                shift and go to state 211
    expresionInt                   shift and go to state 212
    expresionDouble                shift and go to state 213
    expresionBool                  shift and go to state 214
    valorString                    shift and go to state 36
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 217
    valorBool                      shift and go to state 179
    negacionBool                   shift and go to state 180
    comparacionBool                shift and go to state 218
    expresionIndexString           shift and go to state 60
    sentenciaSubstring             shift and go to state 220

state 96

    (255) comparadorMat -> DIGUAL .

    VARIABLE        reduce using rule 255 (comparadorMat -> DIGUAL .)
    DOUBLE          reduce using rule 255 (comparadorMat -> DIGUAL .)
    ENTERO          reduce using rule 255 (comparadorMat -> DIGUAL .)


state 97

    (256) comparadorMat -> NOIGUAL .

    VARIABLE        reduce using rule 256 (comparadorMat -> NOIGUAL .)
    DOUBLE          reduce using rule 256 (comparadorMat -> NOIGUAL .)
    ENTERO          reduce using rule 256 (comparadorMat -> NOIGUAL .)


state 98

    (257) comparadorMat -> MAYOR .

    VARIABLE        reduce using rule 257 (comparadorMat -> MAYOR .)
    DOUBLE          reduce using rule 257 (comparadorMat -> MAYOR .)
    ENTERO          reduce using rule 257 (comparadorMat -> MAYOR .)


state 99

    (258) comparadorMat -> MENOR .

    VARIABLE        reduce using rule 258 (comparadorMat -> MENOR .)
    DOUBLE          reduce using rule 258 (comparadorMat -> MENOR .)
    ENTERO          reduce using rule 258 (comparadorMat -> MENOR .)


state 100

    (259) comparadorMat -> MAYIGUAL .

    VARIABLE        reduce using rule 259 (comparadorMat -> MAYIGUAL .)
    DOUBLE          reduce using rule 259 (comparadorMat -> MAYIGUAL .)
    ENTERO          reduce using rule 259 (comparadorMat -> MAYIGUAL .)


state 101

    (260) comparadorMat -> MENIGUAL .

    VARIABLE        reduce using rule 260 (comparadorMat -> MENIGUAL .)
    DOUBLE          reduce using rule 260 (comparadorMat -> MENIGUAL .)
    ENTERO          reduce using rule 260 (comparadorMat -> MENIGUAL .)


state 102

    (51) final -> expresionLista PUNTOYCOMA .
    (52) final -> expresionLista PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    LDER            reduce using rule 51 (final -> expresionLista PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 51 (final -> expresionLista PUNTOYCOMA .) ]

    expresionLista                 shift and go to state 21
    final                          shift and go to state 221
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 103

    (53) final -> expresionNewList PUNTOYCOMA .
    (54) final -> expresionNewList PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    LDER            reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 53 (final -> expresionNewList PUNTOYCOMA .) ]

    expresionNewList               shift and go to state 22
    final                          shift and go to state 222
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 104

    (55) final -> expresionSet PUNTOYCOMA .
    (56) final -> expresionSet PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    LDER            reduce using rule 55 (final -> expresionSet PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 55 (final -> expresionSet PUNTOYCOMA .) ]

    expresionSet                   shift and go to state 23
    final                          shift and go to state 223
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 105

    (57) final -> expresionMap PUNTOYCOMA .
    (58) final -> expresionMap PUNTOYCOMA . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 57 (final -> expresionMap PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 57 (final -> expresionMap PUNTOYCOMA .)
    LDER            reduce using rule 57 (final -> expresionMap PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 57 (final -> expresionMap PUNTOYCOMA .) ]

    expresionMap                   shift and go to state 24
    final                          shift and go to state 224
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 106

    (163) asignacion -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 225


state 107

    (164) asignacion -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 226


state 108

    (165) asignacion -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 227


state 109

    (166) asignacion -> STRINGR VARIABLE . IGUAL expresionString

    IGUAL           shift and go to state 228


state 110

    (167) asignacion -> BOOLR VARIABLE . IGUAL expresionBool

    IGUAL           shift and go to state 229


state 111

    (168) asignacion -> DYNAMIC VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 230


state 112

    (169) asignacion -> VAR VARIABLE . IGUAL expresion

    IGUAL           shift and go to state 231


state 113

    (243) expresionInt -> valorInt operadorMat . expresionInt
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE

    ENTERO          shift and go to state 203
    VARIABLE        shift and go to state 234

    valorInt                       shift and go to state 232
    expresionInt                   shift and go to state 233

state 114

    (249) operadorMat -> SUMA .

    ENTERO          reduce using rule 249 (operadorMat -> SUMA .)
    VARIABLE        reduce using rule 249 (operadorMat -> SUMA .)
    DOUBLE          reduce using rule 249 (operadorMat -> SUMA .)
    STRING          reduce using rule 249 (operadorMat -> SUMA .)
    FUNCIONSTDIN    reduce using rule 249 (operadorMat -> SUMA .)
    BOOL            reduce using rule 249 (operadorMat -> SUMA .)
    NOT             reduce using rule 249 (operadorMat -> SUMA .)


state 115

    (250) operadorMat -> RESTA .

    ENTERO          reduce using rule 250 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 250 (operadorMat -> RESTA .)
    DOUBLE          reduce using rule 250 (operadorMat -> RESTA .)
    STRING          reduce using rule 250 (operadorMat -> RESTA .)
    FUNCIONSTDIN    reduce using rule 250 (operadorMat -> RESTA .)
    BOOL            reduce using rule 250 (operadorMat -> RESTA .)
    NOT             reduce using rule 250 (operadorMat -> RESTA .)


state 116

    (251) operadorMat -> MULTI .

    ENTERO          reduce using rule 251 (operadorMat -> MULTI .)
    VARIABLE        reduce using rule 251 (operadorMat -> MULTI .)
    DOUBLE          reduce using rule 251 (operadorMat -> MULTI .)
    STRING          reduce using rule 251 (operadorMat -> MULTI .)
    FUNCIONSTDIN    reduce using rule 251 (operadorMat -> MULTI .)
    BOOL            reduce using rule 251 (operadorMat -> MULTI .)
    NOT             reduce using rule 251 (operadorMat -> MULTI .)


state 117

    (252) operadorMat -> DIV .

    ENTERO          reduce using rule 252 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 252 (operadorMat -> DIV .)
    DOUBLE          reduce using rule 252 (operadorMat -> DIV .)
    STRING          reduce using rule 252 (operadorMat -> DIV .)
    FUNCIONSTDIN    reduce using rule 252 (operadorMat -> DIV .)
    BOOL            reduce using rule 252 (operadorMat -> DIV .)
    NOT             reduce using rule 252 (operadorMat -> DIV .)


state 118

    (253) operadorMat -> DIVENTERO .

    ENTERO          reduce using rule 253 (operadorMat -> DIVENTERO .)
    VARIABLE        reduce using rule 253 (operadorMat -> DIVENTERO .)
    DOUBLE          reduce using rule 253 (operadorMat -> DIVENTERO .)
    STRING          reduce using rule 253 (operadorMat -> DIVENTERO .)
    FUNCIONSTDIN    reduce using rule 253 (operadorMat -> DIVENTERO .)
    BOOL            reduce using rule 253 (operadorMat -> DIVENTERO .)
    NOT             reduce using rule 253 (operadorMat -> DIVENTERO .)


state 119

    (254) operadorMat -> MOD .

    ENTERO          reduce using rule 254 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 254 (operadorMat -> MOD .)
    DOUBLE          reduce using rule 254 (operadorMat -> MOD .)
    STRING          reduce using rule 254 (operadorMat -> MOD .)
    FUNCIONSTDIN    reduce using rule 254 (operadorMat -> MOD .)
    BOOL            reduce using rule 254 (operadorMat -> MOD .)
    NOT             reduce using rule 254 (operadorMat -> MOD .)


state 120

    (247) expresionDouble -> valorDouble operadorMat . expresionDouble
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 202
    ENTERO          shift and go to state 203
    VARIABLE        shift and go to state 234

    valorDouble                    shift and go to state 201
    expresionDouble                shift and go to state 235
    valorInt                       shift and go to state 181

state 121

    (218) expresionBool -> valorDouble comparadorMat . expresionDouble
    (221) expresionBool -> valorDouble comparadorMat . VARIABLE
    (202) expresionBoolFor -> valorDouble comparadorMat . expresionDouble
    (205) expresionBoolFor -> valorDouble comparadorMat . VARIABLE
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 237
    DOUBLE          shift and go to state 202
    ENTERO          shift and go to state 203

    valorDouble                    shift and go to state 201
    expresionDouble                shift and go to state 236
    valorInt                       shift and go to state 181

state 122

    (236) expresionString -> valorString SUMA . expresionString
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 239
    VARIABLE        shift and go to state 240
    FUNCIONSTDIN    shift and go to state 219

    valorString                    shift and go to state 36
    expresionString                shift and go to state 238
    expresionIndexString           shift and go to state 60
    sentenciaSubstring             shift and go to state 220

state 123

    (238) expresionIndexString -> valorString CIZQ . ENTERO CDER

    ENTERO          shift and go to state 241


state 124

    (225) expresionBool -> valor IS . objeto
    (263) objeto -> . STRINGR
    (264) objeto -> . INT
    (265) objeto -> . DOUBLER
    (266) objeto -> . NUM
    (267) objeto -> . VAR
    (268) objeto -> . DYNAMIC
    (269) objeto -> . LIST
    (270) objeto -> . BOOL
    (271) objeto -> . MAP
    (272) objeto -> . SET

    STRINGR         shift and go to state 243
    INT             shift and go to state 244
    DOUBLER         shift and go to state 245
    NUM             shift and go to state 246
    VAR             shift and go to state 247
    DYNAMIC         shift and go to state 248
    LIST            shift and go to state 249
    BOOL            shift and go to state 250
    MAP             shift and go to state 251
    SET             shift and go to state 252

    objeto                         shift and go to state 242

state 125

    (226) expresionBool -> valor ISNEGADO . objeto
    (263) objeto -> . STRINGR
    (264) objeto -> . INT
    (265) objeto -> . DOUBLER
    (266) objeto -> . NUM
    (267) objeto -> . VAR
    (268) objeto -> . DYNAMIC
    (269) objeto -> . LIST
    (270) objeto -> . BOOL
    (271) objeto -> . MAP
    (272) objeto -> . SET

    STRINGR         shift and go to state 243
    INT             shift and go to state 244
    DOUBLER         shift and go to state 245
    NUM             shift and go to state 246
    VAR             shift and go to state 247
    DYNAMIC         shift and go to state 248
    LIST            shift and go to state 249
    BOOL            shift and go to state 250
    MAP             shift and go to state 251
    SET             shift and go to state 252

    objeto                         shift and go to state 253

state 126

    (213) sentenciaWhile -> WHILE PIZQ . expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> WHILE PIZQ . expresionBool PDER final
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 178
    DOUBLE          shift and go to state 58
    BOOL            shift and go to state 61
    NOT             shift and go to state 47
    ENTERO          shift and go to state 182
    STRING          shift and go to state 183

    expresionBool                  shift and go to state 254
    valorDouble                    shift and go to state 177
    valorBool                      shift and go to state 179
    negacionBool                   shift and go to state 180
    comparacionBool                shift and go to state 218
    valor                          shift and go to state 38
    valorInt                       shift and go to state 181

state 127

    (78) claveValor -> LIZQ . LDER
    (79) claveValor -> LIZQ . expMap LDER
    (66) expMap -> . claveValor DOSPUNTOS claveValor
    (67) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (68) claveValor -> . VARIABLE
    (69) claveValor -> . STRING
    (70) claveValor -> . ENTERO
    (71) claveValor -> . DOUBLE
    (72) claveValor -> . BOOL
    (73) claveValor -> . CIZQ expListDynamic CDER
    (74) claveValor -> . CIZQ expListSet CDER
    (75) claveValor -> . expresionNewList
    (76) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (77) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (78) claveValor -> . LIZQ LDER
    (79) claveValor -> . LIZQ expMap LDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 255
    VARIABLE        shift and go to state 131
    STRING          shift and go to state 132
    ENTERO          shift and go to state 133
    DOUBLE          shift and go to state 134
    BOOL            shift and go to state 135
    CIZQ            shift and go to state 136
    SETFROM         shift and go to state 138
    LIZQ            shift and go to state 127
    NEWLIST         shift and go to state 55

    expMap                         shift and go to state 256
    claveValor                     shift and go to state 130
    expresionNewList               shift and go to state 137

state 128

    (63) expresionMap -> LIZQ LDER .

    PUNTOYCOMA      reduce using rule 63 (expresionMap -> LIZQ LDER .)


state 129

    (65) expresionMap -> LIZQ expMap . LDER

    LDER            shift and go to state 257


state 130

    (66) expMap -> claveValor . DOSPUNTOS claveValor
    (67) expMap -> claveValor . DOSPUNTOS claveValor COMA expMap

    DOSPUNTOS       shift and go to state 258


state 131

    (68) claveValor -> VARIABLE .

    DOSPUNTOS       reduce using rule 68 (claveValor -> VARIABLE .)
    COMA            reduce using rule 68 (claveValor -> VARIABLE .)
    LDER            reduce using rule 68 (claveValor -> VARIABLE .)


state 132

    (69) claveValor -> STRING .

    DOSPUNTOS       reduce using rule 69 (claveValor -> STRING .)
    COMA            reduce using rule 69 (claveValor -> STRING .)
    LDER            reduce using rule 69 (claveValor -> STRING .)


state 133

    (70) claveValor -> ENTERO .

    DOSPUNTOS       reduce using rule 70 (claveValor -> ENTERO .)
    COMA            reduce using rule 70 (claveValor -> ENTERO .)
    LDER            reduce using rule 70 (claveValor -> ENTERO .)


state 134

    (71) claveValor -> DOUBLE .

    DOSPUNTOS       reduce using rule 71 (claveValor -> DOUBLE .)
    COMA            reduce using rule 71 (claveValor -> DOUBLE .)
    LDER            reduce using rule 71 (claveValor -> DOUBLE .)


state 135

    (72) claveValor -> BOOL .

    DOSPUNTOS       reduce using rule 72 (claveValor -> BOOL .)
    COMA            reduce using rule 72 (claveValor -> BOOL .)
    LDER            reduce using rule 72 (claveValor -> BOOL .)


state 136

    (73) claveValor -> CIZQ . expListDynamic CDER
    (74) claveValor -> CIZQ . expListSet CDER
    (88) expresionNewList -> CIZQ . CDER
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic
    (151) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (152) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (153) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (154) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (155) expListSet -> . VARIABLE
    (156) expListSet -> . VARIABLE COMA expListSet

    CDER            shift and go to state 150
    STRING          shift and go to state 261
    ENTERO          shift and go to state 262
    DOUBLE          shift and go to state 263
    BOOL            shift and go to state 264
    VARIABLE        shift and go to state 265
    SETFROM         shift and go to state 162

    expListDynamic                 shift and go to state 259
    expListSet                     shift and go to state 260

state 137

    (75) claveValor -> expresionNewList .

    DOSPUNTOS       reduce using rule 75 (claveValor -> expresionNewList .)
    COMA            reduce using rule 75 (claveValor -> expresionNewList .)
    LDER            reduce using rule 75 (claveValor -> expresionNewList .)


state 138

    (76) claveValor -> SETFROM . PIZQ CIZQ CDER PDER
    (77) claveValor -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 266


state 139

    (215) sentenciaDoWhile -> DO LIZQ . final LDER WHILE PIZQ expresionBool PDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

    final                          shift and go to state 267
    expresionBool                  shift and go to state 6
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 140

    (177) sentenciaIf -> IF PIZQ . expresionBool PDER final
    (178) sentenciaIf -> IF PIZQ . expresionBool PDER LIZQ final LDER
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 178
    DOUBLE          shift and go to state 58
    BOOL            shift and go to state 61
    NOT             shift and go to state 47
    ENTERO          shift and go to state 182
    STRING          shift and go to state 183

    expresionBool                  shift and go to state 268
    valorDouble                    shift and go to state 177
    valorBool                      shift and go to state 179
    negacionBool                   shift and go to state 180
    comparacionBool                shift and go to state 218
    valor                          shift and go to state 38
    valorInt                       shift and go to state 181

state 141

    (179) sentenciaElse -> ELSE final .

    PUNTOYCOMA      reduce using rule 179 (sentenciaElse -> ELSE final .)
    VARIABLE        reduce using rule 179 (sentenciaElse -> ELSE final .)
    INT             reduce using rule 179 (sentenciaElse -> ELSE final .)
    DOUBLER         reduce using rule 179 (sentenciaElse -> ELSE final .)
    NUM             reduce using rule 179 (sentenciaElse -> ELSE final .)
    STRINGR         reduce using rule 179 (sentenciaElse -> ELSE final .)
    BOOLR           reduce using rule 179 (sentenciaElse -> ELSE final .)
    DYNAMIC         reduce using rule 179 (sentenciaElse -> ELSE final .)
    VAR             reduce using rule 179 (sentenciaElse -> ELSE final .)
    WHILE           reduce using rule 179 (sentenciaElse -> ELSE final .)
    DO              reduce using rule 179 (sentenciaElse -> ELSE final .)
    IF              reduce using rule 179 (sentenciaElse -> ELSE final .)
    ELSE            reduce using rule 179 (sentenciaElse -> ELSE final .)
    PRINT           reduce using rule 179 (sentenciaElse -> ELSE final .)
    FUNCIONSTDIN    reduce using rule 179 (sentenciaElse -> ELSE final .)
    FUNCIONSTDOUT   reduce using rule 179 (sentenciaElse -> ELSE final .)
    NOT             reduce using rule 179 (sentenciaElse -> ELSE final .)
    ELSEIF          reduce using rule 179 (sentenciaElse -> ELSE final .)
    FOR             reduce using rule 179 (sentenciaElse -> ELSE final .)
    LIST            reduce using rule 179 (sentenciaElse -> ELSE final .)
    CIZQ            reduce using rule 179 (sentenciaElse -> ELSE final .)
    NEWLIST         reduce using rule 179 (sentenciaElse -> ELSE final .)
    SET             reduce using rule 179 (sentenciaElse -> ELSE final .)
    SETFROM         reduce using rule 179 (sentenciaElse -> ELSE final .)
    MAP             reduce using rule 179 (sentenciaElse -> ELSE final .)
    LIZQ            reduce using rule 179 (sentenciaElse -> ELSE final .)
    SWITCH          reduce using rule 179 (sentenciaElse -> ELSE final .)
    ENTERO          reduce using rule 179 (sentenciaElse -> ELSE final .)
    DOUBLE          reduce using rule 179 (sentenciaElse -> ELSE final .)
    STRING          reduce using rule 179 (sentenciaElse -> ELSE final .)
    BOOL            reduce using rule 179 (sentenciaElse -> ELSE final .)
    $end            reduce using rule 179 (sentenciaElse -> ELSE final .)
    LDER            reduce using rule 179 (sentenciaElse -> ELSE final .)


state 142

    (180) sentenciaElse -> ELSE LIZQ . final LDER
    (63) expresionMap -> LIZQ . LDER
    (65) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (66) expMap -> . claveValor DOSPUNTOS claveValor
    (67) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (68) claveValor -> . VARIABLE
    (69) claveValor -> . STRING
    (70) claveValor -> . ENTERO
    (71) claveValor -> . DOUBLE
    (72) claveValor -> . BOOL
    (73) claveValor -> . CIZQ expListDynamic CDER
    (74) claveValor -> . CIZQ expListSet CDER
    (75) claveValor -> . expresionNewList
    (76) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (77) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (78) claveValor -> . LIZQ LDER
    (79) claveValor -> . LIZQ expMap LDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 128
    VARIABLE        shift and go to state 271
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 274
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 275
    MAP             shift and go to state 54
    LIZQ            shift and go to state 269
    SWITCH          shift and go to state 57
    STRING          shift and go to state 276
    ENTERO          shift and go to state 273
    DOUBLE          shift and go to state 277
    BOOL            shift and go to state 278

    final                          shift and go to state 270
    expMap                         shift and go to state 129
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 272
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    claveValor                     shift and go to state 130
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 143

    (172) imprimir -> PRINT PIZQ . expresion PDER
    (173) imprimir -> PRINT PIZQ . asignacionSimple PDER
    (187) expresion -> . valor operadorMat expresion
    (188) expresion -> . valor
    (189) expresion -> . expresionString
    (190) expresion -> . expresionInt
    (191) expresion -> . expresionDouble
    (192) expresion -> . expresionBool
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 281
    ENTERO          shift and go to state 182
    DOUBLE          shift and go to state 215
    STRING          shift and go to state 216
    FUNCIONSTDIN    shift and go to state 219
    BOOL            shift and go to state 61
    NOT             shift and go to state 47

    expresion                      shift and go to state 279
    asignacionSimple               shift and go to state 280
    valor                          shift and go to state 210
    expresionString                shift and go to state 211
    expresionInt                   shift and go to state 212
    expresionDouble                shift and go to state 213
    expresionBool                  shift and go to state 214
    valorString                    shift and go to state 36
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 217
    valorBool                      shift and go to state 179
    negacionBool                   shift and go to state 180
    comparacionBool                shift and go to state 218
    expresionIndexString           shift and go to state 60
    sentenciaSubstring             shift and go to state 220

state 144

    (175) funcionStdout -> FUNCIONSTDOUT PIZQ . expresion PDER
    (176) funcionStdout -> FUNCIONSTDOUT PIZQ . asignacionSimple PDER
    (187) expresion -> . valor operadorMat expresion
    (188) expresion -> . valor
    (189) expresion -> . expresionString
    (190) expresion -> . expresionInt
    (191) expresion -> . expresionDouble
    (192) expresion -> . expresionBool
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    VARIABLE        shift and go to state 281
    ENTERO          shift and go to state 182
    DOUBLE          shift and go to state 215
    STRING          shift and go to state 216
    FUNCIONSTDIN    shift and go to state 219
    BOOL            shift and go to state 61
    NOT             shift and go to state 47

    expresion                      shift and go to state 282
    asignacionSimple               shift and go to state 283
    valor                          shift and go to state 210
    expresionString                shift and go to state 211
    expresionInt                   shift and go to state 212
    expresionDouble                shift and go to state 213
    expresionBool                  shift and go to state 214
    valorString                    shift and go to state 36
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 217
    valorBool                      shift and go to state 179
    negacionBool                   shift and go to state 180
    comparacionBool                shift and go to state 218
    expresionIndexString           shift and go to state 60
    sentenciaSubstring             shift and go to state 220

state 145

    (227) negacionBool -> NOT PIZQ . expresionBool PDER
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 178
    DOUBLE          shift and go to state 58
    BOOL            shift and go to state 61
    NOT             shift and go to state 47
    ENTERO          shift and go to state 182
    STRING          shift and go to state 183

    expresionBool                  shift and go to state 284
    valorDouble                    shift and go to state 177
    valorBool                      shift and go to state 179
    negacionBool                   shift and go to state 180
    comparacionBool                shift and go to state 218
    valor                          shift and go to state 38
    valorInt                       shift and go to state 181

state 146

    (181) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER final
    (182) sentenciaElseIf -> ELSEIF PIZQ . expresionBool PDER LIZQ final LDER
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 178
    DOUBLE          shift and go to state 58
    BOOL            shift and go to state 61
    NOT             shift and go to state 47
    ENTERO          shift and go to state 182
    STRING          shift and go to state 183

    expresionBool                  shift and go to state 285
    valorDouble                    shift and go to state 177
    valorBool                      shift and go to state 179
    negacionBool                   shift and go to state 180
    comparacionBool                shift and go to state 218
    valor                          shift and go to state 38
    valorInt                       shift and go to state 181

state 147

    (209) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> FOR PIZQ . asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (193) asignacionFor -> . INT VARIABLE IGUAL expresionInt
    (194) asignacionFor -> . DOUBLER VARIABLE IGUAL expresionDouble
    (195) asignacionFor -> . NUM VARIABLE IGUAL expresionDouble
    (196) asignacionFor -> . DYNAMIC VARIABLE IGUAL expresionInt
    (197) asignacionFor -> . DYNAMIC VARIABLE IGUAL expresionDouble
    (198) asignacionFor -> . VAR VARIABLE IGUAL expresionInt
    (199) asignacionFor -> . VAR VARIABLE IGUAL expresionDouble
    (200) asignacionFor -> . VARIABLE IGUAL expresionInt
    (201) asignacionFor -> . VARIABLE IGUAL expresionDouble

    INT             shift and go to state 288
    DOUBLER         shift and go to state 289
    NUM             shift and go to state 290
    DYNAMIC         shift and go to state 291
    VAR             shift and go to state 292
    VARIABLE        shift and go to state 287

    asignacionFor                  shift and go to state 286

state 148

    (89) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE
    (90) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> LIST MENOR . STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (93) expresionLista -> LIST MENOR . INT MAYOR VARIABLE
    (94) expresionLista -> LIST MENOR . INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> LIST MENOR . INT MAYOR VARIABLE IGUAL expresionNewList
    (97) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE
    (98) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> LIST MENOR . DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (101) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE
    (102) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> LIST MENOR . NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE
    (105) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> LIST MENOR . BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (108) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> LIST MENOR . DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (112) expresionLista -> LIST MENOR . SET MAYOR VARIABLE
    (113) expresionLista -> LIST MENOR . SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> LIST MENOR . SET MAYOR VARIABLE IGUAL expresionNewList
    (116) expresionLista -> LIST MENOR . MAP MAYOR VARIABLE
    (117) expresionLista -> LIST MENOR . MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> LIST MENOR . MAP MAYOR VARIABLE IGUAL expresionNewList

    STRINGR         shift and go to state 293
    INT             shift and go to state 294
    DOUBLER         shift and go to state 295
    NUM             shift and go to state 296
    BOOLR           shift and go to state 297
    DYNAMIC         shift and go to state 298
    SET             shift and go to state 299
    MAP             shift and go to state 300


state 149

    (92) expresionLista -> CIZQ expListString . CDER

    CDER            shift and go to state 301


state 150

    (88) expresionNewList -> CIZQ CDER .

    PUNTOYCOMA      reduce using rule 88 (expresionNewList -> CIZQ CDER .)
    DOSPUNTOS       reduce using rule 88 (expresionNewList -> CIZQ CDER .)
    COMA            reduce using rule 88 (expresionNewList -> CIZQ CDER .)
    LDER            reduce using rule 88 (expresionNewList -> CIZQ CDER .)


state 151

    (96) expresionLista -> CIZQ expListInt . CDER

    CDER            shift and go to state 302


state 152

    (100) expresionLista -> CIZQ expListNum . CDER

    CDER            shift and go to state 303


state 153

    (107) expresionLista -> CIZQ expListBool . CDER

    CDER            shift and go to state 304


state 154

    (111) expresionLista -> CIZQ expListDynamic . CDER

    CDER            shift and go to state 305


state 155

    (115) expresionLista -> CIZQ expListSet . CDER

    CDER            shift and go to state 306


state 156

    (119) expresionLista -> CIZQ expListMap . CDER

    CDER            shift and go to state 307


state 157

    (123) expListString -> STRING .
    (124) expListString -> STRING . COMA expListString
    (141) expListDynamic -> STRING .
    (145) expListDynamic -> STRING . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 123 (expListString -> STRING .)
    CDER            reduce using rule 123 (expListString -> STRING .)
    COMA            shift and go to state 308

  ! CDER            [ reduce using rule 141 (expListDynamic -> STRING .) ]


state 158

    (125) expListString -> VARIABLE .
    (126) expListString -> VARIABLE . COMA expListString
    (129) expListInt -> VARIABLE .
    (130) expListInt -> VARIABLE . COMA expListInt
    (135) expListNum -> VARIABLE .
    (136) expListNum -> VARIABLE . COMA expListNum
    (139) expListBool -> VARIABLE .
    (140) expListBool -> VARIABLE . COMA expListBool
    (149) expListDynamic -> VARIABLE .
    (150) expListDynamic -> VARIABLE . COMA expListDynamic
    (155) expListSet -> VARIABLE .
    (156) expListSet -> VARIABLE . COMA expListSet
    (161) expListMap -> VARIABLE .
    (162) expListMap -> VARIABLE . COMA expListMap

  ! reduce/reduce conflict for CDER resolved using rule 125 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 125 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 125 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 125 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 125 (expListString -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 125 (expListString -> VARIABLE .)
    CDER            reduce using rule 125 (expListString -> VARIABLE .)
    COMA            shift and go to state 309

  ! CDER            [ reduce using rule 129 (expListInt -> VARIABLE .) ]
  ! CDER            [ reduce using rule 135 (expListNum -> VARIABLE .) ]
  ! CDER            [ reduce using rule 139 (expListBool -> VARIABLE .) ]
  ! CDER            [ reduce using rule 149 (expListDynamic -> VARIABLE .) ]
  ! CDER            [ reduce using rule 155 (expListSet -> VARIABLE .) ]
  ! CDER            [ reduce using rule 161 (expListMap -> VARIABLE .) ]


state 159

    (127) expListInt -> ENTERO .
    (128) expListInt -> ENTERO . COMA expListInt
    (131) expListNum -> ENTERO .
    (133) expListNum -> ENTERO . COMA expListNum
    (142) expListDynamic -> ENTERO .
    (146) expListDynamic -> ENTERO . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 127 (expListInt -> ENTERO .)
  ! reduce/reduce conflict for CDER resolved using rule 127 (expListInt -> ENTERO .)
    CDER            reduce using rule 127 (expListInt -> ENTERO .)
    COMA            shift and go to state 310

  ! CDER            [ reduce using rule 131 (expListNum -> ENTERO .) ]
  ! CDER            [ reduce using rule 142 (expListDynamic -> ENTERO .) ]


state 160

    (132) expListNum -> DOUBLE .
    (134) expListNum -> DOUBLE . COMA expListNum
    (143) expListDynamic -> DOUBLE .
    (147) expListDynamic -> DOUBLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 132 (expListNum -> DOUBLE .)
    CDER            reduce using rule 132 (expListNum -> DOUBLE .)
    COMA            shift and go to state 311

  ! CDER            [ reduce using rule 143 (expListDynamic -> DOUBLE .) ]


state 161

    (137) expListBool -> BOOL .
    (138) expListBool -> BOOL . COMA expListBool
    (144) expListDynamic -> BOOL .
    (148) expListDynamic -> BOOL . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 137 (expListBool -> BOOL .)
    CDER            reduce using rule 137 (expListBool -> BOOL .)
    COMA            shift and go to state 312

  ! CDER            [ reduce using rule 144 (expListDynamic -> BOOL .) ]


state 162

    (151) expListSet -> SETFROM . PIZQ CIZQ CDER PDER
    (152) expListSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER
    (153) expListSet -> SETFROM . PIZQ CIZQ CDER PDER COMA expListSet
    (154) expListSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER COMA expListSet

    PIZQ            shift and go to state 313


state 163

    (157) expListMap -> LIZQ . LDER
    (158) expListMap -> LIZQ . expMap LDER
    (159) expListMap -> LIZQ . LDER COMA expListMap
    (160) expListMap -> LIZQ . expMap LDER COMA expListMap
    (66) expMap -> . claveValor DOSPUNTOS claveValor
    (67) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (68) claveValor -> . VARIABLE
    (69) claveValor -> . STRING
    (70) claveValor -> . ENTERO
    (71) claveValor -> . DOUBLE
    (72) claveValor -> . BOOL
    (73) claveValor -> . CIZQ expListDynamic CDER
    (74) claveValor -> . CIZQ expListSet CDER
    (75) claveValor -> . expresionNewList
    (76) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (77) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (78) claveValor -> . LIZQ LDER
    (79) claveValor -> . LIZQ expMap LDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 314
    VARIABLE        shift and go to state 131
    STRING          shift and go to state 132
    ENTERO          shift and go to state 133
    DOUBLE          shift and go to state 134
    BOOL            shift and go to state 135
    CIZQ            shift and go to state 136
    SETFROM         shift and go to state 138
    LIZQ            shift and go to state 127
    NEWLIST         shift and go to state 55

    expMap                         shift and go to state 315
    claveValor                     shift and go to state 130
    expresionNewList               shift and go to state 137

state 164

    (80) expresionSet -> SET VARIABLE .
    (82) expresionSet -> SET VARIABLE . IGUAL SETFROM PIZQ CIZQ CDER PDER
    (84) expresionSet -> SET VARIABLE . IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER

    PUNTOYCOMA      reduce using rule 80 (expresionSet -> SET VARIABLE .)
    IGUAL           shift and go to state 316


state 165

    (61) expresionMap -> MAP VARIABLE .
    (62) expresionMap -> MAP VARIABLE . IGUAL LIZQ LDER
    (64) expresionMap -> MAP VARIABLE . IGUAL LIZQ expMap LDER

    PUNTOYCOMA      reduce using rule 61 (expresionMap -> MAP VARIABLE .)
    IGUAL           shift and go to state 317


state 166

    (86) expresionNewList -> NEWLIST PIZQ . PDER
    (87) expresionNewList -> NEWLIST PIZQ . ENTERO PDER

    PDER            shift and go to state 318
    ENTERO          shift and go to state 319


state 167

    (81) expresionSet -> SETFROM PIZQ . CIZQ CDER PDER
    (83) expresionSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 320


state 168

    (60) expresionSwitch -> SWITCH PIZQ . expresionBool PDER
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 178
    DOUBLE          shift and go to state 58
    BOOL            shift and go to state 61
    NOT             shift and go to state 47
    ENTERO          shift and go to state 182
    STRING          shift and go to state 183

    expresionBool                  shift and go to state 321
    valorDouble                    shift and go to state 177
    valorBool                      shift and go to state 179
    negacionBool                   shift and go to state 180
    comparacionBool                shift and go to state 218
    valor                          shift and go to state 38
    valorInt                       shift and go to state 181

state 169

    (235) valorString -> STRING CIZQ . ENTERO CDER

    ENTERO          shift and go to state 322


state 170

    (2) final -> asignacion PUNTOYCOMA final .

    $end            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VARIABLE        reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    INT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLER         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NUM             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRINGR         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOLR           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    VAR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    WHILE           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DO              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    IF              reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSE            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    PRINT           reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NOT             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ELSEIF          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    FOR             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LIST            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    CIZQ            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    NEWLIST         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    SET             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    SETFROM         reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    MAP             reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LIZQ            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    SWITCH          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    ENTERO          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    DOUBLE          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    STRING          reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    BOOL            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)
    LDER            reduce using rule 2 (final -> asignacion PUNTOYCOMA final .)


state 171

    (4) final -> expresionInt PUNTOYCOMA final .

    $end            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VARIABLE        reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    INT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLER         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NUM             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRINGR         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOLR           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    VAR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    WHILE           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DO              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    IF              reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSE            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    PRINT           reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NOT             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ELSEIF          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    FOR             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LIST            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    CIZQ            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    NEWLIST         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    SET             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    SETFROM         reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    MAP             reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LIZQ            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    SWITCH          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    ENTERO          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    DOUBLE          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    STRING          reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    BOOL            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)
    LDER            reduce using rule 4 (final -> expresionInt PUNTOYCOMA final .)


state 172

    (6) final -> expresionDouble PUNTOYCOMA final .

    $end            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VARIABLE        reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    INT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLER         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NUM             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRINGR         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOLR           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    VAR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    WHILE           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DO              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    IF              reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSE            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    PRINT           reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NOT             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ELSEIF          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    FOR             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LIST            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    CIZQ            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    NEWLIST         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    SET             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    SETFROM         reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    MAP             reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LIZQ            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    SWITCH          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    ENTERO          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    DOUBLE          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    STRING          reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    BOOL            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)
    LDER            reduce using rule 6 (final -> expresionDouble PUNTOYCOMA final .)


state 173

    (8) final -> expresionString PUNTOYCOMA final .

    $end            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VARIABLE        reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    INT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLER         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NUM             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRINGR         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOLR           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    VAR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    WHILE           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DO              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    IF              reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSE            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    PRINT           reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NOT             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ELSEIF          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    FOR             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LIST            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    CIZQ            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    NEWLIST         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    SET             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    SETFROM         reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    MAP             reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LIZQ            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    SWITCH          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    ENTERO          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    DOUBLE          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    STRING          reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    BOOL            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)
    LDER            reduce using rule 8 (final -> expresionString PUNTOYCOMA final .)


state 174

    (10) final -> expresionBool PUNTOYCOMA final .

    $end            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    INT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NUM             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    VAR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DO              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    IF              reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NOT             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    FOR             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LIST            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    SET             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    MAP             reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LIZQ            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    SWITCH          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    STRING          reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)
    LDER            reduce using rule 10 (final -> expresionBool PUNTOYCOMA final .)


state 175

    (228) comparacionBool -> expresionBool operadorLogico expresionBool .
    (228) comparacionBool -> expresionBool . operadorLogico expresionBool
    (229) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (261) operadorLogico -> . AND
    (262) operadorLogico -> . OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    PUNTOYCOMA      reduce using rule 228 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    PDER            reduce using rule 228 (comparacionBool -> expresionBool operadorLogico expresionBool .)
    AND             shift and go to state 68
    OR              shift and go to state 69

  ! AND             [ reduce using rule 228 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]
  ! OR              [ reduce using rule 228 (comparacionBool -> expresionBool operadorLogico expresionBool .) ]

    operadorLogico                 shift and go to state 67

state 176

    (229) comparacionBool -> expresionBool operadorLogico comparacionBool .
    (224) expresionBool -> comparacionBool .

  ! reduce/reduce conflict for AND resolved using rule 224 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for OR resolved using rule 224 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 224 (expresionBool -> comparacionBool .)
  ! reduce/reduce conflict for PDER resolved using rule 224 (expresionBool -> comparacionBool .)
    AND             reduce using rule 224 (expresionBool -> comparacionBool .)
    OR              reduce using rule 224 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 224 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 224 (expresionBool -> comparacionBool .)

  ! PUNTOYCOMA      [ reduce using rule 229 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! AND             [ reduce using rule 229 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! OR              [ reduce using rule 229 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]
  ! PDER            [ reduce using rule 229 (comparacionBool -> expresionBool operadorLogico comparacionBool .) ]


state 177

    (218) expresionBool -> valorDouble . comparadorMat expresionDouble
    (221) expresionBool -> valorDouble . comparadorMat VARIABLE
    (255) comparadorMat -> . DIGUAL
    (256) comparadorMat -> . NOIGUAL
    (257) comparadorMat -> . MAYOR
    (258) comparadorMat -> . MENOR
    (259) comparadorMat -> . MAYIGUAL
    (260) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 96
    NOIGUAL         shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYIGUAL        shift and go to state 100
    MENIGUAL        shift and go to state 101

    comparadorMat                  shift and go to state 323

state 178

    (219) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (220) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (217) valorBool -> VARIABLE .
    (184) valor -> VARIABLE .
    (242) valorInt -> VARIABLE .
    (255) comparadorMat -> . DIGUAL
    (256) comparadorMat -> . NOIGUAL
    (257) comparadorMat -> . MAYOR
    (258) comparadorMat -> . MENOR
    (259) comparadorMat -> . MAYIGUAL
    (260) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    AND             reduce using rule 217 (valorBool -> VARIABLE .)
    OR              reduce using rule 217 (valorBool -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 217 (valorBool -> VARIABLE .)
    PDER            reduce using rule 217 (valorBool -> VARIABLE .)
    IS              reduce using rule 184 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 184 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 96
    NOIGUAL         shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYIGUAL        shift and go to state 100
    MENIGUAL        shift and go to state 101

  ! DIGUAL          [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 242 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 324

state 179

    (222) expresionBool -> valorBool .

    AND             reduce using rule 222 (expresionBool -> valorBool .)
    OR              reduce using rule 222 (expresionBool -> valorBool .)
    PUNTOYCOMA      reduce using rule 222 (expresionBool -> valorBool .)
    PDER            reduce using rule 222 (expresionBool -> valorBool .)


state 180

    (223) expresionBool -> negacionBool .

    AND             reduce using rule 223 (expresionBool -> negacionBool .)
    OR              reduce using rule 223 (expresionBool -> negacionBool .)
    PUNTOYCOMA      reduce using rule 223 (expresionBool -> negacionBool .)
    PDER            reduce using rule 223 (expresionBool -> negacionBool .)


state 181

    (246) valorDouble -> valorInt .

    DIGUAL          reduce using rule 246 (valorDouble -> valorInt .)
    NOIGUAL         reduce using rule 246 (valorDouble -> valorInt .)
    MAYOR           reduce using rule 246 (valorDouble -> valorInt .)
    MENOR           reduce using rule 246 (valorDouble -> valorInt .)
    MAYIGUAL        reduce using rule 246 (valorDouble -> valorInt .)
    MENIGUAL        reduce using rule 246 (valorDouble -> valorInt .)
    SUMA            reduce using rule 246 (valorDouble -> valorInt .)
    RESTA           reduce using rule 246 (valorDouble -> valorInt .)
    MULTI           reduce using rule 246 (valorDouble -> valorInt .)
    DIV             reduce using rule 246 (valorDouble -> valorInt .)
    DIVENTERO       reduce using rule 246 (valorDouble -> valorInt .)
    MOD             reduce using rule 246 (valorDouble -> valorInt .)
    PUNTOYCOMA      reduce using rule 246 (valorDouble -> valorInt .)
    AND             reduce using rule 246 (valorDouble -> valorInt .)
    OR              reduce using rule 246 (valorDouble -> valorInt .)
    PDER            reduce using rule 246 (valorDouble -> valorInt .)


state 182

    (183) valor -> ENTERO .
    (241) valorInt -> ENTERO .

  ! reduce/reduce conflict for SUMA resolved using rule 183 (valor -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 183 (valor -> ENTERO .)
  ! reduce/reduce conflict for MULTI resolved using rule 183 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIV resolved using rule 183 (valor -> ENTERO .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 183 (valor -> ENTERO .)
  ! reduce/reduce conflict for MOD resolved using rule 183 (valor -> ENTERO .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 183 (valor -> ENTERO .)
  ! reduce/reduce conflict for PDER resolved using rule 183 (valor -> ENTERO .)
    IS              reduce using rule 183 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 183 (valor -> ENTERO .)
    SUMA            reduce using rule 183 (valor -> ENTERO .)
    RESTA           reduce using rule 183 (valor -> ENTERO .)
    MULTI           reduce using rule 183 (valor -> ENTERO .)
    DIV             reduce using rule 183 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 183 (valor -> ENTERO .)
    MOD             reduce using rule 183 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 183 (valor -> ENTERO .)
    PDER            reduce using rule 183 (valor -> ENTERO .)
    DIGUAL          reduce using rule 241 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 241 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 241 (valorInt -> ENTERO .)
    MENOR           reduce using rule 241 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 241 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 241 (valorInt -> ENTERO .)

  ! SUMA            [ reduce using rule 241 (valorInt -> ENTERO .) ]
  ! RESTA           [ reduce using rule 241 (valorInt -> ENTERO .) ]
  ! MULTI           [ reduce using rule 241 (valorInt -> ENTERO .) ]
  ! DIV             [ reduce using rule 241 (valorInt -> ENTERO .) ]
  ! DIVENTERO       [ reduce using rule 241 (valorInt -> ENTERO .) ]
  ! MOD             [ reduce using rule 241 (valorInt -> ENTERO .) ]
  ! PUNTOYCOMA      [ reduce using rule 241 (valorInt -> ENTERO .) ]
  ! PDER            [ reduce using rule 241 (valorInt -> ENTERO .) ]


state 183

    (186) valor -> STRING .

    IS              reduce using rule 186 (valor -> STRING .)
    ISNEGADO        reduce using rule 186 (valor -> STRING .)


state 184

    (12) final -> expresionBoolFor PUNTOYCOMA final .

    $end            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    VARIABLE        reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    INT             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DOUBLER         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NUM             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    STRINGR         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BOOLR           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    VAR             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    WHILE           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DO              reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    IF              reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ELSE            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    PRINT           reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NOT             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ELSEIF          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    FOR             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LIST            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    CIZQ            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    NEWLIST         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    SET             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    SETFROM         reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    MAP             reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LIZQ            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    SWITCH          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    ENTERO          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    DOUBLE          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    STRING          reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    BOOL            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)
    LDER            reduce using rule 12 (final -> expresionBoolFor PUNTOYCOMA final .)


state 185

    (16) final -> sentenciaWhile PUNTOYCOMA final .

    $end            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    INT             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NUM             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    VAR             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DO              reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    IF              reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NOT             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    FOR             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LIST            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    CIZQ            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    NEWLIST         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    SET             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    SETFROM         reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    MAP             reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LIZQ            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    SWITCH          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    STRING          reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)
    LDER            reduce using rule 16 (final -> sentenciaWhile PUNTOYCOMA final .)


state 186

    (18) final -> sentenciaDoWhile PUNTOYCOMA final .

    $end            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VARIABLE        reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    INT             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLER         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NUM             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRINGR         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOLR           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    VAR             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    WHILE           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DO              reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    IF              reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSE            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    PRINT           reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NOT             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ELSEIF          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    FOR             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LIST            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    CIZQ            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    NEWLIST         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    SET             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    SETFROM         reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    MAP             reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LIZQ            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    SWITCH          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    ENTERO          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    DOUBLE          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    STRING          reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    BOOL            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)
    LDER            reduce using rule 18 (final -> sentenciaDoWhile PUNTOYCOMA final .)


state 187

    (20) final -> sentenciaIf PUNTOYCOMA final .

    $end            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    INT             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NUM             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    VAR             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    WHILE           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DO              reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    IF              reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSE            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    PRINT           reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NOT             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    FOR             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LIST            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    CIZQ            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    NEWLIST         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    SET             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    SETFROM         reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    MAP             reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LIZQ            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    SWITCH          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    STRING          reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    BOOL            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)
    LDER            reduce using rule 20 (final -> sentenciaIf PUNTOYCOMA final .)


state 188

    (24) final -> sentenciaElse PUNTOYCOMA final .

    $end            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    VARIABLE        reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    INT             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DOUBLER         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NUM             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    STRINGR         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    BOOLR           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    VAR             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    WHILE           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DO              reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    IF              reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ELSE            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    PRINT           reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NOT             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ELSEIF          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    FOR             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LIST            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    CIZQ            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    NEWLIST         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    SET             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    SETFROM         reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    MAP             reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LIZQ            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    SWITCH          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    ENTERO          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    DOUBLE          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    STRING          reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    BOOL            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)
    LDER            reduce using rule 24 (final -> sentenciaElse PUNTOYCOMA final .)


state 189

    (28) final -> imprimir PUNTOYCOMA final .

    $end            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    VARIABLE        reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    INT             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DOUBLER         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NUM             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    STRINGR         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    BOOLR           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    VAR             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    WHILE           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DO              reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    IF              reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ELSE            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    PRINT           reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NOT             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ELSEIF          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    FOR             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LIST            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    CIZQ            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    NEWLIST         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    SET             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    SETFROM         reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    MAP             reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LIZQ            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    SWITCH          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    ENTERO          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    DOUBLE          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    STRING          reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    BOOL            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)
    LDER            reduce using rule 28 (final -> imprimir PUNTOYCOMA final .)


state 190

    (30) final -> funcionStdin PUNTOYCOMA final .

    $end            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    VARIABLE        reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    INT             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLER         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NUM             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    STRINGR         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    BOOLR           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    VAR             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    WHILE           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DO              reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    IF              reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ELSE            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    PRINT           reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NOT             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ELSEIF          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    FOR             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LIST            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    CIZQ            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    NEWLIST         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    SET             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    SETFROM         reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    MAP             reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LIZQ            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    SWITCH          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    ENTERO          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    DOUBLE          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    STRING          reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    BOOL            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)
    LDER            reduce using rule 30 (final -> funcionStdin PUNTOYCOMA final .)


state 191

    (32) final -> funcionStdout PUNTOYCOMA final .

    $end            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    VARIABLE        reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    INT             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLER         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NUM             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    STRINGR         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    BOOLR           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    VAR             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    WHILE           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DO              reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    IF              reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ELSE            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    PRINT           reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NOT             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ELSEIF          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    FOR             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LIST            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    CIZQ            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    NEWLIST         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    SET             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    SETFROM         reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    MAP             reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LIZQ            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    SWITCH          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    ENTERO          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    DOUBLE          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    STRING          reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    BOOL            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)
    LDER            reduce using rule 32 (final -> funcionStdout PUNTOYCOMA final .)


state 192

    (34) final -> negacionBool PUNTOYCOMA final .

    $end            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    INT             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DO              reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    IF              reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    FOR             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LIST            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    SET             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    MAP             reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LIZQ            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    SWITCH          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 34 (final -> negacionBool PUNTOYCOMA final .)


state 193

    (35) final -> comparacionBool PUNTOYCOMA final .

    $end            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    VARIABLE        reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    INT             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLER         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NUM             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    STRINGR         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    BOOLR           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    VAR             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    WHILE           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DO              reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    IF              reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ELSE            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    PRINT           reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NOT             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ELSEIF          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    FOR             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LIST            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    CIZQ            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    NEWLIST         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    SET             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    SETFROM         reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    MAP             reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LIZQ            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    SWITCH          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    ENTERO          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    DOUBLE          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    STRING          reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    BOOL            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)
    LDER            reduce using rule 35 (final -> comparacionBool PUNTOYCOMA final .)


state 194

    (37) final -> sentenciaElseIf PUNTOYCOMA final .

    $end            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    VARIABLE        reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    INT             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DOUBLER         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NUM             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    STRINGR         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BOOLR           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    VAR             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    WHILE           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DO              reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    IF              reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ELSE            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    PRINT           reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NOT             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ELSEIF          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    FOR             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LIST            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    CIZQ            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    NEWLIST         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    SET             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    SETFROM         reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    MAP             reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LIZQ            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    SWITCH          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    ENTERO          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    DOUBLE          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    STRING          reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    BOOL            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)
    LDER            reduce using rule 37 (final -> sentenciaElseIf PUNTOYCOMA final .)


state 195

    (41) final -> sentenciaFor PUNTOYCOMA final .

    $end            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    VARIABLE        reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    INT             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DOUBLER         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NUM             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    STRINGR         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    BOOLR           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    VAR             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    WHILE           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DO              reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    IF              reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ELSE            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    PRINT           reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NOT             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ELSEIF          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    FOR             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LIST            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    CIZQ            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    NEWLIST         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    SET             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    SETFROM         reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    MAP             reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LIZQ            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    SWITCH          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    ENTERO          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    DOUBLE          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    STRING          reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    BOOL            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)
    LDER            reduce using rule 41 (final -> sentenciaFor PUNTOYCOMA final .)


state 196

    (45) final -> sentenciaSubstring PUNTOYCOMA final .

    $end            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VARIABLE        reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    INT             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLER         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NUM             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRINGR         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOLR           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    VAR             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    WHILE           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DO              reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    IF              reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSE            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    PRINT           reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NOT             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ELSEIF          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    FOR             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LIST            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    CIZQ            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    NEWLIST         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    SET             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    SETFROM         reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    MAP             reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LIZQ            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    SWITCH          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    ENTERO          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    DOUBLE          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    STRING          reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    BOOL            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)
    LDER            reduce using rule 45 (final -> sentenciaSubstring PUNTOYCOMA final .)


state 197

    (47) final -> VARIABLE DSUMA PUNTOYCOMA . final
    (48) final -> VARIABLE DSUMA PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    LDER            reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 48 (final -> VARIABLE DSUMA PUNTOYCOMA .) ]

    final                          shift and go to state 325
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 198

    (49) final -> VARIABLE DRESTA PUNTOYCOMA . final
    (50) final -> VARIABLE DRESTA PUNTOYCOMA .
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLER resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRINGR resolved as shift
  ! shift/reduce conflict for BOOLR resolved as shift
  ! shift/reduce conflict for DYNAMIC resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNCIONSTDIN resolved as shift
  ! shift/reduce conflict for FUNCIONSTDOUT resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for CIZQ resolved as shift
  ! shift/reduce conflict for NEWLIST resolved as shift
  ! shift/reduce conflict for SET resolved as shift
  ! shift/reduce conflict for SETFROM resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for LIZQ resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    LDER            reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .)
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    LIZQ            shift and go to state 40
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

  ! VARIABLE        [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! INT             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DOUBLER         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NUM             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! STRINGR         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! BOOLR           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DYNAMIC         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! VAR             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! WHILE           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DO              [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! IF              [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ELSE            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! PRINT           [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FUNCIONSTDIN    [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FUNCIONSTDOUT   [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NOT             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ELSEIF          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! FOR             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! LIST            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! CIZQ            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! NEWLIST         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! SET             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! SETFROM         [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! MAP             [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! LIZQ            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! SWITCH          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! ENTERO          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! DOUBLE          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! STRING          [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]
  ! BOOL            [ reduce using rule 50 (final -> VARIABLE DRESTA PUNTOYCOMA .) ]

    final                          shift and go to state 326
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 199

    (220) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (204) expresionBoolFor -> VARIABLE comparadorMat VARIABLE .
    (242) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 204 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 204 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 220 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 220 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 220 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 220 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 204 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 242 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 242 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 242 (valorInt -> VARIABLE .)
    DIV             reduce using rule 242 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 242 (valorInt -> VARIABLE .)
    MOD             reduce using rule 242 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 220 (expresionBool -> VARIABLE comparadorMat VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 242 (valorInt -> VARIABLE .) ]


state 200

    (219) expresionBool -> VARIABLE comparadorMat expresionDouble .
    (203) expresionBoolFor -> VARIABLE comparadorMat expresionDouble .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 203 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 219 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 219 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 203 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 219 (expresionBool -> VARIABLE comparadorMat expresionDouble .) ]


state 201

    (247) expresionDouble -> valorDouble . operadorMat expresionDouble
    (248) expresionDouble -> valorDouble .
    (249) operadorMat -> . SUMA
    (250) operadorMat -> . RESTA
    (251) operadorMat -> . MULTI
    (252) operadorMat -> . DIV
    (253) operadorMat -> . DIVENTERO
    (254) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 248 (expresionDouble -> valorDouble .)
    AND             reduce using rule 248 (expresionDouble -> valorDouble .)
    OR              reduce using rule 248 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 248 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 114
    RESTA           shift and go to state 115
    MULTI           shift and go to state 116
    DIV             shift and go to state 117
    DIVENTERO       shift and go to state 118
    MOD             shift and go to state 119

    operadorMat                    shift and go to state 120

state 202

    (245) valorDouble -> DOUBLE .

    SUMA            reduce using rule 245 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 245 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 245 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 245 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 245 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 245 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 245 (valorDouble -> DOUBLE .)
    AND             reduce using rule 245 (valorDouble -> DOUBLE .)
    OR              reduce using rule 245 (valorDouble -> DOUBLE .)
    PDER            reduce using rule 245 (valorDouble -> DOUBLE .)


state 203

    (241) valorInt -> ENTERO .

    SUMA            reduce using rule 241 (valorInt -> ENTERO .)
    RESTA           reduce using rule 241 (valorInt -> ENTERO .)
    MULTI           reduce using rule 241 (valorInt -> ENTERO .)
    DIV             reduce using rule 241 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 241 (valorInt -> ENTERO .)
    MOD             reduce using rule 241 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 241 (valorInt -> ENTERO .)
    AND             reduce using rule 241 (valorInt -> ENTERO .)
    OR              reduce using rule 241 (valorInt -> ENTERO .)
    PDER            reduce using rule 241 (valorInt -> ENTERO .)


state 204

    (239) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO PDER
    (240) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ . ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 327


state 205

    (120) expresionLista -> VARIABLE CIZQ ENTERO . CDER

    CDER            shift and go to state 328


state 206

    (121) expresionLista -> VARIABLE FUNCIONTAKE PIZQ . ENTERO PDER
    (85) expresionSet -> VARIABLE FUNCIONTAKE PIZQ . ENTERO PDER

    ENTERO          shift and go to state 329


state 207

    (122) expresionLista -> VARIABLE FUNCIONRANGE PIZQ . ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 330


state 208

    (184) valor -> VARIABLE .
    (219) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (220) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (231) valorString -> VARIABLE .
    (242) valorInt -> VARIABLE .
    (217) valorBool -> VARIABLE .
    (239) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (255) comparadorMat -> . DIGUAL
    (256) comparadorMat -> . NOIGUAL
    (257) comparadorMat -> . MAYOR
    (258) comparadorMat -> . MENOR
    (259) comparadorMat -> . MAYIGUAL
    (260) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 184 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 184 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 184 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 184 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 184 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 184 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 184 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 184 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 184 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 184 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 184 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 184 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 184 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IS              reduce using rule 184 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 184 (valor -> VARIABLE .)
    SUMA            reduce using rule 184 (valor -> VARIABLE .)
    RESTA           reduce using rule 184 (valor -> VARIABLE .)
    MULTI           reduce using rule 184 (valor -> VARIABLE .)
    DIV             reduce using rule 184 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 184 (valor -> VARIABLE .)
    MOD             reduce using rule 184 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 184 (valor -> VARIABLE .)
    PDER            reduce using rule 184 (valor -> VARIABLE .)
    CIZQ            reduce using rule 231 (valorString -> VARIABLE .)
    AND             reduce using rule 217 (valorBool -> VARIABLE .)
    OR              reduce using rule 217 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 91
    DIGUAL          shift and go to state 96
    NOIGUAL         shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYIGUAL        shift and go to state 100
    MENIGUAL        shift and go to state 101

  ! SUMA            [ reduce using rule 231 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 231 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 231 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 217 (valorBool -> VARIABLE .) ]
  ! PDER            [ reduce using rule 217 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 324

state 209

    (171) asignacionSimple -> VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 171 (asignacionSimple -> VARIABLE IGUAL expresion .)
    PDER            reduce using rule 171 (asignacionSimple -> VARIABLE IGUAL expresion .)


state 210

    (187) expresion -> valor . operadorMat expresion
    (188) expresion -> valor .
    (225) expresionBool -> valor . IS objeto
    (226) expresionBool -> valor . ISNEGADO objeto
    (249) operadorMat -> . SUMA
    (250) operadorMat -> . RESTA
    (251) operadorMat -> . MULTI
    (252) operadorMat -> . DIV
    (253) operadorMat -> . DIVENTERO
    (254) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 188 (expresion -> valor .)
    PDER            reduce using rule 188 (expresion -> valor .)
    IS              shift and go to state 124
    ISNEGADO        shift and go to state 125
    SUMA            shift and go to state 114
    RESTA           shift and go to state 115
    MULTI           shift and go to state 116
    DIV             shift and go to state 117
    DIVENTERO       shift and go to state 118
    MOD             shift and go to state 119

    operadorMat                    shift and go to state 331

state 211

    (189) expresion -> expresionString .

    PUNTOYCOMA      reduce using rule 189 (expresion -> expresionString .)
    PDER            reduce using rule 189 (expresion -> expresionString .)


state 212

    (190) expresion -> expresionInt .

    PUNTOYCOMA      reduce using rule 190 (expresion -> expresionInt .)
    PDER            reduce using rule 190 (expresion -> expresionInt .)


state 213

    (191) expresion -> expresionDouble .

    PUNTOYCOMA      reduce using rule 191 (expresion -> expresionDouble .)
    PDER            reduce using rule 191 (expresion -> expresionDouble .)


state 214

    (192) expresion -> expresionBool .
    (228) comparacionBool -> expresionBool . operadorLogico expresionBool
    (229) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (261) operadorLogico -> . AND
    (262) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 192 (expresion -> expresionBool .)
    PDER            reduce using rule 192 (expresion -> expresionBool .)
    AND             shift and go to state 68
    OR              shift and go to state 69

    operadorLogico                 shift and go to state 67

state 215

    (185) valor -> DOUBLE .
    (245) valorDouble -> DOUBLE .

  ! reduce/reduce conflict for SUMA resolved using rule 185 (valor -> DOUBLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 185 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 185 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIV resolved using rule 185 (valor -> DOUBLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 185 (valor -> DOUBLE .)
  ! reduce/reduce conflict for MOD resolved using rule 185 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 185 (valor -> DOUBLE .)
  ! reduce/reduce conflict for PDER resolved using rule 185 (valor -> DOUBLE .)
    IS              reduce using rule 185 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 185 (valor -> DOUBLE .)
    SUMA            reduce using rule 185 (valor -> DOUBLE .)
    RESTA           reduce using rule 185 (valor -> DOUBLE .)
    MULTI           reduce using rule 185 (valor -> DOUBLE .)
    DIV             reduce using rule 185 (valor -> DOUBLE .)
    DIVENTERO       reduce using rule 185 (valor -> DOUBLE .)
    MOD             reduce using rule 185 (valor -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 185 (valor -> DOUBLE .)
    PDER            reduce using rule 185 (valor -> DOUBLE .)
    DIGUAL          reduce using rule 245 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 245 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 245 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 245 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 245 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 245 (valorDouble -> DOUBLE .)

  ! SUMA            [ reduce using rule 245 (valorDouble -> DOUBLE .) ]
  ! RESTA           [ reduce using rule 245 (valorDouble -> DOUBLE .) ]
  ! MULTI           [ reduce using rule 245 (valorDouble -> DOUBLE .) ]
  ! DIV             [ reduce using rule 245 (valorDouble -> DOUBLE .) ]
  ! DIVENTERO       [ reduce using rule 245 (valorDouble -> DOUBLE .) ]
  ! MOD             [ reduce using rule 245 (valorDouble -> DOUBLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 245 (valorDouble -> DOUBLE .) ]
  ! PDER            [ reduce using rule 245 (valorDouble -> DOUBLE .) ]


state 216

    (186) valor -> STRING .
    (230) valorString -> STRING .
    (235) valorString -> STRING . CIZQ ENTERO CDER

  ! reduce/reduce conflict for SUMA resolved using rule 186 (valor -> STRING .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 186 (valor -> STRING .)
  ! reduce/reduce conflict for PDER resolved using rule 186 (valor -> STRING .)
  ! shift/reduce conflict for CIZQ resolved as shift
    IS              reduce using rule 186 (valor -> STRING .)
    ISNEGADO        reduce using rule 186 (valor -> STRING .)
    SUMA            reduce using rule 186 (valor -> STRING .)
    RESTA           reduce using rule 186 (valor -> STRING .)
    MULTI           reduce using rule 186 (valor -> STRING .)
    DIV             reduce using rule 186 (valor -> STRING .)
    DIVENTERO       reduce using rule 186 (valor -> STRING .)
    MOD             reduce using rule 186 (valor -> STRING .)
    PUNTOYCOMA      reduce using rule 186 (valor -> STRING .)
    PDER            reduce using rule 186 (valor -> STRING .)
    CIZQ            shift and go to state 169

  ! SUMA            [ reduce using rule 230 (valorString -> STRING .) ]
  ! CIZQ            [ reduce using rule 230 (valorString -> STRING .) ]
  ! PUNTOYCOMA      [ reduce using rule 230 (valorString -> STRING .) ]
  ! PDER            [ reduce using rule 230 (valorString -> STRING .) ]


state 217

    (247) expresionDouble -> valorDouble . operadorMat expresionDouble
    (248) expresionDouble -> valorDouble .
    (218) expresionBool -> valorDouble . comparadorMat expresionDouble
    (221) expresionBool -> valorDouble . comparadorMat VARIABLE
    (249) operadorMat -> . SUMA
    (250) operadorMat -> . RESTA
    (251) operadorMat -> . MULTI
    (252) operadorMat -> . DIV
    (253) operadorMat -> . DIVENTERO
    (254) operadorMat -> . MOD
    (255) comparadorMat -> . DIGUAL
    (256) comparadorMat -> . NOIGUAL
    (257) comparadorMat -> . MAYOR
    (258) comparadorMat -> . MENOR
    (259) comparadorMat -> . MAYIGUAL
    (260) comparadorMat -> . MENIGUAL

    PUNTOYCOMA      reduce using rule 248 (expresionDouble -> valorDouble .)
    PDER            reduce using rule 248 (expresionDouble -> valorDouble .)
    SUMA            shift and go to state 114
    RESTA           shift and go to state 115
    MULTI           shift and go to state 116
    DIV             shift and go to state 117
    DIVENTERO       shift and go to state 118
    MOD             shift and go to state 119
    DIGUAL          shift and go to state 96
    NOIGUAL         shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYIGUAL        shift and go to state 100
    MENIGUAL        shift and go to state 101

    operadorMat                    shift and go to state 120
    comparadorMat                  shift and go to state 323

state 218

    (224) expresionBool -> comparacionBool .

    AND             reduce using rule 224 (expresionBool -> comparacionBool .)
    OR              reduce using rule 224 (expresionBool -> comparacionBool .)
    PUNTOYCOMA      reduce using rule 224 (expresionBool -> comparacionBool .)
    PDER            reduce using rule 224 (expresionBool -> comparacionBool .)


state 219

    (232) valorString -> FUNCIONSTDIN .

    SUMA            reduce using rule 232 (valorString -> FUNCIONSTDIN .)
    CIZQ            reduce using rule 232 (valorString -> FUNCIONSTDIN .)
    PUNTOYCOMA      reduce using rule 232 (valorString -> FUNCIONSTDIN .)
    PDER            reduce using rule 232 (valorString -> FUNCIONSTDIN .)


state 220

    (234) valorString -> sentenciaSubstring .

    SUMA            reduce using rule 234 (valorString -> sentenciaSubstring .)
    CIZQ            reduce using rule 234 (valorString -> sentenciaSubstring .)
    PUNTOYCOMA      reduce using rule 234 (valorString -> sentenciaSubstring .)
    PDER            reduce using rule 234 (valorString -> sentenciaSubstring .)


state 221

    (52) final -> expresionLista PUNTOYCOMA final .

    $end            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    VARIABLE        reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    INT             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DOUBLER         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NUM             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    STRINGR         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    BOOLR           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    VAR             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    WHILE           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DO              reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    IF              reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ELSE            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    PRINT           reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NOT             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ELSEIF          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    FOR             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LIST            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    CIZQ            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    NEWLIST         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    SET             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    SETFROM         reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    MAP             reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LIZQ            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    SWITCH          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    ENTERO          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    DOUBLE          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    STRING          reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    BOOL            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)
    LDER            reduce using rule 52 (final -> expresionLista PUNTOYCOMA final .)


state 222

    (54) final -> expresionNewList PUNTOYCOMA final .

    $end            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    VARIABLE        reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    INT             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DOUBLER         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NUM             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    STRINGR         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    BOOLR           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    VAR             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    WHILE           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DO              reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    IF              reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ELSE            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    PRINT           reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NOT             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ELSEIF          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    FOR             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LIST            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    CIZQ            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    NEWLIST         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    SET             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    SETFROM         reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    MAP             reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LIZQ            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    SWITCH          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    ENTERO          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    DOUBLE          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    STRING          reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    BOOL            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)
    LDER            reduce using rule 54 (final -> expresionNewList PUNTOYCOMA final .)


state 223

    (56) final -> expresionSet PUNTOYCOMA final .

    $end            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    VARIABLE        reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    INT             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DOUBLER         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    NUM             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    STRINGR         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    BOOLR           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    VAR             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    WHILE           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DO              reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    IF              reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    ELSE            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    PRINT           reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    NOT             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    ELSEIF          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    FOR             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    LIST            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    CIZQ            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    NEWLIST         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    SET             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    SETFROM         reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    MAP             reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    LIZQ            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    SWITCH          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    ENTERO          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    DOUBLE          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    STRING          reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    BOOL            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)
    LDER            reduce using rule 56 (final -> expresionSet PUNTOYCOMA final .)


state 224

    (58) final -> expresionMap PUNTOYCOMA final .

    $end            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    VARIABLE        reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    INT             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    DOUBLER         reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    NUM             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    STRINGR         reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    BOOLR           reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    VAR             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    WHILE           reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    DO              reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    IF              reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    ELSE            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    PRINT           reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    NOT             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    ELSEIF          reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    FOR             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    LIST            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    CIZQ            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    NEWLIST         reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    SET             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    SETFROM         reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    MAP             reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    LIZQ            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    SWITCH          reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    ENTERO          reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    DOUBLE          reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    STRING          reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    BOOL            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)
    LDER            reduce using rule 58 (final -> expresionMap PUNTOYCOMA final .)


state 225

    (163) asignacion -> INT VARIABLE IGUAL . expresionInt
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE

    ENTERO          shift and go to state 203
    VARIABLE        shift and go to state 234

    expresionInt                   shift and go to state 332
    valorInt                       shift and go to state 232

state 226

    (164) asignacion -> DOUBLER VARIABLE IGUAL . expresionDouble
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 202
    ENTERO          shift and go to state 203
    VARIABLE        shift and go to state 234

    expresionDouble                shift and go to state 333
    valorDouble                    shift and go to state 201
    valorInt                       shift and go to state 181

state 227

    (165) asignacion -> NUM VARIABLE IGUAL . expresionDouble
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 202
    ENTERO          shift and go to state 203
    VARIABLE        shift and go to state 234

    expresionDouble                shift and go to state 334
    valorDouble                    shift and go to state 201
    valorInt                       shift and go to state 181

state 228

    (166) asignacion -> STRINGR VARIABLE IGUAL . expresionString
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    STRING          shift and go to state 239
    VARIABLE        shift and go to state 240
    FUNCIONSTDIN    shift and go to state 219

    expresionString                shift and go to state 335
    valorString                    shift and go to state 36
    expresionIndexString           shift and go to state 60
    sentenciaSubstring             shift and go to state 220

state 229

    (167) asignacion -> BOOLR VARIABLE IGUAL . expresionBool
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 178
    DOUBLE          shift and go to state 58
    BOOL            shift and go to state 61
    NOT             shift and go to state 47
    ENTERO          shift and go to state 182
    STRING          shift and go to state 183

    expresionBool                  shift and go to state 336
    valorDouble                    shift and go to state 177
    valorBool                      shift and go to state 179
    negacionBool                   shift and go to state 180
    comparacionBool                shift and go to state 218
    valor                          shift and go to state 38
    valorInt                       shift and go to state 181

state 230

    (168) asignacion -> DYNAMIC VARIABLE IGUAL . expresion
    (187) expresion -> . valor operadorMat expresion
    (188) expresion -> . valor
    (189) expresion -> . expresionString
    (190) expresion -> . expresionInt
    (191) expresion -> . expresionDouble
    (192) expresion -> . expresionBool
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 182
    VARIABLE        shift and go to state 208
    DOUBLE          shift and go to state 215
    STRING          shift and go to state 216
    FUNCIONSTDIN    shift and go to state 219
    BOOL            shift and go to state 61
    NOT             shift and go to state 47

    expresion                      shift and go to state 337
    valor                          shift and go to state 210
    expresionString                shift and go to state 211
    expresionInt                   shift and go to state 212
    expresionDouble                shift and go to state 213
    expresionBool                  shift and go to state 214
    valorString                    shift and go to state 36
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 217
    valorBool                      shift and go to state 179
    negacionBool                   shift and go to state 180
    comparacionBool                shift and go to state 218
    expresionIndexString           shift and go to state 60
    sentenciaSubstring             shift and go to state 220

state 231

    (169) asignacion -> VAR VARIABLE IGUAL . expresion
    (187) expresion -> . valor operadorMat expresion
    (188) expresion -> . valor
    (189) expresion -> . expresionString
    (190) expresion -> . expresionInt
    (191) expresion -> . expresionDouble
    (192) expresion -> . expresionBool
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 182
    VARIABLE        shift and go to state 208
    DOUBLE          shift and go to state 215
    STRING          shift and go to state 216
    FUNCIONSTDIN    shift and go to state 219
    BOOL            shift and go to state 61
    NOT             shift and go to state 47

    expresion                      shift and go to state 338
    valor                          shift and go to state 210
    expresionString                shift and go to state 211
    expresionInt                   shift and go to state 212
    expresionDouble                shift and go to state 213
    expresionBool                  shift and go to state 214
    valorString                    shift and go to state 36
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 217
    valorBool                      shift and go to state 179
    negacionBool                   shift and go to state 180
    comparacionBool                shift and go to state 218
    expresionIndexString           shift and go to state 60
    sentenciaSubstring             shift and go to state 220

state 232

    (243) expresionInt -> valorInt . operadorMat expresionInt
    (244) expresionInt -> valorInt .
    (249) operadorMat -> . SUMA
    (250) operadorMat -> . RESTA
    (251) operadorMat -> . MULTI
    (252) operadorMat -> . DIV
    (253) operadorMat -> . DIVENTERO
    (254) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 244 (expresionInt -> valorInt .)
    PDER            reduce using rule 244 (expresionInt -> valorInt .)
    SUMA            shift and go to state 114
    RESTA           shift and go to state 115
    MULTI           shift and go to state 116
    DIV             shift and go to state 117
    DIVENTERO       shift and go to state 118
    MOD             shift and go to state 119

    operadorMat                    shift and go to state 113

state 233

    (243) expresionInt -> valorInt operadorMat expresionInt .

    PUNTOYCOMA      reduce using rule 243 (expresionInt -> valorInt operadorMat expresionInt .)
    PDER            reduce using rule 243 (expresionInt -> valorInt operadorMat expresionInt .)


state 234

    (242) valorInt -> VARIABLE .

    SUMA            reduce using rule 242 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 242 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 242 (valorInt -> VARIABLE .)
    DIV             reduce using rule 242 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 242 (valorInt -> VARIABLE .)
    MOD             reduce using rule 242 (valorInt -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 242 (valorInt -> VARIABLE .)
    PDER            reduce using rule 242 (valorInt -> VARIABLE .)
    AND             reduce using rule 242 (valorInt -> VARIABLE .)
    OR              reduce using rule 242 (valorInt -> VARIABLE .)


state 235

    (247) expresionDouble -> valorDouble operadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 247 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    AND             reduce using rule 247 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    OR              reduce using rule 247 (expresionDouble -> valorDouble operadorMat expresionDouble .)
    PDER            reduce using rule 247 (expresionDouble -> valorDouble operadorMat expresionDouble .)


state 236

    (218) expresionBool -> valorDouble comparadorMat expresionDouble .
    (202) expresionBoolFor -> valorDouble comparadorMat expresionDouble .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 202 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 218 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 218 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 202 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)

  ! PUNTOYCOMA      [ reduce using rule 218 (expresionBool -> valorDouble comparadorMat expresionDouble .) ]


state 237

    (221) expresionBool -> valorDouble comparadorMat VARIABLE .
    (205) expresionBoolFor -> valorDouble comparadorMat VARIABLE .
    (242) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 205 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 205 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 221 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 221 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 221 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 221 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 205 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 242 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 242 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 242 (valorInt -> VARIABLE .)
    DIV             reduce using rule 242 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 242 (valorInt -> VARIABLE .)
    MOD             reduce using rule 242 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 221 (expresionBool -> valorDouble comparadorMat VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 242 (valorInt -> VARIABLE .) ]


state 238

    (236) expresionString -> valorString SUMA expresionString .

    PUNTOYCOMA      reduce using rule 236 (expresionString -> valorString SUMA expresionString .)
    PDER            reduce using rule 236 (expresionString -> valorString SUMA expresionString .)


state 239

    (230) valorString -> STRING .
    (235) valorString -> STRING . CIZQ ENTERO CDER

  ! shift/reduce conflict for CIZQ resolved as shift
    SUMA            reduce using rule 230 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 230 (valorString -> STRING .)
    PDER            reduce using rule 230 (valorString -> STRING .)
    CIZQ            shift and go to state 169

  ! CIZQ            [ reduce using rule 230 (valorString -> STRING .) ]


state 240

    (231) valorString -> VARIABLE .
    (239) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    SUMA            reduce using rule 231 (valorString -> VARIABLE .)
    CIZQ            reduce using rule 231 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 231 (valorString -> VARIABLE .)
    PDER            reduce using rule 231 (valorString -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 91


state 241

    (238) expresionIndexString -> valorString CIZQ ENTERO . CDER

    CDER            shift and go to state 339


state 242

    (225) expresionBool -> valor IS objeto .

    PUNTOYCOMA      reduce using rule 225 (expresionBool -> valor IS objeto .)
    AND             reduce using rule 225 (expresionBool -> valor IS objeto .)
    OR              reduce using rule 225 (expresionBool -> valor IS objeto .)
    PDER            reduce using rule 225 (expresionBool -> valor IS objeto .)


state 243

    (263) objeto -> STRINGR .

    PUNTOYCOMA      reduce using rule 263 (objeto -> STRINGR .)
    AND             reduce using rule 263 (objeto -> STRINGR .)
    OR              reduce using rule 263 (objeto -> STRINGR .)
    PDER            reduce using rule 263 (objeto -> STRINGR .)


state 244

    (264) objeto -> INT .

    PUNTOYCOMA      reduce using rule 264 (objeto -> INT .)
    AND             reduce using rule 264 (objeto -> INT .)
    OR              reduce using rule 264 (objeto -> INT .)
    PDER            reduce using rule 264 (objeto -> INT .)


state 245

    (265) objeto -> DOUBLER .

    PUNTOYCOMA      reduce using rule 265 (objeto -> DOUBLER .)
    AND             reduce using rule 265 (objeto -> DOUBLER .)
    OR              reduce using rule 265 (objeto -> DOUBLER .)
    PDER            reduce using rule 265 (objeto -> DOUBLER .)


state 246

    (266) objeto -> NUM .

    PUNTOYCOMA      reduce using rule 266 (objeto -> NUM .)
    AND             reduce using rule 266 (objeto -> NUM .)
    OR              reduce using rule 266 (objeto -> NUM .)
    PDER            reduce using rule 266 (objeto -> NUM .)


state 247

    (267) objeto -> VAR .

    PUNTOYCOMA      reduce using rule 267 (objeto -> VAR .)
    AND             reduce using rule 267 (objeto -> VAR .)
    OR              reduce using rule 267 (objeto -> VAR .)
    PDER            reduce using rule 267 (objeto -> VAR .)


state 248

    (268) objeto -> DYNAMIC .

    PUNTOYCOMA      reduce using rule 268 (objeto -> DYNAMIC .)
    AND             reduce using rule 268 (objeto -> DYNAMIC .)
    OR              reduce using rule 268 (objeto -> DYNAMIC .)
    PDER            reduce using rule 268 (objeto -> DYNAMIC .)


state 249

    (269) objeto -> LIST .

    PUNTOYCOMA      reduce using rule 269 (objeto -> LIST .)
    AND             reduce using rule 269 (objeto -> LIST .)
    OR              reduce using rule 269 (objeto -> LIST .)
    PDER            reduce using rule 269 (objeto -> LIST .)


state 250

    (270) objeto -> BOOL .

    PUNTOYCOMA      reduce using rule 270 (objeto -> BOOL .)
    AND             reduce using rule 270 (objeto -> BOOL .)
    OR              reduce using rule 270 (objeto -> BOOL .)
    PDER            reduce using rule 270 (objeto -> BOOL .)


state 251

    (271) objeto -> MAP .

    PUNTOYCOMA      reduce using rule 271 (objeto -> MAP .)
    AND             reduce using rule 271 (objeto -> MAP .)
    OR              reduce using rule 271 (objeto -> MAP .)
    PDER            reduce using rule 271 (objeto -> MAP .)


state 252

    (272) objeto -> SET .

    PUNTOYCOMA      reduce using rule 272 (objeto -> SET .)
    AND             reduce using rule 272 (objeto -> SET .)
    OR              reduce using rule 272 (objeto -> SET .)
    PDER            reduce using rule 272 (objeto -> SET .)


state 253

    (226) expresionBool -> valor ISNEGADO objeto .

    PUNTOYCOMA      reduce using rule 226 (expresionBool -> valor ISNEGADO objeto .)
    AND             reduce using rule 226 (expresionBool -> valor ISNEGADO objeto .)
    OR              reduce using rule 226 (expresionBool -> valor ISNEGADO objeto .)
    PDER            reduce using rule 226 (expresionBool -> valor ISNEGADO objeto .)


state 254

    (213) sentenciaWhile -> WHILE PIZQ expresionBool . PDER LIZQ final LDER
    (214) sentenciaWhile -> WHILE PIZQ expresionBool . PDER final
    (228) comparacionBool -> expresionBool . operadorLogico expresionBool
    (229) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (261) operadorLogico -> . AND
    (262) operadorLogico -> . OR

    PDER            shift and go to state 340
    AND             shift and go to state 68
    OR              shift and go to state 69

    operadorLogico                 shift and go to state 67

state 255

    (78) claveValor -> LIZQ LDER .

    DOSPUNTOS       reduce using rule 78 (claveValor -> LIZQ LDER .)
    COMA            reduce using rule 78 (claveValor -> LIZQ LDER .)
    LDER            reduce using rule 78 (claveValor -> LIZQ LDER .)


state 256

    (79) claveValor -> LIZQ expMap . LDER

    LDER            shift and go to state 341


state 257

    (65) expresionMap -> LIZQ expMap LDER .

    PUNTOYCOMA      reduce using rule 65 (expresionMap -> LIZQ expMap LDER .)


state 258

    (66) expMap -> claveValor DOSPUNTOS . claveValor
    (67) expMap -> claveValor DOSPUNTOS . claveValor COMA expMap
    (68) claveValor -> . VARIABLE
    (69) claveValor -> . STRING
    (70) claveValor -> . ENTERO
    (71) claveValor -> . DOUBLE
    (72) claveValor -> . BOOL
    (73) claveValor -> . CIZQ expListDynamic CDER
    (74) claveValor -> . CIZQ expListSet CDER
    (75) claveValor -> . expresionNewList
    (76) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (77) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (78) claveValor -> . LIZQ LDER
    (79) claveValor -> . LIZQ expMap LDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER

    VARIABLE        shift and go to state 131
    STRING          shift and go to state 132
    ENTERO          shift and go to state 133
    DOUBLE          shift and go to state 134
    BOOL            shift and go to state 135
    CIZQ            shift and go to state 136
    SETFROM         shift and go to state 138
    LIZQ            shift and go to state 127
    NEWLIST         shift and go to state 55

    claveValor                     shift and go to state 342
    expresionNewList               shift and go to state 137

state 259

    (73) claveValor -> CIZQ expListDynamic . CDER

    CDER            shift and go to state 343


state 260

    (74) claveValor -> CIZQ expListSet . CDER

    CDER            shift and go to state 344


state 261

    (141) expListDynamic -> STRING .
    (145) expListDynamic -> STRING . COMA expListDynamic

    CDER            reduce using rule 141 (expListDynamic -> STRING .)
    COMA            shift and go to state 345


state 262

    (142) expListDynamic -> ENTERO .
    (146) expListDynamic -> ENTERO . COMA expListDynamic

    CDER            reduce using rule 142 (expListDynamic -> ENTERO .)
    COMA            shift and go to state 346


state 263

    (143) expListDynamic -> DOUBLE .
    (147) expListDynamic -> DOUBLE . COMA expListDynamic

    CDER            reduce using rule 143 (expListDynamic -> DOUBLE .)
    COMA            shift and go to state 347


state 264

    (144) expListDynamic -> BOOL .
    (148) expListDynamic -> BOOL . COMA expListDynamic

    CDER            reduce using rule 144 (expListDynamic -> BOOL .)
    COMA            shift and go to state 348


state 265

    (149) expListDynamic -> VARIABLE .
    (150) expListDynamic -> VARIABLE . COMA expListDynamic
    (155) expListSet -> VARIABLE .
    (156) expListSet -> VARIABLE . COMA expListSet

  ! reduce/reduce conflict for CDER resolved using rule 149 (expListDynamic -> VARIABLE .)
    CDER            reduce using rule 149 (expListDynamic -> VARIABLE .)
    COMA            shift and go to state 349

  ! CDER            [ reduce using rule 155 (expListSet -> VARIABLE .) ]


state 266

    (76) claveValor -> SETFROM PIZQ . CIZQ CDER PDER
    (77) claveValor -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 350


state 267

    (215) sentenciaDoWhile -> DO LIZQ final . LDER WHILE PIZQ expresionBool PDER

    LDER            shift and go to state 351


state 268

    (177) sentenciaIf -> IF PIZQ expresionBool . PDER final
    (178) sentenciaIf -> IF PIZQ expresionBool . PDER LIZQ final LDER
    (228) comparacionBool -> expresionBool . operadorLogico expresionBool
    (229) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (261) operadorLogico -> . AND
    (262) operadorLogico -> . OR

    PDER            shift and go to state 352
    AND             shift and go to state 68
    OR              shift and go to state 69

    operadorLogico                 shift and go to state 67

state 269

    (63) expresionMap -> LIZQ . LDER
    (65) expresionMap -> LIZQ . expMap LDER
    (78) claveValor -> LIZQ . LDER
    (79) claveValor -> LIZQ . expMap LDER
    (66) expMap -> . claveValor DOSPUNTOS claveValor
    (67) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (68) claveValor -> . VARIABLE
    (69) claveValor -> . STRING
    (70) claveValor -> . ENTERO
    (71) claveValor -> . DOUBLE
    (72) claveValor -> . BOOL
    (73) claveValor -> . CIZQ expListDynamic CDER
    (74) claveValor -> . CIZQ expListSet CDER
    (75) claveValor -> . expresionNewList
    (76) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (77) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (78) claveValor -> . LIZQ LDER
    (79) claveValor -> . LIZQ expMap LDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 353
    VARIABLE        shift and go to state 131
    STRING          shift and go to state 132
    ENTERO          shift and go to state 133
    DOUBLE          shift and go to state 134
    BOOL            shift and go to state 135
    CIZQ            shift and go to state 136
    SETFROM         shift and go to state 138
    LIZQ            shift and go to state 127
    NEWLIST         shift and go to state 55

    expMap                         shift and go to state 354
    claveValor                     shift and go to state 130
    expresionNewList               shift and go to state 137

state 270

    (180) sentenciaElse -> ELSE LIZQ final . LDER

    LDER            shift and go to state 355


state 271

    (47) final -> VARIABLE . DSUMA PUNTOYCOMA final
    (48) final -> VARIABLE . DSUMA PUNTOYCOMA
    (49) final -> VARIABLE . DRESTA PUNTOYCOMA final
    (50) final -> VARIABLE . DRESTA PUNTOYCOMA
    (219) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (220) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (203) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (204) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (239) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (120) expresionLista -> VARIABLE . CIZQ ENTERO CDER
    (121) expresionLista -> VARIABLE . FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> VARIABLE . FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (85) expresionSet -> VARIABLE . FUNCIONTAKE PIZQ ENTERO PDER
    (68) claveValor -> VARIABLE .
    (171) asignacionSimple -> VARIABLE . IGUAL expresion
    (242) valorInt -> VARIABLE .
    (231) valorString -> VARIABLE .
    (217) valorBool -> VARIABLE .
    (184) valor -> VARIABLE .
    (255) comparadorMat -> . DIGUAL
    (256) comparadorMat -> . NOIGUAL
    (257) comparadorMat -> . MAYOR
    (258) comparadorMat -> . MENOR
    (259) comparadorMat -> . MAYIGUAL
    (260) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 231 (valorString -> VARIABLE .)
  ! shift/reduce conflict for CIZQ resolved as shift
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 231 (valorString -> VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 217 (valorBool -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    DSUMA           shift and go to state 88
    DRESTA          shift and go to state 89
    FUNCIONSUBSTRING shift and go to state 91
    CIZQ            shift and go to state 92
    FUNCIONTAKE     shift and go to state 93
    FUNCIONRANGE    shift and go to state 94
    DOSPUNTOS       reduce using rule 68 (claveValor -> VARIABLE .)
    IGUAL           shift and go to state 95
    RESTA           reduce using rule 242 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 242 (valorInt -> VARIABLE .)
    DIV             reduce using rule 242 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 242 (valorInt -> VARIABLE .)
    MOD             reduce using rule 242 (valorInt -> VARIABLE .)
    SUMA            reduce using rule 231 (valorString -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 217 (valorBool -> VARIABLE .)
    AND             reduce using rule 217 (valorBool -> VARIABLE .)
    OR              reduce using rule 217 (valorBool -> VARIABLE .)
    IS              reduce using rule 184 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 184 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 96
    NOIGUAL         shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYIGUAL        shift and go to state 100
    MENIGUAL        shift and go to state 101

  ! SUMA            [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! CIZQ            [ reduce using rule 231 (valorString -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 231 (valorString -> VARIABLE .) ]

    comparadorMat                  shift and go to state 90

state 272

    (53) final -> expresionNewList . PUNTOYCOMA
    (54) final -> expresionNewList . PUNTOYCOMA final
    (75) claveValor -> expresionNewList .

    PUNTOYCOMA      shift and go to state 103
    DOSPUNTOS       reduce using rule 75 (claveValor -> expresionNewList .)


state 273

    (70) claveValor -> ENTERO .
    (241) valorInt -> ENTERO .
    (183) valor -> ENTERO .

    DOSPUNTOS       reduce using rule 70 (claveValor -> ENTERO .)
    SUMA            reduce using rule 241 (valorInt -> ENTERO .)
    RESTA           reduce using rule 241 (valorInt -> ENTERO .)
    MULTI           reduce using rule 241 (valorInt -> ENTERO .)
    DIV             reduce using rule 241 (valorInt -> ENTERO .)
    DIVENTERO       reduce using rule 241 (valorInt -> ENTERO .)
    MOD             reduce using rule 241 (valorInt -> ENTERO .)
    PUNTOYCOMA      reduce using rule 241 (valorInt -> ENTERO .)
    DIGUAL          reduce using rule 241 (valorInt -> ENTERO .)
    NOIGUAL         reduce using rule 241 (valorInt -> ENTERO .)
    MAYOR           reduce using rule 241 (valorInt -> ENTERO .)
    MENOR           reduce using rule 241 (valorInt -> ENTERO .)
    MAYIGUAL        reduce using rule 241 (valorInt -> ENTERO .)
    MENIGUAL        reduce using rule 241 (valorInt -> ENTERO .)
    IS              reduce using rule 183 (valor -> ENTERO .)
    ISNEGADO        reduce using rule 183 (valor -> ENTERO .)


state 274

    (92) expresionLista -> CIZQ . expListString CDER
    (96) expresionLista -> CIZQ . expListInt CDER
    (100) expresionLista -> CIZQ . expListNum CDER
    (107) expresionLista -> CIZQ . expListBool CDER
    (111) expresionLista -> CIZQ . expListDynamic CDER
    (115) expresionLista -> CIZQ . expListSet CDER
    (119) expresionLista -> CIZQ . expListMap CDER
    (88) expresionNewList -> CIZQ . CDER
    (73) claveValor -> CIZQ . expListDynamic CDER
    (74) claveValor -> CIZQ . expListSet CDER
    (123) expListString -> . STRING
    (124) expListString -> . STRING COMA expListString
    (125) expListString -> . VARIABLE
    (126) expListString -> . VARIABLE COMA expListString
    (127) expListInt -> . ENTERO
    (128) expListInt -> . ENTERO COMA expListInt
    (129) expListInt -> . VARIABLE
    (130) expListInt -> . VARIABLE COMA expListInt
    (131) expListNum -> . ENTERO
    (132) expListNum -> . DOUBLE
    (133) expListNum -> . ENTERO COMA expListNum
    (134) expListNum -> . DOUBLE COMA expListNum
    (135) expListNum -> . VARIABLE
    (136) expListNum -> . VARIABLE COMA expListNum
    (137) expListBool -> . BOOL
    (138) expListBool -> . BOOL COMA expListBool
    (139) expListBool -> . VARIABLE
    (140) expListBool -> . VARIABLE COMA expListBool
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic
    (151) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (152) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (153) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (154) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (155) expListSet -> . VARIABLE
    (156) expListSet -> . VARIABLE COMA expListSet
    (157) expListMap -> . LIZQ LDER
    (158) expListMap -> . LIZQ expMap LDER
    (159) expListMap -> . LIZQ LDER COMA expListMap
    (160) expListMap -> . LIZQ expMap LDER COMA expListMap
    (161) expListMap -> . VARIABLE
    (162) expListMap -> . VARIABLE COMA expListMap

    CDER            shift and go to state 150
    STRING          shift and go to state 157
    VARIABLE        shift and go to state 158
    ENTERO          shift and go to state 159
    DOUBLE          shift and go to state 160
    BOOL            shift and go to state 161
    SETFROM         shift and go to state 162
    LIZQ            shift and go to state 163

    expListString                  shift and go to state 149
    expListInt                     shift and go to state 151
    expListNum                     shift and go to state 152
    expListBool                    shift and go to state 153
    expListDynamic                 shift and go to state 356
    expListSet                     shift and go to state 357
    expListMap                     shift and go to state 156

state 275

    (81) expresionSet -> SETFROM . PIZQ CIZQ CDER PDER
    (83) expresionSet -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER
    (76) claveValor -> SETFROM . PIZQ CIZQ CDER PDER
    (77) claveValor -> SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 358


state 276

    (69) claveValor -> STRING .
    (230) valorString -> STRING .
    (235) valorString -> STRING . CIZQ ENTERO CDER
    (186) valor -> STRING .

  ! shift/reduce conflict for CIZQ resolved as shift
    DOSPUNTOS       reduce using rule 69 (claveValor -> STRING .)
    SUMA            reduce using rule 230 (valorString -> STRING .)
    PUNTOYCOMA      reduce using rule 230 (valorString -> STRING .)
    CIZQ            shift and go to state 169
    IS              reduce using rule 186 (valor -> STRING .)
    ISNEGADO        reduce using rule 186 (valor -> STRING .)

  ! CIZQ            [ reduce using rule 230 (valorString -> STRING .) ]


state 277

    (71) claveValor -> DOUBLE .
    (245) valorDouble -> DOUBLE .
    (185) valor -> DOUBLE .

    DOSPUNTOS       reduce using rule 71 (claveValor -> DOUBLE .)
    SUMA            reduce using rule 245 (valorDouble -> DOUBLE .)
    RESTA           reduce using rule 245 (valorDouble -> DOUBLE .)
    MULTI           reduce using rule 245 (valorDouble -> DOUBLE .)
    DIV             reduce using rule 245 (valorDouble -> DOUBLE .)
    DIVENTERO       reduce using rule 245 (valorDouble -> DOUBLE .)
    MOD             reduce using rule 245 (valorDouble -> DOUBLE .)
    DIGUAL          reduce using rule 245 (valorDouble -> DOUBLE .)
    NOIGUAL         reduce using rule 245 (valorDouble -> DOUBLE .)
    MAYOR           reduce using rule 245 (valorDouble -> DOUBLE .)
    MENOR           reduce using rule 245 (valorDouble -> DOUBLE .)
    MAYIGUAL        reduce using rule 245 (valorDouble -> DOUBLE .)
    MENIGUAL        reduce using rule 245 (valorDouble -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 245 (valorDouble -> DOUBLE .)
    IS              reduce using rule 185 (valor -> DOUBLE .)
    ISNEGADO        reduce using rule 185 (valor -> DOUBLE .)


state 278

    (72) claveValor -> BOOL .
    (216) valorBool -> BOOL .

    DOSPUNTOS       reduce using rule 72 (claveValor -> BOOL .)
    PUNTOYCOMA      reduce using rule 216 (valorBool -> BOOL .)
    AND             reduce using rule 216 (valorBool -> BOOL .)
    OR              reduce using rule 216 (valorBool -> BOOL .)


state 279

    (172) imprimir -> PRINT PIZQ expresion . PDER

    PDER            shift and go to state 359


state 280

    (173) imprimir -> PRINT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 360


state 281

    (171) asignacionSimple -> VARIABLE . IGUAL expresion
    (184) valor -> VARIABLE .
    (219) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (220) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (231) valorString -> VARIABLE .
    (242) valorInt -> VARIABLE .
    (217) valorBool -> VARIABLE .
    (239) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> VARIABLE . FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (255) comparadorMat -> . DIGUAL
    (256) comparadorMat -> . NOIGUAL
    (257) comparadorMat -> . MAYOR
    (258) comparadorMat -> . MENOR
    (259) comparadorMat -> . MAYIGUAL
    (260) comparadorMat -> . MENIGUAL

  ! reduce/reduce conflict for SUMA resolved using rule 184 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 184 (valor -> VARIABLE .)
  ! reduce/reduce conflict for SUMA resolved using rule 184 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RESTA resolved using rule 184 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MULTI resolved using rule 184 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIV resolved using rule 184 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DIVENTERO resolved using rule 184 (valor -> VARIABLE .)
  ! reduce/reduce conflict for MOD resolved using rule 184 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 184 (valor -> VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 184 (valor -> VARIABLE .)
  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    IGUAL           shift and go to state 95
    IS              reduce using rule 184 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 184 (valor -> VARIABLE .)
    SUMA            reduce using rule 184 (valor -> VARIABLE .)
    RESTA           reduce using rule 184 (valor -> VARIABLE .)
    MULTI           reduce using rule 184 (valor -> VARIABLE .)
    DIV             reduce using rule 184 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 184 (valor -> VARIABLE .)
    MOD             reduce using rule 184 (valor -> VARIABLE .)
    PDER            reduce using rule 184 (valor -> VARIABLE .)
    CIZQ            reduce using rule 231 (valorString -> VARIABLE .)
    AND             reduce using rule 217 (valorBool -> VARIABLE .)
    OR              reduce using rule 217 (valorBool -> VARIABLE .)
    FUNCIONSUBSTRING shift and go to state 91
    DIGUAL          shift and go to state 96
    NOIGUAL         shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYIGUAL        shift and go to state 100
    MENIGUAL        shift and go to state 101

  ! SUMA            [ reduce using rule 231 (valorString -> VARIABLE .) ]
  ! PDER            [ reduce using rule 231 (valorString -> VARIABLE .) ]
  ! SUMA            [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MULTI           [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! DIV             [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! DIVENTERO       [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MOD             [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! DIGUAL          [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 217 (valorBool -> VARIABLE .) ]

    comparadorMat                  shift and go to state 324

state 282

    (175) funcionStdout -> FUNCIONSTDOUT PIZQ expresion . PDER

    PDER            shift and go to state 361


state 283

    (176) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple . PDER

    PDER            shift and go to state 362


state 284

    (227) negacionBool -> NOT PIZQ expresionBool . PDER
    (228) comparacionBool -> expresionBool . operadorLogico expresionBool
    (229) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (261) operadorLogico -> . AND
    (262) operadorLogico -> . OR

    PDER            shift and go to state 363
    AND             shift and go to state 68
    OR              shift and go to state 69

    operadorLogico                 shift and go to state 67

state 285

    (181) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER final
    (182) sentenciaElseIf -> ELSEIF PIZQ expresionBool . PDER LIZQ final LDER
    (228) comparacionBool -> expresionBool . operadorLogico expresionBool
    (229) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (261) operadorLogico -> . AND
    (262) operadorLogico -> . OR

    PDER            shift and go to state 364
    AND             shift and go to state 68
    OR              shift and go to state 69

    operadorLogico                 shift and go to state 67

state 286

    (209) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> FOR PIZQ asignacionFor . PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final

    PUNTOYCOMA      shift and go to state 365


state 287

    (200) asignacionFor -> VARIABLE . IGUAL expresionInt
    (201) asignacionFor -> VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 366


state 288

    (193) asignacionFor -> INT . VARIABLE IGUAL expresionInt

    VARIABLE        shift and go to state 367


state 289

    (194) asignacionFor -> DOUBLER . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 368


state 290

    (195) asignacionFor -> NUM . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 369


state 291

    (196) asignacionFor -> DYNAMIC . VARIABLE IGUAL expresionInt
    (197) asignacionFor -> DYNAMIC . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 370


state 292

    (198) asignacionFor -> VAR . VARIABLE IGUAL expresionInt
    (199) asignacionFor -> VAR . VARIABLE IGUAL expresionDouble

    VARIABLE        shift and go to state 371


state 293

    (89) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE
    (90) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> LIST MENOR STRINGR . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 372


state 294

    (93) expresionLista -> LIST MENOR INT . MAYOR VARIABLE
    (94) expresionLista -> LIST MENOR INT . MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> LIST MENOR INT . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 373


state 295

    (97) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE
    (98) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> LIST MENOR DOUBLER . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 374


state 296

    (101) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE
    (102) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> LIST MENOR NUM . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 375


state 297

    (104) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE
    (105) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> LIST MENOR BOOLR . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 376


state 298

    (108) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE
    (109) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> LIST MENOR DYNAMIC . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 377


state 299

    (112) expresionLista -> LIST MENOR SET . MAYOR VARIABLE
    (113) expresionLista -> LIST MENOR SET . MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> LIST MENOR SET . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 378


state 300

    (116) expresionLista -> LIST MENOR MAP . MAYOR VARIABLE
    (117) expresionLista -> LIST MENOR MAP . MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> LIST MENOR MAP . MAYOR VARIABLE IGUAL expresionNewList

    MAYOR           shift and go to state 379


state 301

    (92) expresionLista -> CIZQ expListString CDER .

    PUNTOYCOMA      reduce using rule 92 (expresionLista -> CIZQ expListString CDER .)


state 302

    (96) expresionLista -> CIZQ expListInt CDER .

    PUNTOYCOMA      reduce using rule 96 (expresionLista -> CIZQ expListInt CDER .)


state 303

    (100) expresionLista -> CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 100 (expresionLista -> CIZQ expListNum CDER .)


state 304

    (107) expresionLista -> CIZQ expListBool CDER .

    PUNTOYCOMA      reduce using rule 107 (expresionLista -> CIZQ expListBool CDER .)


state 305

    (111) expresionLista -> CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 111 (expresionLista -> CIZQ expListDynamic CDER .)


state 306

    (115) expresionLista -> CIZQ expListSet CDER .

    PUNTOYCOMA      reduce using rule 115 (expresionLista -> CIZQ expListSet CDER .)


state 307

    (119) expresionLista -> CIZQ expListMap CDER .

    PUNTOYCOMA      reduce using rule 119 (expresionLista -> CIZQ expListMap CDER .)


state 308

    (124) expListString -> STRING COMA . expListString
    (145) expListDynamic -> STRING COMA . expListDynamic
    (123) expListString -> . STRING
    (124) expListString -> . STRING COMA expListString
    (125) expListString -> . VARIABLE
    (126) expListString -> . VARIABLE COMA expListString
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 157
    VARIABLE        shift and go to state 382
    ENTERO          shift and go to state 262
    DOUBLE          shift and go to state 263
    BOOL            shift and go to state 264

    expListString                  shift and go to state 380
    expListDynamic                 shift and go to state 381

state 309

    (126) expListString -> VARIABLE COMA . expListString
    (130) expListInt -> VARIABLE COMA . expListInt
    (136) expListNum -> VARIABLE COMA . expListNum
    (140) expListBool -> VARIABLE COMA . expListBool
    (150) expListDynamic -> VARIABLE COMA . expListDynamic
    (156) expListSet -> VARIABLE COMA . expListSet
    (162) expListMap -> VARIABLE COMA . expListMap
    (123) expListString -> . STRING
    (124) expListString -> . STRING COMA expListString
    (125) expListString -> . VARIABLE
    (126) expListString -> . VARIABLE COMA expListString
    (127) expListInt -> . ENTERO
    (128) expListInt -> . ENTERO COMA expListInt
    (129) expListInt -> . VARIABLE
    (130) expListInt -> . VARIABLE COMA expListInt
    (131) expListNum -> . ENTERO
    (132) expListNum -> . DOUBLE
    (133) expListNum -> . ENTERO COMA expListNum
    (134) expListNum -> . DOUBLE COMA expListNum
    (135) expListNum -> . VARIABLE
    (136) expListNum -> . VARIABLE COMA expListNum
    (137) expListBool -> . BOOL
    (138) expListBool -> . BOOL COMA expListBool
    (139) expListBool -> . VARIABLE
    (140) expListBool -> . VARIABLE COMA expListBool
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic
    (151) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (152) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (153) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (154) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (155) expListSet -> . VARIABLE
    (156) expListSet -> . VARIABLE COMA expListSet
    (157) expListMap -> . LIZQ LDER
    (158) expListMap -> . LIZQ expMap LDER
    (159) expListMap -> . LIZQ LDER COMA expListMap
    (160) expListMap -> . LIZQ expMap LDER COMA expListMap
    (161) expListMap -> . VARIABLE
    (162) expListMap -> . VARIABLE COMA expListMap

    STRING          shift and go to state 157
    VARIABLE        shift and go to state 158
    ENTERO          shift and go to state 159
    DOUBLE          shift and go to state 160
    BOOL            shift and go to state 161
    SETFROM         shift and go to state 162
    LIZQ            shift and go to state 163

    expListString                  shift and go to state 383
    expListInt                     shift and go to state 384
    expListNum                     shift and go to state 385
    expListBool                    shift and go to state 386
    expListDynamic                 shift and go to state 387
    expListSet                     shift and go to state 388
    expListMap                     shift and go to state 389

state 310

    (128) expListInt -> ENTERO COMA . expListInt
    (133) expListNum -> ENTERO COMA . expListNum
    (146) expListDynamic -> ENTERO COMA . expListDynamic
    (127) expListInt -> . ENTERO
    (128) expListInt -> . ENTERO COMA expListInt
    (129) expListInt -> . VARIABLE
    (130) expListInt -> . VARIABLE COMA expListInt
    (131) expListNum -> . ENTERO
    (132) expListNum -> . DOUBLE
    (133) expListNum -> . ENTERO COMA expListNum
    (134) expListNum -> . DOUBLE COMA expListNum
    (135) expListNum -> . VARIABLE
    (136) expListNum -> . VARIABLE COMA expListNum
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 159
    VARIABLE        shift and go to state 393
    DOUBLE          shift and go to state 160
    STRING          shift and go to state 261
    BOOL            shift and go to state 264

    expListInt                     shift and go to state 390
    expListNum                     shift and go to state 391
    expListDynamic                 shift and go to state 392

state 311

    (134) expListNum -> DOUBLE COMA . expListNum
    (147) expListDynamic -> DOUBLE COMA . expListDynamic
    (131) expListNum -> . ENTERO
    (132) expListNum -> . DOUBLE
    (133) expListNum -> . ENTERO COMA expListNum
    (134) expListNum -> . DOUBLE COMA expListNum
    (135) expListNum -> . VARIABLE
    (136) expListNum -> . VARIABLE COMA expListNum
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 396
    DOUBLE          shift and go to state 160
    VARIABLE        shift and go to state 397
    STRING          shift and go to state 261
    BOOL            shift and go to state 264

    expListNum                     shift and go to state 394
    expListDynamic                 shift and go to state 395

state 312

    (138) expListBool -> BOOL COMA . expListBool
    (148) expListDynamic -> BOOL COMA . expListDynamic
    (137) expListBool -> . BOOL
    (138) expListBool -> . BOOL COMA expListBool
    (139) expListBool -> . VARIABLE
    (140) expListBool -> . VARIABLE COMA expListBool
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic

    BOOL            shift and go to state 161
    VARIABLE        shift and go to state 400
    STRING          shift and go to state 261
    ENTERO          shift and go to state 262
    DOUBLE          shift and go to state 263

    expListBool                    shift and go to state 398
    expListDynamic                 shift and go to state 399

state 313

    (151) expListSet -> SETFROM PIZQ . CIZQ CDER PDER
    (152) expListSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER
    (153) expListSet -> SETFROM PIZQ . CIZQ CDER PDER COMA expListSet
    (154) expListSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER COMA expListSet

    CIZQ            shift and go to state 401


state 314

    (157) expListMap -> LIZQ LDER .
    (159) expListMap -> LIZQ LDER . COMA expListMap

    CDER            reduce using rule 157 (expListMap -> LIZQ LDER .)
    COMA            shift and go to state 402


state 315

    (158) expListMap -> LIZQ expMap . LDER
    (160) expListMap -> LIZQ expMap . LDER COMA expListMap

    LDER            shift and go to state 403


state 316

    (82) expresionSet -> SET VARIABLE IGUAL . SETFROM PIZQ CIZQ CDER PDER
    (84) expresionSet -> SET VARIABLE IGUAL . SETFROM PIZQ CIZQ expListDynamic CDER PDER

    SETFROM         shift and go to state 404


state 317

    (62) expresionMap -> MAP VARIABLE IGUAL . LIZQ LDER
    (64) expresionMap -> MAP VARIABLE IGUAL . LIZQ expMap LDER

    LIZQ            shift and go to state 405


state 318

    (86) expresionNewList -> NEWLIST PIZQ PDER .

    PUNTOYCOMA      reduce using rule 86 (expresionNewList -> NEWLIST PIZQ PDER .)
    DOSPUNTOS       reduce using rule 86 (expresionNewList -> NEWLIST PIZQ PDER .)
    COMA            reduce using rule 86 (expresionNewList -> NEWLIST PIZQ PDER .)
    LDER            reduce using rule 86 (expresionNewList -> NEWLIST PIZQ PDER .)


state 319

    (87) expresionNewList -> NEWLIST PIZQ ENTERO . PDER

    PDER            shift and go to state 406


state 320

    (81) expresionSet -> SETFROM PIZQ CIZQ . CDER PDER
    (83) expresionSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 407
    STRING          shift and go to state 261
    ENTERO          shift and go to state 262
    DOUBLE          shift and go to state 263
    BOOL            shift and go to state 264
    VARIABLE        shift and go to state 409

    expListDynamic                 shift and go to state 408

state 321

    (60) expresionSwitch -> SWITCH PIZQ expresionBool . PDER
    (228) comparacionBool -> expresionBool . operadorLogico expresionBool
    (229) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (261) operadorLogico -> . AND
    (262) operadorLogico -> . OR

    PDER            shift and go to state 410
    AND             shift and go to state 68
    OR              shift and go to state 69

    operadorLogico                 shift and go to state 67

state 322

    (235) valorString -> STRING CIZQ ENTERO . CDER

    CDER            shift and go to state 411


state 323

    (218) expresionBool -> valorDouble comparadorMat . expresionDouble
    (221) expresionBool -> valorDouble comparadorMat . VARIABLE
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 413
    DOUBLE          shift and go to state 202
    ENTERO          shift and go to state 203

    valorDouble                    shift and go to state 201
    expresionDouble                shift and go to state 412
    valorInt                       shift and go to state 181

state 324

    (219) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (220) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 414
    DOUBLE          shift and go to state 202
    ENTERO          shift and go to state 203

    expresionDouble                shift and go to state 415
    valorDouble                    shift and go to state 201
    valorInt                       shift and go to state 181

state 325

    (47) final -> VARIABLE DSUMA PUNTOYCOMA final .

    $end            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    VARIABLE        reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    INT             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DOUBLER         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NUM             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    STRINGR         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BOOLR           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    VAR             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    WHILE           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DO              reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    IF              reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ELSE            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    PRINT           reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NOT             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ELSEIF          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    FOR             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LIST            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    CIZQ            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    NEWLIST         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    SET             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    SETFROM         reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    MAP             reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LIZQ            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    SWITCH          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    ENTERO          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    DOUBLE          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    STRING          reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    BOOL            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)
    LDER            reduce using rule 47 (final -> VARIABLE DSUMA PUNTOYCOMA final .)


state 326

    (49) final -> VARIABLE DRESTA PUNTOYCOMA final .

    $end            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    PUNTOYCOMA      reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    VARIABLE        reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    INT             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DOUBLER         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NUM             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    STRINGR         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BOOLR           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DYNAMIC         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    VAR             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    WHILE           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DO              reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    IF              reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ELSE            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    PRINT           reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FUNCIONSTDIN    reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FUNCIONSTDOUT   reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NOT             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ELSEIF          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    FOR             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LIST            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    CIZQ            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    NEWLIST         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    SET             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    SETFROM         reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    MAP             reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LIZQ            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    SWITCH          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    ENTERO          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    DOUBLE          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    STRING          reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    BOOL            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)
    LDER            reduce using rule 49 (final -> VARIABLE DRESTA PUNTOYCOMA final .)


state 327

    (239) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . PDER
    (240) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO . COMA ENTERO PDER

    PDER            shift and go to state 416
    COMA            shift and go to state 417


state 328

    (120) expresionLista -> VARIABLE CIZQ ENTERO CDER .

    PUNTOYCOMA      reduce using rule 120 (expresionLista -> VARIABLE CIZQ ENTERO CDER .)


state 329

    (121) expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO . PDER
    (85) expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO . PDER

    PDER            shift and go to state 418


state 330

    (122) expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO . COMA ENTERO PDER

    COMA            shift and go to state 419


state 331

    (187) expresion -> valor operadorMat . expresion
    (187) expresion -> . valor operadorMat expresion
    (188) expresion -> . valor
    (189) expresion -> . expresionString
    (190) expresion -> . expresionInt
    (191) expresion -> . expresionDouble
    (192) expresion -> . expresionBool
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER

    ENTERO          shift and go to state 182
    VARIABLE        shift and go to state 208
    DOUBLE          shift and go to state 215
    STRING          shift and go to state 216
    FUNCIONSTDIN    shift and go to state 219
    BOOL            shift and go to state 61
    NOT             shift and go to state 47

    valor                          shift and go to state 210
    expresion                      shift and go to state 420
    expresionString                shift and go to state 211
    expresionInt                   shift and go to state 212
    expresionDouble                shift and go to state 213
    expresionBool                  shift and go to state 214
    valorString                    shift and go to state 36
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 217
    valorBool                      shift and go to state 179
    negacionBool                   shift and go to state 180
    comparacionBool                shift and go to state 218
    expresionIndexString           shift and go to state 60
    sentenciaSubstring             shift and go to state 220

state 332

    (163) asignacion -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 163 (asignacion -> INT VARIABLE IGUAL expresionInt .)


state 333

    (164) asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 164 (asignacion -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 334

    (165) asignacion -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 165 (asignacion -> NUM VARIABLE IGUAL expresionDouble .)


state 335

    (166) asignacion -> STRINGR VARIABLE IGUAL expresionString .

    PUNTOYCOMA      reduce using rule 166 (asignacion -> STRINGR VARIABLE IGUAL expresionString .)


state 336

    (167) asignacion -> BOOLR VARIABLE IGUAL expresionBool .
    (228) comparacionBool -> expresionBool . operadorLogico expresionBool
    (229) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (261) operadorLogico -> . AND
    (262) operadorLogico -> . OR

    PUNTOYCOMA      reduce using rule 167 (asignacion -> BOOLR VARIABLE IGUAL expresionBool .)
    AND             shift and go to state 68
    OR              shift and go to state 69

    operadorLogico                 shift and go to state 67

state 337

    (168) asignacion -> DYNAMIC VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 168 (asignacion -> DYNAMIC VARIABLE IGUAL expresion .)


state 338

    (169) asignacion -> VAR VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL expresion .)


state 339

    (238) expresionIndexString -> valorString CIZQ ENTERO CDER .

    SUMA            reduce using rule 238 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    CIZQ            reduce using rule 238 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PUNTOYCOMA      reduce using rule 238 (expresionIndexString -> valorString CIZQ ENTERO CDER .)
    PDER            reduce using rule 238 (expresionIndexString -> valorString CIZQ ENTERO CDER .)


state 340

    (213) sentenciaWhile -> WHILE PIZQ expresionBool PDER . LIZQ final LDER
    (214) sentenciaWhile -> WHILE PIZQ expresionBool PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 421
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

    expresionBool                  shift and go to state 6
    final                          shift and go to state 422
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 341

    (79) claveValor -> LIZQ expMap LDER .

    DOSPUNTOS       reduce using rule 79 (claveValor -> LIZQ expMap LDER .)
    COMA            reduce using rule 79 (claveValor -> LIZQ expMap LDER .)
    LDER            reduce using rule 79 (claveValor -> LIZQ expMap LDER .)


state 342

    (66) expMap -> claveValor DOSPUNTOS claveValor .
    (67) expMap -> claveValor DOSPUNTOS claveValor . COMA expMap

    LDER            reduce using rule 66 (expMap -> claveValor DOSPUNTOS claveValor .)
    COMA            shift and go to state 423


state 343

    (73) claveValor -> CIZQ expListDynamic CDER .

    DOSPUNTOS       reduce using rule 73 (claveValor -> CIZQ expListDynamic CDER .)
    COMA            reduce using rule 73 (claveValor -> CIZQ expListDynamic CDER .)
    LDER            reduce using rule 73 (claveValor -> CIZQ expListDynamic CDER .)


state 344

    (74) claveValor -> CIZQ expListSet CDER .

    DOSPUNTOS       reduce using rule 74 (claveValor -> CIZQ expListSet CDER .)
    COMA            reduce using rule 74 (claveValor -> CIZQ expListSet CDER .)
    LDER            reduce using rule 74 (claveValor -> CIZQ expListSet CDER .)


state 345

    (145) expListDynamic -> STRING COMA . expListDynamic
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 261
    ENTERO          shift and go to state 262
    DOUBLE          shift and go to state 263
    BOOL            shift and go to state 264
    VARIABLE        shift and go to state 409

    expListDynamic                 shift and go to state 381

state 346

    (146) expListDynamic -> ENTERO COMA . expListDynamic
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 261
    ENTERO          shift and go to state 262
    DOUBLE          shift and go to state 263
    BOOL            shift and go to state 264
    VARIABLE        shift and go to state 409

    expListDynamic                 shift and go to state 392

state 347

    (147) expListDynamic -> DOUBLE COMA . expListDynamic
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 261
    ENTERO          shift and go to state 262
    DOUBLE          shift and go to state 263
    BOOL            shift and go to state 264
    VARIABLE        shift and go to state 409

    expListDynamic                 shift and go to state 395

state 348

    (148) expListDynamic -> BOOL COMA . expListDynamic
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 261
    ENTERO          shift and go to state 262
    DOUBLE          shift and go to state 263
    BOOL            shift and go to state 264
    VARIABLE        shift and go to state 409

    expListDynamic                 shift and go to state 399

state 349

    (150) expListDynamic -> VARIABLE COMA . expListDynamic
    (156) expListSet -> VARIABLE COMA . expListSet
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic
    (151) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (152) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (153) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (154) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (155) expListSet -> . VARIABLE
    (156) expListSet -> . VARIABLE COMA expListSet

    STRING          shift and go to state 261
    ENTERO          shift and go to state 262
    DOUBLE          shift and go to state 263
    BOOL            shift and go to state 264
    VARIABLE        shift and go to state 265
    SETFROM         shift and go to state 162

    expListDynamic                 shift and go to state 387
    expListSet                     shift and go to state 388

state 350

    (76) claveValor -> SETFROM PIZQ CIZQ . CDER PDER
    (77) claveValor -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 424
    STRING          shift and go to state 261
    ENTERO          shift and go to state 262
    DOUBLE          shift and go to state 263
    BOOL            shift and go to state 264
    VARIABLE        shift and go to state 409

    expListDynamic                 shift and go to state 425

state 351

    (215) sentenciaDoWhile -> DO LIZQ final LDER . WHILE PIZQ expresionBool PDER

    WHILE           shift and go to state 426


state 352

    (177) sentenciaIf -> IF PIZQ expresionBool PDER . final
    (178) sentenciaIf -> IF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 428
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

    expresionBool                  shift and go to state 6
    final                          shift and go to state 427
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 353

    (63) expresionMap -> LIZQ LDER .
    (78) claveValor -> LIZQ LDER .

    PUNTOYCOMA      reduce using rule 63 (expresionMap -> LIZQ LDER .)
    DOSPUNTOS       reduce using rule 78 (claveValor -> LIZQ LDER .)


state 354

    (65) expresionMap -> LIZQ expMap . LDER
    (79) claveValor -> LIZQ expMap . LDER

    LDER            shift and go to state 429


state 355

    (180) sentenciaElse -> ELSE LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    VARIABLE        reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    INT             reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLER         reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    NUM             reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRINGR         reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOLR           reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    DYNAMIC         reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    VAR             reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    WHILE           reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    DO              reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    IF              reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSE            reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    PRINT           reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    NOT             reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    ELSEIF          reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    FOR             reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    LIST            reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    CIZQ            reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    NEWLIST         reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    SET             reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    SETFROM         reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    MAP             reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    LIZQ            reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    SWITCH          reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    ENTERO          reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    DOUBLE          reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    STRING          reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    BOOL            reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    $end            reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)
    LDER            reduce using rule 180 (sentenciaElse -> ELSE LIZQ final LDER .)


state 356

    (111) expresionLista -> CIZQ expListDynamic . CDER
    (73) claveValor -> CIZQ expListDynamic . CDER

    CDER            shift and go to state 430


state 357

    (115) expresionLista -> CIZQ expListSet . CDER
    (74) claveValor -> CIZQ expListSet . CDER

    CDER            shift and go to state 431


state 358

    (81) expresionSet -> SETFROM PIZQ . CIZQ CDER PDER
    (83) expresionSet -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER
    (76) claveValor -> SETFROM PIZQ . CIZQ CDER PDER
    (77) claveValor -> SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 432


state 359

    (172) imprimir -> PRINT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 172 (imprimir -> PRINT PIZQ expresion PDER .)


state 360

    (173) imprimir -> PRINT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 173 (imprimir -> PRINT PIZQ asignacionSimple PDER .)


state 361

    (175) funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 175 (funcionStdout -> FUNCIONSTDOUT PIZQ expresion PDER .)


state 362

    (176) funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .

    PUNTOYCOMA      reduce using rule 176 (funcionStdout -> FUNCIONSTDOUT PIZQ asignacionSimple PDER .)


state 363

    (227) negacionBool -> NOT PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 227 (negacionBool -> NOT PIZQ expresionBool PDER .)
    AND             reduce using rule 227 (negacionBool -> NOT PIZQ expresionBool PDER .)
    OR              reduce using rule 227 (negacionBool -> NOT PIZQ expresionBool PDER .)
    PDER            reduce using rule 227 (negacionBool -> NOT PIZQ expresionBool PDER .)


state 364

    (181) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . final
    (182) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER . LIZQ final LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 434
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

    expresionBool                  shift and go to state 6
    final                          shift and go to state 433
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 365

    (209) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA . expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING

    VARIABLE        shift and go to state 436
    DOUBLE          shift and go to state 58
    BOOL            shift and go to state 61
    NOT             shift and go to state 47
    ENTERO          shift and go to state 50
    STRING          shift and go to state 183

    expresionBoolFor               shift and go to state 435
    valorDouble                    shift and go to state 437
    valorBool                      shift and go to state 438
    negacionBool                   shift and go to state 439
    comparacionBool                shift and go to state 440
    valorInt                       shift and go to state 181
    expresionBool                  shift and go to state 441
    valor                          shift and go to state 38

state 366

    (200) asignacionFor -> VARIABLE IGUAL . expresionInt
    (201) asignacionFor -> VARIABLE IGUAL . expresionDouble
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt

    ENTERO          shift and go to state 203
    VARIABLE        shift and go to state 234
    DOUBLE          shift and go to state 202

    expresionInt                   shift and go to state 442
    expresionDouble                shift and go to state 443
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 201

state 367

    (193) asignacionFor -> INT VARIABLE . IGUAL expresionInt

    IGUAL           shift and go to state 444


state 368

    (194) asignacionFor -> DOUBLER VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 445


state 369

    (195) asignacionFor -> NUM VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 446


state 370

    (196) asignacionFor -> DYNAMIC VARIABLE . IGUAL expresionInt
    (197) asignacionFor -> DYNAMIC VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 447


state 371

    (198) asignacionFor -> VAR VARIABLE . IGUAL expresionInt
    (199) asignacionFor -> VAR VARIABLE . IGUAL expresionDouble

    IGUAL           shift and go to state 448


state 372

    (89) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE
    (90) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> LIST MENOR STRINGR MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 449


state 373

    (93) expresionLista -> LIST MENOR INT MAYOR . VARIABLE
    (94) expresionLista -> LIST MENOR INT MAYOR . VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> LIST MENOR INT MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 450


state 374

    (97) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE
    (98) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> LIST MENOR DOUBLER MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 451


state 375

    (101) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE
    (102) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> LIST MENOR NUM MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 452


state 376

    (104) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE
    (105) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> LIST MENOR BOOLR MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 453


state 377

    (108) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE
    (109) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> LIST MENOR DYNAMIC MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 454


state 378

    (112) expresionLista -> LIST MENOR SET MAYOR . VARIABLE
    (113) expresionLista -> LIST MENOR SET MAYOR . VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> LIST MENOR SET MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 455


state 379

    (116) expresionLista -> LIST MENOR MAP MAYOR . VARIABLE
    (117) expresionLista -> LIST MENOR MAP MAYOR . VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> LIST MENOR MAP MAYOR . VARIABLE IGUAL expresionNewList

    VARIABLE        shift and go to state 456


state 380

    (124) expListString -> STRING COMA expListString .

    CDER            reduce using rule 124 (expListString -> STRING COMA expListString .)


state 381

    (145) expListDynamic -> STRING COMA expListDynamic .

    CDER            reduce using rule 145 (expListDynamic -> STRING COMA expListDynamic .)


state 382

    (125) expListString -> VARIABLE .
    (126) expListString -> VARIABLE . COMA expListString
    (149) expListDynamic -> VARIABLE .
    (150) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 125 (expListString -> VARIABLE .)
    CDER            reduce using rule 125 (expListString -> VARIABLE .)
    COMA            shift and go to state 457

  ! CDER            [ reduce using rule 149 (expListDynamic -> VARIABLE .) ]


state 383

    (126) expListString -> VARIABLE COMA expListString .

    CDER            reduce using rule 126 (expListString -> VARIABLE COMA expListString .)


state 384

    (130) expListInt -> VARIABLE COMA expListInt .

    CDER            reduce using rule 130 (expListInt -> VARIABLE COMA expListInt .)


state 385

    (136) expListNum -> VARIABLE COMA expListNum .

    CDER            reduce using rule 136 (expListNum -> VARIABLE COMA expListNum .)


state 386

    (140) expListBool -> VARIABLE COMA expListBool .

    CDER            reduce using rule 140 (expListBool -> VARIABLE COMA expListBool .)


state 387

    (150) expListDynamic -> VARIABLE COMA expListDynamic .

    CDER            reduce using rule 150 (expListDynamic -> VARIABLE COMA expListDynamic .)


state 388

    (156) expListSet -> VARIABLE COMA expListSet .

    CDER            reduce using rule 156 (expListSet -> VARIABLE COMA expListSet .)


state 389

    (162) expListMap -> VARIABLE COMA expListMap .

    CDER            reduce using rule 162 (expListMap -> VARIABLE COMA expListMap .)


state 390

    (128) expListInt -> ENTERO COMA expListInt .

    CDER            reduce using rule 128 (expListInt -> ENTERO COMA expListInt .)


state 391

    (133) expListNum -> ENTERO COMA expListNum .

    CDER            reduce using rule 133 (expListNum -> ENTERO COMA expListNum .)


state 392

    (146) expListDynamic -> ENTERO COMA expListDynamic .

    CDER            reduce using rule 146 (expListDynamic -> ENTERO COMA expListDynamic .)


state 393

    (129) expListInt -> VARIABLE .
    (130) expListInt -> VARIABLE . COMA expListInt
    (135) expListNum -> VARIABLE .
    (136) expListNum -> VARIABLE . COMA expListNum
    (149) expListDynamic -> VARIABLE .
    (150) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 129 (expListInt -> VARIABLE .)
  ! reduce/reduce conflict for CDER resolved using rule 129 (expListInt -> VARIABLE .)
    CDER            reduce using rule 129 (expListInt -> VARIABLE .)
    COMA            shift and go to state 458

  ! CDER            [ reduce using rule 135 (expListNum -> VARIABLE .) ]
  ! CDER            [ reduce using rule 149 (expListDynamic -> VARIABLE .) ]


state 394

    (134) expListNum -> DOUBLE COMA expListNum .

    CDER            reduce using rule 134 (expListNum -> DOUBLE COMA expListNum .)


state 395

    (147) expListDynamic -> DOUBLE COMA expListDynamic .

    CDER            reduce using rule 147 (expListDynamic -> DOUBLE COMA expListDynamic .)


state 396

    (131) expListNum -> ENTERO .
    (133) expListNum -> ENTERO . COMA expListNum
    (142) expListDynamic -> ENTERO .
    (146) expListDynamic -> ENTERO . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 131 (expListNum -> ENTERO .)
    CDER            reduce using rule 131 (expListNum -> ENTERO .)
    COMA            shift and go to state 459

  ! CDER            [ reduce using rule 142 (expListDynamic -> ENTERO .) ]


state 397

    (135) expListNum -> VARIABLE .
    (136) expListNum -> VARIABLE . COMA expListNum
    (149) expListDynamic -> VARIABLE .
    (150) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 135 (expListNum -> VARIABLE .)
    CDER            reduce using rule 135 (expListNum -> VARIABLE .)
    COMA            shift and go to state 460

  ! CDER            [ reduce using rule 149 (expListDynamic -> VARIABLE .) ]


state 398

    (138) expListBool -> BOOL COMA expListBool .

    CDER            reduce using rule 138 (expListBool -> BOOL COMA expListBool .)


state 399

    (148) expListDynamic -> BOOL COMA expListDynamic .

    CDER            reduce using rule 148 (expListDynamic -> BOOL COMA expListDynamic .)


state 400

    (139) expListBool -> VARIABLE .
    (140) expListBool -> VARIABLE . COMA expListBool
    (149) expListDynamic -> VARIABLE .
    (150) expListDynamic -> VARIABLE . COMA expListDynamic

  ! reduce/reduce conflict for CDER resolved using rule 139 (expListBool -> VARIABLE .)
    CDER            reduce using rule 139 (expListBool -> VARIABLE .)
    COMA            shift and go to state 461

  ! CDER            [ reduce using rule 149 (expListDynamic -> VARIABLE .) ]


state 401

    (151) expListSet -> SETFROM PIZQ CIZQ . CDER PDER
    (152) expListSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (153) expListSet -> SETFROM PIZQ CIZQ . CDER PDER COMA expListSet
    (154) expListSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER COMA expListSet
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 462
    STRING          shift and go to state 261
    ENTERO          shift and go to state 262
    DOUBLE          shift and go to state 263
    BOOL            shift and go to state 264
    VARIABLE        shift and go to state 409

    expListDynamic                 shift and go to state 463

state 402

    (159) expListMap -> LIZQ LDER COMA . expListMap
    (157) expListMap -> . LIZQ LDER
    (158) expListMap -> . LIZQ expMap LDER
    (159) expListMap -> . LIZQ LDER COMA expListMap
    (160) expListMap -> . LIZQ expMap LDER COMA expListMap
    (161) expListMap -> . VARIABLE
    (162) expListMap -> . VARIABLE COMA expListMap

    LIZQ            shift and go to state 163
    VARIABLE        shift and go to state 465

    expListMap                     shift and go to state 464

state 403

    (158) expListMap -> LIZQ expMap LDER .
    (160) expListMap -> LIZQ expMap LDER . COMA expListMap

    CDER            reduce using rule 158 (expListMap -> LIZQ expMap LDER .)
    COMA            shift and go to state 466


state 404

    (82) expresionSet -> SET VARIABLE IGUAL SETFROM . PIZQ CIZQ CDER PDER
    (84) expresionSet -> SET VARIABLE IGUAL SETFROM . PIZQ CIZQ expListDynamic CDER PDER

    PIZQ            shift and go to state 467


state 405

    (62) expresionMap -> MAP VARIABLE IGUAL LIZQ . LDER
    (64) expresionMap -> MAP VARIABLE IGUAL LIZQ . expMap LDER
    (66) expMap -> . claveValor DOSPUNTOS claveValor
    (67) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (68) claveValor -> . VARIABLE
    (69) claveValor -> . STRING
    (70) claveValor -> . ENTERO
    (71) claveValor -> . DOUBLE
    (72) claveValor -> . BOOL
    (73) claveValor -> . CIZQ expListDynamic CDER
    (74) claveValor -> . CIZQ expListSet CDER
    (75) claveValor -> . expresionNewList
    (76) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (77) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (78) claveValor -> . LIZQ LDER
    (79) claveValor -> . LIZQ expMap LDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER

    LDER            shift and go to state 468
    VARIABLE        shift and go to state 131
    STRING          shift and go to state 132
    ENTERO          shift and go to state 133
    DOUBLE          shift and go to state 134
    BOOL            shift and go to state 135
    CIZQ            shift and go to state 136
    SETFROM         shift and go to state 138
    LIZQ            shift and go to state 127
    NEWLIST         shift and go to state 55

    expMap                         shift and go to state 469
    claveValor                     shift and go to state 130
    expresionNewList               shift and go to state 137

state 406

    (87) expresionNewList -> NEWLIST PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 87 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    DOSPUNTOS       reduce using rule 87 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    COMA            reduce using rule 87 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)
    LDER            reduce using rule 87 (expresionNewList -> NEWLIST PIZQ ENTERO PDER .)


state 407

    (81) expresionSet -> SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 470


state 408

    (83) expresionSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 471


state 409

    (149) expListDynamic -> VARIABLE .
    (150) expListDynamic -> VARIABLE . COMA expListDynamic

    CDER            reduce using rule 149 (expListDynamic -> VARIABLE .)
    COMA            shift and go to state 472


state 410

    (60) expresionSwitch -> SWITCH PIZQ expresionBool PDER .

    $end            reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    PUNTOYCOMA      reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    VARIABLE        reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    INT             reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    DOUBLER         reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    NUM             reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    STRINGR         reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    BOOLR           reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    DYNAMIC         reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    VAR             reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    WHILE           reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    DO              reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    IF              reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    ELSE            reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    PRINT           reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    FUNCIONSTDIN    reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    FUNCIONSTDOUT   reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    NOT             reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    ELSEIF          reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    FOR             reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    LIST            reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    CIZQ            reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    NEWLIST         reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    SET             reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    SETFROM         reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    MAP             reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    LIZQ            reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    SWITCH          reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    ENTERO          reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    DOUBLE          reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    STRING          reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    BOOL            reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)
    LDER            reduce using rule 60 (expresionSwitch -> SWITCH PIZQ expresionBool PDER .)


state 411

    (235) valorString -> STRING CIZQ ENTERO CDER .

    SUMA            reduce using rule 235 (valorString -> STRING CIZQ ENTERO CDER .)
    CIZQ            reduce using rule 235 (valorString -> STRING CIZQ ENTERO CDER .)
    PUNTOYCOMA      reduce using rule 235 (valorString -> STRING CIZQ ENTERO CDER .)
    PDER            reduce using rule 235 (valorString -> STRING CIZQ ENTERO CDER .)


state 412

    (218) expresionBool -> valorDouble comparadorMat expresionDouble .

    AND             reduce using rule 218 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 218 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 218 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    PDER            reduce using rule 218 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 413

    (221) expresionBool -> valorDouble comparadorMat VARIABLE .
    (242) valorInt -> VARIABLE .

  ! reduce/reduce conflict for AND resolved using rule 221 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 221 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 221 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 221 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 221 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 221 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 221 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PDER            reduce using rule 221 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 242 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 242 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 242 (valorInt -> VARIABLE .)
    DIV             reduce using rule 242 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 242 (valorInt -> VARIABLE .)
    MOD             reduce using rule 242 (valorInt -> VARIABLE .)

  ! AND             [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 242 (valorInt -> VARIABLE .) ]


state 414

    (220) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (242) valorInt -> VARIABLE .

  ! reduce/reduce conflict for AND resolved using rule 220 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 220 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 220 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for PDER resolved using rule 220 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 220 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 220 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 220 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PDER            reduce using rule 220 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 242 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 242 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 242 (valorInt -> VARIABLE .)
    DIV             reduce using rule 242 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 242 (valorInt -> VARIABLE .)
    MOD             reduce using rule 242 (valorInt -> VARIABLE .)

  ! AND             [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! PUNTOYCOMA      [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! PDER            [ reduce using rule 242 (valorInt -> VARIABLE .) ]


state 415

    (219) expresionBool -> VARIABLE comparadorMat expresionDouble .

    AND             reduce using rule 219 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 219 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PUNTOYCOMA      reduce using rule 219 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    PDER            reduce using rule 219 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 416

    (239) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .

    PUNTOYCOMA      reduce using rule 239 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    SUMA            reduce using rule 239 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    CIZQ            reduce using rule 239 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)
    PDER            reduce using rule 239 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER .)


state 417

    (240) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA . ENTERO PDER

    ENTERO          shift and go to state 473


state 418

    (121) expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .
    (85) expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 85 (expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .)
    PUNTOYCOMA      reduce using rule 85 (expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .)

  ! PUNTOYCOMA      [ reduce using rule 121 (expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER .) ]


state 419

    (122) expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA . ENTERO PDER

    ENTERO          shift and go to state 474


state 420

    (187) expresion -> valor operadorMat expresion .

    PUNTOYCOMA      reduce using rule 187 (expresion -> valor operadorMat expresion .)
    PDER            reduce using rule 187 (expresion -> valor operadorMat expresion .)


state 421

    (213) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ . final LDER
    (63) expresionMap -> LIZQ . LDER
    (65) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (66) expMap -> . claveValor DOSPUNTOS claveValor
    (67) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (68) claveValor -> . VARIABLE
    (69) claveValor -> . STRING
    (70) claveValor -> . ENTERO
    (71) claveValor -> . DOUBLE
    (72) claveValor -> . BOOL
    (73) claveValor -> . CIZQ expListDynamic CDER
    (74) claveValor -> . CIZQ expListSet CDER
    (75) claveValor -> . expresionNewList
    (76) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (77) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (78) claveValor -> . LIZQ LDER
    (79) claveValor -> . LIZQ expMap LDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 128
    VARIABLE        shift and go to state 271
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 274
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 275
    MAP             shift and go to state 54
    LIZQ            shift and go to state 269
    SWITCH          shift and go to state 57
    STRING          shift and go to state 276
    ENTERO          shift and go to state 273
    DOUBLE          shift and go to state 277
    BOOL            shift and go to state 278

    expresionBool                  shift and go to state 6
    final                          shift and go to state 475
    expMap                         shift and go to state 129
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 272
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    claveValor                     shift and go to state 130
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 422

    (214) sentenciaWhile -> WHILE PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    INT             reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NUM             reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    VAR             reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DO              reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    IF              reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NOT             reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    FOR             reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LIST            reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    SET             reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    MAP             reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LIZQ            reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    SWITCH          reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    STRING          reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    $end            reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)
    LDER            reduce using rule 214 (sentenciaWhile -> WHILE PIZQ expresionBool PDER final .)


state 423

    (67) expMap -> claveValor DOSPUNTOS claveValor COMA . expMap
    (66) expMap -> . claveValor DOSPUNTOS claveValor
    (67) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (68) claveValor -> . VARIABLE
    (69) claveValor -> . STRING
    (70) claveValor -> . ENTERO
    (71) claveValor -> . DOUBLE
    (72) claveValor -> . BOOL
    (73) claveValor -> . CIZQ expListDynamic CDER
    (74) claveValor -> . CIZQ expListSet CDER
    (75) claveValor -> . expresionNewList
    (76) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (77) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (78) claveValor -> . LIZQ LDER
    (79) claveValor -> . LIZQ expMap LDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER

    VARIABLE        shift and go to state 131
    STRING          shift and go to state 132
    ENTERO          shift and go to state 133
    DOUBLE          shift and go to state 134
    BOOL            shift and go to state 135
    CIZQ            shift and go to state 136
    SETFROM         shift and go to state 138
    LIZQ            shift and go to state 127
    NEWLIST         shift and go to state 55

    claveValor                     shift and go to state 130
    expMap                         shift and go to state 476
    expresionNewList               shift and go to state 137

state 424

    (76) claveValor -> SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 477


state 425

    (77) claveValor -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 478


state 426

    (215) sentenciaDoWhile -> DO LIZQ final LDER WHILE . PIZQ expresionBool PDER

    PIZQ            shift and go to state 479


state 427

    (177) sentenciaIf -> IF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    INT             reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DO              reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    IF              reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    FOR             reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LIST            reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    SET             reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    MAP             reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LIZQ            reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    SWITCH          reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    $end            reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 177 (sentenciaIf -> IF PIZQ expresionBool PDER final .)


state 428

    (178) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ . final LDER
    (63) expresionMap -> LIZQ . LDER
    (65) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (66) expMap -> . claveValor DOSPUNTOS claveValor
    (67) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (68) claveValor -> . VARIABLE
    (69) claveValor -> . STRING
    (70) claveValor -> . ENTERO
    (71) claveValor -> . DOUBLE
    (72) claveValor -> . BOOL
    (73) claveValor -> . CIZQ expListDynamic CDER
    (74) claveValor -> . CIZQ expListSet CDER
    (75) claveValor -> . expresionNewList
    (76) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (77) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (78) claveValor -> . LIZQ LDER
    (79) claveValor -> . LIZQ expMap LDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 128
    VARIABLE        shift and go to state 271
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 274
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 275
    MAP             shift and go to state 54
    LIZQ            shift and go to state 269
    SWITCH          shift and go to state 57
    STRING          shift and go to state 276
    ENTERO          shift and go to state 273
    DOUBLE          shift and go to state 277
    BOOL            shift and go to state 278

    expresionBool                  shift and go to state 6
    final                          shift and go to state 480
    expMap                         shift and go to state 129
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 272
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    claveValor                     shift and go to state 130
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 429

    (65) expresionMap -> LIZQ expMap LDER .
    (79) claveValor -> LIZQ expMap LDER .

    PUNTOYCOMA      reduce using rule 65 (expresionMap -> LIZQ expMap LDER .)
    DOSPUNTOS       reduce using rule 79 (claveValor -> LIZQ expMap LDER .)


state 430

    (111) expresionLista -> CIZQ expListDynamic CDER .
    (73) claveValor -> CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 111 (expresionLista -> CIZQ expListDynamic CDER .)
    DOSPUNTOS       reduce using rule 73 (claveValor -> CIZQ expListDynamic CDER .)


state 431

    (115) expresionLista -> CIZQ expListSet CDER .
    (74) claveValor -> CIZQ expListSet CDER .

    PUNTOYCOMA      reduce using rule 115 (expresionLista -> CIZQ expListSet CDER .)
    DOSPUNTOS       reduce using rule 74 (claveValor -> CIZQ expListSet CDER .)


state 432

    (81) expresionSet -> SETFROM PIZQ CIZQ . CDER PDER
    (83) expresionSet -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (76) claveValor -> SETFROM PIZQ CIZQ . CDER PDER
    (77) claveValor -> SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 481
    STRING          shift and go to state 261
    ENTERO          shift and go to state 262
    DOUBLE          shift and go to state 263
    BOOL            shift and go to state 264
    VARIABLE        shift and go to state 409

    expListDynamic                 shift and go to state 482

state 433

    (181) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .

    PUNTOYCOMA      reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VARIABLE        reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    INT             reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLER         reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NUM             reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRINGR         reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOLR           reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DYNAMIC         reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    VAR             reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    WHILE           reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DO              reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    IF              reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSE            reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    PRINT           reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDIN    reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FUNCIONSTDOUT   reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NOT             reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ELSEIF          reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    FOR             reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LIST            reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    CIZQ            reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    NEWLIST         reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    SET             reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    SETFROM         reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    MAP             reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LIZQ            reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    SWITCH          reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    ENTERO          reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    DOUBLE          reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    STRING          reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    BOOL            reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    $end            reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)
    LDER            reduce using rule 181 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER final .)


state 434

    (182) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ . final LDER
    (63) expresionMap -> LIZQ . LDER
    (65) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (66) expMap -> . claveValor DOSPUNTOS claveValor
    (67) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (68) claveValor -> . VARIABLE
    (69) claveValor -> . STRING
    (70) claveValor -> . ENTERO
    (71) claveValor -> . DOUBLE
    (72) claveValor -> . BOOL
    (73) claveValor -> . CIZQ expListDynamic CDER
    (74) claveValor -> . CIZQ expListSet CDER
    (75) claveValor -> . expresionNewList
    (76) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (77) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (78) claveValor -> . LIZQ LDER
    (79) claveValor -> . LIZQ expMap LDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 128
    VARIABLE        shift and go to state 271
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 274
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 275
    MAP             shift and go to state 54
    LIZQ            shift and go to state 269
    SWITCH          shift and go to state 57
    STRING          shift and go to state 276
    ENTERO          shift and go to state 273
    DOUBLE          shift and go to state 277
    BOOL            shift and go to state 278

    expresionBool                  shift and go to state 6
    final                          shift and go to state 483
    expMap                         shift and go to state 129
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBoolFor               shift and go to state 7
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 272
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    claveValor                     shift and go to state 130
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 435

    (209) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor . PUNTOYCOMA VARIABLE DRESTA PDER final

    PUNTOYCOMA      shift and go to state 484


state 436

    (203) expresionBoolFor -> VARIABLE . comparadorMat expresionDouble
    (204) expresionBoolFor -> VARIABLE . comparadorMat VARIABLE
    (217) valorBool -> VARIABLE .
    (242) valorInt -> VARIABLE .
    (219) expresionBool -> VARIABLE . comparadorMat expresionDouble
    (220) expresionBool -> VARIABLE . comparadorMat VARIABLE
    (184) valor -> VARIABLE .
    (255) comparadorMat -> . DIGUAL
    (256) comparadorMat -> . NOIGUAL
    (257) comparadorMat -> . MAYOR
    (258) comparadorMat -> . MENOR
    (259) comparadorMat -> . MAYIGUAL
    (260) comparadorMat -> . MENIGUAL

  ! shift/reduce conflict for DIGUAL resolved as shift
  ! shift/reduce conflict for NOIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
    PUNTOYCOMA      reduce using rule 217 (valorBool -> VARIABLE .)
    AND             reduce using rule 217 (valorBool -> VARIABLE .)
    OR              reduce using rule 217 (valorBool -> VARIABLE .)
    IS              reduce using rule 184 (valor -> VARIABLE .)
    ISNEGADO        reduce using rule 184 (valor -> VARIABLE .)
    DIGUAL          shift and go to state 96
    NOIGUAL         shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYIGUAL        shift and go to state 100
    MENIGUAL        shift and go to state 101

  ! DIGUAL          [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! NOIGUAL         [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MAYIGUAL        [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! MENIGUAL        [ reduce using rule 242 (valorInt -> VARIABLE .) ]

    comparadorMat                  shift and go to state 485

state 437

    (202) expresionBoolFor -> valorDouble . comparadorMat expresionDouble
    (205) expresionBoolFor -> valorDouble . comparadorMat VARIABLE
    (218) expresionBool -> valorDouble . comparadorMat expresionDouble
    (221) expresionBool -> valorDouble . comparadorMat VARIABLE
    (255) comparadorMat -> . DIGUAL
    (256) comparadorMat -> . NOIGUAL
    (257) comparadorMat -> . MAYOR
    (258) comparadorMat -> . MENOR
    (259) comparadorMat -> . MAYIGUAL
    (260) comparadorMat -> . MENIGUAL

    DIGUAL          shift and go to state 96
    NOIGUAL         shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYIGUAL        shift and go to state 100
    MENIGUAL        shift and go to state 101

    comparadorMat                  shift and go to state 486

state 438

    (206) expresionBoolFor -> valorBool .
    (222) expresionBool -> valorBool .

    PUNTOYCOMA      reduce using rule 206 (expresionBoolFor -> valorBool .)
    AND             reduce using rule 222 (expresionBool -> valorBool .)
    OR              reduce using rule 222 (expresionBool -> valorBool .)


state 439

    (207) expresionBoolFor -> negacionBool .
    (223) expresionBool -> negacionBool .

    PUNTOYCOMA      reduce using rule 207 (expresionBoolFor -> negacionBool .)
    AND             reduce using rule 223 (expresionBool -> negacionBool .)
    OR              reduce using rule 223 (expresionBool -> negacionBool .)


state 440

    (208) expresionBoolFor -> comparacionBool .
    (224) expresionBool -> comparacionBool .

    PUNTOYCOMA      reduce using rule 208 (expresionBoolFor -> comparacionBool .)
    AND             reduce using rule 224 (expresionBool -> comparacionBool .)
    OR              reduce using rule 224 (expresionBool -> comparacionBool .)


state 441

    (228) comparacionBool -> expresionBool . operadorLogico expresionBool
    (229) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (261) operadorLogico -> . AND
    (262) operadorLogico -> . OR

    AND             shift and go to state 68
    OR              shift and go to state 69

    operadorLogico                 shift and go to state 67

state 442

    (200) asignacionFor -> VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 200 (asignacionFor -> VARIABLE IGUAL expresionInt .)


state 443

    (201) asignacionFor -> VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 201 (asignacionFor -> VARIABLE IGUAL expresionDouble .)


state 444

    (193) asignacionFor -> INT VARIABLE IGUAL . expresionInt
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE

    ENTERO          shift and go to state 203
    VARIABLE        shift and go to state 234

    expresionInt                   shift and go to state 487
    valorInt                       shift and go to state 232

state 445

    (194) asignacionFor -> DOUBLER VARIABLE IGUAL . expresionDouble
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 202
    ENTERO          shift and go to state 203
    VARIABLE        shift and go to state 234

    expresionDouble                shift and go to state 488
    valorDouble                    shift and go to state 201
    valorInt                       shift and go to state 181

state 446

    (195) asignacionFor -> NUM VARIABLE IGUAL . expresionDouble
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE

    DOUBLE          shift and go to state 202
    ENTERO          shift and go to state 203
    VARIABLE        shift and go to state 234

    expresionDouble                shift and go to state 489
    valorDouble                    shift and go to state 201
    valorInt                       shift and go to state 181

state 447

    (196) asignacionFor -> DYNAMIC VARIABLE IGUAL . expresionInt
    (197) asignacionFor -> DYNAMIC VARIABLE IGUAL . expresionDouble
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt

    ENTERO          shift and go to state 203
    VARIABLE        shift and go to state 234
    DOUBLE          shift and go to state 202

    expresionInt                   shift and go to state 490
    expresionDouble                shift and go to state 491
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 201

state 448

    (198) asignacionFor -> VAR VARIABLE IGUAL . expresionInt
    (199) asignacionFor -> VAR VARIABLE IGUAL . expresionDouble
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt

    ENTERO          shift and go to state 203
    VARIABLE        shift and go to state 234
    DOUBLE          shift and go to state 202

    expresionInt                   shift and go to state 492
    expresionDouble                shift and go to state 493
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 201

state 449

    (89) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE .
    (90) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE . IGUAL CIZQ expListString CDER
    (91) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 89 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE .)
    IGUAL           shift and go to state 494


state 450

    (93) expresionLista -> LIST MENOR INT MAYOR VARIABLE .
    (94) expresionLista -> LIST MENOR INT MAYOR VARIABLE . IGUAL CIZQ expListInt CDER
    (95) expresionLista -> LIST MENOR INT MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 93 (expresionLista -> LIST MENOR INT MAYOR VARIABLE .)
    IGUAL           shift and go to state 495


state 451

    (97) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE .
    (98) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE . IGUAL CIZQ expListNum CDER
    (99) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 97 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE .)
    IGUAL           shift and go to state 496


state 452

    (101) expresionLista -> LIST MENOR NUM MAYOR VARIABLE .
    (102) expresionLista -> LIST MENOR NUM MAYOR VARIABLE . IGUAL CIZQ expListNum CDER
    (103) expresionLista -> LIST MENOR NUM MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 101 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE .)
    IGUAL           shift and go to state 497


state 453

    (104) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE .
    (105) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE . IGUAL CIZQ expListBool CDER
    (106) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 104 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE .)
    IGUAL           shift and go to state 498


state 454

    (108) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE .
    (109) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE . IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 108 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE .)
    IGUAL           shift and go to state 499


state 455

    (112) expresionLista -> LIST MENOR SET MAYOR VARIABLE .
    (113) expresionLista -> LIST MENOR SET MAYOR VARIABLE . IGUAL CIZQ expListSet CDER
    (114) expresionLista -> LIST MENOR SET MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 112 (expresionLista -> LIST MENOR SET MAYOR VARIABLE .)
    IGUAL           shift and go to state 500


state 456

    (116) expresionLista -> LIST MENOR MAP MAYOR VARIABLE .
    (117) expresionLista -> LIST MENOR MAP MAYOR VARIABLE . IGUAL CIZQ expListMap CDER
    (118) expresionLista -> LIST MENOR MAP MAYOR VARIABLE . IGUAL expresionNewList

    PUNTOYCOMA      reduce using rule 116 (expresionLista -> LIST MENOR MAP MAYOR VARIABLE .)
    IGUAL           shift and go to state 501


state 457

    (126) expListString -> VARIABLE COMA . expListString
    (150) expListDynamic -> VARIABLE COMA . expListDynamic
    (123) expListString -> . STRING
    (124) expListString -> . STRING COMA expListString
    (125) expListString -> . VARIABLE
    (126) expListString -> . VARIABLE COMA expListString
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 157
    VARIABLE        shift and go to state 382
    ENTERO          shift and go to state 262
    DOUBLE          shift and go to state 263
    BOOL            shift and go to state 264

    expListString                  shift and go to state 383
    expListDynamic                 shift and go to state 387

state 458

    (130) expListInt -> VARIABLE COMA . expListInt
    (136) expListNum -> VARIABLE COMA . expListNum
    (150) expListDynamic -> VARIABLE COMA . expListDynamic
    (127) expListInt -> . ENTERO
    (128) expListInt -> . ENTERO COMA expListInt
    (129) expListInt -> . VARIABLE
    (130) expListInt -> . VARIABLE COMA expListInt
    (131) expListNum -> . ENTERO
    (132) expListNum -> . DOUBLE
    (133) expListNum -> . ENTERO COMA expListNum
    (134) expListNum -> . DOUBLE COMA expListNum
    (135) expListNum -> . VARIABLE
    (136) expListNum -> . VARIABLE COMA expListNum
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 159
    VARIABLE        shift and go to state 393
    DOUBLE          shift and go to state 160
    STRING          shift and go to state 261
    BOOL            shift and go to state 264

    expListInt                     shift and go to state 384
    expListNum                     shift and go to state 385
    expListDynamic                 shift and go to state 387

state 459

    (133) expListNum -> ENTERO COMA . expListNum
    (146) expListDynamic -> ENTERO COMA . expListDynamic
    (131) expListNum -> . ENTERO
    (132) expListNum -> . DOUBLE
    (133) expListNum -> . ENTERO COMA expListNum
    (134) expListNum -> . DOUBLE COMA expListNum
    (135) expListNum -> . VARIABLE
    (136) expListNum -> . VARIABLE COMA expListNum
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 396
    DOUBLE          shift and go to state 160
    VARIABLE        shift and go to state 397
    STRING          shift and go to state 261
    BOOL            shift and go to state 264

    expListNum                     shift and go to state 391
    expListDynamic                 shift and go to state 392

state 460

    (136) expListNum -> VARIABLE COMA . expListNum
    (150) expListDynamic -> VARIABLE COMA . expListDynamic
    (131) expListNum -> . ENTERO
    (132) expListNum -> . DOUBLE
    (133) expListNum -> . ENTERO COMA expListNum
    (134) expListNum -> . DOUBLE COMA expListNum
    (135) expListNum -> . VARIABLE
    (136) expListNum -> . VARIABLE COMA expListNum
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic

    ENTERO          shift and go to state 396
    DOUBLE          shift and go to state 160
    VARIABLE        shift and go to state 397
    STRING          shift and go to state 261
    BOOL            shift and go to state 264

    expListNum                     shift and go to state 385
    expListDynamic                 shift and go to state 387

state 461

    (140) expListBool -> VARIABLE COMA . expListBool
    (150) expListDynamic -> VARIABLE COMA . expListDynamic
    (137) expListBool -> . BOOL
    (138) expListBool -> . BOOL COMA expListBool
    (139) expListBool -> . VARIABLE
    (140) expListBool -> . VARIABLE COMA expListBool
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic

    BOOL            shift and go to state 161
    VARIABLE        shift and go to state 400
    STRING          shift and go to state 261
    ENTERO          shift and go to state 262
    DOUBLE          shift and go to state 263

    expListBool                    shift and go to state 386
    expListDynamic                 shift and go to state 387

state 462

    (151) expListSet -> SETFROM PIZQ CIZQ CDER . PDER
    (153) expListSet -> SETFROM PIZQ CIZQ CDER . PDER COMA expListSet

    PDER            shift and go to state 502


state 463

    (152) expListSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER
    (154) expListSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER COMA expListSet

    CDER            shift and go to state 503


state 464

    (159) expListMap -> LIZQ LDER COMA expListMap .

    CDER            reduce using rule 159 (expListMap -> LIZQ LDER COMA expListMap .)


state 465

    (161) expListMap -> VARIABLE .
    (162) expListMap -> VARIABLE . COMA expListMap

    CDER            reduce using rule 161 (expListMap -> VARIABLE .)
    COMA            shift and go to state 504


state 466

    (160) expListMap -> LIZQ expMap LDER COMA . expListMap
    (157) expListMap -> . LIZQ LDER
    (158) expListMap -> . LIZQ expMap LDER
    (159) expListMap -> . LIZQ LDER COMA expListMap
    (160) expListMap -> . LIZQ expMap LDER COMA expListMap
    (161) expListMap -> . VARIABLE
    (162) expListMap -> . VARIABLE COMA expListMap

    LIZQ            shift and go to state 163
    VARIABLE        shift and go to state 465

    expListMap                     shift and go to state 505

state 467

    (82) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ . CIZQ CDER PDER
    (84) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ . CIZQ expListDynamic CDER PDER

    CIZQ            shift and go to state 506


state 468

    (62) expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .

    PUNTOYCOMA      reduce using rule 62 (expresionMap -> MAP VARIABLE IGUAL LIZQ LDER .)


state 469

    (64) expresionMap -> MAP VARIABLE IGUAL LIZQ expMap . LDER

    LDER            shift and go to state 507


state 470

    (81) expresionSet -> SETFROM PIZQ CIZQ CDER PDER .

    PUNTOYCOMA      reduce using rule 81 (expresionSet -> SETFROM PIZQ CIZQ CDER PDER .)


state 471

    (83) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 508


state 472

    (150) expListDynamic -> VARIABLE COMA . expListDynamic
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic

    STRING          shift and go to state 261
    ENTERO          shift and go to state 262
    DOUBLE          shift and go to state 263
    BOOL            shift and go to state 264
    VARIABLE        shift and go to state 409

    expListDynamic                 shift and go to state 387

state 473

    (240) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO . PDER

    PDER            shift and go to state 509


state 474

    (122) expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO . PDER

    PDER            shift and go to state 510


state 475

    (213) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 511


state 476

    (67) expMap -> claveValor DOSPUNTOS claveValor COMA expMap .

    LDER            reduce using rule 67 (expMap -> claveValor DOSPUNTOS claveValor COMA expMap .)


state 477

    (76) claveValor -> SETFROM PIZQ CIZQ CDER PDER .

    DOSPUNTOS       reduce using rule 76 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)
    COMA            reduce using rule 76 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)
    LDER            reduce using rule 76 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)


state 478

    (77) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 512


state 479

    (215) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ . expresionBool PDER
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 178
    DOUBLE          shift and go to state 58
    BOOL            shift and go to state 61
    NOT             shift and go to state 47
    ENTERO          shift and go to state 182
    STRING          shift and go to state 183

    expresionBool                  shift and go to state 513
    valorDouble                    shift and go to state 177
    valorBool                      shift and go to state 179
    negacionBool                   shift and go to state 180
    comparacionBool                shift and go to state 218
    valor                          shift and go to state 38
    valorInt                       shift and go to state 181

state 480

    (178) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 514


state 481

    (81) expresionSet -> SETFROM PIZQ CIZQ CDER . PDER
    (76) claveValor -> SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 515


state 482

    (83) expresionSet -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER
    (77) claveValor -> SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 516


state 483

    (182) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final . LDER

    LDER            shift and go to state 517


state 484

    (209) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DSUMA PDER final
    (211) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA . VARIABLE DRESTA PDER final

    VARIABLE        shift and go to state 518


state 485

    (203) expresionBoolFor -> VARIABLE comparadorMat . expresionDouble
    (204) expresionBoolFor -> VARIABLE comparadorMat . VARIABLE
    (219) expresionBool -> VARIABLE comparadorMat . expresionDouble
    (220) expresionBool -> VARIABLE comparadorMat . VARIABLE
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 519
    DOUBLE          shift and go to state 202
    ENTERO          shift and go to state 203

    expresionDouble                shift and go to state 520
    valorDouble                    shift and go to state 201
    valorInt                       shift and go to state 181

state 486

    (202) expresionBoolFor -> valorDouble comparadorMat . expresionDouble
    (205) expresionBoolFor -> valorDouble comparadorMat . VARIABLE
    (218) expresionBool -> valorDouble comparadorMat . expresionDouble
    (221) expresionBool -> valorDouble comparadorMat . VARIABLE
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE

    VARIABLE        shift and go to state 522
    DOUBLE          shift and go to state 202
    ENTERO          shift and go to state 203

    valorDouble                    shift and go to state 201
    expresionDouble                shift and go to state 521
    valorInt                       shift and go to state 181

state 487

    (193) asignacionFor -> INT VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 193 (asignacionFor -> INT VARIABLE IGUAL expresionInt .)


state 488

    (194) asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 194 (asignacionFor -> DOUBLER VARIABLE IGUAL expresionDouble .)


state 489

    (195) asignacionFor -> NUM VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 195 (asignacionFor -> NUM VARIABLE IGUAL expresionDouble .)


state 490

    (196) asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 196 (asignacionFor -> DYNAMIC VARIABLE IGUAL expresionInt .)


state 491

    (197) asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 197 (asignacionFor -> DYNAMIC VARIABLE IGUAL expresionDouble .)


state 492

    (198) asignacionFor -> VAR VARIABLE IGUAL expresionInt .

    PUNTOYCOMA      reduce using rule 198 (asignacionFor -> VAR VARIABLE IGUAL expresionInt .)


state 493

    (199) asignacionFor -> VAR VARIABLE IGUAL expresionDouble .

    PUNTOYCOMA      reduce using rule 199 (asignacionFor -> VAR VARIABLE IGUAL expresionDouble .)


state 494

    (90) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL . CIZQ expListString CDER
    (91) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL . expresionNewList
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 523
    NEWLIST         shift and go to state 55

    expresionNewList               shift and go to state 524

state 495

    (94) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL . CIZQ expListInt CDER
    (95) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL . expresionNewList
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 525
    NEWLIST         shift and go to state 55

    expresionNewList               shift and go to state 526

state 496

    (98) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL . CIZQ expListNum CDER
    (99) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL . expresionNewList
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 527
    NEWLIST         shift and go to state 55

    expresionNewList               shift and go to state 528

state 497

    (102) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL . CIZQ expListNum CDER
    (103) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL . expresionNewList
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 529
    NEWLIST         shift and go to state 55

    expresionNewList               shift and go to state 530

state 498

    (105) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL . CIZQ expListBool CDER
    (106) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL . expresionNewList
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 531
    NEWLIST         shift and go to state 55

    expresionNewList               shift and go to state 532

state 499

    (109) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL . CIZQ expListDynamic CDER
    (110) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL . expresionNewList
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 533
    NEWLIST         shift and go to state 55

    expresionNewList               shift and go to state 534

state 500

    (113) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL . CIZQ expListSet CDER
    (114) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL . expresionNewList
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 535
    NEWLIST         shift and go to state 55

    expresionNewList               shift and go to state 536

state 501

    (117) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL . CIZQ expListMap CDER
    (118) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL . expresionNewList
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER

    CIZQ            shift and go to state 537
    NEWLIST         shift and go to state 55

    expresionNewList               shift and go to state 538

state 502

    (151) expListSet -> SETFROM PIZQ CIZQ CDER PDER .
    (153) expListSet -> SETFROM PIZQ CIZQ CDER PDER . COMA expListSet

    CDER            reduce using rule 151 (expListSet -> SETFROM PIZQ CIZQ CDER PDER .)
    COMA            shift and go to state 539


state 503

    (152) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER
    (154) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER COMA expListSet

    PDER            shift and go to state 540


state 504

    (162) expListMap -> VARIABLE COMA . expListMap
    (157) expListMap -> . LIZQ LDER
    (158) expListMap -> . LIZQ expMap LDER
    (159) expListMap -> . LIZQ LDER COMA expListMap
    (160) expListMap -> . LIZQ expMap LDER COMA expListMap
    (161) expListMap -> . VARIABLE
    (162) expListMap -> . VARIABLE COMA expListMap

    LIZQ            shift and go to state 163
    VARIABLE        shift and go to state 465

    expListMap                     shift and go to state 389

state 505

    (160) expListMap -> LIZQ expMap LDER COMA expListMap .

    CDER            reduce using rule 160 (expListMap -> LIZQ expMap LDER COMA expListMap .)


state 506

    (82) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ . CDER PDER
    (84) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ . expListDynamic CDER PDER
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 541
    STRING          shift and go to state 261
    ENTERO          shift and go to state 262
    DOUBLE          shift and go to state 263
    BOOL            shift and go to state 264
    VARIABLE        shift and go to state 409

    expListDynamic                 shift and go to state 542

state 507

    (64) expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .

    PUNTOYCOMA      reduce using rule 64 (expresionMap -> MAP VARIABLE IGUAL LIZQ expMap LDER .)


state 508

    (83) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    PUNTOYCOMA      reduce using rule 83 (expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 509

    (240) sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .

    PUNTOYCOMA      reduce using rule 240 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    SUMA            reduce using rule 240 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    CIZQ            reduce using rule 240 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)
    PDER            reduce using rule 240 (sentenciaSubstring -> VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER .)


state 510

    (122) expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER .

    PUNTOYCOMA      reduce using rule 122 (expresionLista -> VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER .)


state 511

    (213) sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    MAP             reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LIZQ            reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    SWITCH          reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 213 (sentenciaWhile -> WHILE PIZQ expresionBool PDER LIZQ final LDER .)


state 512

    (77) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    DOSPUNTOS       reduce using rule 77 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    COMA            reduce using rule 77 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    LDER            reduce using rule 77 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 513

    (215) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool . PDER
    (228) comparacionBool -> expresionBool . operadorLogico expresionBool
    (229) comparacionBool -> expresionBool . operadorLogico comparacionBool
    (261) operadorLogico -> . AND
    (262) operadorLogico -> . OR

    PDER            shift and go to state 543
    AND             shift and go to state 68
    OR              shift and go to state 69

    operadorLogico                 shift and go to state 67

state 514

    (178) sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    MAP             reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LIZQ            reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    SWITCH          reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 178 (sentenciaIf -> IF PIZQ expresionBool PDER LIZQ final LDER .)


state 515

    (81) expresionSet -> SETFROM PIZQ CIZQ CDER PDER .
    (76) claveValor -> SETFROM PIZQ CIZQ CDER PDER .

    PUNTOYCOMA      reduce using rule 81 (expresionSet -> SETFROM PIZQ CIZQ CDER PDER .)
    DOSPUNTOS       reduce using rule 76 (claveValor -> SETFROM PIZQ CIZQ CDER PDER .)


state 516

    (83) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER
    (77) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 544


state 517

    (182) sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    INT             reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NUM             reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRINGR         reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOLR           reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    VAR             reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    WHILE           reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DO              reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    IF              reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSE            reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    PRINT           reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NOT             reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    FOR             reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LIST            reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    CIZQ            reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    SET             reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    SETFROM         reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    MAP             reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LIZQ            reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    SWITCH          reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    ENTERO          reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    STRING          reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    BOOL            reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    $end            reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)
    LDER            reduce using rule 182 (sentenciaElseIf -> ELSEIF PIZQ expresionBool PDER LIZQ final LDER .)


state 518

    (209) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DSUMA PDER final
    (211) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE . DRESTA PDER final

    DSUMA           shift and go to state 545
    DRESTA          shift and go to state 546


state 519

    (204) expresionBoolFor -> VARIABLE comparadorMat VARIABLE .
    (220) expresionBool -> VARIABLE comparadorMat VARIABLE .
    (242) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 204 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 220 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 220 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 204 (expresionBoolFor -> VARIABLE comparadorMat VARIABLE .)
    AND             reduce using rule 220 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    OR              reduce using rule 220 (expresionBool -> VARIABLE comparadorMat VARIABLE .)
    SUMA            reduce using rule 242 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 242 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 242 (valorInt -> VARIABLE .)
    DIV             reduce using rule 242 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 242 (valorInt -> VARIABLE .)
    MOD             reduce using rule 242 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 242 (valorInt -> VARIABLE .) ]


state 520

    (203) expresionBoolFor -> VARIABLE comparadorMat expresionDouble .
    (219) expresionBool -> VARIABLE comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 203 (expresionBoolFor -> VARIABLE comparadorMat expresionDouble .)
    AND             reduce using rule 219 (expresionBool -> VARIABLE comparadorMat expresionDouble .)
    OR              reduce using rule 219 (expresionBool -> VARIABLE comparadorMat expresionDouble .)


state 521

    (202) expresionBoolFor -> valorDouble comparadorMat expresionDouble .
    (218) expresionBool -> valorDouble comparadorMat expresionDouble .

    PUNTOYCOMA      reduce using rule 202 (expresionBoolFor -> valorDouble comparadorMat expresionDouble .)
    AND             reduce using rule 218 (expresionBool -> valorDouble comparadorMat expresionDouble .)
    OR              reduce using rule 218 (expresionBool -> valorDouble comparadorMat expresionDouble .)


state 522

    (205) expresionBoolFor -> valorDouble comparadorMat VARIABLE .
    (221) expresionBool -> valorDouble comparadorMat VARIABLE .
    (242) valorInt -> VARIABLE .

  ! reduce/reduce conflict for PUNTOYCOMA resolved using rule 205 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 221 (expresionBool -> valorDouble comparadorMat VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 221 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    PUNTOYCOMA      reduce using rule 205 (expresionBoolFor -> valorDouble comparadorMat VARIABLE .)
    AND             reduce using rule 221 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    OR              reduce using rule 221 (expresionBool -> valorDouble comparadorMat VARIABLE .)
    SUMA            reduce using rule 242 (valorInt -> VARIABLE .)
    RESTA           reduce using rule 242 (valorInt -> VARIABLE .)
    MULTI           reduce using rule 242 (valorInt -> VARIABLE .)
    DIV             reduce using rule 242 (valorInt -> VARIABLE .)
    DIVENTERO       reduce using rule 242 (valorInt -> VARIABLE .)
    MOD             reduce using rule 242 (valorInt -> VARIABLE .)

  ! PUNTOYCOMA      [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! AND             [ reduce using rule 242 (valorInt -> VARIABLE .) ]
  ! OR              [ reduce using rule 242 (valorInt -> VARIABLE .) ]


state 523

    (90) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ . expListString CDER
    (88) expresionNewList -> CIZQ . CDER
    (123) expListString -> . STRING
    (124) expListString -> . STRING COMA expListString
    (125) expListString -> . VARIABLE
    (126) expListString -> . VARIABLE COMA expListString

    CDER            shift and go to state 150
    STRING          shift and go to state 549
    VARIABLE        shift and go to state 547

    expListString                  shift and go to state 548

state 524

    (91) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 91 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList .)


state 525

    (94) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ . expListInt CDER
    (88) expresionNewList -> CIZQ . CDER
    (127) expListInt -> . ENTERO
    (128) expListInt -> . ENTERO COMA expListInt
    (129) expListInt -> . VARIABLE
    (130) expListInt -> . VARIABLE COMA expListInt

    CDER            shift and go to state 150
    ENTERO          shift and go to state 552
    VARIABLE        shift and go to state 550

    expListInt                     shift and go to state 551

state 526

    (95) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 95 (expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList .)


state 527

    (98) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ . expListNum CDER
    (88) expresionNewList -> CIZQ . CDER
    (131) expListNum -> . ENTERO
    (132) expListNum -> . DOUBLE
    (133) expListNum -> . ENTERO COMA expListNum
    (134) expListNum -> . DOUBLE COMA expListNum
    (135) expListNum -> . VARIABLE
    (136) expListNum -> . VARIABLE COMA expListNum

    CDER            shift and go to state 150
    ENTERO          shift and go to state 555
    DOUBLE          shift and go to state 556
    VARIABLE        shift and go to state 553

    expListNum                     shift and go to state 554

state 528

    (99) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 99 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList .)


state 529

    (102) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ . expListNum CDER
    (88) expresionNewList -> CIZQ . CDER
    (131) expListNum -> . ENTERO
    (132) expListNum -> . DOUBLE
    (133) expListNum -> . ENTERO COMA expListNum
    (134) expListNum -> . DOUBLE COMA expListNum
    (135) expListNum -> . VARIABLE
    (136) expListNum -> . VARIABLE COMA expListNum

    CDER            shift and go to state 150
    ENTERO          shift and go to state 555
    DOUBLE          shift and go to state 556
    VARIABLE        shift and go to state 553

    expListNum                     shift and go to state 557

state 530

    (103) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 103 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList .)


state 531

    (105) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ . expListBool CDER
    (88) expresionNewList -> CIZQ . CDER
    (137) expListBool -> . BOOL
    (138) expListBool -> . BOOL COMA expListBool
    (139) expListBool -> . VARIABLE
    (140) expListBool -> . VARIABLE COMA expListBool

    CDER            shift and go to state 150
    BOOL            shift and go to state 560
    VARIABLE        shift and go to state 558

    expListBool                    shift and go to state 559

state 532

    (106) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 106 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList .)


state 533

    (109) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ . expListDynamic CDER
    (88) expresionNewList -> CIZQ . CDER
    (141) expListDynamic -> . STRING
    (142) expListDynamic -> . ENTERO
    (143) expListDynamic -> . DOUBLE
    (144) expListDynamic -> . BOOL
    (145) expListDynamic -> . STRING COMA expListDynamic
    (146) expListDynamic -> . ENTERO COMA expListDynamic
    (147) expListDynamic -> . DOUBLE COMA expListDynamic
    (148) expListDynamic -> . BOOL COMA expListDynamic
    (149) expListDynamic -> . VARIABLE
    (150) expListDynamic -> . VARIABLE COMA expListDynamic

    CDER            shift and go to state 150
    STRING          shift and go to state 261
    ENTERO          shift and go to state 262
    DOUBLE          shift and go to state 263
    BOOL            shift and go to state 264
    VARIABLE        shift and go to state 409

    expListDynamic                 shift and go to state 561

state 534

    (110) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 110 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList .)


state 535

    (113) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ . expListSet CDER
    (88) expresionNewList -> CIZQ . CDER
    (151) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (152) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (153) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (154) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (155) expListSet -> . VARIABLE
    (156) expListSet -> . VARIABLE COMA expListSet

    CDER            shift and go to state 150
    SETFROM         shift and go to state 162
    VARIABLE        shift and go to state 562

    expListSet                     shift and go to state 563

state 536

    (114) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 114 (expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList .)


state 537

    (117) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ . expListMap CDER
    (88) expresionNewList -> CIZQ . CDER
    (157) expListMap -> . LIZQ LDER
    (158) expListMap -> . LIZQ expMap LDER
    (159) expListMap -> . LIZQ LDER COMA expListMap
    (160) expListMap -> . LIZQ expMap LDER COMA expListMap
    (161) expListMap -> . VARIABLE
    (162) expListMap -> . VARIABLE COMA expListMap

    CDER            shift and go to state 150
    LIZQ            shift and go to state 163
    VARIABLE        shift and go to state 465

    expListMap                     shift and go to state 564

state 538

    (118) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList .

    PUNTOYCOMA      reduce using rule 118 (expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList .)


state 539

    (153) expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA . expListSet
    (151) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (152) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (153) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (154) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (155) expListSet -> . VARIABLE
    (156) expListSet -> . VARIABLE COMA expListSet

    SETFROM         shift and go to state 162
    VARIABLE        shift and go to state 562

    expListSet                     shift and go to state 565

state 540

    (152) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .
    (154) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER . COMA expListSet

    CDER            reduce using rule 152 (expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    COMA            shift and go to state 566


state 541

    (82) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER . PDER

    PDER            shift and go to state 567


state 542

    (84) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic . CDER PDER

    CDER            shift and go to state 568


state 543

    (215) sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .

    PUNTOYCOMA      reduce using rule 215 (sentenciaDoWhile -> DO LIZQ final LDER WHILE PIZQ expresionBool PDER .)


state 544

    (83) expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .
    (77) claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    PUNTOYCOMA      reduce using rule 83 (expresionSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)
    DOSPUNTOS       reduce using rule 77 (claveValor -> SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 545

    (209) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA . PDER LIZQ final LDER
    (210) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA . PDER final

    PDER            shift and go to state 569


state 546

    (211) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA . PDER LIZQ final LDER
    (212) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA . PDER final

    PDER            shift and go to state 570


state 547

    (125) expListString -> VARIABLE .
    (126) expListString -> VARIABLE . COMA expListString

    CDER            reduce using rule 125 (expListString -> VARIABLE .)
    COMA            shift and go to state 571


state 548

    (90) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString . CDER

    CDER            shift and go to state 572


state 549

    (123) expListString -> STRING .
    (124) expListString -> STRING . COMA expListString

    CDER            reduce using rule 123 (expListString -> STRING .)
    COMA            shift and go to state 573


state 550

    (129) expListInt -> VARIABLE .
    (130) expListInt -> VARIABLE . COMA expListInt

    CDER            reduce using rule 129 (expListInt -> VARIABLE .)
    COMA            shift and go to state 574


state 551

    (94) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt . CDER

    CDER            shift and go to state 575


state 552

    (127) expListInt -> ENTERO .
    (128) expListInt -> ENTERO . COMA expListInt

    CDER            reduce using rule 127 (expListInt -> ENTERO .)
    COMA            shift and go to state 576


state 553

    (135) expListNum -> VARIABLE .
    (136) expListNum -> VARIABLE . COMA expListNum

    CDER            reduce using rule 135 (expListNum -> VARIABLE .)
    COMA            shift and go to state 577


state 554

    (98) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum . CDER

    CDER            shift and go to state 578


state 555

    (131) expListNum -> ENTERO .
    (133) expListNum -> ENTERO . COMA expListNum

    CDER            reduce using rule 131 (expListNum -> ENTERO .)
    COMA            shift and go to state 579


state 556

    (132) expListNum -> DOUBLE .
    (134) expListNum -> DOUBLE . COMA expListNum

    CDER            reduce using rule 132 (expListNum -> DOUBLE .)
    COMA            shift and go to state 580


state 557

    (102) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum . CDER

    CDER            shift and go to state 581


state 558

    (139) expListBool -> VARIABLE .
    (140) expListBool -> VARIABLE . COMA expListBool

    CDER            reduce using rule 139 (expListBool -> VARIABLE .)
    COMA            shift and go to state 582


state 559

    (105) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool . CDER

    CDER            shift and go to state 583


state 560

    (137) expListBool -> BOOL .
    (138) expListBool -> BOOL . COMA expListBool

    CDER            reduce using rule 137 (expListBool -> BOOL .)
    COMA            shift and go to state 584


state 561

    (109) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic . CDER

    CDER            shift and go to state 585


state 562

    (155) expListSet -> VARIABLE .
    (156) expListSet -> VARIABLE . COMA expListSet

    CDER            reduce using rule 155 (expListSet -> VARIABLE .)
    COMA            shift and go to state 586


state 563

    (113) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet . CDER

    CDER            shift and go to state 587


state 564

    (117) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap . CDER

    CDER            shift and go to state 588


state 565

    (153) expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet .

    CDER            reduce using rule 153 (expListSet -> SETFROM PIZQ CIZQ CDER PDER COMA expListSet .)


state 566

    (154) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA . expListSet
    (151) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (152) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (153) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (154) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (155) expListSet -> . VARIABLE
    (156) expListSet -> . VARIABLE COMA expListSet

    SETFROM         shift and go to state 162
    VARIABLE        shift and go to state 562

    expListSet                     shift and go to state 589

state 567

    (82) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER .

    PUNTOYCOMA      reduce using rule 82 (expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER .)


state 568

    (84) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER . PDER

    PDER            shift and go to state 590


state 569

    (209) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER . LIZQ final LDER
    (210) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 591
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 592
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 570

    (211) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER . LIZQ final LDER
    (212) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER . final
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LIZQ            shift and go to state 593
    VARIABLE        shift and go to state 20
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 52
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 56
    MAP             shift and go to state 54
    SWITCH          shift and go to state 57
    ENTERO          shift and go to state 50
    DOUBLE          shift and go to state 58
    STRING          shift and go to state 59
    BOOL            shift and go to state 61

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 594
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 22
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 571

    (126) expListString -> VARIABLE COMA . expListString
    (123) expListString -> . STRING
    (124) expListString -> . STRING COMA expListString
    (125) expListString -> . VARIABLE
    (126) expListString -> . VARIABLE COMA expListString

    STRING          shift and go to state 549
    VARIABLE        shift and go to state 547

    expListString                  shift and go to state 383

state 572

    (90) expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER .

    PUNTOYCOMA      reduce using rule 90 (expresionLista -> LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER .)


state 573

    (124) expListString -> STRING COMA . expListString
    (123) expListString -> . STRING
    (124) expListString -> . STRING COMA expListString
    (125) expListString -> . VARIABLE
    (126) expListString -> . VARIABLE COMA expListString

    STRING          shift and go to state 549
    VARIABLE        shift and go to state 547

    expListString                  shift and go to state 380

state 574

    (130) expListInt -> VARIABLE COMA . expListInt
    (127) expListInt -> . ENTERO
    (128) expListInt -> . ENTERO COMA expListInt
    (129) expListInt -> . VARIABLE
    (130) expListInt -> . VARIABLE COMA expListInt

    ENTERO          shift and go to state 552
    VARIABLE        shift and go to state 550

    expListInt                     shift and go to state 384

state 575

    (94) expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER .

    PUNTOYCOMA      reduce using rule 94 (expresionLista -> LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER .)


state 576

    (128) expListInt -> ENTERO COMA . expListInt
    (127) expListInt -> . ENTERO
    (128) expListInt -> . ENTERO COMA expListInt
    (129) expListInt -> . VARIABLE
    (130) expListInt -> . VARIABLE COMA expListInt

    ENTERO          shift and go to state 552
    VARIABLE        shift and go to state 550

    expListInt                     shift and go to state 390

state 577

    (136) expListNum -> VARIABLE COMA . expListNum
    (131) expListNum -> . ENTERO
    (132) expListNum -> . DOUBLE
    (133) expListNum -> . ENTERO COMA expListNum
    (134) expListNum -> . DOUBLE COMA expListNum
    (135) expListNum -> . VARIABLE
    (136) expListNum -> . VARIABLE COMA expListNum

    ENTERO          shift and go to state 555
    DOUBLE          shift and go to state 556
    VARIABLE        shift and go to state 553

    expListNum                     shift and go to state 385

state 578

    (98) expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 98 (expresionLista -> LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER .)


state 579

    (133) expListNum -> ENTERO COMA . expListNum
    (131) expListNum -> . ENTERO
    (132) expListNum -> . DOUBLE
    (133) expListNum -> . ENTERO COMA expListNum
    (134) expListNum -> . DOUBLE COMA expListNum
    (135) expListNum -> . VARIABLE
    (136) expListNum -> . VARIABLE COMA expListNum

    ENTERO          shift and go to state 555
    DOUBLE          shift and go to state 556
    VARIABLE        shift and go to state 553

    expListNum                     shift and go to state 391

state 580

    (134) expListNum -> DOUBLE COMA . expListNum
    (131) expListNum -> . ENTERO
    (132) expListNum -> . DOUBLE
    (133) expListNum -> . ENTERO COMA expListNum
    (134) expListNum -> . DOUBLE COMA expListNum
    (135) expListNum -> . VARIABLE
    (136) expListNum -> . VARIABLE COMA expListNum

    ENTERO          shift and go to state 555
    DOUBLE          shift and go to state 556
    VARIABLE        shift and go to state 553

    expListNum                     shift and go to state 394

state 581

    (102) expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER .

    PUNTOYCOMA      reduce using rule 102 (expresionLista -> LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER .)


state 582

    (140) expListBool -> VARIABLE COMA . expListBool
    (137) expListBool -> . BOOL
    (138) expListBool -> . BOOL COMA expListBool
    (139) expListBool -> . VARIABLE
    (140) expListBool -> . VARIABLE COMA expListBool

    BOOL            shift and go to state 560
    VARIABLE        shift and go to state 558

    expListBool                    shift and go to state 386

state 583

    (105) expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER .

    PUNTOYCOMA      reduce using rule 105 (expresionLista -> LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER .)


state 584

    (138) expListBool -> BOOL COMA . expListBool
    (137) expListBool -> . BOOL
    (138) expListBool -> . BOOL COMA expListBool
    (139) expListBool -> . VARIABLE
    (140) expListBool -> . VARIABLE COMA expListBool

    BOOL            shift and go to state 560
    VARIABLE        shift and go to state 558

    expListBool                    shift and go to state 398

state 585

    (109) expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER .

    PUNTOYCOMA      reduce using rule 109 (expresionLista -> LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER .)


state 586

    (156) expListSet -> VARIABLE COMA . expListSet
    (151) expListSet -> . SETFROM PIZQ CIZQ CDER PDER
    (152) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (153) expListSet -> . SETFROM PIZQ CIZQ CDER PDER COMA expListSet
    (154) expListSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet
    (155) expListSet -> . VARIABLE
    (156) expListSet -> . VARIABLE COMA expListSet

    SETFROM         shift and go to state 162
    VARIABLE        shift and go to state 562

    expListSet                     shift and go to state 388

state 587

    (113) expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER .

    PUNTOYCOMA      reduce using rule 113 (expresionLista -> LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER .)


state 588

    (117) expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER .

    PUNTOYCOMA      reduce using rule 117 (expresionLista -> LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER .)


state 589

    (154) expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet .

    CDER            reduce using rule 154 (expListSet -> SETFROM PIZQ CIZQ expListDynamic CDER PDER COMA expListSet .)


state 590

    (84) expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER .

    PUNTOYCOMA      reduce using rule 84 (expresionSet -> SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER .)


state 591

    (209) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ . final LDER
    (63) expresionMap -> LIZQ . LDER
    (65) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (66) expMap -> . claveValor DOSPUNTOS claveValor
    (67) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (68) claveValor -> . VARIABLE
    (69) claveValor -> . STRING
    (70) claveValor -> . ENTERO
    (71) claveValor -> . DOUBLE
    (72) claveValor -> . BOOL
    (73) claveValor -> . CIZQ expListDynamic CDER
    (74) claveValor -> . CIZQ expListSet CDER
    (75) claveValor -> . expresionNewList
    (76) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (77) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (78) claveValor -> . LIZQ LDER
    (79) claveValor -> . LIZQ expMap LDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 128
    VARIABLE        shift and go to state 271
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 274
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 275
    MAP             shift and go to state 54
    LIZQ            shift and go to state 269
    SWITCH          shift and go to state 57
    STRING          shift and go to state 276
    ENTERO          shift and go to state 273
    DOUBLE          shift and go to state 277
    BOOL            shift and go to state 278

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 595
    expMap                         shift and go to state 129
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 272
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    claveValor                     shift and go to state 130
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 592

    (210) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .

    PUNTOYCOMA      reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    VARIABLE        reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    INT             reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DOUBLER         reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NUM             reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    STRINGR         reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BOOLR           reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DYNAMIC         reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    VAR             reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    WHILE           reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DO              reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    IF              reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ELSE            reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    PRINT           reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FUNCIONSTDIN    reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FUNCIONSTDOUT   reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NOT             reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ELSEIF          reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    FOR             reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LIST            reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    CIZQ            reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    NEWLIST         reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    SET             reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    SETFROM         reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    MAP             reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LIZQ            reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    SWITCH          reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    ENTERO          reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    DOUBLE          reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    STRING          reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    BOOL            reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    $end            reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)
    LDER            reduce using rule 210 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final .)


state 593

    (211) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ . final LDER
    (63) expresionMap -> LIZQ . LDER
    (65) expresionMap -> LIZQ . expMap LDER
    (1) final -> . asignacion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA final
    (3) final -> . expresionInt PUNTOYCOMA
    (4) final -> . expresionInt PUNTOYCOMA final
    (5) final -> . expresionDouble PUNTOYCOMA
    (6) final -> . expresionDouble PUNTOYCOMA final
    (7) final -> . expresionString PUNTOYCOMA
    (8) final -> . expresionString PUNTOYCOMA final
    (9) final -> . expresionBool PUNTOYCOMA
    (10) final -> . expresionBool PUNTOYCOMA final
    (11) final -> . expresionBoolFor PUNTOYCOMA
    (12) final -> . expresionBoolFor PUNTOYCOMA final
    (13) final -> . sentenciaWhile
    (14) final -> . sentenciaWhile final
    (15) final -> . sentenciaWhile PUNTOYCOMA
    (16) final -> . sentenciaWhile PUNTOYCOMA final
    (17) final -> . sentenciaDoWhile PUNTOYCOMA
    (18) final -> . sentenciaDoWhile PUNTOYCOMA final
    (19) final -> . sentenciaIf PUNTOYCOMA
    (20) final -> . sentenciaIf PUNTOYCOMA final
    (21) final -> . sentenciaIf
    (22) final -> . sentenciaIf final
    (23) final -> . sentenciaElse PUNTOYCOMA
    (24) final -> . sentenciaElse PUNTOYCOMA final
    (25) final -> . sentenciaElse
    (26) final -> . sentenciaElse final
    (27) final -> . imprimir PUNTOYCOMA
    (28) final -> . imprimir PUNTOYCOMA final
    (29) final -> . funcionStdin PUNTOYCOMA
    (30) final -> . funcionStdin PUNTOYCOMA final
    (31) final -> . funcionStdout PUNTOYCOMA
    (32) final -> . funcionStdout PUNTOYCOMA final
    (33) final -> . negacionBool PUNTOYCOMA
    (34) final -> . negacionBool PUNTOYCOMA final
    (35) final -> . comparacionBool PUNTOYCOMA final
    (36) final -> . comparacionBool PUNTOYCOMA
    (37) final -> . sentenciaElseIf PUNTOYCOMA final
    (38) final -> . sentenciaElseIf final
    (39) final -> . sentenciaElseIf PUNTOYCOMA
    (40) final -> . sentenciaElseIf
    (41) final -> . sentenciaFor PUNTOYCOMA final
    (42) final -> . sentenciaFor PUNTOYCOMA
    (43) final -> . sentenciaFor final
    (44) final -> . sentenciaFor
    (45) final -> . sentenciaSubstring PUNTOYCOMA final
    (46) final -> . sentenciaSubstring PUNTOYCOMA
    (47) final -> . VARIABLE DSUMA PUNTOYCOMA final
    (48) final -> . VARIABLE DSUMA PUNTOYCOMA
    (49) final -> . VARIABLE DRESTA PUNTOYCOMA final
    (50) final -> . VARIABLE DRESTA PUNTOYCOMA
    (51) final -> . expresionLista PUNTOYCOMA
    (52) final -> . expresionLista PUNTOYCOMA final
    (53) final -> . expresionNewList PUNTOYCOMA
    (54) final -> . expresionNewList PUNTOYCOMA final
    (55) final -> . expresionSet PUNTOYCOMA
    (56) final -> . expresionSet PUNTOYCOMA final
    (57) final -> . expresionMap PUNTOYCOMA
    (58) final -> . expresionMap PUNTOYCOMA final
    (59) final -> . expresionSwitch
    (66) expMap -> . claveValor DOSPUNTOS claveValor
    (67) expMap -> . claveValor DOSPUNTOS claveValor COMA expMap
    (163) asignacion -> . INT VARIABLE IGUAL expresionInt
    (164) asignacion -> . DOUBLER VARIABLE IGUAL expresionDouble
    (165) asignacion -> . NUM VARIABLE IGUAL expresionDouble
    (166) asignacion -> . STRINGR VARIABLE IGUAL expresionString
    (167) asignacion -> . BOOLR VARIABLE IGUAL expresionBool
    (168) asignacion -> . DYNAMIC VARIABLE IGUAL expresion
    (169) asignacion -> . VAR VARIABLE IGUAL expresion
    (170) asignacion -> . asignacionSimple
    (243) expresionInt -> . valorInt operadorMat expresionInt
    (244) expresionInt -> . valorInt
    (247) expresionDouble -> . valorDouble operadorMat expresionDouble
    (248) expresionDouble -> . valorDouble
    (236) expresionString -> . valorString SUMA expresionString
    (237) expresionString -> . valorString
    (218) expresionBool -> . valorDouble comparadorMat expresionDouble
    (219) expresionBool -> . VARIABLE comparadorMat expresionDouble
    (220) expresionBool -> . VARIABLE comparadorMat VARIABLE
    (221) expresionBool -> . valorDouble comparadorMat VARIABLE
    (222) expresionBool -> . valorBool
    (223) expresionBool -> . negacionBool
    (224) expresionBool -> . comparacionBool
    (225) expresionBool -> . valor IS objeto
    (226) expresionBool -> . valor ISNEGADO objeto
    (202) expresionBoolFor -> . valorDouble comparadorMat expresionDouble
    (203) expresionBoolFor -> . VARIABLE comparadorMat expresionDouble
    (204) expresionBoolFor -> . VARIABLE comparadorMat VARIABLE
    (205) expresionBoolFor -> . valorDouble comparadorMat VARIABLE
    (206) expresionBoolFor -> . valorBool
    (207) expresionBoolFor -> . negacionBool
    (208) expresionBoolFor -> . comparacionBool
    (213) sentenciaWhile -> . WHILE PIZQ expresionBool PDER LIZQ final LDER
    (214) sentenciaWhile -> . WHILE PIZQ expresionBool PDER final
    (215) sentenciaDoWhile -> . DO LIZQ final LDER WHILE PIZQ expresionBool PDER
    (177) sentenciaIf -> . IF PIZQ expresionBool PDER final
    (178) sentenciaIf -> . IF PIZQ expresionBool PDER LIZQ final LDER
    (179) sentenciaElse -> . ELSE final
    (180) sentenciaElse -> . ELSE LIZQ final LDER
    (172) imprimir -> . PRINT PIZQ expresion PDER
    (173) imprimir -> . PRINT PIZQ asignacionSimple PDER
    (174) funcionStdin -> . FUNCIONSTDIN
    (175) funcionStdout -> . FUNCIONSTDOUT PIZQ expresion PDER
    (176) funcionStdout -> . FUNCIONSTDOUT PIZQ asignacionSimple PDER
    (227) negacionBool -> . NOT PIZQ expresionBool PDER
    (228) comparacionBool -> . expresionBool operadorLogico expresionBool
    (229) comparacionBool -> . expresionBool operadorLogico comparacionBool
    (181) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER final
    (182) sentenciaElseIf -> . ELSEIF PIZQ expresionBool PDER LIZQ final LDER
    (209) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER
    (210) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER final
    (211) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER
    (212) sentenciaFor -> . FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final
    (239) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO PDER
    (240) sentenciaSubstring -> . VARIABLE FUNCIONSUBSTRING PIZQ ENTERO COMA ENTERO PDER
    (89) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE
    (90) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL CIZQ expListString CDER
    (91) expresionLista -> . LIST MENOR STRINGR MAYOR VARIABLE IGUAL expresionNewList
    (92) expresionLista -> . CIZQ expListString CDER
    (93) expresionLista -> . LIST MENOR INT MAYOR VARIABLE
    (94) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL CIZQ expListInt CDER
    (95) expresionLista -> . LIST MENOR INT MAYOR VARIABLE IGUAL expresionNewList
    (96) expresionLista -> . CIZQ expListInt CDER
    (97) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE
    (98) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (99) expresionLista -> . LIST MENOR DOUBLER MAYOR VARIABLE IGUAL expresionNewList
    (100) expresionLista -> . CIZQ expListNum CDER
    (101) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE
    (102) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL CIZQ expListNum CDER
    (103) expresionLista -> . LIST MENOR NUM MAYOR VARIABLE IGUAL expresionNewList
    (104) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE
    (105) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL CIZQ expListBool CDER
    (106) expresionLista -> . LIST MENOR BOOLR MAYOR VARIABLE IGUAL expresionNewList
    (107) expresionLista -> . CIZQ expListBool CDER
    (108) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE
    (109) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL CIZQ expListDynamic CDER
    (110) expresionLista -> . LIST MENOR DYNAMIC MAYOR VARIABLE IGUAL expresionNewList
    (111) expresionLista -> . CIZQ expListDynamic CDER
    (112) expresionLista -> . LIST MENOR SET MAYOR VARIABLE
    (113) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL CIZQ expListSet CDER
    (114) expresionLista -> . LIST MENOR SET MAYOR VARIABLE IGUAL expresionNewList
    (115) expresionLista -> . CIZQ expListSet CDER
    (116) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE
    (117) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL CIZQ expListMap CDER
    (118) expresionLista -> . LIST MENOR MAP MAYOR VARIABLE IGUAL expresionNewList
    (119) expresionLista -> . CIZQ expListMap CDER
    (120) expresionLista -> . VARIABLE CIZQ ENTERO CDER
    (121) expresionLista -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (122) expresionLista -> . VARIABLE FUNCIONRANGE PIZQ ENTERO COMA ENTERO PDER
    (86) expresionNewList -> . NEWLIST PIZQ PDER
    (87) expresionNewList -> . NEWLIST PIZQ ENTERO PDER
    (88) expresionNewList -> . CIZQ CDER
    (80) expresionSet -> . SET VARIABLE
    (81) expresionSet -> . SETFROM PIZQ CIZQ CDER PDER
    (82) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ CDER PDER
    (83) expresionSet -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (84) expresionSet -> . SET VARIABLE IGUAL SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (85) expresionSet -> . VARIABLE FUNCIONTAKE PIZQ ENTERO PDER
    (61) expresionMap -> . MAP VARIABLE
    (62) expresionMap -> . MAP VARIABLE IGUAL LIZQ LDER
    (63) expresionMap -> . LIZQ LDER
    (64) expresionMap -> . MAP VARIABLE IGUAL LIZQ expMap LDER
    (65) expresionMap -> . LIZQ expMap LDER
    (60) expresionSwitch -> . SWITCH PIZQ expresionBool PDER
    (68) claveValor -> . VARIABLE
    (69) claveValor -> . STRING
    (70) claveValor -> . ENTERO
    (71) claveValor -> . DOUBLE
    (72) claveValor -> . BOOL
    (73) claveValor -> . CIZQ expListDynamic CDER
    (74) claveValor -> . CIZQ expListSet CDER
    (75) claveValor -> . expresionNewList
    (76) claveValor -> . SETFROM PIZQ CIZQ CDER PDER
    (77) claveValor -> . SETFROM PIZQ CIZQ expListDynamic CDER PDER
    (78) claveValor -> . LIZQ LDER
    (79) claveValor -> . LIZQ expMap LDER
    (171) asignacionSimple -> . VARIABLE IGUAL expresion
    (241) valorInt -> . ENTERO
    (242) valorInt -> . VARIABLE
    (245) valorDouble -> . DOUBLE
    (246) valorDouble -> . valorInt
    (230) valorString -> . STRING
    (231) valorString -> . VARIABLE
    (232) valorString -> . FUNCIONSTDIN
    (233) valorString -> . expresionIndexString
    (234) valorString -> . sentenciaSubstring
    (235) valorString -> . STRING CIZQ ENTERO CDER
    (216) valorBool -> . BOOL
    (217) valorBool -> . VARIABLE
    (183) valor -> . ENTERO
    (184) valor -> . VARIABLE
    (185) valor -> . DOUBLE
    (186) valor -> . STRING
    (238) expresionIndexString -> . valorString CIZQ ENTERO CDER

    LDER            shift and go to state 128
    VARIABLE        shift and go to state 271
    INT             shift and go to state 26
    DOUBLER         shift and go to state 27
    NUM             shift and go to state 28
    STRINGR         shift and go to state 29
    BOOLR           shift and go to state 30
    DYNAMIC         shift and go to state 31
    VAR             shift and go to state 32
    WHILE           shift and go to state 39
    DO              shift and go to state 41
    IF              shift and go to state 42
    ELSE            shift and go to state 43
    PRINT           shift and go to state 44
    FUNCIONSTDIN    shift and go to state 45
    FUNCIONSTDOUT   shift and go to state 46
    NOT             shift and go to state 47
    ELSEIF          shift and go to state 48
    FOR             shift and go to state 49
    LIST            shift and go to state 51
    CIZQ            shift and go to state 274
    NEWLIST         shift and go to state 55
    SET             shift and go to state 53
    SETFROM         shift and go to state 275
    MAP             shift and go to state 54
    LIZQ            shift and go to state 269
    SWITCH          shift and go to state 57
    STRING          shift and go to state 276
    ENTERO          shift and go to state 273
    DOUBLE          shift and go to state 277
    BOOL            shift and go to state 278

    expresionBoolFor               shift and go to state 7
    final                          shift and go to state 596
    expMap                         shift and go to state 129
    asignacion                     shift and go to state 2
    expresionInt                   shift and go to state 3
    expresionDouble                shift and go to state 4
    expresionString                shift and go to state 5
    expresionBool                  shift and go to state 6
    sentenciaWhile                 shift and go to state 8
    sentenciaDoWhile               shift and go to state 9
    sentenciaIf                    shift and go to state 10
    sentenciaElse                  shift and go to state 11
    imprimir                       shift and go to state 12
    funcionStdin                   shift and go to state 13
    funcionStdout                  shift and go to state 14
    negacionBool                   shift and go to state 15
    comparacionBool                shift and go to state 16
    sentenciaElseIf                shift and go to state 17
    sentenciaFor                   shift and go to state 18
    sentenciaSubstring             shift and go to state 19
    expresionLista                 shift and go to state 21
    expresionNewList               shift and go to state 272
    expresionSet                   shift and go to state 23
    expresionMap                   shift and go to state 24
    expresionSwitch                shift and go to state 25
    claveValor                     shift and go to state 130
    asignacionSimple               shift and go to state 33
    valorInt                       shift and go to state 34
    valorDouble                    shift and go to state 35
    valorString                    shift and go to state 36
    valorBool                      shift and go to state 37
    valor                          shift and go to state 38
    expresionIndexString           shift and go to state 60

state 594

    (212) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .

    PUNTOYCOMA      reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    VARIABLE        reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    INT             reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DOUBLER         reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NUM             reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    STRINGR         reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BOOLR           reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DYNAMIC         reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    VAR             reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    WHILE           reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DO              reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    IF              reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ELSE            reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    PRINT           reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FUNCIONSTDIN    reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FUNCIONSTDOUT   reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NOT             reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ELSEIF          reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    FOR             reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LIST            reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    CIZQ            reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    NEWLIST         reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    SET             reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    SETFROM         reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    MAP             reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LIZQ            reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    SWITCH          reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    ENTERO          reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    DOUBLE          reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    STRING          reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    BOOL            reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    $end            reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)
    LDER            reduce using rule 212 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER final .)


state 595

    (209) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final . LDER

    LDER            shift and go to state 597


state 596

    (211) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final . LDER

    LDER            shift and go to state 598


state 597

    (209) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    INT             reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NUM             reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    STRINGR         reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BOOLR           reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    VAR             reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    WHILE           reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DO              reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    IF              reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ELSE            reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    PRINT           reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NOT             reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    FOR             reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LIST            reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    CIZQ            reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    SET             reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    SETFROM         reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    MAP             reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LIZQ            reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    SWITCH          reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    ENTERO          reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    STRING          reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    BOOL            reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    $end            reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)
    LDER            reduce using rule 209 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DSUMA PDER LIZQ final LDER .)


state 598

    (211) sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .

    PUNTOYCOMA      reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    VARIABLE        reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    INT             reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DOUBLER         reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NUM             reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    STRINGR         reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BOOLR           reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DYNAMIC         reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    VAR             reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    WHILE           reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DO              reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    IF              reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ELSE            reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    PRINT           reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FUNCIONSTDIN    reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FUNCIONSTDOUT   reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NOT             reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ELSEIF          reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    FOR             reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LIST            reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    CIZQ            reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    NEWLIST         reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    SET             reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    SETFROM         reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    MAP             reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LIZQ            reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    SWITCH          reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    ENTERO          reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    DOUBLE          reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    STRING          reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    BOOL            reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    $end            reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)
    LDER            reduce using rule 211 (sentenciaFor -> FOR PIZQ asignacionFor PUNTOYCOMA expresionBoolFor PUNTOYCOMA VARIABLE DRESTA PDER LIZQ final LDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 8 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 8 resolved as shift
WARNING: shift/reduce conflict for INT in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 8 resolved as shift
WARNING: shift/reduce conflict for NUM in state 8 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 8 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 8 resolved as shift
WARNING: shift/reduce conflict for VAR in state 8 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 8 resolved as shift
WARNING: shift/reduce conflict for DO in state 8 resolved as shift
WARNING: shift/reduce conflict for IF in state 8 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 8 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 8 resolved as shift
WARNING: shift/reduce conflict for NOT in state 8 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 8 resolved as shift
WARNING: shift/reduce conflict for FOR in state 8 resolved as shift
WARNING: shift/reduce conflict for LIST in state 8 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 8 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 8 resolved as shift
WARNING: shift/reduce conflict for SET in state 8 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 8 resolved as shift
WARNING: shift/reduce conflict for MAP in state 8 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 8 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 8 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 8 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 8 resolved as shift
WARNING: shift/reduce conflict for STRING in state 8 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 8 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 10 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 10 resolved as shift
WARNING: shift/reduce conflict for INT in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 10 resolved as shift
WARNING: shift/reduce conflict for NUM in state 10 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 10 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 10 resolved as shift
WARNING: shift/reduce conflict for VAR in state 10 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 10 resolved as shift
WARNING: shift/reduce conflict for DO in state 10 resolved as shift
WARNING: shift/reduce conflict for IF in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 10 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 10 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 10 resolved as shift
WARNING: shift/reduce conflict for NOT in state 10 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 10 resolved as shift
WARNING: shift/reduce conflict for FOR in state 10 resolved as shift
WARNING: shift/reduce conflict for LIST in state 10 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 10 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 10 resolved as shift
WARNING: shift/reduce conflict for SET in state 10 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 10 resolved as shift
WARNING: shift/reduce conflict for MAP in state 10 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 10 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 10 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 10 resolved as shift
WARNING: shift/reduce conflict for STRING in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 10 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 11 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 11 resolved as shift
WARNING: shift/reduce conflict for INT in state 11 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 11 resolved as shift
WARNING: shift/reduce conflict for NUM in state 11 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 11 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 11 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 11 resolved as shift
WARNING: shift/reduce conflict for VAR in state 11 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 11 resolved as shift
WARNING: shift/reduce conflict for DO in state 11 resolved as shift
WARNING: shift/reduce conflict for IF in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 11 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 11 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 11 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 11 resolved as shift
WARNING: shift/reduce conflict for NOT in state 11 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 11 resolved as shift
WARNING: shift/reduce conflict for FOR in state 11 resolved as shift
WARNING: shift/reduce conflict for LIST in state 11 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 11 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 11 resolved as shift
WARNING: shift/reduce conflict for SET in state 11 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 11 resolved as shift
WARNING: shift/reduce conflict for MAP in state 11 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 11 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 11 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 11 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 11 resolved as shift
WARNING: shift/reduce conflict for STRING in state 11 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 11 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 15 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 16 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 17 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 17 resolved as shift
WARNING: shift/reduce conflict for INT in state 17 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 17 resolved as shift
WARNING: shift/reduce conflict for NUM in state 17 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 17 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 17 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 17 resolved as shift
WARNING: shift/reduce conflict for VAR in state 17 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 17 resolved as shift
WARNING: shift/reduce conflict for DO in state 17 resolved as shift
WARNING: shift/reduce conflict for IF in state 17 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 17 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 17 resolved as shift
WARNING: shift/reduce conflict for NOT in state 17 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 17 resolved as shift
WARNING: shift/reduce conflict for FOR in state 17 resolved as shift
WARNING: shift/reduce conflict for LIST in state 17 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 17 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 17 resolved as shift
WARNING: shift/reduce conflict for SET in state 17 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 17 resolved as shift
WARNING: shift/reduce conflict for MAP in state 17 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 17 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 17 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 17 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 17 resolved as shift
WARNING: shift/reduce conflict for STRING in state 17 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 17 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 18 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 18 resolved as shift
WARNING: shift/reduce conflict for INT in state 18 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 18 resolved as shift
WARNING: shift/reduce conflict for NUM in state 18 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 18 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 18 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 18 resolved as shift
WARNING: shift/reduce conflict for VAR in state 18 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 18 resolved as shift
WARNING: shift/reduce conflict for DO in state 18 resolved as shift
WARNING: shift/reduce conflict for IF in state 18 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 18 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 18 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 18 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 18 resolved as shift
WARNING: shift/reduce conflict for NOT in state 18 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 18 resolved as shift
WARNING: shift/reduce conflict for FOR in state 18 resolved as shift
WARNING: shift/reduce conflict for LIST in state 18 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 18 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 18 resolved as shift
WARNING: shift/reduce conflict for SET in state 18 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 18 resolved as shift
WARNING: shift/reduce conflict for MAP in state 18 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 18 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 18 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 18 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 18 resolved as shift
WARNING: shift/reduce conflict for STRING in state 18 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 18 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 19 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 20 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 34 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 34 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 34 resolved as shift
WARNING: shift/reduce conflict for DIV in state 34 resolved as shift
WARNING: shift/reduce conflict for DIVENTERO in state 34 resolved as shift
WARNING: shift/reduce conflict for MOD in state 34 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 59 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 62 resolved as shift
WARNING: shift/reduce conflict for INT in state 62 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 62 resolved as shift
WARNING: shift/reduce conflict for NUM in state 62 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 62 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 62 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 62 resolved as shift
WARNING: shift/reduce conflict for VAR in state 62 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 62 resolved as shift
WARNING: shift/reduce conflict for DO in state 62 resolved as shift
WARNING: shift/reduce conflict for IF in state 62 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 62 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 62 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 62 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 62 resolved as shift
WARNING: shift/reduce conflict for NOT in state 62 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 62 resolved as shift
WARNING: shift/reduce conflict for FOR in state 62 resolved as shift
WARNING: shift/reduce conflict for LIST in state 62 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 62 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 62 resolved as shift
WARNING: shift/reduce conflict for SET in state 62 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 62 resolved as shift
WARNING: shift/reduce conflict for MAP in state 62 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 62 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 62 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 62 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 62 resolved as shift
WARNING: shift/reduce conflict for STRING in state 62 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 62 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 63 resolved as shift
WARNING: shift/reduce conflict for INT in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 63 resolved as shift
WARNING: shift/reduce conflict for NUM in state 63 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 63 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 63 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 63 resolved as shift
WARNING: shift/reduce conflict for VAR in state 63 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 63 resolved as shift
WARNING: shift/reduce conflict for DO in state 63 resolved as shift
WARNING: shift/reduce conflict for IF in state 63 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 63 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 63 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 63 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 63 resolved as shift
WARNING: shift/reduce conflict for NOT in state 63 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 63 resolved as shift
WARNING: shift/reduce conflict for FOR in state 63 resolved as shift
WARNING: shift/reduce conflict for LIST in state 63 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 63 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 63 resolved as shift
WARNING: shift/reduce conflict for SET in state 63 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 63 resolved as shift
WARNING: shift/reduce conflict for MAP in state 63 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 63 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 63 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 63 resolved as shift
WARNING: shift/reduce conflict for STRING in state 63 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 63 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 64 resolved as shift
WARNING: shift/reduce conflict for INT in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 64 resolved as shift
WARNING: shift/reduce conflict for NUM in state 64 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 64 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 64 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 64 resolved as shift
WARNING: shift/reduce conflict for VAR in state 64 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 64 resolved as shift
WARNING: shift/reduce conflict for DO in state 64 resolved as shift
WARNING: shift/reduce conflict for IF in state 64 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 64 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 64 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 64 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 64 resolved as shift
WARNING: shift/reduce conflict for NOT in state 64 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 64 resolved as shift
WARNING: shift/reduce conflict for FOR in state 64 resolved as shift
WARNING: shift/reduce conflict for LIST in state 64 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 64 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 64 resolved as shift
WARNING: shift/reduce conflict for SET in state 64 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 64 resolved as shift
WARNING: shift/reduce conflict for MAP in state 64 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 64 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 64 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 64 resolved as shift
WARNING: shift/reduce conflict for STRING in state 64 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 64 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 65 resolved as shift
WARNING: shift/reduce conflict for INT in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 65 resolved as shift
WARNING: shift/reduce conflict for NUM in state 65 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 65 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 65 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 65 resolved as shift
WARNING: shift/reduce conflict for VAR in state 65 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 65 resolved as shift
WARNING: shift/reduce conflict for DO in state 65 resolved as shift
WARNING: shift/reduce conflict for IF in state 65 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 65 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 65 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 65 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 65 resolved as shift
WARNING: shift/reduce conflict for NOT in state 65 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 65 resolved as shift
WARNING: shift/reduce conflict for FOR in state 65 resolved as shift
WARNING: shift/reduce conflict for LIST in state 65 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 65 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 65 resolved as shift
WARNING: shift/reduce conflict for SET in state 65 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 65 resolved as shift
WARNING: shift/reduce conflict for MAP in state 65 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 65 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 65 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 65 resolved as shift
WARNING: shift/reduce conflict for STRING in state 65 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 65 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 66 resolved as shift
WARNING: shift/reduce conflict for INT in state 66 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 66 resolved as shift
WARNING: shift/reduce conflict for NUM in state 66 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 66 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 66 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 66 resolved as shift
WARNING: shift/reduce conflict for VAR in state 66 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 66 resolved as shift
WARNING: shift/reduce conflict for DO in state 66 resolved as shift
WARNING: shift/reduce conflict for IF in state 66 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 66 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 66 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 66 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 66 resolved as shift
WARNING: shift/reduce conflict for NOT in state 66 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 66 resolved as shift
WARNING: shift/reduce conflict for FOR in state 66 resolved as shift
WARNING: shift/reduce conflict for LIST in state 66 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 66 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 66 resolved as shift
WARNING: shift/reduce conflict for SET in state 66 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 66 resolved as shift
WARNING: shift/reduce conflict for MAP in state 66 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 66 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 66 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 66 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 66 resolved as shift
WARNING: shift/reduce conflict for STRING in state 66 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 66 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 70 resolved as shift
WARNING: shift/reduce conflict for INT in state 70 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 70 resolved as shift
WARNING: shift/reduce conflict for NUM in state 70 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 70 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 70 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 70 resolved as shift
WARNING: shift/reduce conflict for VAR in state 70 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 70 resolved as shift
WARNING: shift/reduce conflict for DO in state 70 resolved as shift
WARNING: shift/reduce conflict for IF in state 70 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 70 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 70 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 70 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 70 resolved as shift
WARNING: shift/reduce conflict for NOT in state 70 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 70 resolved as shift
WARNING: shift/reduce conflict for FOR in state 70 resolved as shift
WARNING: shift/reduce conflict for LIST in state 70 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 70 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 70 resolved as shift
WARNING: shift/reduce conflict for SET in state 70 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 70 resolved as shift
WARNING: shift/reduce conflict for MAP in state 70 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 70 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 70 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 70 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 70 resolved as shift
WARNING: shift/reduce conflict for STRING in state 70 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 70 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 72 resolved as shift
WARNING: shift/reduce conflict for INT in state 72 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 72 resolved as shift
WARNING: shift/reduce conflict for NUM in state 72 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 72 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 72 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 72 resolved as shift
WARNING: shift/reduce conflict for VAR in state 72 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 72 resolved as shift
WARNING: shift/reduce conflict for DO in state 72 resolved as shift
WARNING: shift/reduce conflict for IF in state 72 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 72 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 72 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 72 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 72 resolved as shift
WARNING: shift/reduce conflict for NOT in state 72 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 72 resolved as shift
WARNING: shift/reduce conflict for FOR in state 72 resolved as shift
WARNING: shift/reduce conflict for LIST in state 72 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 72 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 72 resolved as shift
WARNING: shift/reduce conflict for SET in state 72 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 72 resolved as shift
WARNING: shift/reduce conflict for MAP in state 72 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 72 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 72 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 72 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 72 resolved as shift
WARNING: shift/reduce conflict for STRING in state 72 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 72 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 73 resolved as shift
WARNING: shift/reduce conflict for INT in state 73 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 73 resolved as shift
WARNING: shift/reduce conflict for NUM in state 73 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 73 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 73 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 73 resolved as shift
WARNING: shift/reduce conflict for VAR in state 73 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 73 resolved as shift
WARNING: shift/reduce conflict for DO in state 73 resolved as shift
WARNING: shift/reduce conflict for IF in state 73 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 73 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 73 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 73 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 73 resolved as shift
WARNING: shift/reduce conflict for NOT in state 73 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 73 resolved as shift
WARNING: shift/reduce conflict for FOR in state 73 resolved as shift
WARNING: shift/reduce conflict for LIST in state 73 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 73 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 73 resolved as shift
WARNING: shift/reduce conflict for SET in state 73 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 73 resolved as shift
WARNING: shift/reduce conflict for MAP in state 73 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 73 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 73 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 73 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 73 resolved as shift
WARNING: shift/reduce conflict for STRING in state 73 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 73 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 74 resolved as shift
WARNING: shift/reduce conflict for INT in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 74 resolved as shift
WARNING: shift/reduce conflict for NUM in state 74 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 74 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 74 resolved as shift
WARNING: shift/reduce conflict for VAR in state 74 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 74 resolved as shift
WARNING: shift/reduce conflict for DO in state 74 resolved as shift
WARNING: shift/reduce conflict for IF in state 74 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 74 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 74 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 74 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 74 resolved as shift
WARNING: shift/reduce conflict for NOT in state 74 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 74 resolved as shift
WARNING: shift/reduce conflict for FOR in state 74 resolved as shift
WARNING: shift/reduce conflict for LIST in state 74 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 74 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 74 resolved as shift
WARNING: shift/reduce conflict for SET in state 74 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 74 resolved as shift
WARNING: shift/reduce conflict for MAP in state 74 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 74 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 74 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 74 resolved as shift
WARNING: shift/reduce conflict for STRING in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 74 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 76 resolved as shift
WARNING: shift/reduce conflict for INT in state 76 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 76 resolved as shift
WARNING: shift/reduce conflict for NUM in state 76 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 76 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 76 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 76 resolved as shift
WARNING: shift/reduce conflict for VAR in state 76 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 76 resolved as shift
WARNING: shift/reduce conflict for DO in state 76 resolved as shift
WARNING: shift/reduce conflict for IF in state 76 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 76 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 76 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 76 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 76 resolved as shift
WARNING: shift/reduce conflict for NOT in state 76 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 76 resolved as shift
WARNING: shift/reduce conflict for FOR in state 76 resolved as shift
WARNING: shift/reduce conflict for LIST in state 76 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 76 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 76 resolved as shift
WARNING: shift/reduce conflict for SET in state 76 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 76 resolved as shift
WARNING: shift/reduce conflict for MAP in state 76 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 76 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 76 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 76 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 76 resolved as shift
WARNING: shift/reduce conflict for STRING in state 76 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 76 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 78 resolved as shift
WARNING: shift/reduce conflict for INT in state 78 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 78 resolved as shift
WARNING: shift/reduce conflict for NUM in state 78 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 78 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 78 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 78 resolved as shift
WARNING: shift/reduce conflict for VAR in state 78 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 78 resolved as shift
WARNING: shift/reduce conflict for DO in state 78 resolved as shift
WARNING: shift/reduce conflict for IF in state 78 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 78 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 78 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 78 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 78 resolved as shift
WARNING: shift/reduce conflict for NOT in state 78 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 78 resolved as shift
WARNING: shift/reduce conflict for FOR in state 78 resolved as shift
WARNING: shift/reduce conflict for LIST in state 78 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 78 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 78 resolved as shift
WARNING: shift/reduce conflict for SET in state 78 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 78 resolved as shift
WARNING: shift/reduce conflict for MAP in state 78 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 78 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 78 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 78 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 78 resolved as shift
WARNING: shift/reduce conflict for STRING in state 78 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 78 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 79 resolved as shift
WARNING: shift/reduce conflict for INT in state 79 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 79 resolved as shift
WARNING: shift/reduce conflict for NUM in state 79 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 79 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 79 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 79 resolved as shift
WARNING: shift/reduce conflict for VAR in state 79 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 79 resolved as shift
WARNING: shift/reduce conflict for DO in state 79 resolved as shift
WARNING: shift/reduce conflict for IF in state 79 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 79 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 79 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 79 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 79 resolved as shift
WARNING: shift/reduce conflict for NOT in state 79 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 79 resolved as shift
WARNING: shift/reduce conflict for FOR in state 79 resolved as shift
WARNING: shift/reduce conflict for LIST in state 79 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 79 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 79 resolved as shift
WARNING: shift/reduce conflict for SET in state 79 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 79 resolved as shift
WARNING: shift/reduce conflict for MAP in state 79 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 79 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 79 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 79 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 79 resolved as shift
WARNING: shift/reduce conflict for STRING in state 79 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 79 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 80 resolved as shift
WARNING: shift/reduce conflict for INT in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 80 resolved as shift
WARNING: shift/reduce conflict for NUM in state 80 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 80 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 80 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 80 resolved as shift
WARNING: shift/reduce conflict for VAR in state 80 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 80 resolved as shift
WARNING: shift/reduce conflict for DO in state 80 resolved as shift
WARNING: shift/reduce conflict for IF in state 80 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 80 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 80 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 80 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 80 resolved as shift
WARNING: shift/reduce conflict for NOT in state 80 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 80 resolved as shift
WARNING: shift/reduce conflict for FOR in state 80 resolved as shift
WARNING: shift/reduce conflict for LIST in state 80 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 80 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 80 resolved as shift
WARNING: shift/reduce conflict for SET in state 80 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 80 resolved as shift
WARNING: shift/reduce conflict for MAP in state 80 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 80 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 80 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 80 resolved as shift
WARNING: shift/reduce conflict for STRING in state 80 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 80 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 81 resolved as shift
WARNING: shift/reduce conflict for INT in state 81 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 81 resolved as shift
WARNING: shift/reduce conflict for NUM in state 81 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 81 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 81 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 81 resolved as shift
WARNING: shift/reduce conflict for VAR in state 81 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 81 resolved as shift
WARNING: shift/reduce conflict for DO in state 81 resolved as shift
WARNING: shift/reduce conflict for IF in state 81 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 81 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 81 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 81 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 81 resolved as shift
WARNING: shift/reduce conflict for NOT in state 81 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 81 resolved as shift
WARNING: shift/reduce conflict for FOR in state 81 resolved as shift
WARNING: shift/reduce conflict for LIST in state 81 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 81 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 81 resolved as shift
WARNING: shift/reduce conflict for SET in state 81 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 81 resolved as shift
WARNING: shift/reduce conflict for MAP in state 81 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 81 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 81 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 81 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 81 resolved as shift
WARNING: shift/reduce conflict for STRING in state 81 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 81 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 82 resolved as shift
WARNING: shift/reduce conflict for INT in state 82 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 82 resolved as shift
WARNING: shift/reduce conflict for NUM in state 82 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 82 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 82 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 82 resolved as shift
WARNING: shift/reduce conflict for VAR in state 82 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 82 resolved as shift
WARNING: shift/reduce conflict for DO in state 82 resolved as shift
WARNING: shift/reduce conflict for IF in state 82 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 82 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 82 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 82 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 82 resolved as shift
WARNING: shift/reduce conflict for NOT in state 82 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 82 resolved as shift
WARNING: shift/reduce conflict for FOR in state 82 resolved as shift
WARNING: shift/reduce conflict for LIST in state 82 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 82 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 82 resolved as shift
WARNING: shift/reduce conflict for SET in state 82 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 82 resolved as shift
WARNING: shift/reduce conflict for MAP in state 82 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 82 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 82 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 82 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 82 resolved as shift
WARNING: shift/reduce conflict for STRING in state 82 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 82 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 83 resolved as shift
WARNING: shift/reduce conflict for INT in state 83 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 83 resolved as shift
WARNING: shift/reduce conflict for NUM in state 83 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 83 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 83 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 83 resolved as shift
WARNING: shift/reduce conflict for VAR in state 83 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 83 resolved as shift
WARNING: shift/reduce conflict for DO in state 83 resolved as shift
WARNING: shift/reduce conflict for IF in state 83 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 83 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 83 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 83 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 83 resolved as shift
WARNING: shift/reduce conflict for NOT in state 83 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 83 resolved as shift
WARNING: shift/reduce conflict for FOR in state 83 resolved as shift
WARNING: shift/reduce conflict for LIST in state 83 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 83 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 83 resolved as shift
WARNING: shift/reduce conflict for SET in state 83 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 83 resolved as shift
WARNING: shift/reduce conflict for MAP in state 83 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 83 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 83 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 83 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 83 resolved as shift
WARNING: shift/reduce conflict for STRING in state 83 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 83 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 85 resolved as shift
WARNING: shift/reduce conflict for INT in state 85 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 85 resolved as shift
WARNING: shift/reduce conflict for NUM in state 85 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 85 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 85 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 85 resolved as shift
WARNING: shift/reduce conflict for VAR in state 85 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 85 resolved as shift
WARNING: shift/reduce conflict for DO in state 85 resolved as shift
WARNING: shift/reduce conflict for IF in state 85 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 85 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 85 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 85 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 85 resolved as shift
WARNING: shift/reduce conflict for NOT in state 85 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 85 resolved as shift
WARNING: shift/reduce conflict for FOR in state 85 resolved as shift
WARNING: shift/reduce conflict for LIST in state 85 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 85 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 85 resolved as shift
WARNING: shift/reduce conflict for SET in state 85 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 85 resolved as shift
WARNING: shift/reduce conflict for MAP in state 85 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 85 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 85 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 85 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 85 resolved as shift
WARNING: shift/reduce conflict for STRING in state 85 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 85 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 87 resolved as shift
WARNING: shift/reduce conflict for INT in state 87 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 87 resolved as shift
WARNING: shift/reduce conflict for NUM in state 87 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 87 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 87 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 87 resolved as shift
WARNING: shift/reduce conflict for VAR in state 87 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 87 resolved as shift
WARNING: shift/reduce conflict for DO in state 87 resolved as shift
WARNING: shift/reduce conflict for IF in state 87 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 87 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 87 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 87 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 87 resolved as shift
WARNING: shift/reduce conflict for NOT in state 87 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 87 resolved as shift
WARNING: shift/reduce conflict for FOR in state 87 resolved as shift
WARNING: shift/reduce conflict for LIST in state 87 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 87 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 87 resolved as shift
WARNING: shift/reduce conflict for SET in state 87 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 87 resolved as shift
WARNING: shift/reduce conflict for MAP in state 87 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 87 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 87 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 87 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 87 resolved as shift
WARNING: shift/reduce conflict for STRING in state 87 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 87 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 102 resolved as shift
WARNING: shift/reduce conflict for INT in state 102 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 102 resolved as shift
WARNING: shift/reduce conflict for NUM in state 102 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 102 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 102 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 102 resolved as shift
WARNING: shift/reduce conflict for VAR in state 102 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 102 resolved as shift
WARNING: shift/reduce conflict for DO in state 102 resolved as shift
WARNING: shift/reduce conflict for IF in state 102 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 102 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 102 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 102 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 102 resolved as shift
WARNING: shift/reduce conflict for NOT in state 102 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 102 resolved as shift
WARNING: shift/reduce conflict for FOR in state 102 resolved as shift
WARNING: shift/reduce conflict for LIST in state 102 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 102 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 102 resolved as shift
WARNING: shift/reduce conflict for SET in state 102 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 102 resolved as shift
WARNING: shift/reduce conflict for MAP in state 102 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 102 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 102 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 102 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 102 resolved as shift
WARNING: shift/reduce conflict for STRING in state 102 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 102 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 103 resolved as shift
WARNING: shift/reduce conflict for INT in state 103 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 103 resolved as shift
WARNING: shift/reduce conflict for NUM in state 103 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 103 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 103 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 103 resolved as shift
WARNING: shift/reduce conflict for VAR in state 103 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 103 resolved as shift
WARNING: shift/reduce conflict for DO in state 103 resolved as shift
WARNING: shift/reduce conflict for IF in state 103 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 103 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 103 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 103 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 103 resolved as shift
WARNING: shift/reduce conflict for NOT in state 103 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 103 resolved as shift
WARNING: shift/reduce conflict for FOR in state 103 resolved as shift
WARNING: shift/reduce conflict for LIST in state 103 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 103 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 103 resolved as shift
WARNING: shift/reduce conflict for SET in state 103 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 103 resolved as shift
WARNING: shift/reduce conflict for MAP in state 103 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 103 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 103 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 103 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 103 resolved as shift
WARNING: shift/reduce conflict for STRING in state 103 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 103 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 104 resolved as shift
WARNING: shift/reduce conflict for INT in state 104 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 104 resolved as shift
WARNING: shift/reduce conflict for NUM in state 104 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 104 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 104 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 104 resolved as shift
WARNING: shift/reduce conflict for VAR in state 104 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 104 resolved as shift
WARNING: shift/reduce conflict for DO in state 104 resolved as shift
WARNING: shift/reduce conflict for IF in state 104 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 104 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 104 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 104 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 104 resolved as shift
WARNING: shift/reduce conflict for NOT in state 104 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 104 resolved as shift
WARNING: shift/reduce conflict for FOR in state 104 resolved as shift
WARNING: shift/reduce conflict for LIST in state 104 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 104 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 104 resolved as shift
WARNING: shift/reduce conflict for SET in state 104 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 104 resolved as shift
WARNING: shift/reduce conflict for MAP in state 104 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 104 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 104 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 104 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 104 resolved as shift
WARNING: shift/reduce conflict for STRING in state 104 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 104 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 105 resolved as shift
WARNING: shift/reduce conflict for INT in state 105 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 105 resolved as shift
WARNING: shift/reduce conflict for NUM in state 105 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 105 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 105 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 105 resolved as shift
WARNING: shift/reduce conflict for VAR in state 105 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 105 resolved as shift
WARNING: shift/reduce conflict for DO in state 105 resolved as shift
WARNING: shift/reduce conflict for IF in state 105 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 105 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 105 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 105 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 105 resolved as shift
WARNING: shift/reduce conflict for NOT in state 105 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 105 resolved as shift
WARNING: shift/reduce conflict for FOR in state 105 resolved as shift
WARNING: shift/reduce conflict for LIST in state 105 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 105 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 105 resolved as shift
WARNING: shift/reduce conflict for SET in state 105 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 105 resolved as shift
WARNING: shift/reduce conflict for MAP in state 105 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 105 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 105 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 105 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 105 resolved as shift
WARNING: shift/reduce conflict for STRING in state 105 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 105 resolved as shift
WARNING: shift/reduce conflict for AND in state 175 resolved as shift
WARNING: shift/reduce conflict for OR in state 175 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 178 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 178 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 178 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 178 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 178 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 178 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 197 resolved as shift
WARNING: shift/reduce conflict for INT in state 197 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 197 resolved as shift
WARNING: shift/reduce conflict for NUM in state 197 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 197 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 197 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 197 resolved as shift
WARNING: shift/reduce conflict for VAR in state 197 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 197 resolved as shift
WARNING: shift/reduce conflict for DO in state 197 resolved as shift
WARNING: shift/reduce conflict for IF in state 197 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 197 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 197 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 197 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 197 resolved as shift
WARNING: shift/reduce conflict for NOT in state 197 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 197 resolved as shift
WARNING: shift/reduce conflict for FOR in state 197 resolved as shift
WARNING: shift/reduce conflict for LIST in state 197 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 197 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 197 resolved as shift
WARNING: shift/reduce conflict for SET in state 197 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 197 resolved as shift
WARNING: shift/reduce conflict for MAP in state 197 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 197 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 197 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 197 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 197 resolved as shift
WARNING: shift/reduce conflict for STRING in state 197 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 197 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 198 resolved as shift
WARNING: shift/reduce conflict for INT in state 198 resolved as shift
WARNING: shift/reduce conflict for DOUBLER in state 198 resolved as shift
WARNING: shift/reduce conflict for NUM in state 198 resolved as shift
WARNING: shift/reduce conflict for STRINGR in state 198 resolved as shift
WARNING: shift/reduce conflict for BOOLR in state 198 resolved as shift
WARNING: shift/reduce conflict for DYNAMIC in state 198 resolved as shift
WARNING: shift/reduce conflict for VAR in state 198 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 198 resolved as shift
WARNING: shift/reduce conflict for DO in state 198 resolved as shift
WARNING: shift/reduce conflict for IF in state 198 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 198 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 198 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDIN in state 198 resolved as shift
WARNING: shift/reduce conflict for FUNCIONSTDOUT in state 198 resolved as shift
WARNING: shift/reduce conflict for NOT in state 198 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 198 resolved as shift
WARNING: shift/reduce conflict for FOR in state 198 resolved as shift
WARNING: shift/reduce conflict for LIST in state 198 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 198 resolved as shift
WARNING: shift/reduce conflict for NEWLIST in state 198 resolved as shift
WARNING: shift/reduce conflict for SET in state 198 resolved as shift
WARNING: shift/reduce conflict for SETFROM in state 198 resolved as shift
WARNING: shift/reduce conflict for MAP in state 198 resolved as shift
WARNING: shift/reduce conflict for LIZQ in state 198 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 198 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 198 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 198 resolved as shift
WARNING: shift/reduce conflict for STRING in state 198 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 198 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 208 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 208 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 208 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 208 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 208 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 208 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 216 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 239 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 271 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 271 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 271 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 271 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 271 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 271 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 271 resolved as shift
WARNING: shift/reduce conflict for CIZQ in state 276 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 281 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 281 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 281 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 281 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 281 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 281 resolved as shift
WARNING: shift/reduce conflict for DIGUAL in state 436 resolved as shift
WARNING: shift/reduce conflict for NOIGUAL in state 436 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 436 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 436 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 436 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 436 resolved as shift
WARNING: reduce/reduce conflict in state 20 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 20
WARNING: reduce/reduce conflict in state 34 resolved using rule (expresionInt -> valorInt)
WARNING: rejected rule (valorDouble -> valorInt) in state 34
WARNING: reduce/reduce conflict in state 37 resolved using rule (expresionBoolFor -> valorBool)
WARNING: rejected rule (expresionBool -> valorBool) in state 37
WARNING: reduce/reduce conflict in state 45 resolved using rule (funcionStdin -> FUNCIONSTDIN)
WARNING: rejected rule (valorString -> FUNCIONSTDIN) in state 45
WARNING: reduce/reduce conflict in state 157 resolved using rule (expListString -> STRING)
WARNING: rejected rule (expListDynamic -> STRING) in state 157
WARNING: reduce/reduce conflict in state 158 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListInt -> VARIABLE) in state 158
WARNING: reduce/reduce conflict in state 158 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListNum -> VARIABLE) in state 158
WARNING: reduce/reduce conflict in state 158 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListBool -> VARIABLE) in state 158
WARNING: reduce/reduce conflict in state 158 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 158
WARNING: reduce/reduce conflict in state 158 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListSet -> VARIABLE) in state 158
WARNING: reduce/reduce conflict in state 158 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListMap -> VARIABLE) in state 158
WARNING: reduce/reduce conflict in state 159 resolved using rule (expListInt -> ENTERO)
WARNING: rejected rule (expListNum -> ENTERO) in state 159
WARNING: reduce/reduce conflict in state 159 resolved using rule (expListInt -> ENTERO)
WARNING: rejected rule (expListDynamic -> ENTERO) in state 159
WARNING: reduce/reduce conflict in state 160 resolved using rule (expListNum -> DOUBLE)
WARNING: rejected rule (expListDynamic -> DOUBLE) in state 160
WARNING: reduce/reduce conflict in state 161 resolved using rule (expListBool -> BOOL)
WARNING: rejected rule (expListDynamic -> BOOL) in state 161
WARNING: reduce/reduce conflict in state 176 resolved using rule (expresionBool -> comparacionBool)
WARNING: rejected rule (comparacionBool -> expresionBool operadorLogico comparacionBool) in state 176
WARNING: reduce/reduce conflict in state 182 resolved using rule (valor -> ENTERO)
WARNING: rejected rule (valorInt -> ENTERO) in state 182
WARNING: reduce/reduce conflict in state 199 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (expresionBool -> VARIABLE comparadorMat VARIABLE) in state 199
WARNING: reduce/reduce conflict in state 199 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 199
WARNING: reduce/reduce conflict in state 199 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 199
WARNING: reduce/reduce conflict in state 200 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat expresionDouble)
WARNING: rejected rule (expresionBool -> VARIABLE comparadorMat expresionDouble) in state 200
WARNING: reduce/reduce conflict in state 208 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 208
WARNING: reduce/reduce conflict in state 208 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 208
WARNING: reduce/reduce conflict in state 208 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 208
WARNING: reduce/reduce conflict in state 215 resolved using rule (valor -> DOUBLE)
WARNING: rejected rule (valorDouble -> DOUBLE) in state 215
WARNING: reduce/reduce conflict in state 216 resolved using rule (valor -> STRING)
WARNING: rejected rule (valorString -> STRING) in state 216
WARNING: reduce/reduce conflict in state 236 resolved using rule (expresionBoolFor -> valorDouble comparadorMat expresionDouble)
WARNING: rejected rule (expresionBool -> valorDouble comparadorMat expresionDouble) in state 236
WARNING: reduce/reduce conflict in state 237 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (expresionBool -> valorDouble comparadorMat VARIABLE) in state 237
WARNING: reduce/reduce conflict in state 237 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 237
WARNING: reduce/reduce conflict in state 237 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 237
WARNING: reduce/reduce conflict in state 265 resolved using rule (expListDynamic -> VARIABLE)
WARNING: rejected rule (expListSet -> VARIABLE) in state 265
WARNING: reduce/reduce conflict in state 271 resolved using rule (valorString -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 271
WARNING: reduce/reduce conflict in state 271 resolved using rule (valorBool -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 271
WARNING: reduce/reduce conflict in state 281 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorString -> VARIABLE) in state 281
WARNING: reduce/reduce conflict in state 281 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 281
WARNING: reduce/reduce conflict in state 281 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (valorBool -> VARIABLE) in state 281
WARNING: reduce/reduce conflict in state 382 resolved using rule (expListString -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 382
WARNING: reduce/reduce conflict in state 393 resolved using rule (expListInt -> VARIABLE)
WARNING: rejected rule (expListNum -> VARIABLE) in state 393
WARNING: reduce/reduce conflict in state 393 resolved using rule (expListInt -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 393
WARNING: reduce/reduce conflict in state 396 resolved using rule (expListNum -> ENTERO)
WARNING: rejected rule (expListDynamic -> ENTERO) in state 396
WARNING: reduce/reduce conflict in state 397 resolved using rule (expListNum -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 397
WARNING: reduce/reduce conflict in state 400 resolved using rule (expListBool -> VARIABLE)
WARNING: rejected rule (expListDynamic -> VARIABLE) in state 400
WARNING: reduce/reduce conflict in state 413 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 413
WARNING: reduce/reduce conflict in state 414 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 414
WARNING: reduce/reduce conflict in state 418 resolved using rule (expresionSet -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER)
WARNING: rejected rule (expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER) in state 418
WARNING: reduce/reduce conflict in state 519 resolved using rule (expresionBoolFor -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 519
WARNING: reduce/reduce conflict in state 519 resolved using rule (expresionBool -> VARIABLE comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 519
WARNING: reduce/reduce conflict in state 522 resolved using rule (expresionBoolFor -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 522
WARNING: reduce/reduce conflict in state 522 resolved using rule (expresionBool -> valorDouble comparadorMat VARIABLE)
WARNING: rejected rule (valorInt -> VARIABLE) in state 522
WARNING: Rule (comparacionBool -> expresionBool operadorLogico comparacionBool) is never reduced
WARNING: Rule (expresionLista -> VARIABLE FUNCIONTAKE PIZQ ENTERO PDER) is never reduced
