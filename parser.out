Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    AS
    BOOL
    BREAK
    CASE
    CDER
    CIZQ
    COMA
    COMILLAD
    COMILLAS
    DOSPUNTOS
    DOUBLE
    DRESTA
    DSUMA
    DYNAMIC
    ELSE
    ELSEIF
    FLECHA
    FOR
    FUNCIONARR
    FUNCIONRANGE
    FUNCIONSTDIN
    FUNCIONSTDOUT
    FUNCIONSTRING
    FUNCIONTAKE
    INT
    IS
    ISNEGADO
    LIST
    MAP
    NOT
    NUM
    OR
    RETURN
    SET
    STRING
    SWITCH
    VAR

Grammar

Rule 0     S' -> final
Rule 1     final -> expresion PUNTOYCOMA
Rule 2     final -> asignacion PUNTOYCOMA
Rule 3     final -> imprimir PUNTOYCOMA
Rule 4     final -> sentenciaIf PUNTOYCOMA
Rule 5     final -> sentenciaIf
Rule 6     final -> sentenciaWhile
Rule 7     final -> sentenciaWhile PUNTOYCOMA
Rule 8     final -> sentenciaDoWhile PUNTOYCOMA
Rule 9     algoritmo -> imprimir PUNTOYCOMA
Rule 10    algoritmo -> asignacion PUNTOYCOMA
Rule 11    algoritmo -> expresion PUNTOYCOMA
Rule 12    algoritmo -> comparacion PUNTOYCOMA
Rule 13    algoritmo -> sentenciaWhile
Rule 14    algoritmo -> sentenciaWhile PUNTOYCOMA
Rule 15    algoritmo -> sentenciaIf PUNTOYCOMA
Rule 16    algoritmo -> sentenciaIf
Rule 17    algoritmo -> sentenciaDoWhile PUNTOYCOMA
Rule 18    sentenciaIf -> IF PIZQ comparacion PDER algoritmo
Rule 19    sentenciaIf -> IF PIZQ comparacion PDER LIZQ algoritmo LDER
Rule 20    sentenciaWhile -> WHILE PIZQ comparacion PDER LIZQ algoritmo LDER
Rule 21    sentenciaWhile -> WHILE PIZQ comparacion PDER algoritmo
Rule 22    sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ comparacion PDER
Rule 23    imprimir -> PRINT PIZQ expresion PDER
Rule 24    asignacion -> VARIABLE IGUAL expresion
Rule 25    comparacion -> expresion operadorComp expresion
Rule 26    operadorComp -> DIGUAL
Rule 27    operadorComp -> NOIGUAL
Rule 28    operadorComp -> MAYOR
Rule 29    operadorComp -> MENOR
Rule 30    operadorComp -> MAYIGUAL
Rule 31    operadorComp -> MENIGUAL
Rule 32    expresion -> valor
Rule 33    valor -> ENTERO
Rule 34    valor -> VARIABLE
Rule 35    expresion -> valor operadorMat expresion
Rule 36    operadorMat -> SUMA
Rule 37    operadorMat -> RESTA
Rule 38    operadorMat -> MULTI
Rule 39    operadorMat -> DIV
Rule 40    operadorMat -> DIVENTERO
Rule 41    operadorMat -> MOD

Terminals, with rules where they appear

AND                  : 
AS                   : 
BOOL                 : 
BREAK                : 
CASE                 : 
CDER                 : 
CIZQ                 : 
COMA                 : 
COMILLAD             : 
COMILLAS             : 
DIGUAL               : 26
DIV                  : 39
DIVENTERO            : 40
DO                   : 22
DOSPUNTOS            : 
DOUBLE               : 
DRESTA               : 
DSUMA                : 
DYNAMIC              : 
ELSE                 : 
ELSEIF               : 
ENTERO               : 33
FLECHA               : 
FOR                  : 
FUNCIONARR           : 
FUNCIONRANGE         : 
FUNCIONSTDIN         : 
FUNCIONSTDOUT        : 
FUNCIONSTRING        : 
FUNCIONTAKE          : 
IF                   : 18 19
IGUAL                : 24
INT                  : 
IS                   : 
ISNEGADO             : 
LDER                 : 19 20 22
LIST                 : 
LIZQ                 : 19 20 22
MAP                  : 
MAYIGUAL             : 30
MAYOR                : 28
MENIGUAL             : 31
MENOR                : 29
MOD                  : 41
MULTI                : 38
NOIGUAL              : 27
NOT                  : 
NUM                  : 
OR                   : 
PDER                 : 18 19 20 21 22 23
PIZQ                 : 18 19 20 21 22 23
PRINT                : 23
PUNTOYCOMA           : 1 2 3 4 7 8 9 10 11 12 14 15 17
RESTA                : 37
RETURN               : 
SET                  : 
STRING               : 
SUMA                 : 36
SWITCH               : 
VAR                  : 
VARIABLE             : 24 34
WHILE                : 20 21 22
error                : 

Nonterminals, with rules where they appear

algoritmo            : 18 19 20 21 22
asignacion           : 2 10
comparacion          : 12 18 19 20 21 22
expresion            : 1 11 23 24 25 25 35
final                : 0
imprimir             : 3 9
operadorComp         : 25
operadorMat          : 35
sentenciaDoWhile     : 8 17
sentenciaIf          : 4 5 15 16
sentenciaWhile       : 6 7 13 14
valor                : 32 35

Parsing method: LALR

state 0

    (0) S' -> . final
    (1) final -> . expresion PUNTOYCOMA
    (2) final -> . asignacion PUNTOYCOMA
    (3) final -> . imprimir PUNTOYCOMA
    (4) final -> . sentenciaIf PUNTOYCOMA
    (5) final -> . sentenciaIf
    (6) final -> . sentenciaWhile
    (7) final -> . sentenciaWhile PUNTOYCOMA
    (8) final -> . sentenciaDoWhile PUNTOYCOMA
    (32) expresion -> . valor
    (35) expresion -> . valor operadorMat expresion
    (24) asignacion -> . VARIABLE IGUAL expresion
    (23) imprimir -> . PRINT PIZQ expresion PDER
    (18) sentenciaIf -> . IF PIZQ comparacion PDER algoritmo
    (19) sentenciaIf -> . IF PIZQ comparacion PDER LIZQ algoritmo LDER
    (20) sentenciaWhile -> . WHILE PIZQ comparacion PDER LIZQ algoritmo LDER
    (21) sentenciaWhile -> . WHILE PIZQ comparacion PDER algoritmo
    (22) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ comparacion PDER
    (33) valor -> . ENTERO
    (34) valor -> . VARIABLE

    VARIABLE        shift and go to state 9
    PRINT           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    DO              shift and go to state 13
    ENTERO          shift and go to state 14

    final                          shift and go to state 1
    expresion                      shift and go to state 2
    asignacion                     shift and go to state 3
    imprimir                       shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaWhile                 shift and go to state 6
    sentenciaDoWhile               shift and go to state 7
    valor                          shift and go to state 8

state 1

    (0) S' -> final .



state 2

    (1) final -> expresion . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 15


state 3

    (2) final -> asignacion . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 16


state 4

    (3) final -> imprimir . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 17


state 5

    (4) final -> sentenciaIf . PUNTOYCOMA
    (5) final -> sentenciaIf .

    PUNTOYCOMA      shift and go to state 18
    $end            reduce using rule 5 (final -> sentenciaIf .)


state 6

    (6) final -> sentenciaWhile .
    (7) final -> sentenciaWhile . PUNTOYCOMA

    $end            reduce using rule 6 (final -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 19


state 7

    (8) final -> sentenciaDoWhile . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 20


state 8

    (32) expresion -> valor .
    (35) expresion -> valor . operadorMat expresion
    (36) operadorMat -> . SUMA
    (37) operadorMat -> . RESTA
    (38) operadorMat -> . MULTI
    (39) operadorMat -> . DIV
    (40) operadorMat -> . DIVENTERO
    (41) operadorMat -> . MOD

    PUNTOYCOMA      reduce using rule 32 (expresion -> valor .)
    PDER            reduce using rule 32 (expresion -> valor .)
    DIGUAL          reduce using rule 32 (expresion -> valor .)
    NOIGUAL         reduce using rule 32 (expresion -> valor .)
    MAYOR           reduce using rule 32 (expresion -> valor .)
    MENOR           reduce using rule 32 (expresion -> valor .)
    MAYIGUAL        reduce using rule 32 (expresion -> valor .)
    MENIGUAL        reduce using rule 32 (expresion -> valor .)
    SUMA            shift and go to state 22
    RESTA           shift and go to state 23
    MULTI           shift and go to state 24
    DIV             shift and go to state 25
    DIVENTERO       shift and go to state 26
    MOD             shift and go to state 27

    operadorMat                    shift and go to state 21

state 9

    (24) asignacion -> VARIABLE . IGUAL expresion
    (34) valor -> VARIABLE .

    IGUAL           shift and go to state 28
    SUMA            reduce using rule 34 (valor -> VARIABLE .)
    RESTA           reduce using rule 34 (valor -> VARIABLE .)
    MULTI           reduce using rule 34 (valor -> VARIABLE .)
    DIV             reduce using rule 34 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 34 (valor -> VARIABLE .)
    MOD             reduce using rule 34 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 34 (valor -> VARIABLE .)
    DIGUAL          reduce using rule 34 (valor -> VARIABLE .)
    NOIGUAL         reduce using rule 34 (valor -> VARIABLE .)
    MAYOR           reduce using rule 34 (valor -> VARIABLE .)
    MENOR           reduce using rule 34 (valor -> VARIABLE .)
    MAYIGUAL        reduce using rule 34 (valor -> VARIABLE .)
    MENIGUAL        reduce using rule 34 (valor -> VARIABLE .)


state 10

    (23) imprimir -> PRINT . PIZQ expresion PDER

    PIZQ            shift and go to state 29


state 11

    (18) sentenciaIf -> IF . PIZQ comparacion PDER algoritmo
    (19) sentenciaIf -> IF . PIZQ comparacion PDER LIZQ algoritmo LDER

    PIZQ            shift and go to state 30


state 12

    (20) sentenciaWhile -> WHILE . PIZQ comparacion PDER LIZQ algoritmo LDER
    (21) sentenciaWhile -> WHILE . PIZQ comparacion PDER algoritmo

    PIZQ            shift and go to state 31


state 13

    (22) sentenciaDoWhile -> DO . LIZQ algoritmo LDER WHILE PIZQ comparacion PDER

    LIZQ            shift and go to state 32


state 14

    (33) valor -> ENTERO .

    SUMA            reduce using rule 33 (valor -> ENTERO .)
    RESTA           reduce using rule 33 (valor -> ENTERO .)
    MULTI           reduce using rule 33 (valor -> ENTERO .)
    DIV             reduce using rule 33 (valor -> ENTERO .)
    DIVENTERO       reduce using rule 33 (valor -> ENTERO .)
    MOD             reduce using rule 33 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 33 (valor -> ENTERO .)
    PDER            reduce using rule 33 (valor -> ENTERO .)
    DIGUAL          reduce using rule 33 (valor -> ENTERO .)
    NOIGUAL         reduce using rule 33 (valor -> ENTERO .)
    MAYOR           reduce using rule 33 (valor -> ENTERO .)
    MENOR           reduce using rule 33 (valor -> ENTERO .)
    MAYIGUAL        reduce using rule 33 (valor -> ENTERO .)
    MENIGUAL        reduce using rule 33 (valor -> ENTERO .)


state 15

    (1) final -> expresion PUNTOYCOMA .

    $end            reduce using rule 1 (final -> expresion PUNTOYCOMA .)


state 16

    (2) final -> asignacion PUNTOYCOMA .

    $end            reduce using rule 2 (final -> asignacion PUNTOYCOMA .)


state 17

    (3) final -> imprimir PUNTOYCOMA .

    $end            reduce using rule 3 (final -> imprimir PUNTOYCOMA .)


state 18

    (4) final -> sentenciaIf PUNTOYCOMA .

    $end            reduce using rule 4 (final -> sentenciaIf PUNTOYCOMA .)


state 19

    (7) final -> sentenciaWhile PUNTOYCOMA .

    $end            reduce using rule 7 (final -> sentenciaWhile PUNTOYCOMA .)


state 20

    (8) final -> sentenciaDoWhile PUNTOYCOMA .

    $end            reduce using rule 8 (final -> sentenciaDoWhile PUNTOYCOMA .)


state 21

    (35) expresion -> valor operadorMat . expresion
    (32) expresion -> . valor
    (35) expresion -> . valor operadorMat expresion
    (33) valor -> . ENTERO
    (34) valor -> . VARIABLE

    ENTERO          shift and go to state 14
    VARIABLE        shift and go to state 34

    valor                          shift and go to state 8
    expresion                      shift and go to state 33

state 22

    (36) operadorMat -> SUMA .

    ENTERO          reduce using rule 36 (operadorMat -> SUMA .)
    VARIABLE        reduce using rule 36 (operadorMat -> SUMA .)


state 23

    (37) operadorMat -> RESTA .

    ENTERO          reduce using rule 37 (operadorMat -> RESTA .)
    VARIABLE        reduce using rule 37 (operadorMat -> RESTA .)


state 24

    (38) operadorMat -> MULTI .

    ENTERO          reduce using rule 38 (operadorMat -> MULTI .)
    VARIABLE        reduce using rule 38 (operadorMat -> MULTI .)


state 25

    (39) operadorMat -> DIV .

    ENTERO          reduce using rule 39 (operadorMat -> DIV .)
    VARIABLE        reduce using rule 39 (operadorMat -> DIV .)


state 26

    (40) operadorMat -> DIVENTERO .

    ENTERO          reduce using rule 40 (operadorMat -> DIVENTERO .)
    VARIABLE        reduce using rule 40 (operadorMat -> DIVENTERO .)


state 27

    (41) operadorMat -> MOD .

    ENTERO          reduce using rule 41 (operadorMat -> MOD .)
    VARIABLE        reduce using rule 41 (operadorMat -> MOD .)


state 28

    (24) asignacion -> VARIABLE IGUAL . expresion
    (32) expresion -> . valor
    (35) expresion -> . valor operadorMat expresion
    (33) valor -> . ENTERO
    (34) valor -> . VARIABLE

    ENTERO          shift and go to state 14
    VARIABLE        shift and go to state 34

    expresion                      shift and go to state 35
    valor                          shift and go to state 8

state 29

    (23) imprimir -> PRINT PIZQ . expresion PDER
    (32) expresion -> . valor
    (35) expresion -> . valor operadorMat expresion
    (33) valor -> . ENTERO
    (34) valor -> . VARIABLE

    ENTERO          shift and go to state 14
    VARIABLE        shift and go to state 34

    expresion                      shift and go to state 36
    valor                          shift and go to state 8

state 30

    (18) sentenciaIf -> IF PIZQ . comparacion PDER algoritmo
    (19) sentenciaIf -> IF PIZQ . comparacion PDER LIZQ algoritmo LDER
    (25) comparacion -> . expresion operadorComp expresion
    (32) expresion -> . valor
    (35) expresion -> . valor operadorMat expresion
    (33) valor -> . ENTERO
    (34) valor -> . VARIABLE

    ENTERO          shift and go to state 14
    VARIABLE        shift and go to state 34

    comparacion                    shift and go to state 37
    expresion                      shift and go to state 38
    valor                          shift and go to state 8

state 31

    (20) sentenciaWhile -> WHILE PIZQ . comparacion PDER LIZQ algoritmo LDER
    (21) sentenciaWhile -> WHILE PIZQ . comparacion PDER algoritmo
    (25) comparacion -> . expresion operadorComp expresion
    (32) expresion -> . valor
    (35) expresion -> . valor operadorMat expresion
    (33) valor -> . ENTERO
    (34) valor -> . VARIABLE

    ENTERO          shift and go to state 14
    VARIABLE        shift and go to state 34

    comparacion                    shift and go to state 39
    expresion                      shift and go to state 38
    valor                          shift and go to state 8

state 32

    (22) sentenciaDoWhile -> DO LIZQ . algoritmo LDER WHILE PIZQ comparacion PDER
    (9) algoritmo -> . imprimir PUNTOYCOMA
    (10) algoritmo -> . asignacion PUNTOYCOMA
    (11) algoritmo -> . expresion PUNTOYCOMA
    (12) algoritmo -> . comparacion PUNTOYCOMA
    (13) algoritmo -> . sentenciaWhile
    (14) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (15) algoritmo -> . sentenciaIf PUNTOYCOMA
    (16) algoritmo -> . sentenciaIf
    (17) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (23) imprimir -> . PRINT PIZQ expresion PDER
    (24) asignacion -> . VARIABLE IGUAL expresion
    (32) expresion -> . valor
    (35) expresion -> . valor operadorMat expresion
    (25) comparacion -> . expresion operadorComp expresion
    (20) sentenciaWhile -> . WHILE PIZQ comparacion PDER LIZQ algoritmo LDER
    (21) sentenciaWhile -> . WHILE PIZQ comparacion PDER algoritmo
    (18) sentenciaIf -> . IF PIZQ comparacion PDER algoritmo
    (19) sentenciaIf -> . IF PIZQ comparacion PDER LIZQ algoritmo LDER
    (22) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ comparacion PDER
    (33) valor -> . ENTERO
    (34) valor -> . VARIABLE

    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 9
    WHILE           shift and go to state 12
    IF              shift and go to state 11
    DO              shift and go to state 13
    ENTERO          shift and go to state 14

    algoritmo                      shift and go to state 40
    comparacion                    shift and go to state 41
    imprimir                       shift and go to state 42
    asignacion                     shift and go to state 43
    expresion                      shift and go to state 44
    sentenciaWhile                 shift and go to state 45
    sentenciaIf                    shift and go to state 46
    sentenciaDoWhile               shift and go to state 47
    valor                          shift and go to state 8

state 33

    (35) expresion -> valor operadorMat expresion .

    PUNTOYCOMA      reduce using rule 35 (expresion -> valor operadorMat expresion .)
    PDER            reduce using rule 35 (expresion -> valor operadorMat expresion .)
    DIGUAL          reduce using rule 35 (expresion -> valor operadorMat expresion .)
    NOIGUAL         reduce using rule 35 (expresion -> valor operadorMat expresion .)
    MAYOR           reduce using rule 35 (expresion -> valor operadorMat expresion .)
    MENOR           reduce using rule 35 (expresion -> valor operadorMat expresion .)
    MAYIGUAL        reduce using rule 35 (expresion -> valor operadorMat expresion .)
    MENIGUAL        reduce using rule 35 (expresion -> valor operadorMat expresion .)


state 34

    (34) valor -> VARIABLE .

    SUMA            reduce using rule 34 (valor -> VARIABLE .)
    RESTA           reduce using rule 34 (valor -> VARIABLE .)
    MULTI           reduce using rule 34 (valor -> VARIABLE .)
    DIV             reduce using rule 34 (valor -> VARIABLE .)
    DIVENTERO       reduce using rule 34 (valor -> VARIABLE .)
    MOD             reduce using rule 34 (valor -> VARIABLE .)
    PUNTOYCOMA      reduce using rule 34 (valor -> VARIABLE .)
    PDER            reduce using rule 34 (valor -> VARIABLE .)
    DIGUAL          reduce using rule 34 (valor -> VARIABLE .)
    NOIGUAL         reduce using rule 34 (valor -> VARIABLE .)
    MAYOR           reduce using rule 34 (valor -> VARIABLE .)
    MENOR           reduce using rule 34 (valor -> VARIABLE .)
    MAYIGUAL        reduce using rule 34 (valor -> VARIABLE .)
    MENIGUAL        reduce using rule 34 (valor -> VARIABLE .)


state 35

    (24) asignacion -> VARIABLE IGUAL expresion .

    PUNTOYCOMA      reduce using rule 24 (asignacion -> VARIABLE IGUAL expresion .)


state 36

    (23) imprimir -> PRINT PIZQ expresion . PDER

    PDER            shift and go to state 48


state 37

    (18) sentenciaIf -> IF PIZQ comparacion . PDER algoritmo
    (19) sentenciaIf -> IF PIZQ comparacion . PDER LIZQ algoritmo LDER

    PDER            shift and go to state 49


state 38

    (25) comparacion -> expresion . operadorComp expresion
    (26) operadorComp -> . DIGUAL
    (27) operadorComp -> . NOIGUAL
    (28) operadorComp -> . MAYOR
    (29) operadorComp -> . MENOR
    (30) operadorComp -> . MAYIGUAL
    (31) operadorComp -> . MENIGUAL

    DIGUAL          shift and go to state 51
    NOIGUAL         shift and go to state 52
    MAYOR           shift and go to state 53
    MENOR           shift and go to state 54
    MAYIGUAL        shift and go to state 55
    MENIGUAL        shift and go to state 56

    operadorComp                   shift and go to state 50

state 39

    (20) sentenciaWhile -> WHILE PIZQ comparacion . PDER LIZQ algoritmo LDER
    (21) sentenciaWhile -> WHILE PIZQ comparacion . PDER algoritmo

    PDER            shift and go to state 57


state 40

    (22) sentenciaDoWhile -> DO LIZQ algoritmo . LDER WHILE PIZQ comparacion PDER

    LDER            shift and go to state 58


state 41

    (12) algoritmo -> comparacion . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 59


state 42

    (9) algoritmo -> imprimir . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 60


state 43

    (10) algoritmo -> asignacion . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 61


state 44

    (11) algoritmo -> expresion . PUNTOYCOMA
    (25) comparacion -> expresion . operadorComp expresion
    (26) operadorComp -> . DIGUAL
    (27) operadorComp -> . NOIGUAL
    (28) operadorComp -> . MAYOR
    (29) operadorComp -> . MENOR
    (30) operadorComp -> . MAYIGUAL
    (31) operadorComp -> . MENIGUAL

    PUNTOYCOMA      shift and go to state 62
    DIGUAL          shift and go to state 51
    NOIGUAL         shift and go to state 52
    MAYOR           shift and go to state 53
    MENOR           shift and go to state 54
    MAYIGUAL        shift and go to state 55
    MENIGUAL        shift and go to state 56

    operadorComp                   shift and go to state 50

state 45

    (13) algoritmo -> sentenciaWhile .
    (14) algoritmo -> sentenciaWhile . PUNTOYCOMA

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    LDER            reduce using rule 13 (algoritmo -> sentenciaWhile .)
    $end            reduce using rule 13 (algoritmo -> sentenciaWhile .)
    PUNTOYCOMA      shift and go to state 63

  ! PUNTOYCOMA      [ reduce using rule 13 (algoritmo -> sentenciaWhile .) ]


state 46

    (15) algoritmo -> sentenciaIf . PUNTOYCOMA
    (16) algoritmo -> sentenciaIf .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 64
    LDER            reduce using rule 16 (algoritmo -> sentenciaIf .)
    $end            reduce using rule 16 (algoritmo -> sentenciaIf .)

  ! PUNTOYCOMA      [ reduce using rule 16 (algoritmo -> sentenciaIf .) ]


state 47

    (17) algoritmo -> sentenciaDoWhile . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 65


state 48

    (23) imprimir -> PRINT PIZQ expresion PDER .

    PUNTOYCOMA      reduce using rule 23 (imprimir -> PRINT PIZQ expresion PDER .)


state 49

    (18) sentenciaIf -> IF PIZQ comparacion PDER . algoritmo
    (19) sentenciaIf -> IF PIZQ comparacion PDER . LIZQ algoritmo LDER
    (9) algoritmo -> . imprimir PUNTOYCOMA
    (10) algoritmo -> . asignacion PUNTOYCOMA
    (11) algoritmo -> . expresion PUNTOYCOMA
    (12) algoritmo -> . comparacion PUNTOYCOMA
    (13) algoritmo -> . sentenciaWhile
    (14) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (15) algoritmo -> . sentenciaIf PUNTOYCOMA
    (16) algoritmo -> . sentenciaIf
    (17) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (23) imprimir -> . PRINT PIZQ expresion PDER
    (24) asignacion -> . VARIABLE IGUAL expresion
    (32) expresion -> . valor
    (35) expresion -> . valor operadorMat expresion
    (25) comparacion -> . expresion operadorComp expresion
    (20) sentenciaWhile -> . WHILE PIZQ comparacion PDER LIZQ algoritmo LDER
    (21) sentenciaWhile -> . WHILE PIZQ comparacion PDER algoritmo
    (18) sentenciaIf -> . IF PIZQ comparacion PDER algoritmo
    (19) sentenciaIf -> . IF PIZQ comparacion PDER LIZQ algoritmo LDER
    (22) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ comparacion PDER
    (33) valor -> . ENTERO
    (34) valor -> . VARIABLE

    LIZQ            shift and go to state 67
    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 9
    WHILE           shift and go to state 12
    IF              shift and go to state 11
    DO              shift and go to state 13
    ENTERO          shift and go to state 14

    comparacion                    shift and go to state 41
    algoritmo                      shift and go to state 66
    imprimir                       shift and go to state 42
    asignacion                     shift and go to state 43
    expresion                      shift and go to state 44
    sentenciaWhile                 shift and go to state 45
    sentenciaIf                    shift and go to state 46
    sentenciaDoWhile               shift and go to state 47
    valor                          shift and go to state 8

state 50

    (25) comparacion -> expresion operadorComp . expresion
    (32) expresion -> . valor
    (35) expresion -> . valor operadorMat expresion
    (33) valor -> . ENTERO
    (34) valor -> . VARIABLE

    ENTERO          shift and go to state 14
    VARIABLE        shift and go to state 34

    expresion                      shift and go to state 68
    valor                          shift and go to state 8

state 51

    (26) operadorComp -> DIGUAL .

    ENTERO          reduce using rule 26 (operadorComp -> DIGUAL .)
    VARIABLE        reduce using rule 26 (operadorComp -> DIGUAL .)


state 52

    (27) operadorComp -> NOIGUAL .

    ENTERO          reduce using rule 27 (operadorComp -> NOIGUAL .)
    VARIABLE        reduce using rule 27 (operadorComp -> NOIGUAL .)


state 53

    (28) operadorComp -> MAYOR .

    ENTERO          reduce using rule 28 (operadorComp -> MAYOR .)
    VARIABLE        reduce using rule 28 (operadorComp -> MAYOR .)


state 54

    (29) operadorComp -> MENOR .

    ENTERO          reduce using rule 29 (operadorComp -> MENOR .)
    VARIABLE        reduce using rule 29 (operadorComp -> MENOR .)


state 55

    (30) operadorComp -> MAYIGUAL .

    ENTERO          reduce using rule 30 (operadorComp -> MAYIGUAL .)
    VARIABLE        reduce using rule 30 (operadorComp -> MAYIGUAL .)


state 56

    (31) operadorComp -> MENIGUAL .

    ENTERO          reduce using rule 31 (operadorComp -> MENIGUAL .)
    VARIABLE        reduce using rule 31 (operadorComp -> MENIGUAL .)


state 57

    (20) sentenciaWhile -> WHILE PIZQ comparacion PDER . LIZQ algoritmo LDER
    (21) sentenciaWhile -> WHILE PIZQ comparacion PDER . algoritmo
    (9) algoritmo -> . imprimir PUNTOYCOMA
    (10) algoritmo -> . asignacion PUNTOYCOMA
    (11) algoritmo -> . expresion PUNTOYCOMA
    (12) algoritmo -> . comparacion PUNTOYCOMA
    (13) algoritmo -> . sentenciaWhile
    (14) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (15) algoritmo -> . sentenciaIf PUNTOYCOMA
    (16) algoritmo -> . sentenciaIf
    (17) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (23) imprimir -> . PRINT PIZQ expresion PDER
    (24) asignacion -> . VARIABLE IGUAL expresion
    (32) expresion -> . valor
    (35) expresion -> . valor operadorMat expresion
    (25) comparacion -> . expresion operadorComp expresion
    (20) sentenciaWhile -> . WHILE PIZQ comparacion PDER LIZQ algoritmo LDER
    (21) sentenciaWhile -> . WHILE PIZQ comparacion PDER algoritmo
    (18) sentenciaIf -> . IF PIZQ comparacion PDER algoritmo
    (19) sentenciaIf -> . IF PIZQ comparacion PDER LIZQ algoritmo LDER
    (22) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ comparacion PDER
    (33) valor -> . ENTERO
    (34) valor -> . VARIABLE

    LIZQ            shift and go to state 69
    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 9
    WHILE           shift and go to state 12
    IF              shift and go to state 11
    DO              shift and go to state 13
    ENTERO          shift and go to state 14

    comparacion                    shift and go to state 41
    algoritmo                      shift and go to state 70
    imprimir                       shift and go to state 42
    asignacion                     shift and go to state 43
    expresion                      shift and go to state 44
    sentenciaWhile                 shift and go to state 45
    sentenciaIf                    shift and go to state 46
    sentenciaDoWhile               shift and go to state 47
    valor                          shift and go to state 8

state 58

    (22) sentenciaDoWhile -> DO LIZQ algoritmo LDER . WHILE PIZQ comparacion PDER

    WHILE           shift and go to state 71


state 59

    (12) algoritmo -> comparacion PUNTOYCOMA .

    LDER            reduce using rule 12 (algoritmo -> comparacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 12 (algoritmo -> comparacion PUNTOYCOMA .)
    $end            reduce using rule 12 (algoritmo -> comparacion PUNTOYCOMA .)


state 60

    (9) algoritmo -> imprimir PUNTOYCOMA .

    LDER            reduce using rule 9 (algoritmo -> imprimir PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 9 (algoritmo -> imprimir PUNTOYCOMA .)
    $end            reduce using rule 9 (algoritmo -> imprimir PUNTOYCOMA .)


state 61

    (10) algoritmo -> asignacion PUNTOYCOMA .

    LDER            reduce using rule 10 (algoritmo -> asignacion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 10 (algoritmo -> asignacion PUNTOYCOMA .)
    $end            reduce using rule 10 (algoritmo -> asignacion PUNTOYCOMA .)


state 62

    (11) algoritmo -> expresion PUNTOYCOMA .

    LDER            reduce using rule 11 (algoritmo -> expresion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 11 (algoritmo -> expresion PUNTOYCOMA .)
    $end            reduce using rule 11 (algoritmo -> expresion PUNTOYCOMA .)


state 63

    (14) algoritmo -> sentenciaWhile PUNTOYCOMA .

    LDER            reduce using rule 14 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 14 (algoritmo -> sentenciaWhile PUNTOYCOMA .)
    $end            reduce using rule 14 (algoritmo -> sentenciaWhile PUNTOYCOMA .)


state 64

    (15) algoritmo -> sentenciaIf PUNTOYCOMA .

    LDER            reduce using rule 15 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 15 (algoritmo -> sentenciaIf PUNTOYCOMA .)
    $end            reduce using rule 15 (algoritmo -> sentenciaIf PUNTOYCOMA .)


state 65

    (17) algoritmo -> sentenciaDoWhile PUNTOYCOMA .

    LDER            reduce using rule 17 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 17 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)
    $end            reduce using rule 17 (algoritmo -> sentenciaDoWhile PUNTOYCOMA .)


state 66

    (18) sentenciaIf -> IF PIZQ comparacion PDER algoritmo .

    PUNTOYCOMA      reduce using rule 18 (sentenciaIf -> IF PIZQ comparacion PDER algoritmo .)
    $end            reduce using rule 18 (sentenciaIf -> IF PIZQ comparacion PDER algoritmo .)
    LDER            reduce using rule 18 (sentenciaIf -> IF PIZQ comparacion PDER algoritmo .)


state 67

    (19) sentenciaIf -> IF PIZQ comparacion PDER LIZQ . algoritmo LDER
    (9) algoritmo -> . imprimir PUNTOYCOMA
    (10) algoritmo -> . asignacion PUNTOYCOMA
    (11) algoritmo -> . expresion PUNTOYCOMA
    (12) algoritmo -> . comparacion PUNTOYCOMA
    (13) algoritmo -> . sentenciaWhile
    (14) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (15) algoritmo -> . sentenciaIf PUNTOYCOMA
    (16) algoritmo -> . sentenciaIf
    (17) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (23) imprimir -> . PRINT PIZQ expresion PDER
    (24) asignacion -> . VARIABLE IGUAL expresion
    (32) expresion -> . valor
    (35) expresion -> . valor operadorMat expresion
    (25) comparacion -> . expresion operadorComp expresion
    (20) sentenciaWhile -> . WHILE PIZQ comparacion PDER LIZQ algoritmo LDER
    (21) sentenciaWhile -> . WHILE PIZQ comparacion PDER algoritmo
    (18) sentenciaIf -> . IF PIZQ comparacion PDER algoritmo
    (19) sentenciaIf -> . IF PIZQ comparacion PDER LIZQ algoritmo LDER
    (22) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ comparacion PDER
    (33) valor -> . ENTERO
    (34) valor -> . VARIABLE

    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 9
    WHILE           shift and go to state 12
    IF              shift and go to state 11
    DO              shift and go to state 13
    ENTERO          shift and go to state 14

    comparacion                    shift and go to state 41
    algoritmo                      shift and go to state 72
    imprimir                       shift and go to state 42
    asignacion                     shift and go to state 43
    expresion                      shift and go to state 44
    sentenciaWhile                 shift and go to state 45
    sentenciaIf                    shift and go to state 46
    sentenciaDoWhile               shift and go to state 47
    valor                          shift and go to state 8

state 68

    (25) comparacion -> expresion operadorComp expresion .

    PDER            reduce using rule 25 (comparacion -> expresion operadorComp expresion .)
    PUNTOYCOMA      reduce using rule 25 (comparacion -> expresion operadorComp expresion .)


state 69

    (20) sentenciaWhile -> WHILE PIZQ comparacion PDER LIZQ . algoritmo LDER
    (9) algoritmo -> . imprimir PUNTOYCOMA
    (10) algoritmo -> . asignacion PUNTOYCOMA
    (11) algoritmo -> . expresion PUNTOYCOMA
    (12) algoritmo -> . comparacion PUNTOYCOMA
    (13) algoritmo -> . sentenciaWhile
    (14) algoritmo -> . sentenciaWhile PUNTOYCOMA
    (15) algoritmo -> . sentenciaIf PUNTOYCOMA
    (16) algoritmo -> . sentenciaIf
    (17) algoritmo -> . sentenciaDoWhile PUNTOYCOMA
    (23) imprimir -> . PRINT PIZQ expresion PDER
    (24) asignacion -> . VARIABLE IGUAL expresion
    (32) expresion -> . valor
    (35) expresion -> . valor operadorMat expresion
    (25) comparacion -> . expresion operadorComp expresion
    (20) sentenciaWhile -> . WHILE PIZQ comparacion PDER LIZQ algoritmo LDER
    (21) sentenciaWhile -> . WHILE PIZQ comparacion PDER algoritmo
    (18) sentenciaIf -> . IF PIZQ comparacion PDER algoritmo
    (19) sentenciaIf -> . IF PIZQ comparacion PDER LIZQ algoritmo LDER
    (22) sentenciaDoWhile -> . DO LIZQ algoritmo LDER WHILE PIZQ comparacion PDER
    (33) valor -> . ENTERO
    (34) valor -> . VARIABLE

    PRINT           shift and go to state 10
    VARIABLE        shift and go to state 9
    WHILE           shift and go to state 12
    IF              shift and go to state 11
    DO              shift and go to state 13
    ENTERO          shift and go to state 14

    comparacion                    shift and go to state 41
    algoritmo                      shift and go to state 73
    imprimir                       shift and go to state 42
    asignacion                     shift and go to state 43
    expresion                      shift and go to state 44
    sentenciaWhile                 shift and go to state 45
    sentenciaIf                    shift and go to state 46
    sentenciaDoWhile               shift and go to state 47
    valor                          shift and go to state 8

state 70

    (21) sentenciaWhile -> WHILE PIZQ comparacion PDER algoritmo .

    PUNTOYCOMA      reduce using rule 21 (sentenciaWhile -> WHILE PIZQ comparacion PDER algoritmo .)
    $end            reduce using rule 21 (sentenciaWhile -> WHILE PIZQ comparacion PDER algoritmo .)
    LDER            reduce using rule 21 (sentenciaWhile -> WHILE PIZQ comparacion PDER algoritmo .)


state 71

    (22) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE . PIZQ comparacion PDER

    PIZQ            shift and go to state 74


state 72

    (19) sentenciaIf -> IF PIZQ comparacion PDER LIZQ algoritmo . LDER

    LDER            shift and go to state 75


state 73

    (20) sentenciaWhile -> WHILE PIZQ comparacion PDER LIZQ algoritmo . LDER

    LDER            shift and go to state 76


state 74

    (22) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ . comparacion PDER
    (25) comparacion -> . expresion operadorComp expresion
    (32) expresion -> . valor
    (35) expresion -> . valor operadorMat expresion
    (33) valor -> . ENTERO
    (34) valor -> . VARIABLE

    ENTERO          shift and go to state 14
    VARIABLE        shift and go to state 34

    comparacion                    shift and go to state 77
    expresion                      shift and go to state 38
    valor                          shift and go to state 8

state 75

    (19) sentenciaIf -> IF PIZQ comparacion PDER LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 19 (sentenciaIf -> IF PIZQ comparacion PDER LIZQ algoritmo LDER .)
    $end            reduce using rule 19 (sentenciaIf -> IF PIZQ comparacion PDER LIZQ algoritmo LDER .)
    LDER            reduce using rule 19 (sentenciaIf -> IF PIZQ comparacion PDER LIZQ algoritmo LDER .)


state 76

    (20) sentenciaWhile -> WHILE PIZQ comparacion PDER LIZQ algoritmo LDER .

    PUNTOYCOMA      reduce using rule 20 (sentenciaWhile -> WHILE PIZQ comparacion PDER LIZQ algoritmo LDER .)
    $end            reduce using rule 20 (sentenciaWhile -> WHILE PIZQ comparacion PDER LIZQ algoritmo LDER .)
    LDER            reduce using rule 20 (sentenciaWhile -> WHILE PIZQ comparacion PDER LIZQ algoritmo LDER .)


state 77

    (22) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ comparacion . PDER

    PDER            shift and go to state 78


state 78

    (22) sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ comparacion PDER .

    PUNTOYCOMA      reduce using rule 22 (sentenciaDoWhile -> DO LIZQ algoritmo LDER WHILE PIZQ comparacion PDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOYCOMA in state 45 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 46 resolved as shift
